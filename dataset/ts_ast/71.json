{
  "type": "SourceFile",
  "label": "import { screenManager } from '../common/ScreenManager';\nimport { computeSampleSize } from '../utils/ImageUtil';\nimport { UserFileDataItem } from '../base/UserFileDataItem';\n\nexport async function getThumbnail(mediaItem: UserFileDataItem, isCurrent: boolean): Promise<PixelMap> {\n  await mediaItem.load(true);\n  let imgWidth = mediaItem.width;\n  let imgHeight = mediaItem.height;\n  let scale = generateSampleSize(imgWidth, imgHeight, isCurrent);\n  mediaItem.imgWidth = Math.ceil(mediaItem.width / scale);\n  mediaItem.imgHeight = Math.ceil(mediaItem.height / scale);\n  imgWidth = Math.ceil(imgWidth / scale);\n  imgHeight = Math.ceil(imgHeight / scale);\n  return await mediaItem.getThumbnail(imgWidth, imgHeight);\n}\n\nfunction generateSampleSize(imageWidth: number, imageHeight: number, isCurrent: boolean): number {\n  let width = vp2px(screenManager.getWinWidth());\n  let height = vp2px(screenManager.getWinHeight());\n  width = width === 0 ? screenManager.DEFAULT_WIDTH : width;\n  height = height === 0 ? screenManager.DEFAULT_HEIGHT : height;\n  let maxNumOfPixels;\n  if (isCurrent) {\n    maxNumOfPixels = 2 * width * height;\n  } else {\n    maxNumOfPixels = width * height;\n  }\n  let minSide = Math.min(width, height);\n  return computeSampleSize(imageWidth, imageHeight, minSide, maxNumOfPixels);\n}",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from '../common/ScreenManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { computeSampleSize } from '../utils/ImageUtil';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ computeSampleSize }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ computeSampleSize }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "computeSampleSize",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "computeSampleSize",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/ImageUtil'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { UserFileDataItem } from '../base/UserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ UserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ UserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export async function getThumbnail(mediaItem: UserFileDataItem, isCurrent: boolean): Promise<PixelMap> {\n  await mediaItem.load(true);\n  let imgWidth = mediaItem.width;\n  let imgHeight = mediaItem.height;\n  let scale = generateSampleSize(imgWidth, imgHeight, isCurrent);\n  mediaItem.imgWidth = Math.ceil(mediaItem.width / scale);\n  mediaItem.imgHeight = Math.ceil(mediaItem.height / scale);\n  imgWidth = Math.ceil(imgWidth / scale);\n  imgHeight = Math.ceil(imgHeight / scale);\n  return await mediaItem.getThumbnail(imgWidth, imgHeight);\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "AsyncKeyword",
          "label": "async",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "getThumbnail",
          "children": []
        },
        {
          "type": "Parameter",
          "label": "mediaItem: UserFileDataItem",
          "children": [
            {
              "type": "Identifier",
              "label": "mediaItem",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "UserFileDataItem",
              "children": [
                {
                  "type": "Identifier",
                  "label": "UserFileDataItem",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "isCurrent: boolean",
          "children": [
            {
              "type": "Identifier",
              "label": "isCurrent",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            }
          ]
        },
        {
          "type": "TypeReference",
          "label": "Promise<PixelMap>",
          "children": [
            {
              "type": "Identifier",
              "label": "Promise",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "PixelMap",
              "children": [
                {
                  "type": "Identifier",
                  "label": "PixelMap",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  await mediaItem.load(true);\n  let imgWidth = mediaItem.width;\n  let imgHeight = mediaItem.height;\n  let scale = generateSampleSize(imgWidth, imgHeight, isCurrent);\n  mediaItem.imgWidth = Math.ceil(mediaItem.width / scale);\n  mediaItem.imgHeight = Math.ceil(mediaItem.height / scale);\n  imgWidth = Math.ceil(imgWidth / scale);\n  imgHeight = Math.ceil(imgHeight / scale);\n  return await mediaItem.getThumbnail(imgWidth, imgHeight);\n}",
          "children": [
            {
              "type": "ExpressionStatement",
              "label": "await mediaItem.load(true);",
              "children": [
                {
                  "type": "AwaitExpression",
                  "label": "await mediaItem.load(true)",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "mediaItem.load(true)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "mediaItem.load",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaItem",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "load",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let imgWidth = mediaItem.width;",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let imgWidth = mediaItem.width",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "imgWidth = mediaItem.width",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "imgWidth",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "mediaItem.width",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaItem",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let imgHeight = mediaItem.height;",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let imgHeight = mediaItem.height",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "imgHeight = mediaItem.height",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "imgHeight",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "mediaItem.height",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaItem",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let scale = generateSampleSize(imgWidth, imgHeight, isCurrent);",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let scale = generateSampleSize(imgWidth, imgHeight, isCurrent)",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "scale = generateSampleSize(imgWidth, imgHeight, isCurrent)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "scale",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "generateSampleSize(imgWidth, imgHeight, isCurrent)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "generateSampleSize",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "imgWidth",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "imgHeight",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isCurrent",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "mediaItem.imgWidth = Math.ceil(mediaItem.width / scale);",
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "mediaItem.imgWidth = Math.ceil(mediaItem.width / scale)",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "mediaItem.imgWidth",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "mediaItem",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "imgWidth",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "FirstAssignment",
                      "label": "=",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Math.ceil(mediaItem.width / scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Math.ceil",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Math",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ceil",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "mediaItem.width / scale",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "mediaItem.width",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mediaItem",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "mediaItem.imgHeight = Math.ceil(mediaItem.height / scale);",
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "mediaItem.imgHeight = Math.ceil(mediaItem.height / scale)",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "mediaItem.imgHeight",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "mediaItem",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "imgHeight",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "FirstAssignment",
                      "label": "=",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Math.ceil(mediaItem.height / scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Math.ceil",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Math",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ceil",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "mediaItem.height / scale",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "mediaItem.height",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mediaItem",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "imgWidth = Math.ceil(imgWidth / scale);",
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "imgWidth = Math.ceil(imgWidth / scale)",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "imgWidth",
                      "children": []
                    },
                    {
                      "type": "FirstAssignment",
                      "label": "=",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Math.ceil(imgWidth / scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Math.ceil",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Math",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ceil",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "imgWidth / scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgWidth",
                              "children": []
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "imgHeight = Math.ceil(imgHeight / scale);",
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "imgHeight = Math.ceil(imgHeight / scale)",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "imgHeight",
                      "children": []
                    },
                    {
                      "type": "FirstAssignment",
                      "label": "=",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Math.ceil(imgHeight / scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Math.ceil",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Math",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ceil",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "imgHeight / scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgHeight",
                              "children": []
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return await mediaItem.getThumbnail(imgWidth, imgHeight);",
              "children": [
                {
                  "type": "AwaitExpression",
                  "label": "await mediaItem.getThumbnail(imgWidth, imgHeight)",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "mediaItem.getThumbnail(imgWidth, imgHeight)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "mediaItem.getThumbnail",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaItem",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "getThumbnail",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "imgWidth",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "imgHeight",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function generateSampleSize(imageWidth: number, imageHeight: number, isCurrent: boolean): number {\n  let width = vp2px(screenManager.getWinWidth());\n  let height = vp2px(screenManager.getWinHeight());\n  width = width === 0 ? screenManager.DEFAULT_WIDTH : width;\n  height = height === 0 ? screenManager.DEFAULT_HEIGHT : height;\n  let maxNumOfPixels;\n  if (isCurrent) {\n    maxNumOfPixels = 2 * width * height;\n  } else {\n    maxNumOfPixels = width * height;\n  }\n  let minSide = Math.min(width, height);\n  return computeSampleSize(imageWidth, imageHeight, minSide, maxNumOfPixels);\n}",
      "children": [
        {
          "type": "Identifier",
          "label": "generateSampleSize",
          "children": []
        },
        {
          "type": "Parameter",
          "label": "imageWidth: number",
          "children": [
            {
              "type": "Identifier",
              "label": "imageWidth",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "imageHeight: number",
          "children": [
            {
              "type": "Identifier",
              "label": "imageHeight",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "isCurrent: boolean",
          "children": [
            {
              "type": "Identifier",
              "label": "isCurrent",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            }
          ]
        },
        {
          "type": "NumberKeyword",
          "label": "number",
          "children": []
        },
        {
          "type": "Block",
          "label": "{\n  let width = vp2px(screenManager.getWinWidth());\n  let height = vp2px(screenManager.getWinHeight());\n  width = width === 0 ? screenManager.DEFAULT_WIDTH : width;\n  height = height === 0 ? screenManager.DEFAULT_HEIGHT : height;\n  let maxNumOfPixels;\n  if (isCurrent) {\n    maxNumOfPixels = 2 * width * height;\n  } else {\n    maxNumOfPixels = width * height;\n  }\n  let minSide = Math.min(width, height);\n  return computeSampleSize(imageWidth, imageHeight, minSide, maxNumOfPixels);\n}",
          "children": [
            {
              "type": "FirstStatement",
              "label": "let width = vp2px(screenManager.getWinWidth());",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let width = vp2px(screenManager.getWinWidth())",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "width = vp2px(screenManager.getWinWidth())",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "width",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "vp2px(screenManager.getWinWidth())",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "vp2px",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.getWinWidth()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.getWinWidth",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getWinWidth",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let height = vp2px(screenManager.getWinHeight());",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let height = vp2px(screenManager.getWinHeight())",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "height = vp2px(screenManager.getWinHeight())",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "height",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "vp2px(screenManager.getWinHeight())",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "vp2px",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.getWinHeight()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.getWinHeight",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getWinHeight",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "width = width === 0 ? screenManager.DEFAULT_WIDTH : width;",
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "width = width === 0 ? screenManager.DEFAULT_WIDTH : width",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "width",
                      "children": []
                    },
                    {
                      "type": "FirstAssignment",
                      "label": "=",
                      "children": []
                    },
                    {
                      "type": "ConditionalExpression",
                      "label": "width === 0 ? screenManager.DEFAULT_WIDTH : width",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "width === 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "QuestionToken",
                          "label": "?",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "screenManager.DEFAULT_WIDTH",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "screenManager",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "DEFAULT_WIDTH",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ColonToken",
                          "label": ":",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "width",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "height = height === 0 ? screenManager.DEFAULT_HEIGHT : height;",
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "height = height === 0 ? screenManager.DEFAULT_HEIGHT : height",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "height",
                      "children": []
                    },
                    {
                      "type": "FirstAssignment",
                      "label": "=",
                      "children": []
                    },
                    {
                      "type": "ConditionalExpression",
                      "label": "height === 0 ? screenManager.DEFAULT_HEIGHT : height",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "height === 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "QuestionToken",
                          "label": "?",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "screenManager.DEFAULT_HEIGHT",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "screenManager",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "DEFAULT_HEIGHT",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ColonToken",
                          "label": ":",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "height",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let maxNumOfPixels;",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let maxNumOfPixels",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "maxNumOfPixels",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "maxNumOfPixels",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (isCurrent) {\n    maxNumOfPixels = 2 * width * height;\n  } else {\n    maxNumOfPixels = width * height;\n  }",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isCurrent",
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    maxNumOfPixels = 2 * width * height;\n  }",
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "maxNumOfPixels = 2 * width * height;",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "maxNumOfPixels = 2 * width * height",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "maxNumOfPixels",
                              "children": []
                            },
                            {
                              "type": "FirstAssignment",
                              "label": "=",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "2 * width * height",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "2 * width",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "2",
                                      "children": []
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    maxNumOfPixels = width * height;\n  }",
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "maxNumOfPixels = width * height;",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "maxNumOfPixels = width * height",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "maxNumOfPixels",
                              "children": []
                            },
                            {
                              "type": "FirstAssignment",
                              "label": "=",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "width * height",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let minSide = Math.min(width, height);",
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let minSide = Math.min(width, height)",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "minSide = Math.min(width, height)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "minSide",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Math.min(width, height)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Math.min",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Math",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "min",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return computeSampleSize(imageWidth, imageHeight, minSide, maxNumOfPixels);",
              "children": [
                {
                  "type": "CallExpression",
                  "label": "computeSampleSize(imageWidth, imageHeight, minSide, maxNumOfPixels)",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "computeSampleSize",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "imageWidth",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "imageHeight",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "minSide",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "maxNumOfPixels",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}