{
  "type": "SourceFile",
  "label": "import { BaseException, JsonObject, normalize, virtualFs } from '@angular-devkit/core';\nimport { NodeJsSyncHost } from '@angular-devkit/core/node';\nimport { existsSync, statSync } from 'fs';\nimport { dirname, isAbsolute, join, resolve } from 'path';\nimport { Observable, isObservable, lastValueFrom, from as observableFrom, throwError } from 'rxjs';\nimport { Url } from 'url';\nimport {\n  HostCreateTree,\n  RuleFactory,\n  Source,\n  TaskExecutor,\n  TaskExecutorFactory,\n  UnregisteredTaskException,\n} from '../src';\nimport {\n  FileSystemCollectionDesc,\n  FileSystemEngineHost,\n  FileSystemSchematicContext,\n  FileSystemSchematicDesc,\n  FileSystemSchematicDescription,\n} from './description';\nimport { readJsonFile } from './file-system-utility';\nexport declare type OptionTransform<T extends object | null, R extends object> = (\n  schematic: FileSystemSchematicDescription,\n  options: T,\n  context?: FileSystemSchematicContext,\n) => Observable<R> | PromiseLike<R> | R;\nexport declare type ContextTransform = (\n  context: FileSystemSchematicContext,\n) => FileSystemSchematicContext;\nexport class CollectionCannotBeResolvedException extends BaseException {\n  constructor(name: string) {\n    super(`Collection ${JSON.stringify(name)} cannot be resolved.`);\n  }\n}\nexport class InvalidCollectionJsonException extends BaseException {\n  constructor(_name: string, path: string, jsonException?: Error) {\n    let msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`;\n    if (jsonException) {\n      msg = `${msg} ${jsonException.message}`;\n    }\n    super(msg);\n  }\n}\nexport class SchematicMissingFactoryException extends BaseException {\n  constructor(name: string) {\n    super(`Schematic ${JSON.stringify(name)} is missing a factory.`);\n  }\n}\nexport class FactoryCannotBeResolvedException extends BaseException {\n  constructor(name: string) {\n    super(`Schematic ${JSON.stringify(name)} cannot resolve the factory.`);\n  }\n}\nexport class CollectionMissingSchematicsMapException extends BaseException {\n  constructor(name: string) {\n    super(`Collection \"${name}\" does not have a schematics map.`);\n  }\n}\nexport class CollectionMissingFieldsException extends BaseException {\n  constructor(name: string) {\n    super(`Collection \"${name}\" is missing fields.`);\n  }\n}\nexport class SchematicMissingFieldsException extends BaseException {\n  constructor(name: string) {\n    super(`Schematic \"${name}\" is missing fields.`);\n  }\n}\nexport class SchematicMissingDescriptionException extends BaseException {\n  constructor(name: string) {\n    super(`Schematics \"${name}\" does not have a description.`);\n  }\n}\nexport class SchematicNameCollisionException extends BaseException {\n  constructor(name: string) {\n    super(\n      `Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.',\n    );\n  }\n}\nexport abstract class FileSystemEngineHostBase implements FileSystemEngineHost {\n  protected abstract _resolveCollectionPath(name: string, requester?: string): string;\n  protected abstract _resolveReferenceString(\n    name: string,\n    parentPath: string,\n    collectionDescription: FileSystemCollectionDesc,\n  ): { ref: RuleFactory<{}>; path: string } | null;\n  protected abstract _transformCollectionDescription(\n    name: string,\n    desc: Partial<FileSystemCollectionDesc>,\n  ): FileSystemCollectionDesc;\n  protected abstract _transformSchematicDescription(\n    name: string,\n    collection: FileSystemCollectionDesc,\n    desc: Partial<FileSystemSchematicDesc>,\n  ): FileSystemSchematicDesc;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _transforms: OptionTransform<any, any>[] = [];\n  private _contextTransforms: ContextTransform[] = [];\n  private _taskFactories = new Map<string, () => Observable<TaskExecutor>>();\n  listSchematicNames(collection: FileSystemCollectionDesc, includeHidden?: boolean) {\n    const schematics: string[] = [];\n    for (const key of Object.keys(collection.schematics)) {\n      const schematic = collection.schematics[key];\n      if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }\n      // If extends is present without a factory it is an alias, do not return it\n      //   unless it is from another collection.\n      if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }\n    }\n    return schematics;\n  }\n  registerOptionsTransform<T extends object | null, R extends object>(t: OptionTransform<T, R>) {\n    this._transforms.push(t);\n  }\n  registerContextTransform(t: ContextTransform) {\n    this._contextTransforms.push(t);\n  }\n  createCollectionDescription(\n    name: string,\n    requester?: FileSystemCollectionDesc,\n  ): FileSystemCollectionDesc {\n    const path = this._resolveCollectionPath(name, requester?.path);\n    const jsonValue = readJsonFile(path);\n    if (!jsonValue || typeof jsonValue != 'object' || Array.isArray(jsonValue)) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // normalize extends property to an array\n    if (typeof jsonValue['extends'] === 'string') {\n      jsonValue['extends'] = [jsonValue['extends']];\n    }\n    const description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    });\n    if (!description || !description.name) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // Validate aliases.\n    const allNames = Object.keys(description.schematics);\n    for (const schematicName of Object.keys(description.schematics)) {\n      const aliases = description.schematics[schematicName].aliases || [];\n      for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }\n      allNames.push(...aliases);\n    }\n    return description;\n  }\n  createSchematicDescription(\n    name: string,\n    collection: FileSystemCollectionDesc,\n  ): FileSystemSchematicDesc | null {\n    // Resolve aliases first.\n    for (const schematicName of Object.keys(collection.schematics)) {\n      const schematicDescription = collection.schematics[schematicName];\n      if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }\n    }\n    if (!(name in collection.schematics)) {\n      return null;\n    }\n    const collectionPath = dirname(collection.path);\n    const partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name];\n    if (!partialDesc) {\n      return null;\n    }\n    if (partialDesc.extends) {\n      const index = partialDesc.extends.indexOf(':');\n      const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;\n      const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);\n      if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }\n    }\n    // Use any on this ref as we don't have the OptionT here, but we don't need it (we only need\n    // the path).\n    if (!partialDesc.factory) {\n      throw new SchematicMissingFactoryException(name);\n    }\n    const resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    );\n    if (!resolvedRef) {\n      throw new FactoryCannotBeResolvedException(name);\n    }\n    let schema = partialDesc.schema;\n    let schemaJson: JsonObject | undefined = undefined;\n    if (schema) {\n      if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }\n      schemaJson = readJsonFile(schema) as JsonObject;\n    }\n    // The schematic path is used to resolve URLs.\n    // We should be able to just do `dirname(resolvedRef.path)` but for compatibility with\n    // Bazel under Windows this directory needs to be resolved from the collection instead.\n    // This is needed because on Bazel under Windows the data files (such as the collection or\n    // url files) are not in the same place as the compiled JS.\n    const maybePath = join(collectionPath, partialDesc.factory);\n    const path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath);\n    return this._transformSchematicDescription(name, collection, {\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    });\n  }\n  createSourceFromUrl(url: Url): Source | null {\n    switch (url.protocol) {\n      case null:\n      case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };\n    }\n    return null;\n  }\n  transformOptions<OptionT extends object, ResultT extends object>(\n    schematic: FileSystemSchematicDesc,\n    options: OptionT,\n    context?: FileSystemSchematicContext,\n  ): Observable<ResultT> {\n    const transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    };\n    return observableFrom(transform()) as unknown as Observable<ResultT>;\n  }\n  transformContext(context: FileSystemSchematicContext): FileSystemSchematicContext {\n    return this._contextTransforms.reduce((acc, curr) => curr(acc), context);\n  }\n  getSchematicRuleFactory<OptionT extends object>(\n    schematic: FileSystemSchematicDesc,\n    _collection: FileSystemCollectionDesc,\n  ): RuleFactory<OptionT> {\n    return schematic.factoryFn;\n  }\n  registerTaskExecutor<T>(factory: TaskExecutorFactory<T>, options?: T): void {\n    this._taskFactories.set(factory.name, () => observableFrom(factory.create(options)));\n  }\n  createTaskExecutor(name: string): Observable<TaskExecutor> {\n    const factory = this._taskFactories.get(name);\n    if (factory) {\n      return factory();\n    }\n    return throwError(new UnregisteredTaskException(name));\n  }\n  hasTaskExecutor(name: string): boolean {\n    return this._taskFactories.has(name);\n  }\n}",
  "start_token": 0,
  "end_token": 1695,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { BaseException, JsonObject, normalize, virtualFs } from '@angular-devkit/core';",
      "start_token": 0,
      "end_token": 12,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ BaseException, JsonObject, normalize, virtualFs }",
          "start_token": 1,
          "end_token": 9,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BaseException, JsonObject, normalize, virtualFs }",
              "start_token": 1,
              "end_token": 9,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BaseException",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BaseException",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "JsonObject",
                  "start_token": 4,
                  "end_token": 4,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "JsonObject",
                      "start_token": 4,
                      "end_token": 4,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "normalize",
                  "start_token": 6,
                  "end_token": 6,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "normalize",
                      "start_token": 6,
                      "end_token": 6,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "virtualFs",
                  "start_token": 8,
                  "end_token": 8,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "virtualFs",
                      "start_token": 8,
                      "end_token": 8,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@angular-devkit/core'",
          "start_token": 11,
          "end_token": 11,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { NodeJsSyncHost } from '@angular-devkit/core/node';",
      "start_token": 13,
      "end_token": 19,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ NodeJsSyncHost }",
          "start_token": 14,
          "end_token": 16,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ NodeJsSyncHost }",
              "start_token": 14,
              "end_token": 16,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "NodeJsSyncHost",
                  "start_token": 15,
                  "end_token": 15,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NodeJsSyncHost",
                      "start_token": 15,
                      "end_token": 15,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@angular-devkit/core/node'",
          "start_token": 18,
          "end_token": 18,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { existsSync, statSync } from 'fs';",
      "start_token": 20,
      "end_token": 28,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ existsSync, statSync }",
          "start_token": 21,
          "end_token": 25,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ existsSync, statSync }",
              "start_token": 21,
              "end_token": 25,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "existsSync",
                  "start_token": 22,
                  "end_token": 22,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "existsSync",
                      "start_token": 22,
                      "end_token": 22,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "statSync",
                  "start_token": 24,
                  "end_token": 24,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "statSync",
                      "start_token": 24,
                      "end_token": 24,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'fs'",
          "start_token": 27,
          "end_token": 27,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { dirname, isAbsolute, join, resolve } from 'path';",
      "start_token": 29,
      "end_token": 41,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ dirname, isAbsolute, join, resolve }",
          "start_token": 30,
          "end_token": 38,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ dirname, isAbsolute, join, resolve }",
              "start_token": 30,
              "end_token": 38,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "dirname",
                  "start_token": 31,
                  "end_token": 31,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "dirname",
                      "start_token": 31,
                      "end_token": 31,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "isAbsolute",
                  "start_token": 33,
                  "end_token": 33,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isAbsolute",
                      "start_token": 33,
                      "end_token": 33,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "join",
                  "start_token": 35,
                  "end_token": 35,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "join",
                      "start_token": 35,
                      "end_token": 35,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "resolve",
                  "start_token": 37,
                  "end_token": 37,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "resolve",
                      "start_token": 37,
                      "end_token": 37,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'path'",
          "start_token": 40,
          "end_token": 40,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Observable, isObservable, lastValueFrom, from as observableFrom, throwError } from 'rxjs';",
      "start_token": 42,
      "end_token": 58,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Observable, isObservable, lastValueFrom, from as observableFrom, throwError }",
          "start_token": 43,
          "end_token": 55,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Observable, isObservable, lastValueFrom, from as observableFrom, throwError }",
              "start_token": 43,
              "end_token": 55,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Observable",
                  "start_token": 44,
                  "end_token": 44,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Observable",
                      "start_token": 44,
                      "end_token": 44,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "isObservable",
                  "start_token": 46,
                  "end_token": 46,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isObservable",
                      "start_token": 46,
                      "end_token": 46,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "lastValueFrom",
                  "start_token": 48,
                  "end_token": 48,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "lastValueFrom",
                      "start_token": 48,
                      "end_token": 48,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "from as observableFrom",
                  "start_token": 50,
                  "end_token": 52,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "from",
                      "start_token": 50,
                      "end_token": 50,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "observableFrom",
                      "start_token": 52,
                      "end_token": 52,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "throwError",
                  "start_token": 54,
                  "end_token": 54,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "throwError",
                      "start_token": 54,
                      "end_token": 54,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'rxjs'",
          "start_token": 57,
          "end_token": 57,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Url } from 'url';",
      "start_token": 59,
      "end_token": 65,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Url }",
          "start_token": 60,
          "end_token": 62,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Url }",
              "start_token": 60,
              "end_token": 62,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Url",
                  "start_token": 61,
                  "end_token": 61,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Url",
                      "start_token": 61,
                      "end_token": 61,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'url'",
          "start_token": 64,
          "end_token": 64,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {\n  HostCreateTree,\n  RuleFactory,\n  Source,\n  TaskExecutor,\n  TaskExecutorFactory,\n  UnregisteredTaskException,\n} from '../src';",
      "start_token": 66,
      "end_token": 83,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  HostCreateTree,\n  RuleFactory,\n  Source,\n  TaskExecutor,\n  TaskExecutorFactory,\n  UnregisteredTaskException,\n}",
          "start_token": 67,
          "end_token": 80,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  HostCreateTree,\n  RuleFactory,\n  Source,\n  TaskExecutor,\n  TaskExecutorFactory,\n  UnregisteredTaskException,\n}",
              "start_token": 67,
              "end_token": 80,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "HostCreateTree",
                  "start_token": 68,
                  "end_token": 68,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "HostCreateTree",
                      "start_token": 68,
                      "end_token": 68,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "RuleFactory",
                  "start_token": 70,
                  "end_token": 70,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "RuleFactory",
                      "start_token": 70,
                      "end_token": 70,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Source",
                  "start_token": 72,
                  "end_token": 72,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Source",
                      "start_token": 72,
                      "end_token": 72,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "TaskExecutor",
                  "start_token": 74,
                  "end_token": 74,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TaskExecutor",
                      "start_token": 74,
                      "end_token": 74,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "TaskExecutorFactory",
                  "start_token": 76,
                  "end_token": 76,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TaskExecutorFactory",
                      "start_token": 76,
                      "end_token": 76,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "UnregisteredTaskException",
                  "start_token": 78,
                  "end_token": 78,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UnregisteredTaskException",
                      "start_token": 78,
                      "end_token": 78,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../src'",
          "start_token": 82,
          "end_token": 82,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {\n  FileSystemCollectionDesc,\n  FileSystemEngineHost,\n  FileSystemSchematicContext,\n  FileSystemSchematicDesc,\n  FileSystemSchematicDescription,\n} from './description';",
      "start_token": 84,
      "end_token": 99,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  FileSystemCollectionDesc,\n  FileSystemEngineHost,\n  FileSystemSchematicContext,\n  FileSystemSchematicDesc,\n  FileSystemSchematicDescription,\n}",
          "start_token": 85,
          "end_token": 96,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  FileSystemCollectionDesc,\n  FileSystemEngineHost,\n  FileSystemSchematicContext,\n  FileSystemSchematicDesc,\n  FileSystemSchematicDescription,\n}",
              "start_token": 85,
              "end_token": 96,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 86,
                  "end_token": 86,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 86,
                      "end_token": 86,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "FileSystemEngineHost",
                  "start_token": 88,
                  "end_token": 88,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemEngineHost",
                      "start_token": 88,
                      "end_token": 88,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "FileSystemSchematicContext",
                  "start_token": 90,
                  "end_token": 90,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicContext",
                      "start_token": 90,
                      "end_token": 90,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "FileSystemSchematicDesc",
                  "start_token": 92,
                  "end_token": 92,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicDesc",
                      "start_token": 92,
                      "end_token": 92,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "FileSystemSchematicDescription",
                  "start_token": 94,
                  "end_token": 94,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicDescription",
                      "start_token": 94,
                      "end_token": 94,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./description'",
          "start_token": 98,
          "end_token": 98,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { readJsonFile } from './file-system-utility';",
      "start_token": 100,
      "end_token": 106,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ readJsonFile }",
          "start_token": 101,
          "end_token": 103,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ readJsonFile }",
              "start_token": 101,
              "end_token": 103,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "readJsonFile",
                  "start_token": 102,
                  "end_token": 102,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "readJsonFile",
                      "start_token": 102,
                      "end_token": 102,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./file-system-utility'",
          "start_token": 105,
          "end_token": 105,
          "children": []
        }
      ]
    },
    {
      "type": "TypeAliasDeclaration",
      "label": "export declare type OptionTransform<T extends object | null, R extends object> = (\n  schematic: FileSystemSchematicDescription,\n  options: T,\n  context?: FileSystemSchematicContext,\n) => Observable<R> | PromiseLike<R> | R;",
      "start_token": 107,
      "end_token": 150,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 107,
          "end_token": 107,
          "children": []
        },
        {
          "type": "DeclareKeyword",
          "label": "declare",
          "start_token": 108,
          "end_token": 108,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "OptionTransform",
          "start_token": 110,
          "end_token": 110,
          "children": []
        },
        {
          "type": "TypeParameter",
          "label": "T extends object | null",
          "start_token": 112,
          "end_token": 116,
          "children": [
            {
              "type": "Identifier",
              "label": "T",
              "start_token": 112,
              "end_token": 112,
              "children": []
            },
            {
              "type": "UnionType",
              "label": "object | null",
              "start_token": 114,
              "end_token": 116,
              "children": [
                {
                  "type": "ObjectKeyword",
                  "label": "object",
                  "start_token": 114,
                  "end_token": 114,
                  "children": []
                },
                {
                  "type": "LiteralType",
                  "label": "null",
                  "start_token": 116,
                  "end_token": 116,
                  "children": [
                    {
                      "type": "NullKeyword",
                      "label": "null",
                      "start_token": 116,
                      "end_token": 116,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "TypeParameter",
          "label": "R extends object",
          "start_token": 118,
          "end_token": 120,
          "children": [
            {
              "type": "Identifier",
              "label": "R",
              "start_token": 118,
              "end_token": 118,
              "children": []
            },
            {
              "type": "ObjectKeyword",
              "label": "object",
              "start_token": 120,
              "end_token": 120,
              "children": []
            }
          ]
        },
        {
          "type": "FunctionType",
          "label": "(\n  schematic: FileSystemSchematicDescription,\n  options: T,\n  context?: FileSystemSchematicContext,\n) => Observable<R> | PromiseLike<R> | R",
          "start_token": 123,
          "end_token": 149,
          "children": [
            {
              "type": "Parameter",
              "label": "schematic: FileSystemSchematicDescription",
              "start_token": 124,
              "end_token": 126,
              "children": [
                {
                  "type": "Identifier",
                  "label": "schematic",
                  "start_token": 124,
                  "end_token": 124,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicDescription",
                  "start_token": 126,
                  "end_token": 126,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicDescription",
                      "start_token": 126,
                      "end_token": 126,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "options: T",
              "start_token": 128,
              "end_token": 130,
              "children": [
                {
                  "type": "Identifier",
                  "label": "options",
                  "start_token": 128,
                  "end_token": 128,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "T",
                  "start_token": 130,
                  "end_token": 130,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "start_token": 130,
                      "end_token": 130,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "context?: FileSystemSchematicContext",
              "start_token": 132,
              "end_token": 135,
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "start_token": 132,
                  "end_token": 132,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 133,
                  "end_token": 133,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicContext",
                  "start_token": 135,
                  "end_token": 135,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicContext",
                      "start_token": 135,
                      "end_token": 135,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "UnionType",
              "label": "Observable<R> | PromiseLike<R> | R",
              "start_token": 139,
              "end_token": 149,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Observable<R>",
                  "start_token": 139,
                  "end_token": 142,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Observable",
                      "start_token": 139,
                      "end_token": 139,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "R",
                      "start_token": 141,
                      "end_token": 141,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "R",
                          "start_token": 141,
                          "end_token": 141,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TypeReference",
                  "label": "PromiseLike<R>",
                  "start_token": 144,
                  "end_token": 147,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "PromiseLike",
                      "start_token": 144,
                      "end_token": 144,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "R",
                      "start_token": 146,
                      "end_token": 146,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "R",
                          "start_token": 146,
                          "end_token": 146,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TypeReference",
                  "label": "R",
                  "start_token": 149,
                  "end_token": 149,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "R",
                      "start_token": 149,
                      "end_token": 149,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "TypeAliasDeclaration",
      "label": "export declare type ContextTransform = (\n  context: FileSystemSchematicContext,\n) => FileSystemSchematicContext;",
      "start_token": 151,
      "end_token": 164,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 151,
          "end_token": 151,
          "children": []
        },
        {
          "type": "DeclareKeyword",
          "label": "declare",
          "start_token": 152,
          "end_token": 152,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "ContextTransform",
          "start_token": 154,
          "end_token": 154,
          "children": []
        },
        {
          "type": "FunctionType",
          "label": "(\n  context: FileSystemSchematicContext,\n) => FileSystemSchematicContext",
          "start_token": 156,
          "end_token": 163,
          "children": [
            {
              "type": "Parameter",
              "label": "context: FileSystemSchematicContext",
              "start_token": 157,
              "end_token": 159,
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "start_token": 157,
                  "end_token": 157,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicContext",
                  "start_token": 159,
                  "end_token": 159,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicContext",
                      "start_token": 159,
                      "end_token": 159,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "FileSystemSchematicContext",
              "start_token": 163,
              "end_token": 163,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FileSystemSchematicContext",
                  "start_token": 163,
                  "end_token": 163,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class CollectionCannotBeResolvedException extends BaseException {\n  constructor(name: string) {\n    super(`Collection ${JSON.stringify(name)} cannot be resolved.`);\n  }\n}",
      "start_token": 165,
      "end_token": 184,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 165,
          "end_token": 165,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "CollectionCannotBeResolvedException",
          "start_token": 167,
          "end_token": 167,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 168,
          "end_token": 169,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 169,
              "end_token": 169,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 169,
                  "end_token": 169,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Collection ${JSON.stringify(name)} cannot be resolved.`);\n  }",
          "start_token": 171,
          "end_token": 183,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 173,
              "end_token": 175,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 173,
                  "end_token": 173,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 175,
                  "end_token": 175,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Collection ${JSON.stringify(name)} cannot be resolved.`);\n  }",
              "start_token": 177,
              "end_token": 183,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Collection ${JSON.stringify(name)} cannot be resolved.`);",
                  "start_token": 178,
                  "end_token": 182,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Collection ${JSON.stringify(name)} cannot be resolved.`)",
                      "start_token": 178,
                      "end_token": 181,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 178,
                          "end_token": 178,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Collection ${JSON.stringify(name)} cannot be resolved.`",
                          "start_token": 180,
                          "end_token": 180,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Collection ${",
                              "start_token": 180,
                              "end_token": 180,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(name)} cannot be resolved.`",
                              "start_token": 180,
                              "end_token": 180,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(name)",
                                  "start_token": 180,
                                  "end_token": 180,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "start_token": 180,
                                      "end_token": 180,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "start_token": 180,
                                          "end_token": 180,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "start_token": 180,
                                          "end_token": 180,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "name",
                                      "start_token": 180,
                                      "end_token": 180,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "} cannot be resolved.`",
                                  "start_token": 180,
                                  "end_token": 180,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class InvalidCollectionJsonException extends BaseException {\n  constructor(_name: string, path: string, jsonException?: Error) {\n    let msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`;\n    if (jsonException) {\n      msg = `${msg} ${jsonException.message}`;\n    }\n    super(msg);\n  }\n}",
      "start_token": 185,
      "end_token": 228,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 185,
          "end_token": 185,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "InvalidCollectionJsonException",
          "start_token": 187,
          "end_token": 187,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 188,
          "end_token": 189,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 189,
              "end_token": 189,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 189,
                  "end_token": 189,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(_name: string, path: string, jsonException?: Error) {\n    let msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`;\n    if (jsonException) {\n      msg = `${msg} ${jsonException.message}`;\n    }\n    super(msg);\n  }",
          "start_token": 191,
          "end_token": 227,
          "children": [
            {
              "type": "Parameter",
              "label": "_name: string",
              "start_token": 193,
              "end_token": 195,
              "children": [
                {
                  "type": "Identifier",
                  "label": "_name",
                  "start_token": 193,
                  "end_token": 193,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 195,
                  "end_token": 195,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "path: string",
              "start_token": 197,
              "end_token": 199,
              "children": [
                {
                  "type": "Identifier",
                  "label": "path",
                  "start_token": 197,
                  "end_token": 197,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 199,
                  "end_token": 199,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "jsonException?: Error",
              "start_token": 201,
              "end_token": 204,
              "children": [
                {
                  "type": "Identifier",
                  "label": "jsonException",
                  "start_token": 201,
                  "end_token": 201,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 202,
                  "end_token": 202,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Error",
                  "start_token": 204,
                  "end_token": 204,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Error",
                      "start_token": 204,
                      "end_token": 204,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`;\n    if (jsonException) {\n      msg = `${msg} ${jsonException.message}`;\n    }\n    super(msg);\n  }",
              "start_token": 206,
              "end_token": 227,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`;",
                  "start_token": 207,
                  "end_token": 211,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`",
                      "start_token": 207,
                      "end_token": 210,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "msg = `Collection JSON at path ${JSON.stringify(path)} is invalid.`",
                          "start_token": 208,
                          "end_token": 210,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "msg",
                              "start_token": 208,
                              "end_token": 208,
                              "children": []
                            },
                            {
                              "type": "TemplateExpression",
                              "label": "`Collection JSON at path ${JSON.stringify(path)} is invalid.`",
                              "start_token": 210,
                              "end_token": 210,
                              "children": [
                                {
                                  "type": "TemplateHead",
                                  "label": "`Collection JSON at path ${",
                                  "start_token": 210,
                                  "end_token": 210,
                                  "children": []
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "JSON.stringify(path)} is invalid.`",
                                  "start_token": 210,
                                  "end_token": 210,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "JSON.stringify(path)",
                                      "start_token": 210,
                                      "end_token": 210,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "JSON.stringify",
                                          "start_token": 210,
                                          "end_token": 210,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "JSON",
                                              "start_token": 210,
                                              "end_token": 210,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "stringify",
                                              "start_token": 210,
                                              "end_token": 210,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "path",
                                          "start_token": 210,
                                          "end_token": 210,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "LastTemplateToken",
                                      "label": "} is invalid.`",
                                      "start_token": 210,
                                      "end_token": 210,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (jsonException) {\n      msg = `${msg} ${jsonException.message}`;\n    }",
                  "start_token": 212,
                  "end_token": 221,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "jsonException",
                      "start_token": 214,
                      "end_token": 214,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      msg = `${msg} ${jsonException.message}`;\n    }",
                      "start_token": 216,
                      "end_token": 221,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "msg = `${msg} ${jsonException.message}`;",
                          "start_token": 217,
                          "end_token": 220,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "msg = `${msg} ${jsonException.message}`",
                              "start_token": 217,
                              "end_token": 219,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "msg",
                                  "start_token": 217,
                                  "end_token": 217,
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 218,
                                  "end_token": 218,
                                  "children": []
                                },
                                {
                                  "type": "TemplateExpression",
                                  "label": "`${msg} ${jsonException.message}`",
                                  "start_token": 219,
                                  "end_token": 219,
                                  "children": [
                                    {
                                      "type": "TemplateHead",
                                      "label": "`${",
                                      "start_token": 219,
                                      "end_token": 219,
                                      "children": []
                                    },
                                    {
                                      "type": "TemplateSpan",
                                      "label": "msg} ${",
                                      "start_token": 219,
                                      "end_token": 219,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "msg",
                                          "start_token": 219,
                                          "end_token": 219,
                                          "children": []
                                        },
                                        {
                                          "type": "TemplateMiddle",
                                          "label": "} ${",
                                          "start_token": 219,
                                          "end_token": 219,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TemplateSpan",
                                      "label": "jsonException.message}`",
                                      "start_token": 219,
                                      "end_token": 219,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "jsonException.message",
                                          "start_token": 219,
                                          "end_token": 219,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "jsonException",
                                              "start_token": 219,
                                              "end_token": 219,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "message",
                                              "start_token": 219,
                                              "end_token": 219,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "LastTemplateToken",
                                          "label": "}`",
                                          "start_token": 219,
                                          "end_token": 219,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "super(msg);",
                  "start_token": 222,
                  "end_token": 226,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(msg)",
                      "start_token": 222,
                      "end_token": 225,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 222,
                          "end_token": 222,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "msg",
                          "start_token": 224,
                          "end_token": 224,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class SchematicMissingFactoryException extends BaseException {\n  constructor(name: string) {\n    super(`Schematic ${JSON.stringify(name)} is missing a factory.`);\n  }\n}",
      "start_token": 229,
      "end_token": 248,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 229,
          "end_token": 229,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "SchematicMissingFactoryException",
          "start_token": 231,
          "end_token": 231,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 232,
          "end_token": 233,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 233,
              "end_token": 233,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 233,
                  "end_token": 233,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Schematic ${JSON.stringify(name)} is missing a factory.`);\n  }",
          "start_token": 235,
          "end_token": 247,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 237,
              "end_token": 239,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 237,
                  "end_token": 237,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 239,
                  "end_token": 239,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Schematic ${JSON.stringify(name)} is missing a factory.`);\n  }",
              "start_token": 241,
              "end_token": 247,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Schematic ${JSON.stringify(name)} is missing a factory.`);",
                  "start_token": 242,
                  "end_token": 246,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Schematic ${JSON.stringify(name)} is missing a factory.`)",
                      "start_token": 242,
                      "end_token": 245,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 242,
                          "end_token": 242,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Schematic ${JSON.stringify(name)} is missing a factory.`",
                          "start_token": 244,
                          "end_token": 244,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Schematic ${",
                              "start_token": 244,
                              "end_token": 244,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(name)} is missing a factory.`",
                              "start_token": 244,
                              "end_token": 244,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(name)",
                                  "start_token": 244,
                                  "end_token": 244,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "start_token": 244,
                                      "end_token": 244,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "start_token": 244,
                                          "end_token": 244,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "start_token": 244,
                                          "end_token": 244,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "name",
                                      "start_token": 244,
                                      "end_token": 244,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "} is missing a factory.`",
                                  "start_token": 244,
                                  "end_token": 244,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class FactoryCannotBeResolvedException extends BaseException {\n  constructor(name: string) {\n    super(`Schematic ${JSON.stringify(name)} cannot resolve the factory.`);\n  }\n}",
      "start_token": 249,
      "end_token": 268,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 249,
          "end_token": 249,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "FactoryCannotBeResolvedException",
          "start_token": 251,
          "end_token": 251,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 252,
          "end_token": 253,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 253,
              "end_token": 253,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 253,
                  "end_token": 253,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Schematic ${JSON.stringify(name)} cannot resolve the factory.`);\n  }",
          "start_token": 255,
          "end_token": 267,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 257,
              "end_token": 259,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 257,
                  "end_token": 257,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 259,
                  "end_token": 259,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Schematic ${JSON.stringify(name)} cannot resolve the factory.`);\n  }",
              "start_token": 261,
              "end_token": 267,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Schematic ${JSON.stringify(name)} cannot resolve the factory.`);",
                  "start_token": 262,
                  "end_token": 266,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Schematic ${JSON.stringify(name)} cannot resolve the factory.`)",
                      "start_token": 262,
                      "end_token": 265,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 262,
                          "end_token": 262,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Schematic ${JSON.stringify(name)} cannot resolve the factory.`",
                          "start_token": 264,
                          "end_token": 264,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Schematic ${",
                              "start_token": 264,
                              "end_token": 264,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(name)} cannot resolve the factory.`",
                              "start_token": 264,
                              "end_token": 264,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(name)",
                                  "start_token": 264,
                                  "end_token": 264,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "start_token": 264,
                                      "end_token": 264,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "start_token": 264,
                                          "end_token": 264,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "start_token": 264,
                                          "end_token": 264,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "name",
                                      "start_token": 264,
                                      "end_token": 264,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "} cannot resolve the factory.`",
                                  "start_token": 264,
                                  "end_token": 264,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class CollectionMissingSchematicsMapException extends BaseException {\n  constructor(name: string) {\n    super(`Collection \"${name}\" does not have a schematics map.`);\n  }\n}",
      "start_token": 269,
      "end_token": 288,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 269,
          "end_token": 269,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "CollectionMissingSchematicsMapException",
          "start_token": 271,
          "end_token": 271,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 272,
          "end_token": 273,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 273,
              "end_token": 273,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 273,
                  "end_token": 273,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Collection \"${name}\" does not have a schematics map.`);\n  }",
          "start_token": 275,
          "end_token": 287,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 277,
              "end_token": 279,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 277,
                  "end_token": 277,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 279,
                  "end_token": 279,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Collection \"${name}\" does not have a schematics map.`);\n  }",
              "start_token": 281,
              "end_token": 287,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Collection \"${name}\" does not have a schematics map.`);",
                  "start_token": 282,
                  "end_token": 286,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Collection \"${name}\" does not have a schematics map.`)",
                      "start_token": 282,
                      "end_token": 285,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 282,
                          "end_token": 282,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Collection \"${name}\" does not have a schematics map.`",
                          "start_token": 284,
                          "end_token": 284,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Collection \"${",
                              "start_token": 284,
                              "end_token": 284,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "name}\" does not have a schematics map.`",
                              "start_token": 284,
                              "end_token": 284,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 284,
                                  "end_token": 284,
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}\" does not have a schematics map.`",
                                  "start_token": 284,
                                  "end_token": 284,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class CollectionMissingFieldsException extends BaseException {\n  constructor(name: string) {\n    super(`Collection \"${name}\" is missing fields.`);\n  }\n}",
      "start_token": 289,
      "end_token": 308,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 289,
          "end_token": 289,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "CollectionMissingFieldsException",
          "start_token": 291,
          "end_token": 291,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 292,
          "end_token": 293,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 293,
              "end_token": 293,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 293,
                  "end_token": 293,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Collection \"${name}\" is missing fields.`);\n  }",
          "start_token": 295,
          "end_token": 307,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 297,
              "end_token": 299,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 297,
                  "end_token": 297,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 299,
                  "end_token": 299,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Collection \"${name}\" is missing fields.`);\n  }",
              "start_token": 301,
              "end_token": 307,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Collection \"${name}\" is missing fields.`);",
                  "start_token": 302,
                  "end_token": 306,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Collection \"${name}\" is missing fields.`)",
                      "start_token": 302,
                      "end_token": 305,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 302,
                          "end_token": 302,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Collection \"${name}\" is missing fields.`",
                          "start_token": 304,
                          "end_token": 304,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Collection \"${",
                              "start_token": 304,
                              "end_token": 304,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "name}\" is missing fields.`",
                              "start_token": 304,
                              "end_token": 304,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 304,
                                  "end_token": 304,
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}\" is missing fields.`",
                                  "start_token": 304,
                                  "end_token": 304,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class SchematicMissingFieldsException extends BaseException {\n  constructor(name: string) {\n    super(`Schematic \"${name}\" is missing fields.`);\n  }\n}",
      "start_token": 309,
      "end_token": 328,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 309,
          "end_token": 309,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "SchematicMissingFieldsException",
          "start_token": 311,
          "end_token": 311,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 312,
          "end_token": 313,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 313,
              "end_token": 313,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 313,
                  "end_token": 313,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Schematic \"${name}\" is missing fields.`);\n  }",
          "start_token": 315,
          "end_token": 327,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 317,
              "end_token": 319,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 317,
                  "end_token": 317,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 319,
                  "end_token": 319,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Schematic \"${name}\" is missing fields.`);\n  }",
              "start_token": 321,
              "end_token": 327,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Schematic \"${name}\" is missing fields.`);",
                  "start_token": 322,
                  "end_token": 326,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Schematic \"${name}\" is missing fields.`)",
                      "start_token": 322,
                      "end_token": 325,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 322,
                          "end_token": 322,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Schematic \"${name}\" is missing fields.`",
                          "start_token": 324,
                          "end_token": 324,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Schematic \"${",
                              "start_token": 324,
                              "end_token": 324,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "name}\" is missing fields.`",
                              "start_token": 324,
                              "end_token": 324,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 324,
                                  "end_token": 324,
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}\" is missing fields.`",
                                  "start_token": 324,
                                  "end_token": 324,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class SchematicMissingDescriptionException extends BaseException {\n  constructor(name: string) {\n    super(`Schematics \"${name}\" does not have a description.`);\n  }\n}",
      "start_token": 329,
      "end_token": 348,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 329,
          "end_token": 329,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "SchematicMissingDescriptionException",
          "start_token": 331,
          "end_token": 331,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 332,
          "end_token": 333,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 333,
              "end_token": 333,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 333,
                  "end_token": 333,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(`Schematics \"${name}\" does not have a description.`);\n  }",
          "start_token": 335,
          "end_token": 347,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 337,
              "end_token": 339,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 337,
                  "end_token": 337,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 339,
                  "end_token": 339,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(`Schematics \"${name}\" does not have a description.`);\n  }",
              "start_token": 341,
              "end_token": 347,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(`Schematics \"${name}\" does not have a description.`);",
                  "start_token": 342,
                  "end_token": 346,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(`Schematics \"${name}\" does not have a description.`)",
                      "start_token": 342,
                      "end_token": 345,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 342,
                          "end_token": 342,
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`Schematics \"${name}\" does not have a description.`",
                          "start_token": 344,
                          "end_token": 344,
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`Schematics \"${",
                              "start_token": 344,
                              "end_token": 344,
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "name}\" does not have a description.`",
                              "start_token": 344,
                              "end_token": 344,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 344,
                                  "end_token": 344,
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}\" does not have a description.`",
                                  "start_token": 344,
                                  "end_token": 344,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class SchematicNameCollisionException extends BaseException {\n  constructor(name: string) {\n    super(\n      `Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.',\n    );\n  }\n}",
      "start_token": 349,
      "end_token": 371,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 349,
          "end_token": 349,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "SchematicNameCollisionException",
          "start_token": 351,
          "end_token": 351,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseException",
          "start_token": 352,
          "end_token": 353,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseException",
              "start_token": 353,
              "end_token": 353,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseException",
                  "start_token": 353,
                  "end_token": 353,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(name: string) {\n    super(\n      `Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.',\n    );\n  }",
          "start_token": 355,
          "end_token": 370,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 357,
              "end_token": 359,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 357,
                  "end_token": 357,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 359,
                  "end_token": 359,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(\n      `Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.',\n    );\n  }",
              "start_token": 361,
              "end_token": 370,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(\n      `Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.',\n    );",
                  "start_token": 362,
                  "end_token": 369,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(\n      `Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.',\n    )",
                      "start_token": 362,
                      "end_token": 368,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 362,
                          "end_token": 362,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "`Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic` +\n        ' name.'",
                          "start_token": 364,
                          "end_token": 366,
                          "children": [
                            {
                              "type": "TemplateExpression",
                              "label": "`Schematics/alias ${JSON.stringify(name)} collides with another alias or schematic`",
                              "start_token": 364,
                              "end_token": 364,
                              "children": [
                                {
                                  "type": "TemplateHead",
                                  "label": "`Schematics/alias ${",
                                  "start_token": 364,
                                  "end_token": 364,
                                  "children": []
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "JSON.stringify(name)} collides with another alias or schematic`",
                                  "start_token": 364,
                                  "end_token": 364,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "JSON.stringify(name)",
                                      "start_token": 364,
                                      "end_token": 364,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "JSON.stringify",
                                          "start_token": 364,
                                          "end_token": 364,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "JSON",
                                              "start_token": 364,
                                              "end_token": 364,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "stringify",
                                              "start_token": 364,
                                              "end_token": 364,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "name",
                                          "start_token": 364,
                                          "end_token": 364,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "LastTemplateToken",
                                      "label": "} collides with another alias or schematic`",
                                      "start_token": 364,
                                      "end_token": 364,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "start_token": 365,
                              "end_token": 365,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "' name.'",
                              "start_token": 366,
                              "end_token": 366,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export abstract class FileSystemEngineHostBase implements FileSystemEngineHost {\n  protected abstract _resolveCollectionPath(name: string, requester?: string): string;\n  protected abstract _resolveReferenceString(\n    name: string,\n    parentPath: string,\n    collectionDescription: FileSystemCollectionDesc,\n  ): { ref: RuleFactory<{}>; path: string } | null;\n  protected abstract _transformCollectionDescription(\n    name: string,\n    desc: Partial<FileSystemCollectionDesc>,\n  ): FileSystemCollectionDesc;\n  protected abstract _transformSchematicDescription(\n    name: string,\n    collection: FileSystemCollectionDesc,\n    desc: Partial<FileSystemSchematicDesc>,\n  ): FileSystemSchematicDesc;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _transforms: OptionTransform<any, any>[] = [];\n  private _contextTransforms: ContextTransform[] = [];\n  private _taskFactories = new Map<string, () => Observable<TaskExecutor>>();\n  listSchematicNames(collection: FileSystemCollectionDesc, includeHidden?: boolean) {\n    const schematics: string[] = [];\n    for (const key of Object.keys(collection.schematics)) {\n      const schematic = collection.schematics[key];\n      if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }\n      // If extends is present without a factory it is an alias, do not return it\n      //   unless it is from another collection.\n      if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }\n    }\n    return schematics;\n  }\n  registerOptionsTransform<T extends object | null, R extends object>(t: OptionTransform<T, R>) {\n    this._transforms.push(t);\n  }\n  registerContextTransform(t: ContextTransform) {\n    this._contextTransforms.push(t);\n  }\n  createCollectionDescription(\n    name: string,\n    requester?: FileSystemCollectionDesc,\n  ): FileSystemCollectionDesc {\n    const path = this._resolveCollectionPath(name, requester?.path);\n    const jsonValue = readJsonFile(path);\n    if (!jsonValue || typeof jsonValue != 'object' || Array.isArray(jsonValue)) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // normalize extends property to an array\n    if (typeof jsonValue['extends'] === 'string') {\n      jsonValue['extends'] = [jsonValue['extends']];\n    }\n    const description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    });\n    if (!description || !description.name) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // Validate aliases.\n    const allNames = Object.keys(description.schematics);\n    for (const schematicName of Object.keys(description.schematics)) {\n      const aliases = description.schematics[schematicName].aliases || [];\n      for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }\n      allNames.push(...aliases);\n    }\n    return description;\n  }\n  createSchematicDescription(\n    name: string,\n    collection: FileSystemCollectionDesc,\n  ): FileSystemSchematicDesc | null {\n    // Resolve aliases first.\n    for (const schematicName of Object.keys(collection.schematics)) {\n      const schematicDescription = collection.schematics[schematicName];\n      if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }\n    }\n    if (!(name in collection.schematics)) {\n      return null;\n    }\n    const collectionPath = dirname(collection.path);\n    const partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name];\n    if (!partialDesc) {\n      return null;\n    }\n    if (partialDesc.extends) {\n      const index = partialDesc.extends.indexOf(':');\n      const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;\n      const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);\n      if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }\n    }\n    // Use any on this ref as we don't have the OptionT here, but we don't need it (we only need\n    // the path).\n    if (!partialDesc.factory) {\n      throw new SchematicMissingFactoryException(name);\n    }\n    const resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    );\n    if (!resolvedRef) {\n      throw new FactoryCannotBeResolvedException(name);\n    }\n    let schema = partialDesc.schema;\n    let schemaJson: JsonObject | undefined = undefined;\n    if (schema) {\n      if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }\n      schemaJson = readJsonFile(schema) as JsonObject;\n    }\n    // The schematic path is used to resolve URLs.\n    // We should be able to just do `dirname(resolvedRef.path)` but for compatibility with\n    // Bazel under Windows this directory needs to be resolved from the collection instead.\n    // This is needed because on Bazel under Windows the data files (such as the collection or\n    // url files) are not in the same place as the compiled JS.\n    const maybePath = join(collectionPath, partialDesc.factory);\n    const path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath);\n    return this._transformSchematicDescription(name, collection, {\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    });\n  }\n  createSourceFromUrl(url: Url): Source | null {\n    switch (url.protocol) {\n      case null:\n      case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };\n    }\n    return null;\n  }\n  transformOptions<OptionT extends object, ResultT extends object>(\n    schematic: FileSystemSchematicDesc,\n    options: OptionT,\n    context?: FileSystemSchematicContext,\n  ): Observable<ResultT> {\n    const transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    };\n    return observableFrom(transform()) as unknown as Observable<ResultT>;\n  }\n  transformContext(context: FileSystemSchematicContext): FileSystemSchematicContext {\n    return this._contextTransforms.reduce((acc, curr) => curr(acc), context);\n  }\n  getSchematicRuleFactory<OptionT extends object>(\n    schematic: FileSystemSchematicDesc,\n    _collection: FileSystemCollectionDesc,\n  ): RuleFactory<OptionT> {\n    return schematic.factoryFn;\n  }\n  registerTaskExecutor<T>(factory: TaskExecutorFactory<T>, options?: T): void {\n    this._taskFactories.set(factory.name, () => observableFrom(factory.create(options)));\n  }\n  createTaskExecutor(name: string): Observable<TaskExecutor> {\n    const factory = this._taskFactories.get(name);\n    if (factory) {\n      return factory();\n    }\n    return throwError(new UnregisteredTaskException(name));\n  }\n  hasTaskExecutor(name: string): boolean {\n    return this._taskFactories.has(name);\n  }\n}",
      "start_token": 372,
      "end_token": 1695,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 372,
          "end_token": 372,
          "children": []
        },
        {
          "type": "FirstContextualKeyword",
          "label": "abstract",
          "start_token": 373,
          "end_token": 373,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "FileSystemEngineHostBase",
          "start_token": 375,
          "end_token": 375,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements FileSystemEngineHost",
          "start_token": 376,
          "end_token": 377,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "FileSystemEngineHost",
              "start_token": 377,
              "end_token": 377,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FileSystemEngineHost",
                  "start_token": 377,
                  "end_token": 377,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected abstract _resolveCollectionPath(name: string, requester?: string): string;",
          "start_token": 379,
          "end_token": 394,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 379,
              "end_token": 379,
              "children": []
            },
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "start_token": 380,
              "end_token": 380,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_resolveCollectionPath",
              "start_token": 381,
              "end_token": 381,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 383,
              "end_token": 385,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 383,
                  "end_token": 383,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 385,
                  "end_token": 385,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "requester?: string",
              "start_token": 387,
              "end_token": 390,
              "children": [
                {
                  "type": "Identifier",
                  "label": "requester",
                  "start_token": 387,
                  "end_token": 387,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 388,
                  "end_token": 388,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 390,
                  "end_token": 390,
                  "children": []
                }
              ]
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 393,
              "end_token": 393,
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected abstract _resolveReferenceString(\n    name: string,\n    parentPath: string,\n    collectionDescription: FileSystemCollectionDesc,\n  ): { ref: RuleFactory<{}>; path: string } | null;",
          "start_token": 395,
          "end_token": 428,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 395,
              "end_token": 395,
              "children": []
            },
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "start_token": 396,
              "end_token": 396,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_resolveReferenceString",
              "start_token": 397,
              "end_token": 397,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 399,
              "end_token": 401,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 399,
                  "end_token": 399,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 401,
                  "end_token": 401,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "parentPath: string",
              "start_token": 403,
              "end_token": 405,
              "children": [
                {
                  "type": "Identifier",
                  "label": "parentPath",
                  "start_token": 403,
                  "end_token": 403,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 405,
                  "end_token": 405,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "collectionDescription: FileSystemCollectionDesc",
              "start_token": 407,
              "end_token": 409,
              "children": [
                {
                  "type": "Identifier",
                  "label": "collectionDescription",
                  "start_token": 407,
                  "end_token": 407,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 409,
                  "end_token": 409,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 409,
                      "end_token": 409,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "UnionType",
              "label": "{ ref: RuleFactory<{}>; path: string } | null",
              "start_token": 413,
              "end_token": 427,
              "children": [
                {
                  "type": "TypeLiteral",
                  "label": "{ ref: RuleFactory<{}>; path: string }",
                  "start_token": 413,
                  "end_token": 425,
                  "children": [
                    {
                      "type": "PropertySignature",
                      "label": "ref: RuleFactory<{}>;",
                      "start_token": 414,
                      "end_token": 421,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "ref",
                          "start_token": 414,
                          "end_token": 414,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "RuleFactory<{}>",
                          "start_token": 416,
                          "end_token": 420,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "RuleFactory",
                              "start_token": 416,
                              "end_token": 416,
                              "children": []
                            },
                            {
                              "type": "TypeLiteral",
                              "label": "{}",
                              "start_token": 418,
                              "end_token": 419,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PropertySignature",
                      "label": "path: string",
                      "start_token": 422,
                      "end_token": 424,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "path",
                          "start_token": 422,
                          "end_token": 422,
                          "children": []
                        },
                        {
                          "type": "StringKeyword",
                          "label": "string",
                          "start_token": 424,
                          "end_token": 424,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "LiteralType",
                  "label": "null",
                  "start_token": 427,
                  "end_token": 427,
                  "children": [
                    {
                      "type": "NullKeyword",
                      "label": "null",
                      "start_token": 427,
                      "end_token": 427,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected abstract _transformCollectionDescription(\n    name: string,\n    desc: Partial<FileSystemCollectionDesc>,\n  ): FileSystemCollectionDesc;",
          "start_token": 429,
          "end_token": 447,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 429,
              "end_token": 429,
              "children": []
            },
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "start_token": 430,
              "end_token": 430,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_transformCollectionDescription",
              "start_token": 431,
              "end_token": 431,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 433,
              "end_token": 435,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 433,
                  "end_token": 433,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 435,
                  "end_token": 435,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "desc: Partial<FileSystemCollectionDesc>",
              "start_token": 437,
              "end_token": 442,
              "children": [
                {
                  "type": "Identifier",
                  "label": "desc",
                  "start_token": 437,
                  "end_token": 437,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Partial<FileSystemCollectionDesc>",
                  "start_token": 439,
                  "end_token": 442,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Partial",
                      "start_token": 439,
                      "end_token": 439,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 441,
                      "end_token": 441,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "FileSystemCollectionDesc",
                          "start_token": 441,
                          "end_token": 441,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "FileSystemCollectionDesc",
              "start_token": 446,
              "end_token": 446,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 446,
                  "end_token": 446,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected abstract _transformSchematicDescription(\n    name: string,\n    collection: FileSystemCollectionDesc,\n    desc: Partial<FileSystemSchematicDesc>,\n  ): FileSystemSchematicDesc;",
          "start_token": 448,
          "end_token": 470,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 448,
              "end_token": 448,
              "children": []
            },
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "start_token": 449,
              "end_token": 449,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_transformSchematicDescription",
              "start_token": 450,
              "end_token": 450,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 452,
              "end_token": 454,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 452,
                  "end_token": 452,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 454,
                  "end_token": 454,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "collection: FileSystemCollectionDesc",
              "start_token": 456,
              "end_token": 458,
              "children": [
                {
                  "type": "Identifier",
                  "label": "collection",
                  "start_token": 456,
                  "end_token": 456,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 458,
                  "end_token": 458,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 458,
                      "end_token": 458,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "desc: Partial<FileSystemSchematicDesc>",
              "start_token": 460,
              "end_token": 465,
              "children": [
                {
                  "type": "Identifier",
                  "label": "desc",
                  "start_token": 460,
                  "end_token": 460,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Partial<FileSystemSchematicDesc>",
                  "start_token": 462,
                  "end_token": 465,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Partial",
                      "start_token": 462,
                      "end_token": 462,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "FileSystemSchematicDesc",
                      "start_token": 464,
                      "end_token": 464,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "FileSystemSchematicDesc",
                          "start_token": 464,
                          "end_token": 464,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "FileSystemSchematicDesc",
              "start_token": 469,
              "end_token": 469,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FileSystemSchematicDesc",
                  "start_token": 469,
                  "end_token": 469,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private _transforms: OptionTransform<any, any>[] = [];",
          "start_token": 472,
          "end_token": 486,
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "start_token": 472,
              "end_token": 472,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_transforms",
              "start_token": 473,
              "end_token": 473,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "OptionTransform<any, any>[]",
              "start_token": 475,
              "end_token": 482,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "OptionTransform<any, any>",
                  "start_token": 475,
                  "end_token": 480,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "OptionTransform",
                      "start_token": 475,
                      "end_token": 475,
                      "children": []
                    },
                    {
                      "type": "AnyKeyword",
                      "label": "any",
                      "start_token": 477,
                      "end_token": 477,
                      "children": []
                    },
                    {
                      "type": "AnyKeyword",
                      "label": "any",
                      "start_token": 479,
                      "end_token": 479,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "start_token": 484,
              "end_token": 485,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private _contextTransforms: ContextTransform[] = [];",
          "start_token": 487,
          "end_token": 496,
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "start_token": 487,
              "end_token": 487,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_contextTransforms",
              "start_token": 488,
              "end_token": 488,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "ContextTransform[]",
              "start_token": 490,
              "end_token": 492,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "ContextTransform",
                  "start_token": 490,
                  "end_token": 490,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ContextTransform",
                      "start_token": 490,
                      "end_token": 490,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "start_token": 494,
              "end_token": 495,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private _taskFactories = new Map<string, () => Observable<TaskExecutor>>();",
          "start_token": 497,
          "end_token": 515,
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "start_token": 497,
              "end_token": 497,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_taskFactories",
              "start_token": 498,
              "end_token": 498,
              "children": []
            },
            {
              "type": "NewExpression",
              "label": "new Map<string, () => Observable<TaskExecutor>>()",
              "start_token": 500,
              "end_token": 514,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Map",
                  "start_token": 501,
                  "end_token": 501,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 503,
                  "end_token": 503,
                  "children": []
                },
                {
                  "type": "FunctionType",
                  "label": "() => Observable<TaskExecutor>",
                  "start_token": 505,
                  "end_token": 511,
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "Observable<TaskExecutor>",
                      "start_token": 508,
                      "end_token": 511,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Observable",
                          "start_token": 508,
                          "end_token": 508,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "TaskExecutor",
                          "start_token": 510,
                          "end_token": 510,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "TaskExecutor",
                              "start_token": 510,
                              "end_token": 510,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "listSchematicNames(collection: FileSystemCollectionDesc, includeHidden?: boolean) {\n    const schematics: string[] = [];\n    for (const key of Object.keys(collection.schematics)) {\n      const schematic = collection.schematics[key];\n      if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }\n      // If extends is present without a factory it is an alias, do not return it\n      //   unless it is from another collection.\n      if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }\n    }\n    return schematics;\n  }",
          "start_token": 516,
          "end_token": 636,
          "children": [
            {
              "type": "Identifier",
              "label": "listSchematicNames",
              "start_token": 516,
              "end_token": 516,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "collection: FileSystemCollectionDesc",
              "start_token": 518,
              "end_token": 520,
              "children": [
                {
                  "type": "Identifier",
                  "label": "collection",
                  "start_token": 518,
                  "end_token": 518,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 520,
                  "end_token": 520,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 520,
                      "end_token": 520,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "includeHidden?: boolean",
              "start_token": 522,
              "end_token": 525,
              "children": [
                {
                  "type": "Identifier",
                  "label": "includeHidden",
                  "start_token": 522,
                  "end_token": 522,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 523,
                  "end_token": 523,
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "start_token": 525,
                  "end_token": 525,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    const schematics: string[] = [];\n    for (const key of Object.keys(collection.schematics)) {\n      const schematic = collection.schematics[key];\n      if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }\n      // If extends is present without a factory it is an alias, do not return it\n      //   unless it is from another collection.\n      if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }\n    }\n    return schematics;\n  }",
              "start_token": 527,
              "end_token": 636,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const schematics: string[] = [];",
                  "start_token": 528,
                  "end_token": 537,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const schematics: string[] = []",
                      "start_token": 528,
                      "end_token": 536,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "schematics: string[] = []",
                          "start_token": 529,
                          "end_token": 536,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "schematics",
                              "start_token": 529,
                              "end_token": 529,
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "string[]",
                              "start_token": 531,
                              "end_token": 533,
                              "children": [
                                {
                                  "type": "StringKeyword",
                                  "label": "string",
                                  "start_token": 531,
                                  "end_token": 531,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "start_token": 535,
                              "end_token": 536,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForOfStatement",
                  "label": "for (const key of Object.keys(collection.schematics)) {\n      const schematic = collection.schematics[key];\n      if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }\n      // If extends is present without a factory it is an alias, do not return it\n      //   unless it is from another collection.\n      if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }\n    }",
                  "start_token": 538,
                  "end_token": 632,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const key",
                      "start_token": 540,
                      "end_token": 541,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "key",
                          "start_token": 541,
                          "end_token": 541,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "key",
                              "start_token": 541,
                              "end_token": 541,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "label": "Object.keys(collection.schematics)",
                      "start_token": 543,
                      "end_token": 550,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Object.keys",
                          "start_token": 543,
                          "end_token": 545,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Object",
                              "start_token": 543,
                              "end_token": 543,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "keys",
                              "start_token": 545,
                              "end_token": 545,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "collection.schematics",
                          "start_token": 547,
                          "end_token": 549,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "collection",
                              "start_token": 547,
                              "end_token": 547,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "schematics",
                              "start_token": 549,
                              "end_token": 549,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      const schematic = collection.schematics[key];\n      if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }\n      // If extends is present without a factory it is an alias, do not return it\n      //   unless it is from another collection.\n      if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }\n    }",
                      "start_token": 552,
                      "end_token": 632,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const schematic = collection.schematics[key];",
                          "start_token": 553,
                          "end_token": 562,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const schematic = collection.schematics[key]",
                              "start_token": 553,
                              "end_token": 561,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "schematic = collection.schematics[key]",
                                  "start_token": 554,
                                  "end_token": 561,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "schematic",
                                      "start_token": 554,
                                      "end_token": 554,
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "collection.schematics[key]",
                                      "start_token": 556,
                                      "end_token": 561,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "collection.schematics",
                                          "start_token": 556,
                                          "end_token": 558,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "collection",
                                              "start_token": 556,
                                              "end_token": 556,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "schematics",
                                              "start_token": 558,
                                              "end_token": 558,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "key",
                                          "start_token": 560,
                                          "end_token": 560,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if ((schematic.hidden && !includeHidden) || schematic.private) {\n        continue;\n      }",
                          "start_token": 563,
                          "end_token": 581,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "(schematic.hidden && !includeHidden) || schematic.private",
                              "start_token": 565,
                              "end_token": 576,
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(schematic.hidden && !includeHidden)",
                                  "start_token": 565,
                                  "end_token": 572,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "schematic.hidden && !includeHidden",
                                      "start_token": 566,
                                      "end_token": 571,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "schematic.hidden",
                                          "start_token": 566,
                                          "end_token": 568,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "schematic",
                                              "start_token": 566,
                                              "end_token": 566,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "hidden",
                                              "start_token": 568,
                                              "end_token": 568,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AmpersandAmpersandToken",
                                          "label": "&&",
                                          "start_token": 569,
                                          "end_token": 569,
                                          "children": []
                                        },
                                        {
                                          "type": "PrefixUnaryExpression",
                                          "label": "!includeHidden",
                                          "start_token": 570,
                                          "end_token": 571,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "includeHidden",
                                              "start_token": 571,
                                              "end_token": 571,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "start_token": 573,
                                  "end_token": 573,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "schematic.private",
                                  "start_token": 574,
                                  "end_token": 576,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "schematic",
                                      "start_token": 574,
                                      "end_token": 574,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "private",
                                      "start_token": 576,
                                      "end_token": 576,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        continue;\n      }",
                              "start_token": 578,
                              "end_token": 581,
                              "children": [
                                {
                                  "type": "ContinueStatement",
                                  "label": "continue;",
                                  "start_token": 579,
                                  "end_token": 580,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (!schematic.extends || schematic.factory) {\n        schematics.push(key);\n      } else if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }",
                          "start_token": 584,
                          "end_token": 631,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "!schematic.extends || schematic.factory",
                              "start_token": 586,
                              "end_token": 593,
                              "children": [
                                {
                                  "type": "PrefixUnaryExpression",
                                  "label": "!schematic.extends",
                                  "start_token": 586,
                                  "end_token": 589,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "schematic.extends",
                                      "start_token": 587,
                                      "end_token": 589,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "schematic",
                                          "start_token": 587,
                                          "end_token": 587,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "extends",
                                          "start_token": 589,
                                          "end_token": 589,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "start_token": 590,
                                  "end_token": 590,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "schematic.factory",
                                  "start_token": 591,
                                  "end_token": 593,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "schematic",
                                      "start_token": 591,
                                      "end_token": 591,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "factory",
                                      "start_token": 593,
                                      "end_token": 593,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        schematics.push(key);\n      }",
                              "start_token": 595,
                              "end_token": 603,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "schematics.push(key);",
                                  "start_token": 596,
                                  "end_token": 602,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "schematics.push(key)",
                                      "start_token": 596,
                                      "end_token": 601,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "schematics.push",
                                          "start_token": 596,
                                          "end_token": 598,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "schematics",
                                              "start_token": 596,
                                              "end_token": 596,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "start_token": 598,
                                              "end_token": 598,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "key",
                                          "start_token": 600,
                                          "end_token": 600,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "IfStatement",
                              "label": "if (schematic.extends && schematic.extends.indexOf(':') !== -1) {\n        schematics.push(key);\n      }",
                              "start_token": 605,
                              "end_token": 631,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "schematic.extends && schematic.extends.indexOf(':') !== -1",
                                  "start_token": 607,
                                  "end_token": 621,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "schematic.extends",
                                      "start_token": 607,
                                      "end_token": 609,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "schematic",
                                          "start_token": 607,
                                          "end_token": 607,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "extends",
                                          "start_token": 609,
                                          "end_token": 609,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AmpersandAmpersandToken",
                                      "label": "&&",
                                      "start_token": 610,
                                      "end_token": 610,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "schematic.extends.indexOf(':') !== -1",
                                      "start_token": 611,
                                      "end_token": 621,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "schematic.extends.indexOf(':')",
                                          "start_token": 611,
                                          "end_token": 618,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "schematic.extends.indexOf",
                                              "start_token": 611,
                                              "end_token": 615,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "schematic.extends",
                                                  "start_token": 611,
                                                  "end_token": 613,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "schematic",
                                                      "start_token": 611,
                                                      "end_token": 611,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "extends",
                                                      "start_token": 613,
                                                      "end_token": 613,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "indexOf",
                                                  "start_token": 615,
                                                  "end_token": 615,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "':'",
                                              "start_token": 617,
                                              "end_token": 617,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExclamationEqualsEqualsToken",
                                          "label": "!==",
                                          "start_token": 619,
                                          "end_token": 619,
                                          "children": []
                                        },
                                        {
                                          "type": "PrefixUnaryExpression",
                                          "label": "-1",
                                          "start_token": 620,
                                          "end_token": 621,
                                          "children": [
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "start_token": 621,
                                              "end_token": 621,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        schematics.push(key);\n      }",
                                  "start_token": 623,
                                  "end_token": 631,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "schematics.push(key);",
                                      "start_token": 624,
                                      "end_token": 630,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "schematics.push(key)",
                                          "start_token": 624,
                                          "end_token": 629,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "schematics.push",
                                              "start_token": 624,
                                              "end_token": 626,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "schematics",
                                                  "start_token": 624,
                                                  "end_token": 624,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 626,
                                                  "end_token": 626,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "key",
                                              "start_token": 628,
                                              "end_token": 628,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return schematics;",
                  "start_token": 633,
                  "end_token": 635,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "schematics",
                      "start_token": 634,
                      "end_token": 634,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "registerOptionsTransform<T extends object | null, R extends object>(t: OptionTransform<T, R>) {\n    this._transforms.push(t);\n  }",
          "start_token": 637,
          "end_token": 669,
          "children": [
            {
              "type": "Identifier",
              "label": "registerOptionsTransform",
              "start_token": 637,
              "end_token": 637,
              "children": []
            },
            {
              "type": "TypeParameter",
              "label": "T extends object | null",
              "start_token": 639,
              "end_token": 643,
              "children": [
                {
                  "type": "Identifier",
                  "label": "T",
                  "start_token": 639,
                  "end_token": 639,
                  "children": []
                },
                {
                  "type": "UnionType",
                  "label": "object | null",
                  "start_token": 641,
                  "end_token": 643,
                  "children": [
                    {
                      "type": "ObjectKeyword",
                      "label": "object",
                      "start_token": 641,
                      "end_token": 641,
                      "children": []
                    },
                    {
                      "type": "LiteralType",
                      "label": "null",
                      "start_token": 643,
                      "end_token": 643,
                      "children": [
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "start_token": 643,
                          "end_token": 643,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeParameter",
              "label": "R extends object",
              "start_token": 645,
              "end_token": 647,
              "children": [
                {
                  "type": "Identifier",
                  "label": "R",
                  "start_token": 645,
                  "end_token": 645,
                  "children": []
                },
                {
                  "type": "ObjectKeyword",
                  "label": "object",
                  "start_token": 647,
                  "end_token": 647,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "t: OptionTransform<T, R>",
              "start_token": 650,
              "end_token": 657,
              "children": [
                {
                  "type": "Identifier",
                  "label": "t",
                  "start_token": 650,
                  "end_token": 650,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "OptionTransform<T, R>",
                  "start_token": 652,
                  "end_token": 657,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "OptionTransform",
                      "start_token": 652,
                      "end_token": 652,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "T",
                      "start_token": 654,
                      "end_token": 654,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "T",
                          "start_token": 654,
                          "end_token": 654,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "TypeReference",
                      "label": "R",
                      "start_token": 656,
                      "end_token": 656,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "R",
                          "start_token": 656,
                          "end_token": 656,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this._transforms.push(t);\n  }",
              "start_token": 659,
              "end_token": 669,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this._transforms.push(t);",
                  "start_token": 660,
                  "end_token": 668,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this._transforms.push(t)",
                      "start_token": 660,
                      "end_token": 667,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._transforms.push",
                          "start_token": 660,
                          "end_token": 664,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._transforms",
                              "start_token": 660,
                              "end_token": 662,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 660,
                                  "end_token": 660,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_transforms",
                                  "start_token": 662,
                                  "end_token": 662,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "push",
                              "start_token": 664,
                              "end_token": 664,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "t",
                          "start_token": 666,
                          "end_token": 666,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "registerContextTransform(t: ContextTransform) {\n    this._contextTransforms.push(t);\n  }",
          "start_token": 670,
          "end_token": 686,
          "children": [
            {
              "type": "Identifier",
              "label": "registerContextTransform",
              "start_token": 670,
              "end_token": 670,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "t: ContextTransform",
              "start_token": 672,
              "end_token": 674,
              "children": [
                {
                  "type": "Identifier",
                  "label": "t",
                  "start_token": 672,
                  "end_token": 672,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ContextTransform",
                  "start_token": 674,
                  "end_token": 674,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ContextTransform",
                      "start_token": 674,
                      "end_token": 674,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this._contextTransforms.push(t);\n  }",
              "start_token": 676,
              "end_token": 686,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this._contextTransforms.push(t);",
                  "start_token": 677,
                  "end_token": 685,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this._contextTransforms.push(t)",
                      "start_token": 677,
                      "end_token": 684,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._contextTransforms.push",
                          "start_token": 677,
                          "end_token": 681,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._contextTransforms",
                              "start_token": 677,
                              "end_token": 679,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 677,
                                  "end_token": 677,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_contextTransforms",
                                  "start_token": 679,
                                  "end_token": 679,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "push",
                              "start_token": 681,
                              "end_token": 681,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "t",
                          "start_token": 683,
                          "end_token": 683,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "createCollectionDescription(\n    name: string,\n    requester?: FileSystemCollectionDesc,\n  ): FileSystemCollectionDesc {\n    const path = this._resolveCollectionPath(name, requester?.path);\n    const jsonValue = readJsonFile(path);\n    if (!jsonValue || typeof jsonValue != 'object' || Array.isArray(jsonValue)) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // normalize extends property to an array\n    if (typeof jsonValue['extends'] === 'string') {\n      jsonValue['extends'] = [jsonValue['extends']];\n    }\n    const description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    });\n    if (!description || !description.name) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // Validate aliases.\n    const allNames = Object.keys(description.schematics);\n    for (const schematicName of Object.keys(description.schematics)) {\n      const aliases = description.schematics[schematicName].aliases || [];\n      for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }\n      allNames.push(...aliases);\n    }\n    return description;\n  }",
          "start_token": 687,
          "end_token": 906,
          "children": [
            {
              "type": "Identifier",
              "label": "createCollectionDescription",
              "start_token": 687,
              "end_token": 687,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 689,
              "end_token": 691,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 689,
                  "end_token": 689,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 691,
                  "end_token": 691,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "requester?: FileSystemCollectionDesc",
              "start_token": 693,
              "end_token": 696,
              "children": [
                {
                  "type": "Identifier",
                  "label": "requester",
                  "start_token": 693,
                  "end_token": 693,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 694,
                  "end_token": 694,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 696,
                  "end_token": 696,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 696,
                      "end_token": 696,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "FileSystemCollectionDesc",
              "start_token": 700,
              "end_token": 700,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 700,
                  "end_token": 700,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    const path = this._resolveCollectionPath(name, requester?.path);\n    const jsonValue = readJsonFile(path);\n    if (!jsonValue || typeof jsonValue != 'object' || Array.isArray(jsonValue)) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // normalize extends property to an array\n    if (typeof jsonValue['extends'] === 'string') {\n      jsonValue['extends'] = [jsonValue['extends']];\n    }\n    const description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    });\n    if (!description || !description.name) {\n      throw new InvalidCollectionJsonException(name, path);\n    }\n    // Validate aliases.\n    const allNames = Object.keys(description.schematics);\n    for (const schematicName of Object.keys(description.schematics)) {\n      const aliases = description.schematics[schematicName].aliases || [];\n      for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }\n      allNames.push(...aliases);\n    }\n    return description;\n  }",
              "start_token": 701,
              "end_token": 906,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const path = this._resolveCollectionPath(name, requester?.path);",
                  "start_token": 702,
                  "end_token": 716,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const path = this._resolveCollectionPath(name, requester?.path)",
                      "start_token": 702,
                      "end_token": 715,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "path = this._resolveCollectionPath(name, requester?.path)",
                          "start_token": 703,
                          "end_token": 715,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "path",
                              "start_token": 703,
                              "end_token": 703,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this._resolveCollectionPath(name, requester?.path)",
                              "start_token": 705,
                              "end_token": 715,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this._resolveCollectionPath",
                                  "start_token": 705,
                                  "end_token": 707,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 705,
                                      "end_token": 705,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "_resolveCollectionPath",
                                      "start_token": 707,
                                      "end_token": 707,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 709,
                                  "end_token": 709,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "requester?.path",
                                  "start_token": 711,
                                  "end_token": 714,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "requester",
                                      "start_token": 711,
                                      "end_token": 711,
                                      "children": []
                                    },
                                    {
                                      "type": "QuestionDotToken",
                                      "label": "?.",
                                      "start_token": 712,
                                      "end_token": 713,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "path",
                                      "start_token": 714,
                                      "end_token": 714,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const jsonValue = readJsonFile(path);",
                  "start_token": 717,
                  "end_token": 724,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const jsonValue = readJsonFile(path)",
                      "start_token": 717,
                      "end_token": 723,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "jsonValue = readJsonFile(path)",
                          "start_token": 718,
                          "end_token": 723,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "jsonValue",
                              "start_token": 718,
                              "end_token": 718,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "readJsonFile(path)",
                              "start_token": 720,
                              "end_token": 723,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "readJsonFile",
                                  "start_token": 720,
                                  "end_token": 720,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "path",
                                  "start_token": 722,
                                  "end_token": 722,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!jsonValue || typeof jsonValue != 'object' || Array.isArray(jsonValue)) {\n      throw new InvalidCollectionJsonException(name, path);\n    }",
                  "start_token": 725,
                  "end_token": 752,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "!jsonValue || typeof jsonValue != 'object' || Array.isArray(jsonValue)",
                      "start_token": 727,
                      "end_token": 740,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "!jsonValue || typeof jsonValue != 'object'",
                          "start_token": 727,
                          "end_token": 733,
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!jsonValue",
                              "start_token": 727,
                              "end_token": 728,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "jsonValue",
                                  "start_token": 728,
                                  "end_token": 728,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BarBarToken",
                              "label": "||",
                              "start_token": 729,
                              "end_token": 729,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "typeof jsonValue != 'object'",
                              "start_token": 730,
                              "end_token": 733,
                              "children": [
                                {
                                  "type": "TypeOfExpression",
                                  "label": "typeof jsonValue",
                                  "start_token": 730,
                                  "end_token": 731,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "jsonValue",
                                      "start_token": 731,
                                      "end_token": 731,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "start_token": 732,
                                  "end_token": 732,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'object'",
                                  "start_token": 733,
                                  "end_token": 733,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "start_token": 734,
                          "end_token": 734,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Array.isArray(jsonValue)",
                          "start_token": 735,
                          "end_token": 740,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Array.isArray",
                              "start_token": 735,
                              "end_token": 737,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Array",
                                  "start_token": 735,
                                  "end_token": 735,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isArray",
                                  "start_token": 737,
                                  "end_token": 737,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "jsonValue",
                              "start_token": 739,
                              "end_token": 739,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new InvalidCollectionJsonException(name, path);\n    }",
                      "start_token": 742,
                      "end_token": 752,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new InvalidCollectionJsonException(name, path);",
                          "start_token": 743,
                          "end_token": 751,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new InvalidCollectionJsonException(name, path)",
                              "start_token": 744,
                              "end_token": 750,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "InvalidCollectionJsonException",
                                  "start_token": 745,
                                  "end_token": 745,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 747,
                                  "end_token": 747,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "path",
                                  "start_token": 749,
                                  "end_token": 749,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (typeof jsonValue['extends'] === 'string') {\n      jsonValue['extends'] = [jsonValue['extends']];\n    }",
                  "start_token": 754,
                  "end_token": 777,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "typeof jsonValue['extends'] === 'string'",
                      "start_token": 756,
                      "end_token": 762,
                      "children": [
                        {
                          "type": "TypeOfExpression",
                          "label": "typeof jsonValue['extends']",
                          "start_token": 756,
                          "end_token": 760,
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "jsonValue['extends']",
                              "start_token": 757,
                              "end_token": 760,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "jsonValue",
                                  "start_token": 757,
                                  "end_token": 757,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'extends'",
                                  "start_token": 759,
                                  "end_token": 759,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 761,
                          "end_token": 761,
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'string'",
                          "start_token": 762,
                          "end_token": 762,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      jsonValue['extends'] = [jsonValue['extends']];\n    }",
                      "start_token": 764,
                      "end_token": 777,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "jsonValue['extends'] = [jsonValue['extends']];",
                          "start_token": 765,
                          "end_token": 776,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "jsonValue['extends'] = [jsonValue['extends']]",
                              "start_token": 765,
                              "end_token": 775,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "jsonValue['extends']",
                                  "start_token": 765,
                                  "end_token": 768,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "jsonValue",
                                      "start_token": 765,
                                      "end_token": 765,
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'extends'",
                                      "start_token": 767,
                                      "end_token": 767,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 769,
                                  "end_token": 769,
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[jsonValue['extends']]",
                                  "start_token": 770,
                                  "end_token": 775,
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "jsonValue['extends']",
                                      "start_token": 771,
                                      "end_token": 774,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "jsonValue",
                                          "start_token": 771,
                                          "end_token": 771,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'extends'",
                                          "start_token": 773,
                                          "end_token": 773,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    });",
                  "start_token": 778,
                  "end_token": 797,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    })",
                      "start_token": 778,
                      "end_token": 796,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "description = this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    })",
                          "start_token": 779,
                          "end_token": 796,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "description",
                              "start_token": 779,
                              "end_token": 779,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this._transformCollectionDescription(name, {\n      ...jsonValue,\n      path,\n    })",
                              "start_token": 781,
                              "end_token": 796,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this._transformCollectionDescription",
                                  "start_token": 781,
                                  "end_token": 783,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 781,
                                      "end_token": 781,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "_transformCollectionDescription",
                                      "start_token": 783,
                                      "end_token": 783,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 785,
                                  "end_token": 785,
                                  "children": []
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n      ...jsonValue,\n      path,\n    }",
                                  "start_token": 787,
                                  "end_token": 795,
                                  "children": [
                                    {
                                      "type": "SpreadAssignment",
                                      "label": "...jsonValue",
                                      "start_token": 788,
                                      "end_token": 791,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "jsonValue",
                                          "start_token": 791,
                                          "end_token": 791,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ShorthandPropertyAssignment",
                                      "label": "path",
                                      "start_token": 793,
                                      "end_token": 793,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "path",
                                          "start_token": 793,
                                          "end_token": 793,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!description || !description.name) {\n      throw new InvalidCollectionJsonException(name, path);\n    }",
                  "start_token": 798,
                  "end_token": 818,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "!description || !description.name",
                      "start_token": 800,
                      "end_token": 806,
                      "children": [
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "!description",
                          "start_token": 800,
                          "end_token": 801,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "description",
                              "start_token": 801,
                              "end_token": 801,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "start_token": 802,
                          "end_token": 802,
                          "children": []
                        },
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "!description.name",
                          "start_token": 803,
                          "end_token": 806,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "description.name",
                              "start_token": 804,
                              "end_token": 806,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "description",
                                  "start_token": 804,
                                  "end_token": 804,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 806,
                                  "end_token": 806,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new InvalidCollectionJsonException(name, path);\n    }",
                      "start_token": 808,
                      "end_token": 818,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new InvalidCollectionJsonException(name, path);",
                          "start_token": 809,
                          "end_token": 817,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new InvalidCollectionJsonException(name, path)",
                              "start_token": 810,
                              "end_token": 816,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "InvalidCollectionJsonException",
                                  "start_token": 811,
                                  "end_token": 811,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 813,
                                  "end_token": 813,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "path",
                                  "start_token": 815,
                                  "end_token": 815,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const allNames = Object.keys(description.schematics);",
                  "start_token": 820,
                  "end_token": 831,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const allNames = Object.keys(description.schematics)",
                      "start_token": 820,
                      "end_token": 830,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "allNames = Object.keys(description.schematics)",
                          "start_token": 821,
                          "end_token": 830,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "allNames",
                              "start_token": 821,
                              "end_token": 821,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Object.keys(description.schematics)",
                              "start_token": 823,
                              "end_token": 830,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Object.keys",
                                  "start_token": 823,
                                  "end_token": 825,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Object",
                                      "start_token": 823,
                                      "end_token": 823,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "keys",
                                      "start_token": 825,
                                      "end_token": 825,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "description.schematics",
                                  "start_token": 827,
                                  "end_token": 829,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "description",
                                      "start_token": 827,
                                      "end_token": 827,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "schematics",
                                      "start_token": 829,
                                      "end_token": 829,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForOfStatement",
                  "label": "for (const schematicName of Object.keys(description.schematics)) {\n      const aliases = description.schematics[schematicName].aliases || [];\n      for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }\n      allNames.push(...aliases);\n    }",
                  "start_token": 832,
                  "end_token": 902,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const schematicName",
                      "start_token": 834,
                      "end_token": 835,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "schematicName",
                          "start_token": 835,
                          "end_token": 835,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "schematicName",
                              "start_token": 835,
                              "end_token": 835,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "label": "Object.keys(description.schematics)",
                      "start_token": 837,
                      "end_token": 844,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Object.keys",
                          "start_token": 837,
                          "end_token": 839,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Object",
                              "start_token": 837,
                              "end_token": 837,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "keys",
                              "start_token": 839,
                              "end_token": 839,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "description.schematics",
                          "start_token": 841,
                          "end_token": 843,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "description",
                              "start_token": 841,
                              "end_token": 841,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "schematics",
                              "start_token": 843,
                              "end_token": 843,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      const aliases = description.schematics[schematicName].aliases || [];\n      for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }\n      allNames.push(...aliases);\n    }",
                      "start_token": 846,
                      "end_token": 902,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const aliases = description.schematics[schematicName].aliases || [];",
                          "start_token": 847,
                          "end_token": 861,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const aliases = description.schematics[schematicName].aliases || []",
                              "start_token": 847,
                              "end_token": 860,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "aliases = description.schematics[schematicName].aliases || []",
                                  "start_token": 848,
                                  "end_token": 860,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "aliases",
                                      "start_token": 848,
                                      "end_token": 848,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "description.schematics[schematicName].aliases || []",
                                      "start_token": 850,
                                      "end_token": 860,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "description.schematics[schematicName].aliases",
                                          "start_token": 850,
                                          "end_token": 857,
                                          "children": [
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "description.schematics[schematicName]",
                                              "start_token": 850,
                                              "end_token": 855,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "description.schematics",
                                                  "start_token": 850,
                                                  "end_token": 852,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "description",
                                                      "start_token": 850,
                                                      "end_token": 850,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "schematics",
                                                      "start_token": 852,
                                                      "end_token": 852,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "schematicName",
                                                  "start_token": 854,
                                                  "end_token": 854,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "aliases",
                                              "start_token": 857,
                                              "end_token": 857,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BarBarToken",
                                          "label": "||",
                                          "start_token": 858,
                                          "end_token": 858,
                                          "children": []
                                        },
                                        {
                                          "type": "ArrayLiteralExpression",
                                          "label": "[]",
                                          "start_token": 859,
                                          "end_token": 860,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForOfStatement",
                          "label": "for (const alias of aliases) {\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }",
                          "start_token": 862,
                          "end_token": 891,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const alias",
                              "start_token": 864,
                              "end_token": 865,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "alias",
                                  "start_token": 865,
                                  "end_token": 865,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "alias",
                                      "start_token": 865,
                                      "end_token": 865,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "aliases",
                              "start_token": 867,
                              "end_token": 867,
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n        if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }\n      }",
                              "start_token": 869,
                              "end_token": 891,
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (allNames.indexOf(alias) != -1) {\n          throw new SchematicNameCollisionException(alias);\n        }",
                                  "start_token": 870,
                                  "end_token": 890,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "allNames.indexOf(alias) != -1",
                                      "start_token": 872,
                                      "end_token": 880,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "allNames.indexOf(alias)",
                                          "start_token": 872,
                                          "end_token": 877,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "allNames.indexOf",
                                              "start_token": 872,
                                              "end_token": 874,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "allNames",
                                                  "start_token": 872,
                                                  "end_token": 872,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "indexOf",
                                                  "start_token": 874,
                                                  "end_token": 874,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "alias",
                                              "start_token": 876,
                                              "end_token": 876,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExclamationEqualsToken",
                                          "label": "!=",
                                          "start_token": 878,
                                          "end_token": 878,
                                          "children": []
                                        },
                                        {
                                          "type": "PrefixUnaryExpression",
                                          "label": "-1",
                                          "start_token": 879,
                                          "end_token": 880,
                                          "children": [
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "start_token": 880,
                                              "end_token": 880,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          throw new SchematicNameCollisionException(alias);\n        }",
                                      "start_token": 882,
                                      "end_token": 890,
                                      "children": [
                                        {
                                          "type": "ThrowStatement",
                                          "label": "throw new SchematicNameCollisionException(alias);",
                                          "start_token": 883,
                                          "end_token": 889,
                                          "children": [
                                            {
                                              "type": "NewExpression",
                                              "label": "new SchematicNameCollisionException(alias)",
                                              "start_token": 884,
                                              "end_token": 888,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "SchematicNameCollisionException",
                                                  "start_token": 885,
                                                  "end_token": 885,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "alias",
                                                  "start_token": 887,
                                                  "end_token": 887,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "allNames.push(...aliases);",
                          "start_token": 892,
                          "end_token": 901,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "allNames.push(...aliases)",
                              "start_token": 892,
                              "end_token": 900,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "allNames.push",
                                  "start_token": 892,
                                  "end_token": 894,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "allNames",
                                      "start_token": 892,
                                      "end_token": 892,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "start_token": 894,
                                      "end_token": 894,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SpreadElement",
                                  "label": "...aliases",
                                  "start_token": 896,
                                  "end_token": 899,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "aliases",
                                      "start_token": 899,
                                      "end_token": 899,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return description;",
                  "start_token": 903,
                  "end_token": 905,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "description",
                      "start_token": 904,
                      "end_token": 904,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "createSchematicDescription(\n    name: string,\n    collection: FileSystemCollectionDesc,\n  ): FileSystemSchematicDesc | null {\n    // Resolve aliases first.\n    for (const schematicName of Object.keys(collection.schematics)) {\n      const schematicDescription = collection.schematics[schematicName];\n      if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }\n    }\n    if (!(name in collection.schematics)) {\n      return null;\n    }\n    const collectionPath = dirname(collection.path);\n    const partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name];\n    if (!partialDesc) {\n      return null;\n    }\n    if (partialDesc.extends) {\n      const index = partialDesc.extends.indexOf(':');\n      const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;\n      const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);\n      if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }\n    }\n    // Use any on this ref as we don't have the OptionT here, but we don't need it (we only need\n    // the path).\n    if (!partialDesc.factory) {\n      throw new SchematicMissingFactoryException(name);\n    }\n    const resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    );\n    if (!resolvedRef) {\n      throw new FactoryCannotBeResolvedException(name);\n    }\n    let schema = partialDesc.schema;\n    let schemaJson: JsonObject | undefined = undefined;\n    if (schema) {\n      if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }\n      schemaJson = readJsonFile(schema) as JsonObject;\n    }\n    // The schematic path is used to resolve URLs.\n    // We should be able to just do `dirname(resolvedRef.path)` but for compatibility with\n    // Bazel under Windows this directory needs to be resolved from the collection instead.\n    // This is needed because on Bazel under Windows the data files (such as the collection or\n    // url files) are not in the same place as the compiled JS.\n    const maybePath = join(collectionPath, partialDesc.factory);\n    const path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath);\n    return this._transformSchematicDescription(name, collection, {\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    });\n  }",
          "start_token": 907,
          "end_token": 1308,
          "children": [
            {
              "type": "Identifier",
              "label": "createSchematicDescription",
              "start_token": 907,
              "end_token": 907,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 909,
              "end_token": 911,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 909,
                  "end_token": 909,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 911,
                  "end_token": 911,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "collection: FileSystemCollectionDesc",
              "start_token": 913,
              "end_token": 915,
              "children": [
                {
                  "type": "Identifier",
                  "label": "collection",
                  "start_token": 913,
                  "end_token": 913,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 915,
                  "end_token": 915,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 915,
                      "end_token": 915,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "UnionType",
              "label": "FileSystemSchematicDesc | null",
              "start_token": 919,
              "end_token": 921,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicDesc",
                  "start_token": 919,
                  "end_token": 919,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicDesc",
                      "start_token": 919,
                      "end_token": 919,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "LiteralType",
                  "label": "null",
                  "start_token": 921,
                  "end_token": 921,
                  "children": [
                    {
                      "type": "NullKeyword",
                      "label": "null",
                      "start_token": 921,
                      "end_token": 921,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    // Resolve aliases first.\n    for (const schematicName of Object.keys(collection.schematics)) {\n      const schematicDescription = collection.schematics[schematicName];\n      if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }\n    }\n    if (!(name in collection.schematics)) {\n      return null;\n    }\n    const collectionPath = dirname(collection.path);\n    const partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name];\n    if (!partialDesc) {\n      return null;\n    }\n    if (partialDesc.extends) {\n      const index = partialDesc.extends.indexOf(':');\n      const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;\n      const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);\n      if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }\n    }\n    // Use any on this ref as we don't have the OptionT here, but we don't need it (we only need\n    // the path).\n    if (!partialDesc.factory) {\n      throw new SchematicMissingFactoryException(name);\n    }\n    const resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    );\n    if (!resolvedRef) {\n      throw new FactoryCannotBeResolvedException(name);\n    }\n    let schema = partialDesc.schema;\n    let schemaJson: JsonObject | undefined = undefined;\n    if (schema) {\n      if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }\n      schemaJson = readJsonFile(schema) as JsonObject;\n    }\n    // The schematic path is used to resolve URLs.\n    // We should be able to just do `dirname(resolvedRef.path)` but for compatibility with\n    // Bazel under Windows this directory needs to be resolved from the collection instead.\n    // This is needed because on Bazel under Windows the data files (such as the collection or\n    // url files) are not in the same place as the compiled JS.\n    const maybePath = join(collectionPath, partialDesc.factory);\n    const path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath);\n    return this._transformSchematicDescription(name, collection, {\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    });\n  }",
              "start_token": 922,
              "end_token": 1308,
              "children": [
                {
                  "type": "ForOfStatement",
                  "label": "for (const schematicName of Object.keys(collection.schematics)) {\n      const schematicDescription = collection.schematics[schematicName];\n      if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }\n    }",
                  "start_token": 924,
                  "end_token": 975,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const schematicName",
                      "start_token": 926,
                      "end_token": 927,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "schematicName",
                          "start_token": 927,
                          "end_token": 927,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "schematicName",
                              "start_token": 927,
                              "end_token": 927,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "label": "Object.keys(collection.schematics)",
                      "start_token": 929,
                      "end_token": 936,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Object.keys",
                          "start_token": 929,
                          "end_token": 931,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Object",
                              "start_token": 929,
                              "end_token": 929,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "keys",
                              "start_token": 931,
                              "end_token": 931,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "collection.schematics",
                          "start_token": 933,
                          "end_token": 935,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "collection",
                              "start_token": 933,
                              "end_token": 933,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "schematics",
                              "start_token": 935,
                              "end_token": 935,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      const schematicDescription = collection.schematics[schematicName];\n      if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }\n    }",
                      "start_token": 938,
                      "end_token": 975,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const schematicDescription = collection.schematics[schematicName];",
                          "start_token": 939,
                          "end_token": 948,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const schematicDescription = collection.schematics[schematicName]",
                              "start_token": 939,
                              "end_token": 947,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "schematicDescription = collection.schematics[schematicName]",
                                  "start_token": 940,
                                  "end_token": 947,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "schematicDescription",
                                      "start_token": 940,
                                      "end_token": 940,
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "collection.schematics[schematicName]",
                                      "start_token": 942,
                                      "end_token": 947,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "collection.schematics",
                                          "start_token": 942,
                                          "end_token": 944,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "collection",
                                              "start_token": 942,
                                              "end_token": 942,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "schematics",
                                              "start_token": 944,
                                              "end_token": 944,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "schematicName",
                                          "start_token": 946,
                                          "end_token": 946,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1) {\n        name = schematicName;\n        break;\n      }",
                          "start_token": 949,
                          "end_token": 974,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "schematicDescription.aliases && schematicDescription.aliases.indexOf(name) != -1",
                              "start_token": 951,
                              "end_token": 965,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "schematicDescription.aliases",
                                  "start_token": 951,
                                  "end_token": 953,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "schematicDescription",
                                      "start_token": 951,
                                      "end_token": 951,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "aliases",
                                      "start_token": 953,
                                      "end_token": 953,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "start_token": 954,
                                  "end_token": 954,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "schematicDescription.aliases.indexOf(name) != -1",
                                  "start_token": 955,
                                  "end_token": 965,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "schematicDescription.aliases.indexOf(name)",
                                      "start_token": 955,
                                      "end_token": 962,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "schematicDescription.aliases.indexOf",
                                          "start_token": 955,
                                          "end_token": 959,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "schematicDescription.aliases",
                                              "start_token": 955,
                                              "end_token": 957,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "schematicDescription",
                                                  "start_token": 955,
                                                  "end_token": 955,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "aliases",
                                                  "start_token": 957,
                                                  "end_token": 957,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "indexOf",
                                              "start_token": 959,
                                              "end_token": 959,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "name",
                                          "start_token": 961,
                                          "end_token": 961,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExclamationEqualsToken",
                                      "label": "!=",
                                      "start_token": 963,
                                      "end_token": 963,
                                      "children": []
                                    },
                                    {
                                      "type": "PrefixUnaryExpression",
                                      "label": "-1",
                                      "start_token": 964,
                                      "end_token": 965,
                                      "children": [
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "start_token": 965,
                                          "end_token": 965,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        name = schematicName;\n        break;\n      }",
                              "start_token": 967,
                              "end_token": 974,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "name = schematicName;",
                                  "start_token": 968,
                                  "end_token": 971,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "name = schematicName",
                                      "start_token": 968,
                                      "end_token": 970,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "name",
                                          "start_token": 968,
                                          "end_token": 968,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "start_token": 969,
                                          "end_token": 969,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "schematicName",
                                          "start_token": 970,
                                          "end_token": 970,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BreakStatement",
                                  "label": "break;",
                                  "start_token": 972,
                                  "end_token": 973,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!(name in collection.schematics)) {\n      return null;\n    }",
                  "start_token": 976,
                  "end_token": 991,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!(name in collection.schematics)",
                      "start_token": 978,
                      "end_token": 985,
                      "children": [
                        {
                          "type": "ParenthesizedExpression",
                          "label": "(name in collection.schematics)",
                          "start_token": 979,
                          "end_token": 985,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "name in collection.schematics",
                              "start_token": 980,
                              "end_token": 984,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 980,
                                  "end_token": 980,
                                  "children": []
                                },
                                {
                                  "type": "InKeyword",
                                  "label": "in",
                                  "start_token": 981,
                                  "end_token": 981,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "collection.schematics",
                                  "start_token": 982,
                                  "end_token": 984,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "collection",
                                      "start_token": 982,
                                      "end_token": 982,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "schematics",
                                      "start_token": 984,
                                      "end_token": 984,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return null;\n    }",
                      "start_token": 987,
                      "end_token": 991,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return null;",
                          "start_token": 988,
                          "end_token": 990,
                          "children": [
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "start_token": 989,
                              "end_token": 989,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const collectionPath = dirname(collection.path);",
                  "start_token": 992,
                  "end_token": 1001,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const collectionPath = dirname(collection.path)",
                      "start_token": 992,
                      "end_token": 1000,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "collectionPath = dirname(collection.path)",
                          "start_token": 993,
                          "end_token": 1000,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "collectionPath",
                              "start_token": 993,
                              "end_token": 993,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "dirname(collection.path)",
                              "start_token": 995,
                              "end_token": 1000,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "dirname",
                                  "start_token": 995,
                                  "end_token": 995,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "collection.path",
                                  "start_token": 997,
                                  "end_token": 999,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "collection",
                                      "start_token": 997,
                                      "end_token": 997,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "path",
                                      "start_token": 999,
                                      "end_token": 999,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name];",
                  "start_token": 1002,
                  "end_token": 1018,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name]",
                      "start_token": 1002,
                      "end_token": 1017,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "partialDesc: Partial<FileSystemSchematicDesc> | null = collection.schematics[name]",
                          "start_token": 1003,
                          "end_token": 1017,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "partialDesc",
                              "start_token": 1003,
                              "end_token": 1003,
                              "children": []
                            },
                            {
                              "type": "UnionType",
                              "label": "Partial<FileSystemSchematicDesc> | null",
                              "start_token": 1005,
                              "end_token": 1010,
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Partial<FileSystemSchematicDesc>",
                                  "start_token": 1005,
                                  "end_token": 1008,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Partial",
                                      "start_token": 1005,
                                      "end_token": 1005,
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "FileSystemSchematicDesc",
                                      "start_token": 1007,
                                      "end_token": 1007,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "FileSystemSchematicDesc",
                                          "start_token": 1007,
                                          "end_token": 1007,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "LiteralType",
                                  "label": "null",
                                  "start_token": 1010,
                                  "end_token": 1010,
                                  "children": [
                                    {
                                      "type": "NullKeyword",
                                      "label": "null",
                                      "start_token": 1010,
                                      "end_token": 1010,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "collection.schematics[name]",
                              "start_token": 1012,
                              "end_token": 1017,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "collection.schematics",
                                  "start_token": 1012,
                                  "end_token": 1014,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "collection",
                                      "start_token": 1012,
                                      "end_token": 1012,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "schematics",
                                      "start_token": 1014,
                                      "end_token": 1014,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1016,
                                  "end_token": 1016,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!partialDesc) {\n      return null;\n    }",
                  "start_token": 1019,
                  "end_token": 1028,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!partialDesc",
                      "start_token": 1021,
                      "end_token": 1022,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "partialDesc",
                          "start_token": 1022,
                          "end_token": 1022,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return null;\n    }",
                      "start_token": 1024,
                      "end_token": 1028,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return null;",
                          "start_token": 1025,
                          "end_token": 1027,
                          "children": [
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "start_token": 1026,
                              "end_token": 1026,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (partialDesc.extends) {\n      const index = partialDesc.extends.indexOf(':');\n      const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;\n      const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);\n      if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }\n    }",
                  "start_token": 1029,
                  "end_token": 1133,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "partialDesc.extends",
                      "start_token": 1031,
                      "end_token": 1033,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "partialDesc",
                          "start_token": 1031,
                          "end_token": 1031,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "extends",
                          "start_token": 1033,
                          "end_token": 1033,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      const index = partialDesc.extends.indexOf(':');\n      const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;\n      const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);\n      if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }\n    }",
                      "start_token": 1035,
                      "end_token": 1133,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const index = partialDesc.extends.indexOf(':');",
                          "start_token": 1036,
                          "end_token": 1047,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const index = partialDesc.extends.indexOf(':')",
                              "start_token": 1036,
                              "end_token": 1046,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "index = partialDesc.extends.indexOf(':')",
                                  "start_token": 1037,
                                  "end_token": 1046,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "index",
                                      "start_token": 1037,
                                      "end_token": 1037,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "partialDesc.extends.indexOf(':')",
                                      "start_token": 1039,
                                      "end_token": 1046,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "partialDesc.extends.indexOf",
                                          "start_token": 1039,
                                          "end_token": 1043,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "partialDesc.extends",
                                              "start_token": 1039,
                                              "end_token": 1041,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "partialDesc",
                                                  "start_token": 1039,
                                                  "end_token": 1039,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "extends",
                                                  "start_token": 1041,
                                                  "end_token": 1041,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "indexOf",
                                              "start_token": 1043,
                                              "end_token": 1043,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "':'",
                                          "start_token": 1045,
                                          "end_token": 1045,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null;",
                          "start_token": 1048,
                          "end_token": 1068,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null",
                              "start_token": 1048,
                              "end_token": 1067,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "collectionName = index !== -1 ? partialDesc.extends.slice(0, index) : null",
                                  "start_token": 1049,
                                  "end_token": 1067,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "collectionName",
                                      "start_token": 1049,
                                      "end_token": 1049,
                                      "children": []
                                    },
                                    {
                                      "type": "ConditionalExpression",
                                      "label": "index !== -1 ? partialDesc.extends.slice(0, index) : null",
                                      "start_token": 1051,
                                      "end_token": 1067,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "index !== -1",
                                          "start_token": 1051,
                                          "end_token": 1054,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "index",
                                              "start_token": 1051,
                                              "end_token": 1051,
                                              "children": []
                                            },
                                            {
                                              "type": "ExclamationEqualsEqualsToken",
                                              "label": "!==",
                                              "start_token": 1052,
                                              "end_token": 1052,
                                              "children": []
                                            },
                                            {
                                              "type": "PrefixUnaryExpression",
                                              "label": "-1",
                                              "start_token": 1053,
                                              "end_token": 1054,
                                              "children": [
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "start_token": 1054,
                                                  "end_token": 1054,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "QuestionToken",
                                          "label": "?",
                                          "start_token": 1055,
                                          "end_token": 1055,
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "partialDesc.extends.slice(0, index)",
                                          "start_token": 1056,
                                          "end_token": 1065,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "partialDesc.extends.slice",
                                              "start_token": 1056,
                                              "end_token": 1060,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "partialDesc.extends",
                                                  "start_token": 1056,
                                                  "end_token": 1058,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "partialDesc",
                                                      "start_token": 1056,
                                                      "end_token": 1056,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "extends",
                                                      "start_token": 1058,
                                                      "end_token": 1058,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "slice",
                                                  "start_token": 1060,
                                                  "end_token": 1060,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "start_token": 1062,
                                              "end_token": 1062,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "index",
                                              "start_token": 1064,
                                              "end_token": 1064,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ColonToken",
                                          "label": ":",
                                          "start_token": 1066,
                                          "end_token": 1066,
                                          "children": []
                                        },
                                        {
                                          "type": "NullKeyword",
                                          "label": "null",
                                          "start_token": 1067,
                                          "end_token": 1067,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1);",
                          "start_token": 1069,
                          "end_token": 1091,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1)",
                              "start_token": 1069,
                              "end_token": 1090,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "schematicName =\n        index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1)",
                                  "start_token": 1070,
                                  "end_token": 1090,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "schematicName",
                                      "start_token": 1070,
                                      "end_token": 1070,
                                      "children": []
                                    },
                                    {
                                      "type": "ConditionalExpression",
                                      "label": "index === -1 ? partialDesc.extends : partialDesc.extends.slice(index + 1)",
                                      "start_token": 1072,
                                      "end_token": 1090,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "index === -1",
                                          "start_token": 1072,
                                          "end_token": 1075,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "index",
                                              "start_token": 1072,
                                              "end_token": 1072,
                                              "children": []
                                            },
                                            {
                                              "type": "EqualsEqualsEqualsToken",
                                              "label": "===",
                                              "start_token": 1073,
                                              "end_token": 1073,
                                              "children": []
                                            },
                                            {
                                              "type": "PrefixUnaryExpression",
                                              "label": "-1",
                                              "start_token": 1074,
                                              "end_token": 1075,
                                              "children": [
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "start_token": 1075,
                                                  "end_token": 1075,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "QuestionToken",
                                          "label": "?",
                                          "start_token": 1076,
                                          "end_token": 1076,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "partialDesc.extends",
                                          "start_token": 1077,
                                          "end_token": 1079,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "partialDesc",
                                              "start_token": 1077,
                                              "end_token": 1077,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "extends",
                                              "start_token": 1079,
                                              "end_token": 1079,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ColonToken",
                                          "label": ":",
                                          "start_token": 1080,
                                          "end_token": 1080,
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "partialDesc.extends.slice(index + 1)",
                                          "start_token": 1081,
                                          "end_token": 1090,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "partialDesc.extends.slice",
                                              "start_token": 1081,
                                              "end_token": 1085,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "partialDesc.extends",
                                                  "start_token": 1081,
                                                  "end_token": 1083,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "partialDesc",
                                                      "start_token": 1081,
                                                      "end_token": 1081,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "extends",
                                                      "start_token": 1083,
                                                      "end_token": 1083,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "slice",
                                                  "start_token": 1085,
                                                  "end_token": 1085,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "index + 1",
                                              "start_token": 1087,
                                              "end_token": 1089,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "index",
                                                  "start_token": 1087,
                                                  "end_token": 1087,
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "start_token": 1088,
                                                  "end_token": 1088,
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "start_token": 1089,
                                                  "end_token": 1089,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (collectionName !== null) {\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      } else {\n        return this.createSchematicDescription(schematicName, collection);\n      }",
                          "start_token": 1092,
                          "end_token": 1132,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "collectionName !== null",
                              "start_token": 1094,
                              "end_token": 1096,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "collectionName",
                                  "start_token": 1094,
                                  "end_token": 1094,
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsEqualsToken",
                                  "label": "!==",
                                  "start_token": 1095,
                                  "end_token": 1095,
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "start_token": 1096,
                                  "end_token": 1096,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        const extendCollection = this.createCollectionDescription(collectionName);\n        return this.createSchematicDescription(schematicName, extendCollection);\n      }",
                              "start_token": 1098,
                              "end_token": 1119,
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "const extendCollection = this.createCollectionDescription(collectionName);",
                                  "start_token": 1099,
                                  "end_token": 1108,
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "const extendCollection = this.createCollectionDescription(collectionName)",
                                      "start_token": 1099,
                                      "end_token": 1107,
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "extendCollection = this.createCollectionDescription(collectionName)",
                                          "start_token": 1100,
                                          "end_token": 1107,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "extendCollection",
                                              "start_token": 1100,
                                              "end_token": 1100,
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "this.createCollectionDescription(collectionName)",
                                              "start_token": 1102,
                                              "end_token": 1107,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.createCollectionDescription",
                                                  "start_token": 1102,
                                                  "end_token": 1104,
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "start_token": 1102,
                                                      "end_token": 1102,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "createCollectionDescription",
                                                      "start_token": 1104,
                                                      "end_token": 1104,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "collectionName",
                                                  "start_token": 1106,
                                                  "end_token": 1106,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ReturnStatement",
                                  "label": "return this.createSchematicDescription(schematicName, extendCollection);",
                                  "start_token": 1109,
                                  "end_token": 1118,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.createSchematicDescription(schematicName, extendCollection)",
                                      "start_token": 1110,
                                      "end_token": 1117,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.createSchematicDescription",
                                          "start_token": 1110,
                                          "end_token": 1112,
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "start_token": 1110,
                                              "end_token": 1110,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "createSchematicDescription",
                                              "start_token": 1112,
                                              "end_token": 1112,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "schematicName",
                                          "start_token": 1114,
                                          "end_token": 1114,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "extendCollection",
                                          "start_token": 1116,
                                          "end_token": 1116,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return this.createSchematicDescription(schematicName, collection);\n      }",
                              "start_token": 1121,
                              "end_token": 1132,
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return this.createSchematicDescription(schematicName, collection);",
                                  "start_token": 1122,
                                  "end_token": 1131,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.createSchematicDescription(schematicName, collection)",
                                      "start_token": 1123,
                                      "end_token": 1130,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.createSchematicDescription",
                                          "start_token": 1123,
                                          "end_token": 1125,
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "start_token": 1123,
                                              "end_token": 1123,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "createSchematicDescription",
                                              "start_token": 1125,
                                              "end_token": 1125,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "schematicName",
                                          "start_token": 1127,
                                          "end_token": 1127,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "collection",
                                          "start_token": 1129,
                                          "end_token": 1129,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!partialDesc.factory) {\n      throw new SchematicMissingFactoryException(name);\n    }",
                  "start_token": 1136,
                  "end_token": 1151,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!partialDesc.factory",
                      "start_token": 1138,
                      "end_token": 1141,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "partialDesc.factory",
                          "start_token": 1139,
                          "end_token": 1141,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "partialDesc",
                              "start_token": 1139,
                              "end_token": 1139,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "factory",
                              "start_token": 1141,
                              "end_token": 1141,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new SchematicMissingFactoryException(name);\n    }",
                      "start_token": 1143,
                      "end_token": 1151,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new SchematicMissingFactoryException(name);",
                          "start_token": 1144,
                          "end_token": 1150,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new SchematicMissingFactoryException(name)",
                              "start_token": 1145,
                              "end_token": 1149,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "SchematicMissingFactoryException",
                                  "start_token": 1146,
                                  "end_token": 1146,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1148,
                                  "end_token": 1148,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    );",
                  "start_token": 1152,
                  "end_token": 1168,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    )",
                      "start_token": 1152,
                      "end_token": 1167,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "resolvedRef = this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    )",
                          "start_token": 1153,
                          "end_token": 1167,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "resolvedRef",
                              "start_token": 1153,
                              "end_token": 1153,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this._resolveReferenceString(\n      partialDesc.factory,\n      collectionPath,\n      collection,\n    )",
                              "start_token": 1155,
                              "end_token": 1167,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this._resolveReferenceString",
                                  "start_token": 1155,
                                  "end_token": 1157,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1155,
                                      "end_token": 1155,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "_resolveReferenceString",
                                      "start_token": 1157,
                                      "end_token": 1157,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "partialDesc.factory",
                                  "start_token": 1159,
                                  "end_token": 1161,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "partialDesc",
                                      "start_token": 1159,
                                      "end_token": 1159,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "factory",
                                      "start_token": 1161,
                                      "end_token": 1161,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "collectionPath",
                                  "start_token": 1163,
                                  "end_token": 1163,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "collection",
                                  "start_token": 1165,
                                  "end_token": 1165,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!resolvedRef) {\n      throw new FactoryCannotBeResolvedException(name);\n    }",
                  "start_token": 1169,
                  "end_token": 1182,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!resolvedRef",
                      "start_token": 1171,
                      "end_token": 1172,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "resolvedRef",
                          "start_token": 1172,
                          "end_token": 1172,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new FactoryCannotBeResolvedException(name);\n    }",
                      "start_token": 1174,
                      "end_token": 1182,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new FactoryCannotBeResolvedException(name);",
                          "start_token": 1175,
                          "end_token": 1181,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new FactoryCannotBeResolvedException(name)",
                              "start_token": 1176,
                              "end_token": 1180,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "FactoryCannotBeResolvedException",
                                  "start_token": 1177,
                                  "end_token": 1177,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1179,
                                  "end_token": 1179,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let schema = partialDesc.schema;",
                  "start_token": 1183,
                  "end_token": 1189,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let schema = partialDesc.schema",
                      "start_token": 1183,
                      "end_token": 1188,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "schema = partialDesc.schema",
                          "start_token": 1184,
                          "end_token": 1188,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "schema",
                              "start_token": 1184,
                              "end_token": 1184,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "partialDesc.schema",
                              "start_token": 1186,
                              "end_token": 1188,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "partialDesc",
                                  "start_token": 1186,
                                  "end_token": 1186,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "schema",
                                  "start_token": 1188,
                                  "end_token": 1188,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let schemaJson: JsonObject | undefined = undefined;",
                  "start_token": 1190,
                  "end_token": 1198,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let schemaJson: JsonObject | undefined = undefined",
                      "start_token": 1190,
                      "end_token": 1197,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "schemaJson: JsonObject | undefined = undefined",
                          "start_token": 1191,
                          "end_token": 1197,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "schemaJson",
                              "start_token": 1191,
                              "end_token": 1191,
                              "children": []
                            },
                            {
                              "type": "UnionType",
                              "label": "JsonObject | undefined",
                              "start_token": 1193,
                              "end_token": 1195,
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "JsonObject",
                                  "start_token": 1193,
                                  "end_token": 1193,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "JsonObject",
                                      "start_token": 1193,
                                      "end_token": 1193,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "UndefinedKeyword",
                                  "label": "undefined",
                                  "start_token": 1195,
                                  "end_token": 1195,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "start_token": 1197,
                              "end_token": 1197,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (schema) {\n      if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }\n      schemaJson = readJsonFile(schema) as JsonObject;\n    }",
                  "start_token": 1199,
                  "end_token": 1232,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "schema",
                      "start_token": 1201,
                      "end_token": 1201,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }\n      schemaJson = readJsonFile(schema) as JsonObject;\n    }",
                      "start_token": 1203,
                      "end_token": 1232,
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (!isAbsolute(schema)) {\n        schema = join(collectionPath, schema);\n      }",
                          "start_token": 1204,
                          "end_token": 1222,
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!isAbsolute(schema)",
                              "start_token": 1206,
                              "end_token": 1210,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "isAbsolute(schema)",
                                  "start_token": 1207,
                                  "end_token": 1210,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "isAbsolute",
                                      "start_token": 1207,
                                      "end_token": 1207,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "schema",
                                      "start_token": 1209,
                                      "end_token": 1209,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        schema = join(collectionPath, schema);\n      }",
                              "start_token": 1212,
                              "end_token": 1222,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "schema = join(collectionPath, schema);",
                                  "start_token": 1213,
                                  "end_token": 1221,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "schema = join(collectionPath, schema)",
                                      "start_token": 1213,
                                      "end_token": 1220,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "schema",
                                          "start_token": 1213,
                                          "end_token": 1213,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "start_token": 1214,
                                          "end_token": 1214,
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "join(collectionPath, schema)",
                                          "start_token": 1215,
                                          "end_token": 1220,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "join",
                                              "start_token": 1215,
                                              "end_token": 1215,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "collectionPath",
                                              "start_token": 1217,
                                              "end_token": 1217,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "schema",
                                              "start_token": 1219,
                                              "end_token": 1219,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "schemaJson = readJsonFile(schema) as JsonObject;",
                          "start_token": 1223,
                          "end_token": 1231,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "schemaJson = readJsonFile(schema) as JsonObject",
                              "start_token": 1223,
                              "end_token": 1230,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "schemaJson",
                                  "start_token": 1223,
                                  "end_token": 1223,
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 1224,
                                  "end_token": 1224,
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "readJsonFile(schema) as JsonObject",
                                  "start_token": 1225,
                                  "end_token": 1230,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "readJsonFile(schema)",
                                      "start_token": 1225,
                                      "end_token": 1228,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "readJsonFile",
                                          "start_token": 1225,
                                          "end_token": 1225,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "schema",
                                          "start_token": 1227,
                                          "end_token": 1227,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "JsonObject",
                                      "start_token": 1230,
                                      "end_token": 1230,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JsonObject",
                                          "start_token": 1230,
                                          "end_token": 1230,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const maybePath = join(collectionPath, partialDesc.factory);",
                  "start_token": 1238,
                  "end_token": 1249,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const maybePath = join(collectionPath, partialDesc.factory)",
                      "start_token": 1238,
                      "end_token": 1248,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "maybePath = join(collectionPath, partialDesc.factory)",
                          "start_token": 1239,
                          "end_token": 1248,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "maybePath",
                              "start_token": 1239,
                              "end_token": 1239,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "join(collectionPath, partialDesc.factory)",
                              "start_token": 1241,
                              "end_token": 1248,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "join",
                                  "start_token": 1241,
                                  "end_token": 1241,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "collectionPath",
                                  "start_token": 1243,
                                  "end_token": 1243,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "partialDesc.factory",
                                  "start_token": 1245,
                                  "end_token": 1247,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "partialDesc",
                                      "start_token": 1245,
                                      "end_token": 1245,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "factory",
                                      "start_token": 1247,
                                      "end_token": 1247,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath);",
                  "start_token": 1250,
                  "end_token": 1273,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath)",
                      "start_token": 1250,
                      "end_token": 1272,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "path =\n      existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath)",
                          "start_token": 1251,
                          "end_token": 1272,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "path",
                              "start_token": 1251,
                              "end_token": 1251,
                              "children": []
                            },
                            {
                              "type": "ConditionalExpression",
                              "label": "existsSync(maybePath) && statSync(maybePath).isDirectory() ? maybePath : dirname(maybePath)",
                              "start_token": 1253,
                              "end_token": 1272,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "existsSync(maybePath) && statSync(maybePath).isDirectory()",
                                  "start_token": 1253,
                                  "end_token": 1265,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "existsSync(maybePath)",
                                      "start_token": 1253,
                                      "end_token": 1256,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "existsSync",
                                          "start_token": 1253,
                                          "end_token": 1253,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "maybePath",
                                          "start_token": 1255,
                                          "end_token": 1255,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AmpersandAmpersandToken",
                                      "label": "&&",
                                      "start_token": 1257,
                                      "end_token": 1257,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "statSync(maybePath).isDirectory()",
                                      "start_token": 1258,
                                      "end_token": 1265,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "statSync(maybePath).isDirectory",
                                          "start_token": 1258,
                                          "end_token": 1263,
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "statSync(maybePath)",
                                              "start_token": 1258,
                                              "end_token": 1261,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "statSync",
                                                  "start_token": 1258,
                                                  "end_token": 1258,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "maybePath",
                                                  "start_token": 1260,
                                                  "end_token": 1260,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "isDirectory",
                                              "start_token": 1263,
                                              "end_token": 1263,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "QuestionToken",
                                  "label": "?",
                                  "start_token": 1266,
                                  "end_token": 1266,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "maybePath",
                                  "start_token": 1267,
                                  "end_token": 1267,
                                  "children": []
                                },
                                {
                                  "type": "ColonToken",
                                  "label": ":",
                                  "start_token": 1268,
                                  "end_token": 1268,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "dirname(maybePath)",
                                  "start_token": 1269,
                                  "end_token": 1272,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "dirname",
                                      "start_token": 1269,
                                      "end_token": 1269,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "maybePath",
                                      "start_token": 1271,
                                      "end_token": 1271,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return this._transformSchematicDescription(name, collection, {\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    });",
                  "start_token": 1274,
                  "end_token": 1307,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this._transformSchematicDescription(name, collection, {\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    })",
                      "start_token": 1275,
                      "end_token": 1306,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._transformSchematicDescription",
                          "start_token": 1275,
                          "end_token": 1277,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 1275,
                              "end_token": 1275,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_transformSchematicDescription",
                              "start_token": 1277,
                              "end_token": 1277,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "start_token": 1279,
                          "end_token": 1279,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "collection",
                          "start_token": 1281,
                          "end_token": 1281,
                          "children": []
                        },
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{\n      ...partialDesc,\n      schema,\n      schemaJson,\n      name,\n      path,\n      factoryFn: resolvedRef.ref,\n      collection,\n    }",
                          "start_token": 1283,
                          "end_token": 1305,
                          "children": [
                            {
                              "type": "SpreadAssignment",
                              "label": "...partialDesc",
                              "start_token": 1284,
                              "end_token": 1287,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "partialDesc",
                                  "start_token": 1287,
                                  "end_token": 1287,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "schema",
                              "start_token": 1289,
                              "end_token": 1289,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "schema",
                                  "start_token": 1289,
                                  "end_token": 1289,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "schemaJson",
                              "start_token": 1291,
                              "end_token": 1291,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "schemaJson",
                                  "start_token": 1291,
                                  "end_token": 1291,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "name",
                              "start_token": 1293,
                              "end_token": 1293,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1293,
                                  "end_token": 1293,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "path",
                              "start_token": 1295,
                              "end_token": 1295,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "path",
                                  "start_token": 1295,
                                  "end_token": 1295,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAssignment",
                              "label": "factoryFn: resolvedRef.ref",
                              "start_token": 1297,
                              "end_token": 1301,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "factoryFn",
                                  "start_token": 1297,
                                  "end_token": 1297,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "resolvedRef.ref",
                                  "start_token": 1299,
                                  "end_token": 1301,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "resolvedRef",
                                      "start_token": 1299,
                                      "end_token": 1299,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ref",
                                      "start_token": 1301,
                                      "end_token": 1301,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "collection",
                              "start_token": 1303,
                              "end_token": 1303,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "collection",
                                  "start_token": 1303,
                                  "end_token": 1303,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "createSourceFromUrl(url: Url): Source | null {\n    switch (url.protocol) {\n      case null:\n      case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };\n    }\n    return null;\n  }",
          "start_token": 1309,
          "end_token": 1419,
          "children": [
            {
              "type": "Identifier",
              "label": "createSourceFromUrl",
              "start_token": 1309,
              "end_token": 1309,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "url: Url",
              "start_token": 1311,
              "end_token": 1313,
              "children": [
                {
                  "type": "Identifier",
                  "label": "url",
                  "start_token": 1311,
                  "end_token": 1311,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Url",
                  "start_token": 1313,
                  "end_token": 1313,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Url",
                      "start_token": 1313,
                      "end_token": 1313,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "UnionType",
              "label": "Source | null",
              "start_token": 1316,
              "end_token": 1318,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Source",
                  "start_token": 1316,
                  "end_token": 1316,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Source",
                      "start_token": 1316,
                      "end_token": 1316,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "LiteralType",
                  "label": "null",
                  "start_token": 1318,
                  "end_token": 1318,
                  "children": [
                    {
                      "type": "NullKeyword",
                      "label": "null",
                      "start_token": 1318,
                      "end_token": 1318,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    switch (url.protocol) {\n      case null:\n      case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };\n    }\n    return null;\n  }",
              "start_token": 1319,
              "end_token": 1419,
              "children": [
                {
                  "type": "SwitchStatement",
                  "label": "switch (url.protocol) {\n      case null:\n      case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };\n    }",
                  "start_token": 1320,
                  "end_token": 1415,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "url.protocol",
                      "start_token": 1322,
                      "end_token": 1324,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "url",
                          "start_token": 1322,
                          "end_token": 1322,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "protocol",
                          "start_token": 1324,
                          "end_token": 1324,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "CaseBlock",
                      "label": "{\n      case null:\n      case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };\n    }",
                      "start_token": 1326,
                      "end_token": 1415,
                      "children": [
                        {
                          "type": "CaseClause",
                          "label": "case null:",
                          "start_token": 1327,
                          "end_token": 1329,
                          "children": [
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "start_token": 1328,
                              "end_token": 1328,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case 'file:':\n        return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };",
                          "start_token": 1330,
                          "end_token": 1414,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'file:'",
                              "start_token": 1331,
                              "end_token": 1331,
                              "children": []
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return (context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        };",
                              "start_token": 1333,
                              "end_token": 1414,
                              "children": [
                                {
                                  "type": "ArrowFunction",
                                  "label": "(context) => {\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        }",
                                  "start_token": 1334,
                                  "end_token": 1413,
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "context",
                                      "start_token": 1335,
                                      "end_token": 1335,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "context",
                                          "start_token": 1335,
                                          "end_token": 1335,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "start_token": 1337,
                                      "end_token": 1337,
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          // Check if context has necessary FileSystemSchematicContext path property\n          const fileDescription = context.schematic.description as { path?: string };\n          if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }\n          // Resolve all file:///a/b/c/d from the schematic's own path, and not the current\n          // path.\n          const root = normalize(resolve(fileDescription.path, url.path || ''));\n          return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));\n        }",
                                      "start_token": 1338,
                                      "end_token": 1413,
                                      "children": [
                                        {
                                          "type": "FirstStatement",
                                          "label": "const fileDescription = context.schematic.description as { path?: string };",
                                          "start_token": 1340,
                                          "end_token": 1355,
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "const fileDescription = context.schematic.description as { path?: string }",
                                              "start_token": 1340,
                                              "end_token": 1354,
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "fileDescription = context.schematic.description as { path?: string }",
                                                  "start_token": 1341,
                                                  "end_token": 1354,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileDescription",
                                                      "start_token": 1341,
                                                      "end_token": 1341,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "AsExpression",
                                                      "label": "context.schematic.description as { path?: string }",
                                                      "start_token": 1343,
                                                      "end_token": 1354,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "context.schematic.description",
                                                          "start_token": 1343,
                                                          "end_token": 1347,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "context.schematic",
                                                              "start_token": 1343,
                                                              "end_token": 1345,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "context",
                                                                  "start_token": 1343,
                                                                  "end_token": 1343,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "schematic",
                                                                  "start_token": 1345,
                                                                  "end_token": 1345,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "description",
                                                              "start_token": 1347,
                                                              "end_token": 1347,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TypeLiteral",
                                                          "label": "{ path?: string }",
                                                          "start_token": 1349,
                                                          "end_token": 1354,
                                                          "children": [
                                                            {
                                                              "type": "PropertySignature",
                                                              "label": "path?: string",
                                                              "start_token": 1350,
                                                              "end_token": 1353,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "path",
                                                                  "start_token": 1350,
                                                                  "end_token": 1350,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "QuestionToken",
                                                                  "label": "?",
                                                                  "start_token": 1351,
                                                                  "end_token": 1351,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringKeyword",
                                                                  "label": "string",
                                                                  "start_token": 1353,
                                                                  "end_token": 1353,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "label": "if (fileDescription.path === undefined) {\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }",
                                          "start_token": 1356,
                                          "end_token": 1373,
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "fileDescription.path === undefined",
                                              "start_token": 1358,
                                              "end_token": 1362,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fileDescription.path",
                                                  "start_token": 1358,
                                                  "end_token": 1360,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileDescription",
                                                      "start_token": 1358,
                                                      "end_token": 1358,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "path",
                                                      "start_token": 1360,
                                                      "end_token": 1360,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "EqualsEqualsEqualsToken",
                                                  "label": "===",
                                                  "start_token": 1361,
                                                  "end_token": 1361,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "undefined",
                                                  "start_token": 1362,
                                                  "end_token": 1362,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );\n          }",
                                              "start_token": 1364,
                                              "end_token": 1373,
                                              "children": [
                                                {
                                                  "type": "ThrowStatement",
                                                  "label": "throw new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            );",
                                                  "start_token": 1365,
                                                  "end_token": 1372,
                                                  "children": [
                                                    {
                                                      "type": "NewExpression",
                                                      "label": "new Error(\n              'Unsupported schematic context. Expected a FileSystemSchematicContext.',\n            )",
                                                      "start_token": 1366,
                                                      "end_token": 1371,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Error",
                                                          "start_token": 1367,
                                                          "end_token": 1367,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'Unsupported schematic context. Expected a FileSystemSchematicContext.'",
                                                          "start_token": 1369,
                                                          "end_token": 1369,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "const root = normalize(resolve(fileDescription.path, url.path || ''));",
                                          "start_token": 1376,
                                          "end_token": 1394,
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "const root = normalize(resolve(fileDescription.path, url.path || ''))",
                                              "start_token": 1376,
                                              "end_token": 1393,
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "root = normalize(resolve(fileDescription.path, url.path || ''))",
                                                  "start_token": 1377,
                                                  "end_token": 1393,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "root",
                                                      "start_token": 1377,
                                                      "end_token": 1377,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "normalize(resolve(fileDescription.path, url.path || ''))",
                                                      "start_token": 1379,
                                                      "end_token": 1393,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "normalize",
                                                          "start_token": 1379,
                                                          "end_token": 1379,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "resolve(fileDescription.path, url.path || '')",
                                                          "start_token": 1381,
                                                          "end_token": 1392,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "resolve",
                                                              "start_token": 1381,
                                                              "end_token": 1381,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fileDescription.path",
                                                              "start_token": 1383,
                                                              "end_token": 1385,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fileDescription",
                                                                  "start_token": 1383,
                                                                  "end_token": 1383,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "path",
                                                                  "start_token": 1385,
                                                                  "end_token": 1385,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "label": "url.path || ''",
                                                              "start_token": 1387,
                                                              "end_token": 1391,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "url.path",
                                                                  "start_token": 1387,
                                                                  "end_token": 1389,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "url",
                                                                      "start_token": 1387,
                                                                      "end_token": 1387,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "path",
                                                                      "start_token": 1389,
                                                                      "end_token": 1389,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "BarBarToken",
                                                                  "label": "||",
                                                                  "start_token": 1390,
                                                                  "end_token": 1390,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringLiteral",
                                                                  "label": "''",
                                                                  "start_token": 1391,
                                                                  "end_token": 1391,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "label": "return new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root));",
                                          "start_token": 1395,
                                          "end_token": 1412,
                                          "children": [
                                            {
                                              "type": "NewExpression",
                                              "label": "new HostCreateTree(new virtualFs.ScopedHost(new NodeJsSyncHost(), root))",
                                              "start_token": 1396,
                                              "end_token": 1411,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "HostCreateTree",
                                                  "start_token": 1397,
                                                  "end_token": 1397,
                                                  "children": []
                                                },
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new virtualFs.ScopedHost(new NodeJsSyncHost(), root)",
                                                  "start_token": 1399,
                                                  "end_token": 1410,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "virtualFs.ScopedHost",
                                                      "start_token": 1400,
                                                      "end_token": 1402,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "virtualFs",
                                                          "start_token": 1400,
                                                          "end_token": 1400,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "ScopedHost",
                                                          "start_token": 1402,
                                                          "end_token": 1402,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "NewExpression",
                                                      "label": "new NodeJsSyncHost()",
                                                      "start_token": 1404,
                                                      "end_token": 1407,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "NodeJsSyncHost",
                                                          "start_token": 1405,
                                                          "end_token": 1405,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "root",
                                                      "start_token": 1409,
                                                      "end_token": 1409,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return null;",
                  "start_token": 1416,
                  "end_token": 1418,
                  "children": [
                    {
                      "type": "NullKeyword",
                      "label": "null",
                      "start_token": 1417,
                      "end_token": 1417,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "transformOptions<OptionT extends object, ResultT extends object>(\n    schematic: FileSystemSchematicDesc,\n    options: OptionT,\n    context?: FileSystemSchematicContext,\n  ): Observable<ResultT> {\n    const transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    };\n    return observableFrom(transform()) as unknown as Observable<ResultT>;\n  }",
          "start_token": 1420,
          "end_token": 1524,
          "children": [
            {
              "type": "Identifier",
              "label": "transformOptions",
              "start_token": 1420,
              "end_token": 1420,
              "children": []
            },
            {
              "type": "TypeParameter",
              "label": "OptionT extends object",
              "start_token": 1422,
              "end_token": 1424,
              "children": [
                {
                  "type": "Identifier",
                  "label": "OptionT",
                  "start_token": 1422,
                  "end_token": 1422,
                  "children": []
                },
                {
                  "type": "ObjectKeyword",
                  "label": "object",
                  "start_token": 1424,
                  "end_token": 1424,
                  "children": []
                }
              ]
            },
            {
              "type": "TypeParameter",
              "label": "ResultT extends object",
              "start_token": 1426,
              "end_token": 1428,
              "children": [
                {
                  "type": "Identifier",
                  "label": "ResultT",
                  "start_token": 1426,
                  "end_token": 1426,
                  "children": []
                },
                {
                  "type": "ObjectKeyword",
                  "label": "object",
                  "start_token": 1428,
                  "end_token": 1428,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "schematic: FileSystemSchematicDesc",
              "start_token": 1431,
              "end_token": 1433,
              "children": [
                {
                  "type": "Identifier",
                  "label": "schematic",
                  "start_token": 1431,
                  "end_token": 1431,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicDesc",
                  "start_token": 1433,
                  "end_token": 1433,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicDesc",
                      "start_token": 1433,
                      "end_token": 1433,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "options: OptionT",
              "start_token": 1435,
              "end_token": 1437,
              "children": [
                {
                  "type": "Identifier",
                  "label": "options",
                  "start_token": 1435,
                  "end_token": 1435,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "OptionT",
                  "start_token": 1437,
                  "end_token": 1437,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "OptionT",
                      "start_token": 1437,
                      "end_token": 1437,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "context?: FileSystemSchematicContext",
              "start_token": 1439,
              "end_token": 1442,
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "start_token": 1439,
                  "end_token": 1439,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 1440,
                  "end_token": 1440,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicContext",
                  "start_token": 1442,
                  "end_token": 1442,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicContext",
                      "start_token": 1442,
                      "end_token": 1442,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Observable<ResultT>",
              "start_token": 1446,
              "end_token": 1449,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Observable",
                  "start_token": 1446,
                  "end_token": 1446,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ResultT",
                  "start_token": 1448,
                  "end_token": 1448,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ResultT",
                      "start_token": 1448,
                      "end_token": 1448,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    const transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    };\n    return observableFrom(transform()) as unknown as Observable<ResultT>;\n  }",
              "start_token": 1450,
              "end_token": 1524,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    };",
                  "start_token": 1451,
                  "end_token": 1508,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    }",
                      "start_token": 1451,
                      "end_token": 1507,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "transform = async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    }",
                          "start_token": 1452,
                          "end_token": 1507,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "transform",
                              "start_token": 1452,
                              "end_token": 1452,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "async () => {\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    }",
                              "start_token": 1454,
                              "end_token": 1507,
                              "children": [
                                {
                                  "type": "AsyncKeyword",
                                  "label": "async",
                                  "start_token": 1454,
                                  "end_token": 1454,
                                  "children": []
                                },
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 1457,
                                  "end_token": 1457,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n      let transformedOptions = options;\n      for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }\n      return transformedOptions;\n    }",
                                  "start_token": 1458,
                                  "end_token": 1507,
                                  "children": [
                                    {
                                      "type": "FirstStatement",
                                      "label": "let transformedOptions = options;",
                                      "start_token": 1459,
                                      "end_token": 1463,
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "let transformedOptions = options",
                                          "start_token": 1459,
                                          "end_token": 1462,
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "transformedOptions = options",
                                              "start_token": 1460,
                                              "end_token": 1462,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "transformedOptions",
                                                  "start_token": 1460,
                                                  "end_token": 1460,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "options",
                                                  "start_token": 1462,
                                                  "end_token": 1462,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ForOfStatement",
                                      "label": "for (const transformer of this._transforms) {\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }",
                                      "start_token": 1464,
                                      "end_token": 1503,
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "const transformer",
                                          "start_token": 1466,
                                          "end_token": 1467,
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "transformer",
                                              "start_token": 1467,
                                              "end_token": 1467,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "transformer",
                                                  "start_token": 1467,
                                                  "end_token": 1467,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this._transforms",
                                          "start_token": 1469,
                                          "end_token": 1471,
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "start_token": 1469,
                                              "end_token": 1469,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "_transforms",
                                              "start_token": 1471,
                                              "end_token": 1471,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        const transformerResult = transformer(schematic, transformedOptions, context);\n        transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);\n      }",
                                          "start_token": 1473,
                                          "end_token": 1503,
                                          "children": [
                                            {
                                              "type": "FirstStatement",
                                              "label": "const transformerResult = transformer(schematic, transformedOptions, context);",
                                              "start_token": 1474,
                                              "end_token": 1485,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const transformerResult = transformer(schematic, transformedOptions, context)",
                                                  "start_token": 1474,
                                                  "end_token": 1484,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "transformerResult = transformer(schematic, transformedOptions, context)",
                                                      "start_token": 1475,
                                                      "end_token": 1484,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "transformerResult",
                                                          "start_token": 1475,
                                                          "end_token": 1475,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "transformer(schematic, transformedOptions, context)",
                                                          "start_token": 1477,
                                                          "end_token": 1484,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "transformer",
                                                              "start_token": 1477,
                                                              "end_token": 1477,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "schematic",
                                                              "start_token": 1479,
                                                              "end_token": 1479,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "transformedOptions",
                                                              "start_token": 1481,
                                                              "end_token": 1481,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "context",
                                                              "start_token": 1483,
                                                              "end_token": 1483,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult);",
                                              "start_token": 1486,
                                              "end_token": 1502,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "transformedOptions = await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult)",
                                                  "start_token": 1486,
                                                  "end_token": 1501,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "transformedOptions",
                                                      "start_token": 1486,
                                                      "end_token": 1486,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstAssignment",
                                                      "label": "=",
                                                      "start_token": 1487,
                                                      "end_token": 1487,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "AwaitExpression",
                                                      "label": "await (isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult)",
                                                      "start_token": 1488,
                                                      "end_token": 1501,
                                                      "children": [
                                                        {
                                                          "type": "ParenthesizedExpression",
                                                          "label": "(isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult)",
                                                          "start_token": 1489,
                                                          "end_token": 1501,
                                                          "children": [
                                                            {
                                                              "type": "ConditionalExpression",
                                                              "label": "isObservable(transformerResult)\n          ? lastValueFrom(transformerResult)\n          : transformerResult",
                                                              "start_token": 1490,
                                                              "end_token": 1500,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "isObservable(transformerResult)",
                                                                  "start_token": 1490,
                                                                  "end_token": 1493,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "isObservable",
                                                                      "start_token": 1490,
                                                                      "end_token": 1490,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "transformerResult",
                                                                      "start_token": 1492,
                                                                      "end_token": 1492,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "QuestionToken",
                                                                  "label": "?",
                                                                  "start_token": 1494,
                                                                  "end_token": 1494,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "lastValueFrom(transformerResult)",
                                                                  "start_token": 1495,
                                                                  "end_token": 1498,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "lastValueFrom",
                                                                      "start_token": 1495,
                                                                      "end_token": 1495,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "transformerResult",
                                                                      "start_token": 1497,
                                                                      "end_token": 1497,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ColonToken",
                                                                  "label": ":",
                                                                  "start_token": 1499,
                                                                  "end_token": 1499,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "transformerResult",
                                                                  "start_token": 1500,
                                                                  "end_token": 1500,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "label": "return transformedOptions;",
                                      "start_token": 1504,
                                      "end_token": 1506,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "transformedOptions",
                                          "start_token": 1505,
                                          "end_token": 1505,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return observableFrom(transform()) as unknown as Observable<ResultT>;",
                  "start_token": 1509,
                  "end_token": 1523,
                  "children": [
                    {
                      "type": "AsExpression",
                      "label": "observableFrom(transform()) as unknown as Observable<ResultT>",
                      "start_token": 1510,
                      "end_token": 1522,
                      "children": [
                        {
                          "type": "AsExpression",
                          "label": "observableFrom(transform()) as unknown",
                          "start_token": 1510,
                          "end_token": 1517,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "observableFrom(transform())",
                              "start_token": 1510,
                              "end_token": 1515,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "observableFrom",
                                  "start_token": 1510,
                                  "end_token": 1510,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "transform()",
                                  "start_token": 1512,
                                  "end_token": 1514,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "transform",
                                      "start_token": 1512,
                                      "end_token": 1512,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "UnknownKeyword",
                              "label": "unknown",
                              "start_token": 1517,
                              "end_token": 1517,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "TypeReference",
                          "label": "Observable<ResultT>",
                          "start_token": 1519,
                          "end_token": 1522,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Observable",
                              "start_token": 1519,
                              "end_token": 1519,
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "ResultT",
                              "start_token": 1521,
                              "end_token": 1521,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ResultT",
                                  "start_token": 1521,
                                  "end_token": 1521,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "transformContext(context: FileSystemSchematicContext): FileSystemSchematicContext {\n    return this._contextTransforms.reduce((acc, curr) => curr(acc), context);\n  }",
          "start_token": 1525,
          "end_token": 1555,
          "children": [
            {
              "type": "Identifier",
              "label": "transformContext",
              "start_token": 1525,
              "end_token": 1525,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "context: FileSystemSchematicContext",
              "start_token": 1527,
              "end_token": 1529,
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "start_token": 1527,
                  "end_token": 1527,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicContext",
                  "start_token": 1529,
                  "end_token": 1529,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicContext",
                      "start_token": 1529,
                      "end_token": 1529,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "FileSystemSchematicContext",
              "start_token": 1532,
              "end_token": 1532,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FileSystemSchematicContext",
                  "start_token": 1532,
                  "end_token": 1532,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return this._contextTransforms.reduce((acc, curr) => curr(acc), context);\n  }",
              "start_token": 1533,
              "end_token": 1555,
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this._contextTransforms.reduce((acc, curr) => curr(acc), context);",
                  "start_token": 1534,
                  "end_token": 1554,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this._contextTransforms.reduce((acc, curr) => curr(acc), context)",
                      "start_token": 1535,
                      "end_token": 1553,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._contextTransforms.reduce",
                          "start_token": 1535,
                          "end_token": 1539,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._contextTransforms",
                              "start_token": 1535,
                              "end_token": 1537,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 1535,
                                  "end_token": 1535,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_contextTransforms",
                                  "start_token": 1537,
                                  "end_token": 1537,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "reduce",
                              "start_token": 1539,
                              "end_token": 1539,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(acc, curr) => curr(acc)",
                          "start_token": 1541,
                          "end_token": 1550,
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "acc",
                              "start_token": 1542,
                              "end_token": 1542,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "acc",
                                  "start_token": 1542,
                                  "end_token": 1542,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Parameter",
                              "label": "curr",
                              "start_token": 1544,
                              "end_token": 1544,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "curr",
                                  "start_token": 1544,
                                  "end_token": 1544,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "start_token": 1546,
                              "end_token": 1546,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "curr(acc)",
                              "start_token": 1547,
                              "end_token": 1550,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "curr",
                                  "start_token": 1547,
                                  "end_token": 1547,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "acc",
                                  "start_token": 1549,
                                  "end_token": 1549,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "context",
                          "start_token": 1552,
                          "end_token": 1552,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getSchematicRuleFactory<OptionT extends object>(\n    schematic: FileSystemSchematicDesc,\n    _collection: FileSystemCollectionDesc,\n  ): RuleFactory<OptionT> {\n    return schematic.factoryFn;\n  }",
          "start_token": 1556,
          "end_token": 1583,
          "children": [
            {
              "type": "Identifier",
              "label": "getSchematicRuleFactory",
              "start_token": 1556,
              "end_token": 1556,
              "children": []
            },
            {
              "type": "TypeParameter",
              "label": "OptionT extends object",
              "start_token": 1558,
              "end_token": 1560,
              "children": [
                {
                  "type": "Identifier",
                  "label": "OptionT",
                  "start_token": 1558,
                  "end_token": 1558,
                  "children": []
                },
                {
                  "type": "ObjectKeyword",
                  "label": "object",
                  "start_token": 1560,
                  "end_token": 1560,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "schematic: FileSystemSchematicDesc",
              "start_token": 1563,
              "end_token": 1565,
              "children": [
                {
                  "type": "Identifier",
                  "label": "schematic",
                  "start_token": 1563,
                  "end_token": 1563,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemSchematicDesc",
                  "start_token": 1565,
                  "end_token": 1565,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemSchematicDesc",
                      "start_token": 1565,
                      "end_token": 1565,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "_collection: FileSystemCollectionDesc",
              "start_token": 1567,
              "end_token": 1569,
              "children": [
                {
                  "type": "Identifier",
                  "label": "_collection",
                  "start_token": 1567,
                  "end_token": 1567,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FileSystemCollectionDesc",
                  "start_token": 1569,
                  "end_token": 1569,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FileSystemCollectionDesc",
                      "start_token": 1569,
                      "end_token": 1569,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "RuleFactory<OptionT>",
              "start_token": 1573,
              "end_token": 1576,
              "children": [
                {
                  "type": "Identifier",
                  "label": "RuleFactory",
                  "start_token": 1573,
                  "end_token": 1573,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "OptionT",
                  "start_token": 1575,
                  "end_token": 1575,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "OptionT",
                      "start_token": 1575,
                      "end_token": 1575,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return schematic.factoryFn;\n  }",
              "start_token": 1577,
              "end_token": 1583,
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return schematic.factoryFn;",
                  "start_token": 1578,
                  "end_token": 1582,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "schematic.factoryFn",
                      "start_token": 1579,
                      "end_token": 1581,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "schematic",
                          "start_token": 1579,
                          "end_token": 1579,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "factoryFn",
                          "start_token": 1581,
                          "end_token": 1581,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "registerTaskExecutor<T>(factory: TaskExecutorFactory<T>, options?: T): void {\n    this._taskFactories.set(factory.name, () => observableFrom(factory.create(options)));\n  }",
          "start_token": 1584,
          "end_token": 1628,
          "children": [
            {
              "type": "Identifier",
              "label": "registerTaskExecutor",
              "start_token": 1584,
              "end_token": 1584,
              "children": []
            },
            {
              "type": "TypeParameter",
              "label": "T",
              "start_token": 1586,
              "end_token": 1586,
              "children": [
                {
                  "type": "Identifier",
                  "label": "T",
                  "start_token": 1586,
                  "end_token": 1586,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "factory: TaskExecutorFactory<T>",
              "start_token": 1589,
              "end_token": 1594,
              "children": [
                {
                  "type": "Identifier",
                  "label": "factory",
                  "start_token": 1589,
                  "end_token": 1589,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "TaskExecutorFactory<T>",
                  "start_token": 1591,
                  "end_token": 1594,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TaskExecutorFactory",
                      "start_token": 1591,
                      "end_token": 1591,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "T",
                      "start_token": 1593,
                      "end_token": 1593,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "T",
                          "start_token": 1593,
                          "end_token": 1593,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "options?: T",
              "start_token": 1596,
              "end_token": 1599,
              "children": [
                {
                  "type": "Identifier",
                  "label": "options",
                  "start_token": 1596,
                  "end_token": 1596,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 1597,
                  "end_token": 1597,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "T",
                  "start_token": 1599,
                  "end_token": 1599,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "start_token": 1599,
                      "end_token": 1599,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "start_token": 1602,
              "end_token": 1602,
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this._taskFactories.set(factory.name, () => observableFrom(factory.create(options)));\n  }",
              "start_token": 1603,
              "end_token": 1628,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this._taskFactories.set(factory.name, () => observableFrom(factory.create(options)));",
                  "start_token": 1604,
                  "end_token": 1627,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this._taskFactories.set(factory.name, () => observableFrom(factory.create(options)))",
                      "start_token": 1604,
                      "end_token": 1626,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._taskFactories.set",
                          "start_token": 1604,
                          "end_token": 1608,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._taskFactories",
                              "start_token": 1604,
                              "end_token": 1606,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 1604,
                                  "end_token": 1604,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_taskFactories",
                                  "start_token": 1606,
                                  "end_token": 1606,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "set",
                              "start_token": 1608,
                              "end_token": 1608,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "factory.name",
                          "start_token": 1610,
                          "end_token": 1612,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "factory",
                              "start_token": 1610,
                              "end_token": 1610,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "name",
                              "start_token": 1612,
                              "end_token": 1612,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "() => observableFrom(factory.create(options))",
                          "start_token": 1614,
                          "end_token": 1625,
                          "children": [
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "start_token": 1616,
                              "end_token": 1616,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "observableFrom(factory.create(options))",
                              "start_token": 1617,
                              "end_token": 1625,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "observableFrom",
                                  "start_token": 1617,
                                  "end_token": 1617,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "factory.create(options)",
                                  "start_token": 1619,
                                  "end_token": 1624,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "factory.create",
                                      "start_token": 1619,
                                      "end_token": 1621,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "factory",
                                          "start_token": 1619,
                                          "end_token": 1619,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "create",
                                          "start_token": 1621,
                                          "end_token": 1621,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "options",
                                      "start_token": 1623,
                                      "end_token": 1623,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "createTaskExecutor(name: string): Observable<TaskExecutor> {\n    const factory = this._taskFactories.get(name);\n    if (factory) {\n      return factory();\n    }\n    return throwError(new UnregisteredTaskException(name));\n  }",
          "start_token": 1629,
          "end_token": 1674,
          "children": [
            {
              "type": "Identifier",
              "label": "createTaskExecutor",
              "start_token": 1629,
              "end_token": 1629,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 1631,
              "end_token": 1633,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 1631,
                  "end_token": 1631,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 1633,
                  "end_token": 1633,
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Observable<TaskExecutor>",
              "start_token": 1636,
              "end_token": 1639,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Observable",
                  "start_token": 1636,
                  "end_token": 1636,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "TaskExecutor",
                  "start_token": 1638,
                  "end_token": 1638,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TaskExecutor",
                      "start_token": 1638,
                      "end_token": 1638,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    const factory = this._taskFactories.get(name);\n    if (factory) {\n      return factory();\n    }\n    return throwError(new UnregisteredTaskException(name));\n  }",
              "start_token": 1640,
              "end_token": 1674,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const factory = this._taskFactories.get(name);",
                  "start_token": 1641,
                  "end_token": 1652,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const factory = this._taskFactories.get(name)",
                      "start_token": 1641,
                      "end_token": 1651,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "factory = this._taskFactories.get(name)",
                          "start_token": 1642,
                          "end_token": 1651,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "factory",
                              "start_token": 1642,
                              "end_token": 1642,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this._taskFactories.get(name)",
                              "start_token": 1644,
                              "end_token": 1651,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this._taskFactories.get",
                                  "start_token": 1644,
                                  "end_token": 1648,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this._taskFactories",
                                      "start_token": 1644,
                                      "end_token": 1646,
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "start_token": 1644,
                                          "end_token": 1644,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "_taskFactories",
                                          "start_token": 1646,
                                          "end_token": 1646,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "start_token": 1648,
                                      "end_token": 1648,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1650,
                                  "end_token": 1650,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (factory) {\n      return factory();\n    }",
                  "start_token": 1653,
                  "end_token": 1663,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "factory",
                      "start_token": 1655,
                      "end_token": 1655,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return factory();\n    }",
                      "start_token": 1657,
                      "end_token": 1663,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return factory();",
                          "start_token": 1658,
                          "end_token": 1662,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "factory()",
                              "start_token": 1659,
                              "end_token": 1661,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "factory",
                                  "start_token": 1659,
                                  "end_token": 1659,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return throwError(new UnregisteredTaskException(name));",
                  "start_token": 1664,
                  "end_token": 1673,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "throwError(new UnregisteredTaskException(name))",
                      "start_token": 1665,
                      "end_token": 1672,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "throwError",
                          "start_token": 1665,
                          "end_token": 1665,
                          "children": []
                        },
                        {
                          "type": "NewExpression",
                          "label": "new UnregisteredTaskException(name)",
                          "start_token": 1667,
                          "end_token": 1671,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "UnregisteredTaskException",
                              "start_token": 1668,
                              "end_token": 1668,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "name",
                              "start_token": 1670,
                              "end_token": 1670,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "hasTaskExecutor(name: string): boolean {\n    return this._taskFactories.has(name);\n  }",
          "start_token": 1675,
          "end_token": 1694,
          "children": [
            {
              "type": "Identifier",
              "label": "hasTaskExecutor",
              "start_token": 1675,
              "end_token": 1675,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 1677,
              "end_token": 1679,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 1677,
                  "end_token": 1677,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 1679,
                  "end_token": 1679,
                  "children": []
                }
              ]
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "start_token": 1682,
              "end_token": 1682,
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    return this._taskFactories.has(name);\n  }",
              "start_token": 1683,
              "end_token": 1694,
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this._taskFactories.has(name);",
                  "start_token": 1684,
                  "end_token": 1693,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this._taskFactories.has(name)",
                      "start_token": 1685,
                      "end_token": 1692,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._taskFactories.has",
                          "start_token": 1685,
                          "end_token": 1689,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._taskFactories",
                              "start_token": 1685,
                              "end_token": 1687,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 1685,
                                  "end_token": 1685,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_taskFactories",
                                  "start_token": 1687,
                                  "end_token": 1687,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "has",
                              "start_token": 1689,
                              "end_token": 1689,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "start_token": 1691,
                          "end_token": 1691,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}