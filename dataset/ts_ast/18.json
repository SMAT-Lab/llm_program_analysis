{
  "type": "SourceFile",
  "label": "import { Log } from '../utils/Log';\nimport { ItemDataSource } from '../common/ItemDataSource';\nimport { MenuContext } from './MenuContext';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\nimport { ProcessMenuOperation } from './ProcessMenuOperation';\nimport { UserFileDataItem } from '../base/UserFileDataItem';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { AlbumDataImpl } from '../common/AlbumDataImpl';\n\nconst TAG = 'BatchRemoveMenuOperation';\n\nexport class BatchRemoveMenuOperation extends ProcessMenuOperation {\n  private albumDataImpl: AlbumDataImpl = new AlbumDataImpl();\n\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    Log.info(TAG, 'remove doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let resource: Resource = this.getRemoveMessageResource(dataSource);\n    let removeResource: Resource = $r('app.string.dialog_remove');\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [resource, removeResource, this.confirmCallback, this.cancelCallback]);\n  }\n\n  getResourceFromGrid(dataSource: ItemDataSource): Resource {\n    if (dataSource != null && dataSource.isSelect()) {\n      return $r('app.string.remove_all_files_tips');\n    } else if (this.count === 1) {\n      return $r('app.string.remove_single_file_tips');\n    } else {\n      return $r('app.string.remove_files_tips', this.count);\n    }\n  }\n\n  getRemoveMessageResource(dataSource: ItemDataSource): Resource {\n    let resource: Resource;\n    resource = this.getResourceFromGrid(dataSource);\n    return resource;\n  }\n\n  confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  protected confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'Batch remove confirm');\n    AppStorage.SetOrCreate<number>('isRemove', 1);\n\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onRemoveStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) {\n      onOperationStart();\n    }\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_remove'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }\n\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as UserFileDataItem;\n    if (item != null) {\n      if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }\n    }\n  }\n\n  cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }\n\n  protected cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'Batch remove cancel');\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ItemDataSource } from '../common/ItemDataSource';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ItemDataSource }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ItemDataSource }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ItemDataSource",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ItemDataSource",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ItemDataSource'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuContext } from './MenuContext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuContext }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuContext }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuContext'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { BroadcastConstants } from '../constants/BroadcastConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ BroadcastConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BroadcastConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BroadcastConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BroadcastConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/BroadcastConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ProcessMenuOperation } from './ProcessMenuOperation';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ProcessMenuOperation }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ProcessMenuOperation }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ProcessMenuOperation",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ProcessMenuOperation",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ProcessMenuOperation'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { UserFileDataItem } from '../base/UserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ UserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ UserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { AlbumDataImpl } from '../common/AlbumDataImpl';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ AlbumDataImpl }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ AlbumDataImpl }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "AlbumDataImpl",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "AlbumDataImpl",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/AlbumDataImpl'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'BatchRemoveMenuOperation';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'BatchRemoveMenuOperation'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'BatchRemoveMenuOperation'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'BatchRemoveMenuOperation'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class BatchRemoveMenuOperation extends ProcessMenuOperation {\n  private albumDataImpl: AlbumDataImpl = new AlbumDataImpl();\n\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    Log.info(TAG, 'remove doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let resource: Resource = this.getRemoveMessageResource(dataSource);\n    let removeResource: Resource = $r('app.string.dialog_remove');\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [resource, removeResource, this.confirmCallback, this.cancelCallback]);\n  }\n\n  getResourceFromGrid(dataSource: ItemDataSource): Resource {\n    if (dataSource != null && dataSource.isSelect()) {\n      return $r('app.string.remove_all_files_tips');\n    } else if (this.count === 1) {\n      return $r('app.string.remove_single_file_tips');\n    } else {\n      return $r('app.string.remove_files_tips', this.count);\n    }\n  }\n\n  getRemoveMessageResource(dataSource: ItemDataSource): Resource {\n    let resource: Resource;\n    resource = this.getResourceFromGrid(dataSource);\n    return resource;\n  }\n\n  confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  protected confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'Batch remove confirm');\n    AppStorage.SetOrCreate<number>('isRemove', 1);\n\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onRemoveStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) {\n      onOperationStart();\n    }\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_remove'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }\n\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as UserFileDataItem;\n    if (item != null) {\n      if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }\n    }\n  }\n\n  cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }\n\n  protected cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'Batch remove cancel');\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "BatchRemoveMenuOperation",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends ProcessMenuOperation",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "ProcessMenuOperation",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ProcessMenuOperation",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private albumDataImpl: AlbumDataImpl = new AlbumDataImpl();",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "albumDataImpl",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "AlbumDataImpl",
              "children": [
                {
                  "type": "Identifier",
                  "label": "AlbumDataImpl",
                  "children": []
                }
              ]
            },
            {
              "type": "NewExpression",
              "label": "new AlbumDataImpl()",
              "children": [
                {
                  "type": "Identifier",
                  "label": "AlbumDataImpl",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "menuContext: MenuContext",
              "children": [
                {
                  "type": "Identifier",
                  "label": "menuContext",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(menuContext);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(menuContext);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(menuContext)",
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "menuContext",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "doAction(): void {\n    Log.info(TAG, 'remove doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let resource: Resource = this.getRemoveMessageResource(dataSource);\n    let removeResource: Resource = $r('app.string.dialog_remove');\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [resource, removeResource, this.confirmCallback, this.cancelCallback]);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "doAction",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'remove doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let resource: Resource = this.getRemoveMessageResource(dataSource);\n    let removeResource: Resource = $r('app.string.dialog_remove');\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [resource, removeResource, this.confirmCallback, this.cancelCallback]);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'remove doAction');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'remove doAction')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'remove doAction'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.menuContext == null",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "menuContext",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, 'menuContext is null, return');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, 'menuContext is null, return')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'menuContext is null, return'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let dataSource: ItemDataSource = this.menuContext.dataSource;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let dataSource: ItemDataSource = this.menuContext.dataSource",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "dataSource: ItemDataSource = this.menuContext.dataSource",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "dataSource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "ItemDataSource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ItemDataSource",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.dataSource",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "dataSource",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "dataSource == null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dataSource",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.count = this.menuContext.items.length;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.count = this.menuContext.items.length;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.count = this.menuContext.items.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.count",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext.items.length",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.menuContext.items",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.menuContext",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "menuContext",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "items",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.count = dataSource.getSelectedCount();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.count = dataSource.getSelectedCount();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.count = dataSource.getSelectedCount()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.count",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "dataSource.getSelectedCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "dataSource.getSelectedCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "dataSource",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getSelectedCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.count <= 0",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.count",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "count",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, 'count <= 0, return');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, 'count <= 0, return')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'count <= 0, return'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.confirmCallback = (): void => this.confirmCallbackBindImpl();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.confirmCallback = (): void => this.confirmCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.confirmCallback",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "confirmCallback",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(): void => this.confirmCallbackBindImpl()",
                          "children": [
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.confirmCallbackBindImpl()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.confirmCallbackBindImpl",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "confirmCallbackBindImpl",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.cancelCallback = (): void => this.cancelCallbackBindImpl();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.cancelCallback = (): void => this.cancelCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.cancelCallback",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "cancelCallback",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(): void => this.cancelCallbackBindImpl()",
                          "children": [
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.cancelCallbackBindImpl()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.cancelCallbackBindImpl",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "cancelCallbackBindImpl",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let resource: Resource = this.getRemoveMessageResource(dataSource);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let resource: Resource = this.getRemoveMessageResource(dataSource)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "resource: Resource = this.getRemoveMessageResource(dataSource)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "resource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Resource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Resource",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.getRemoveMessageResource(dataSource)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getRemoveMessageResource",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getRemoveMessageResource",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "dataSource",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let removeResource: Resource = $r('app.string.dialog_remove');",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let removeResource: Resource = $r('app.string.dialog_remove')",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "removeResource: Resource = $r('app.string.dialog_remove')",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "removeResource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Resource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Resource",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "$r('app.string.dialog_remove')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.string.dialog_remove'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [resource, removeResource, this.confirmCallback, this.cancelCallback]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [resource, removeResource, this.confirmCallback, this.cancelCallback])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.broadCast",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "BroadcastConstants.SHOW_DELETE_DIALOG",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "BroadcastConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "SHOW_DELETE_DIALOG",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[resource, removeResource, this.confirmCallback, this.cancelCallback]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "resource",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "removeResource",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.confirmCallback",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "confirmCallback",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.cancelCallback",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "cancelCallback",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getResourceFromGrid(dataSource: ItemDataSource): Resource {\n    if (dataSource != null && dataSource.isSelect()) {\n      return $r('app.string.remove_all_files_tips');\n    } else if (this.count === 1) {\n      return $r('app.string.remove_single_file_tips');\n    } else {\n      return $r('app.string.remove_files_tips', this.count);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getResourceFromGrid",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "dataSource: ItemDataSource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "dataSource",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ItemDataSource",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ItemDataSource",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Resource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Resource",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (dataSource != null && dataSource.isSelect()) {\n      return $r('app.string.remove_all_files_tips');\n    } else if (this.count === 1) {\n      return $r('app.string.remove_single_file_tips');\n    } else {\n      return $r('app.string.remove_files_tips', this.count);\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (dataSource != null && dataSource.isSelect()) {\n      return $r('app.string.remove_all_files_tips');\n    } else if (this.count === 1) {\n      return $r('app.string.remove_single_file_tips');\n    } else {\n      return $r('app.string.remove_files_tips', this.count);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "dataSource != null && dataSource.isSelect()",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "dataSource != null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "dataSource",
                              "children": []
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "dataSource.isSelect()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "dataSource.isSelect",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "dataSource",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelect",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return $r('app.string.remove_all_files_tips');\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return $r('app.string.remove_all_files_tips');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "$r('app.string.remove_all_files_tips')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.string.remove_all_files_tips'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (this.count === 1) {\n      return $r('app.string.remove_single_file_tips');\n    } else {\n      return $r('app.string.remove_files_tips', this.count);\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.count === 1",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.count",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      return $r('app.string.remove_single_file_tips');\n    }",
                          "children": [
                            {
                              "type": "ReturnStatement",
                              "label": "return $r('app.string.remove_single_file_tips');",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "$r('app.string.remove_single_file_tips')",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "$r",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'app.string.remove_single_file_tips'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      return $r('app.string.remove_files_tips', this.count);\n    }",
                          "children": [
                            {
                              "type": "ReturnStatement",
                              "label": "return $r('app.string.remove_files_tips', this.count);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "$r('app.string.remove_files_tips', this.count)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "$r",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'app.string.remove_files_tips'",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.count",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "count",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getRemoveMessageResource(dataSource: ItemDataSource): Resource {\n    let resource: Resource;\n    resource = this.getResourceFromGrid(dataSource);\n    return resource;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getRemoveMessageResource",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "dataSource: ItemDataSource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "dataSource",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ItemDataSource",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ItemDataSource",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Resource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Resource",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let resource: Resource;\n    resource = this.getResourceFromGrid(dataSource);\n    return resource;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let resource: Resource;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let resource: Resource",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "resource: Resource",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "resource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Resource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Resource",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "resource = this.getResourceFromGrid(dataSource);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "resource = this.getResourceFromGrid(dataSource)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "resource",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "this.getResourceFromGrid(dataSource)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.getResourceFromGrid",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getResourceFromGrid",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "dataSource",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return resource;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "resource",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "confirmCallback",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.confirmCallbackBindImpl();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.confirmCallbackBindImpl();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.confirmCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.confirmCallbackBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "confirmCallbackBindImpl",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'Batch remove confirm');\n    AppStorage.SetOrCreate<number>('isRemove', 1);\n\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onRemoveStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) {\n      onOperationStart();\n    }\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_remove'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }",
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "confirmCallbackBindImpl",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'Batch remove confirm');\n    AppStorage.SetOrCreate<number>('isRemove', 1);\n\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onRemoveStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) {\n      onOperationStart();\n    }\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_remove'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'Batch remove confirm');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'Batch remove confirm')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Batch remove confirm'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "AppStorage.SetOrCreate<number>('isRemove', 1);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "AppStorage.SetOrCreate<number>('isRemove', 1)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "AppStorage.SetOrCreate",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "AppStorage",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "SetOrCreate",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'isRemove'",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.onOperationEnd = this.menuContext.onOperationEnd;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.onOperationEnd = this.menuContext.onOperationEnd",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onOperationEnd",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onOperationEnd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.onOperationEnd",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "menuContext",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "onOperationEnd",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let onOperationStart: Function = this.menuContext.onOperationStart;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let onOperationStart: Function = this.menuContext.onOperationStart",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "onOperationStart: Function = this.menuContext.onOperationStart",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "onOperationStart",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Function",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Function",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.onOperationStart",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "onOperationStart",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (onOperationStart != null) {\n      onOperationStart();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "onOperationStart != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "onOperationStart",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      onOperationStart();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "onOperationStart();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "onOperationStart()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "onOperationStart",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_remove'), this.count]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_remove'), this.count])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.broadCast",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "BroadcastConstants.DELETE_PROGRESS_DIALOG",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "BroadcastConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "DELETE_PROGRESS_DIALOG",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[$r('app.string.action_remove'), this.count]",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "$r('app.string.action_remove')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.string.action_remove'",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.count",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let dataSource: ItemDataSource = this.menuContext.dataSource;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let dataSource: ItemDataSource = this.menuContext.dataSource",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "dataSource: ItemDataSource = this.menuContext.dataSource",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "dataSource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "ItemDataSource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ItemDataSource",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.dataSource",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "dataSource",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "dataSource == null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dataSource",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.items = this.menuContext.items;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.items = this.menuContext.items;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.items = this.menuContext.items",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.items",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext.items",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.menuContext",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "menuContext",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.items = dataSource.getSelectedItems();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.items = dataSource.getSelectedItems();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.items = dataSource.getSelectedItems()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.items",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "dataSource.getSelectedItems()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "dataSource.getSelectedItems",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "dataSource",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getSelectedItems",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.processOperation();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.processOperation()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.processOperation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "processOperation",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as UserFileDataItem;\n    if (item != null) {\n      if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "requestOneBatchOperation",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let item = this.items[this.currentBatch] as UserFileDataItem;\n    if (item != null) {\n      if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let item = this.items[this.currentBatch] as UserFileDataItem;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let item = this.items[this.currentBatch] as UserFileDataItem",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "item = this.items[this.currentBatch] as UserFileDataItem",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "item",
                              "children": []
                            },
                            {
                              "type": "AsExpression",
                              "label": "this.items[this.currentBatch] as UserFileDataItem",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "this.items[this.currentBatch]",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.items",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "items",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.currentBatch",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "currentBatch",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (item != null) {\n      if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "item != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "item",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if(this.menuContext.albumId === MediaConstants.ALBUM_ID_USER){\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.menuContext.albumId === MediaConstants.ALBUM_ID_USER",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext.albumId",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.menuContext",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "menuContext",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumId",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.ALBUM_ID_USER",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ALBUM_ID_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);\n        this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.error(TAG,'Remove from user album:'+this.menuContext.albumInfo.uri)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.error",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "error",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'Remove from user album:'+this.menuContext.albumInfo.uri",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'Remove from user album:'",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.menuContext.albumInfo.uri",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.menuContext.albumInfo",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.menuContext",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "menuContext",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumInfo",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then<void, void>((): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        })",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri).then",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.albumDataImpl.removeFileFromAlbum(this.menuContext.albumInfo.uri,item.uri)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.albumDataImpl.removeFileFromAlbum",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.albumDataImpl",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumDataImpl",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "removeFileFromAlbum",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.menuContext.albumInfo.uri",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.menuContext.albumInfo",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.menuContext",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "menuContext",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumInfo",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "item.uri",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "then",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "VoidKeyword",
                                          "label": "void",
                                          "children": []
                                        },
                                        {
                                          "type": "VoidKeyword",
                                          "label": "void",
                                          "children": []
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "(): void => {\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        }",
                                          "children": [
                                            {
                                              "type": "VoidKeyword",
                                              "label": "void",
                                              "children": []
                                            },
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n          this.currentBatch++;\n          this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n          this.cyclicOperation();\n        }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "this.currentBatch++;",
                                                  "children": [
                                                    {
                                                      "type": "PostfixUnaryExpression",
                                                      "label": "this.currentBatch++",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.currentBatch",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "currentBatch",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch])",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.menuContext.broadCast.emit",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.menuContext.broadCast",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "this.menuContext",
                                                                  "children": [
                                                                    {
                                                                      "type": "ThisKeyword",
                                                                      "label": "this",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "menuContext",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "broadCast",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "emit",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "BroadcastConstants.UPDATE_PROGRESS",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "BroadcastConstants",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "UPDATE_PROGRESS",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "ArrayLiteralExpression",
                                                          "label": "[this.getExpectProgress(), this.currentBatch]",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "this.getExpectProgress()",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "this.getExpectProgress",
                                                                  "children": [
                                                                    {
                                                                      "type": "ThisKeyword",
                                                                      "label": "this",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "getExpectProgress",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.currentBatch",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "currentBatch",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "this.cyclicOperation();",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this.cyclicOperation()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.cyclicOperation",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "cyclicOperation",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "cancelCallback",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.cancelCallbackBindImpl();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.cancelCallbackBindImpl();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.cancelCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.cancelCallbackBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "cancelCallbackBindImpl",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'Batch remove cancel');\n  }",
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "cancelCallbackBindImpl",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'Batch remove cancel');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'Batch remove cancel');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'Batch remove cancel')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Batch remove cancel'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}