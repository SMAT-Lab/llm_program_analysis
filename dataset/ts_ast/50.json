{
  "type": "SourceFile",
  "label": "import resourceManager from '@ohos.resourceManager';\nimport { Log } from './Log';\nimport { GlobalContext } from '../common/GlobalContext';\n\nconst TAG = 'ResourceUtils';\n\nexport async function getResourceString(resource: Resource): Promise<string> {\n  try {\n    Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource));\n    let context = GlobalContext.getContext().getObject('appContext');\n    let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context);\n    if (mgr != null || mgr != undefined) {\n      return await mgr.getStringValue(resource.id);\n    } else {\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }\n  } catch (error) {\n    Log.error(TAG, 'getResourceString error: ' + error);\n    return null;\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import resourceManager from '@ohos.resourceManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "resourceManager",
          "children": [
            {
              "type": "Identifier",
              "label": "resourceManager",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.resourceManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from './Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { GlobalContext } from '../common/GlobalContext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ GlobalContext }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ GlobalContext }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "GlobalContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "GlobalContext",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/GlobalContext'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'ResourceUtils';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'ResourceUtils'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'ResourceUtils'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'ResourceUtils'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export async function getResourceString(resource: Resource): Promise<string> {\n  try {\n    Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource));\n    let context = GlobalContext.getContext().getObject('appContext');\n    let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context);\n    if (mgr != null || mgr != undefined) {\n      return await mgr.getStringValue(resource.id);\n    } else {\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }\n  } catch (error) {\n    Log.error(TAG, 'getResourceString error: ' + error);\n    return null;\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "AsyncKeyword",
          "label": "async",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "getResourceString",
          "children": []
        },
        {
          "type": "Parameter",
          "label": "resource: Resource",
          "children": [
            {
              "type": "Identifier",
              "label": "resource",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Resource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Resource",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "TypeReference",
          "label": "Promise<string>",
          "children": [
            {
              "type": "Identifier",
              "label": "Promise",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  try {\n    Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource));\n    let context = GlobalContext.getContext().getObject('appContext');\n    let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context);\n    if (mgr != null || mgr != undefined) {\n      return await mgr.getStringValue(resource.id);\n    } else {\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }\n  } catch (error) {\n    Log.error(TAG, 'getResourceString error: ' + error);\n    return null;\n  }\n}",
          "children": [
            {
              "type": "TryStatement",
              "label": "try {\n    Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource));\n    let context = GlobalContext.getContext().getObject('appContext');\n    let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context);\n    if (mgr != null || mgr != undefined) {\n      return await mgr.getStringValue(resource.id);\n    } else {\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }\n  } catch (error) {\n    Log.error(TAG, 'getResourceString error: ' + error);\n    return null;\n  }",
              "children": [
                {
                  "type": "Block",
                  "label": "{\n    Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource));\n    let context = GlobalContext.getContext().getObject('appContext');\n    let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context);\n    if (mgr != null || mgr != undefined) {\n      return await mgr.getStringValue(resource.id);\n    } else {\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }\n  }",
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource));",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Log.debug(TAG, 'getResourceString: ' + JSON.stringify(resource))",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Log.debug",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Log",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "debug",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "TAG",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "'getResourceString: ' + JSON.stringify(resource)",
                              "children": [
                                {
                                  "type": "StringLiteral",
                                  "label": "'getResourceString: '",
                                  "children": []
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(resource)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "resource",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "let context = GlobalContext.getContext().getObject('appContext');",
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "let context = GlobalContext.getContext().getObject('appContext')",
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "context = GlobalContext.getContext().getObject('appContext')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "context",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "GlobalContext.getContext().getObject('appContext')",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "GlobalContext.getContext().getObject",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "GlobalContext.getContext()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "GlobalContext.getContext",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "GlobalContext",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getContext",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getObject",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'appContext'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context);",
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "let mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context)",
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "mgr: resourceManager.ResourceManager = await resourceManager.getResourceManager(context)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mgr",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "resourceManager.ResourceManager",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "resourceManager.ResourceManager",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "resourceManager",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ResourceManager",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await resourceManager.getResourceManager(context)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "resourceManager.getResourceManager(context)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "resourceManager.getResourceManager",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "resourceManager",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getResourceManager",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "context",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (mgr != null || mgr != undefined) {\n      return await mgr.getStringValue(resource.id);\n    } else {\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "mgr != null || mgr != undefined",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "mgr != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mgr",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BarBarToken",
                              "label": "||",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "mgr != undefined",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mgr",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "undefined",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      return await mgr.getStringValue(resource.id);\n    }",
                          "children": [
                            {
                              "type": "ReturnStatement",
                              "label": "return await mgr.getStringValue(resource.id);",
                              "children": [
                                {
                                  "type": "AwaitExpression",
                                  "label": "await mgr.getStringValue(resource.id)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "mgr.getStringValue(resource.id)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "mgr.getStringValue",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "mgr",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getStringValue",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "resource.id",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "resource",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.warn(TAG, 'getResourceManager instance is none');\n      return null;\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.warn(TAG, 'getResourceManager instance is none');",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.warn(TAG, 'getResourceManager instance is none')",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.warn",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "warn",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getResourceManager instance is none'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return null;",
                              "children": [
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "CatchClause",
                  "label": "catch (error) {\n    Log.error(TAG, 'getResourceString error: ' + error);\n    return null;\n  }",
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "error",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "error",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n    Log.error(TAG, 'getResourceString error: ' + error);\n    return null;\n  }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.error(TAG, 'getResourceString error: ' + error);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.error(TAG, 'getResourceString error: ' + error)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.error",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "error",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getResourceString error: ' + error",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getResourceString error: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "error",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return null;",
                          "children": [
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}