{
  "type": "SourceFile",
  "label": "import { Log } from '../utils/Log';\nimport { AlbumDataItem } from './AlbumDataItem';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { userFileModel } from '../base/UserFileModel';\nimport { getAlbumDisplayName } from '../base/UserFileDataHelper';\nimport photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport dataSharePredicates from '@ohos.data.dataSharePredicates';\n\nconst TAG = 'AlbumDataImpl';\n\nexport class AlbumDataImpl {\n  private blackList: string[] = [];\n  private selectType: number = MediaConstants.SELECT_TYPE_ALL;\n  private deviceId: string = '';\n\n  setBlackList(blackList: string[]): void {\n    this.blackList = blackList;\n  }\n\n  setSelectType(selectType: number): void {\n    this.selectType = selectType;\n  }\n\n  setDeviceId(deviceId: string): void {\n    this.deviceId = deviceId;\n  }\n\n  async reloadAlbumItemData(): Promise<AlbumDataItem[]> {\n    Log.info(TAG, 'reloadAlbumItemData');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems);\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems);\n    return albumDataItems;\n  }\n\n  private async getAlbumItem(id: string, albumDataItems: AlbumDataItem[]): Promise<void> {\n    Log.info(TAG, 'getAlbumItem: ' + id);\n    if (this.blackList.indexOf(id) >= 0) {\n      Log.debug(TAG, 'no need as in black list');\n      return;\n    }\n    if (this.deviceId.length > 0 && (id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)) {\n      Log.info(TAG, 'no need');\n      return;\n    }\n    let albumType = MediaConstants.ALBUM_TYPE_SYSTEM;\n    let albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n    switch (id) {\n      case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;\n      case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;\n      case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;\n      case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;\n      case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;\n      case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;\n      case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;\n      case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;\n      default:\n        break;\n    }\n    await this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems);\n  }\n\n  private async getAlbumItemByUserFileMgr(id: string, type: photoAccessHelper.AlbumType, subType: photoAccessHelper.AlbumSubtype, albumDataItems: AlbumDataItem[]): Promise<void> {\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAlbumItemByUserFileMgr');\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }\n\n  async getUserAlbumItemByUri(uri: string): Promise<photoAccessHelper.Album> {\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }\n\n  async removeFileFromAlbum(albumUri: string, uri: string): Promise<boolean> {\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    let fileAsset = await userFileModel.getMediaItemByUri(uri);\n    if (album != null && fileAsset != null) {\n      try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }\n    }\n    return false;\n  }\n\n  async getAllPhotoAlbum(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let photoFetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getAllPhotoAlbum count: ' + count);\n      let displayName = '';\n      let id = MediaConstants.ALBUM_ID_ALL;\n      displayName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }\n\n  async getMovingPhotoAbstractAlbum(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);\n      let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;\n      let albumName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }\n\n  async reloadAlbumListItemData(): Promise<AlbumDataItem[]> {\n    Log.info(TAG, 'reloadAlbumListItemData start');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getCommonListAlbumItem(albumDataItems);\n    return albumDataItems;\n  }\n\n  private async getCommonListAlbumItem(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    let fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions);\n    await this.getAlbumDataItem(albumDataItems, albums);\n  }\n\n  private async getAlbumDataItem(albumDataItems: AlbumDataItem[], albums: photoAccessHelper.Album[]): Promise<void> {\n    for (let i = 0;i < albums.length; i++) {\n      let album: photoAccessHelper.Album = albums[i];\n      if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      let fetchFileResult = await album.getAssets(fetchOptions);\n      try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }\n    }\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { AlbumDataItem } from './AlbumDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ AlbumDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ AlbumDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "AlbumDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "AlbumDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./AlbumDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { userFileModel } from '../base/UserFileModel';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ userFileModel }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ userFileModel }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "userFileModel",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFileModel",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileModel'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { getAlbumDisplayName } from '../base/UserFileDataHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ getAlbumDisplayName }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ getAlbumDisplayName }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "getAlbumDisplayName",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "getAlbumDisplayName",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "photoAccessHelper",
          "children": [
            {
              "type": "Identifier",
              "label": "photoAccessHelper",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.photoAccessHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import dataSharePredicates from '@ohos.data.dataSharePredicates';",
      "children": [
        {
          "type": "ImportClause",
          "label": "dataSharePredicates",
          "children": [
            {
              "type": "Identifier",
              "label": "dataSharePredicates",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.data.dataSharePredicates'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'AlbumDataImpl';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'AlbumDataImpl'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'AlbumDataImpl'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'AlbumDataImpl'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class AlbumDataImpl {\n  private blackList: string[] = [];\n  private selectType: number = MediaConstants.SELECT_TYPE_ALL;\n  private deviceId: string = '';\n\n  setBlackList(blackList: string[]): void {\n    this.blackList = blackList;\n  }\n\n  setSelectType(selectType: number): void {\n    this.selectType = selectType;\n  }\n\n  setDeviceId(deviceId: string): void {\n    this.deviceId = deviceId;\n  }\n\n  async reloadAlbumItemData(): Promise<AlbumDataItem[]> {\n    Log.info(TAG, 'reloadAlbumItemData');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems);\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems);\n    return albumDataItems;\n  }\n\n  private async getAlbumItem(id: string, albumDataItems: AlbumDataItem[]): Promise<void> {\n    Log.info(TAG, 'getAlbumItem: ' + id);\n    if (this.blackList.indexOf(id) >= 0) {\n      Log.debug(TAG, 'no need as in black list');\n      return;\n    }\n    if (this.deviceId.length > 0 && (id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)) {\n      Log.info(TAG, 'no need');\n      return;\n    }\n    let albumType = MediaConstants.ALBUM_TYPE_SYSTEM;\n    let albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n    switch (id) {\n      case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;\n      case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;\n      case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;\n      case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;\n      case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;\n      case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;\n      case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;\n      case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;\n      default:\n        break;\n    }\n    await this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems);\n  }\n\n  private async getAlbumItemByUserFileMgr(id: string, type: photoAccessHelper.AlbumType, subType: photoAccessHelper.AlbumSubtype, albumDataItems: AlbumDataItem[]): Promise<void> {\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAlbumItemByUserFileMgr');\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }\n\n  async getUserAlbumItemByUri(uri: string): Promise<photoAccessHelper.Album> {\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }\n\n  async removeFileFromAlbum(albumUri: string, uri: string): Promise<boolean> {\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    let fileAsset = await userFileModel.getMediaItemByUri(uri);\n    if (album != null && fileAsset != null) {\n      try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }\n    }\n    return false;\n  }\n\n  async getAllPhotoAlbum(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let photoFetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getAllPhotoAlbum count: ' + count);\n      let displayName = '';\n      let id = MediaConstants.ALBUM_ID_ALL;\n      displayName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }\n\n  async getMovingPhotoAbstractAlbum(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);\n      let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;\n      let albumName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }\n\n  async reloadAlbumListItemData(): Promise<AlbumDataItem[]> {\n    Log.info(TAG, 'reloadAlbumListItemData start');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getCommonListAlbumItem(albumDataItems);\n    return albumDataItems;\n  }\n\n  private async getCommonListAlbumItem(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    let fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions);\n    await this.getAlbumDataItem(albumDataItems, albums);\n  }\n\n  private async getAlbumDataItem(albumDataItems: AlbumDataItem[], albums: photoAccessHelper.Album[]): Promise<void> {\n    for (let i = 0;i < albums.length; i++) {\n      let album: photoAccessHelper.Album = albums[i];\n      if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      let fetchFileResult = await album.getAssets(fetchOptions);\n      try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }\n    }\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "AlbumDataImpl",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "private blackList: string[] = [];",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "blackList",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "string[]",
              "children": [
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private selectType: number = MediaConstants.SELECT_TYPE_ALL;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "selectType",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PropertyAccessExpression",
              "label": "MediaConstants.SELECT_TYPE_ALL",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MediaConstants",
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "SELECT_TYPE_ALL",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private deviceId: string = '';",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "deviceId",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setBlackList(blackList: string[]): void {\n    this.blackList = blackList;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setBlackList",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "blackList: string[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "blackList",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "string[]",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.blackList = blackList;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.blackList = blackList;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.blackList = blackList",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.blackList",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "blackList",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "blackList",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setSelectType(selectType: number): void {\n    this.selectType = selectType;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setSelectType",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "selectType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.selectType = selectType;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.selectType = selectType;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.selectType = selectType",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.selectType",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "selectType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "selectType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setDeviceId(deviceId: string): void {\n    this.deviceId = deviceId;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setDeviceId",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "deviceId: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "deviceId",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.deviceId = deviceId;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.deviceId = deviceId;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.deviceId = deviceId",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.deviceId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "deviceId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "deviceId",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async reloadAlbumItemData(): Promise<AlbumDataItem[]> {\n    Log.info(TAG, 'reloadAlbumItemData');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems);\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems);\n    return albumDataItems;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "reloadAlbumItemData",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<AlbumDataItem[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'reloadAlbumItemData');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems);\n    await this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems);\n    return albumDataItems;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'reloadAlbumItemData');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'reloadAlbumItemData')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'reloadAlbumItemData'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albumDataItems: AlbumDataItem[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumDataItems: AlbumDataItem[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumDataItems: AlbumDataItem[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "AlbumDataItem[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "AlbumDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "AlbumDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST.length",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_DEFAULT_SORT_LIST",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.getAlbumItem",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getAlbumItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST[i]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "MediaConstants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "ALBUM_DEFAULT_SORT_LIST",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumDataItems",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.getAlbumItem(MediaConstants.ALBUM_ID_USER, albumDataItems)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.getAlbumItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getAlbumItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_USER",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_USER",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.getAlbumItem(MediaConstants.ALBUM_ID_RECYCLE, albumDataItems)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.getAlbumItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getAlbumItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_RECYCLE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_RECYCLE",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return albumDataItems;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "albumDataItems",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private async getAlbumItem(id: string, albumDataItems: AlbumDataItem[]): Promise<void> {\n    Log.info(TAG, 'getAlbumItem: ' + id);\n    if (this.blackList.indexOf(id) >= 0) {\n      Log.debug(TAG, 'no need as in black list');\n      return;\n    }\n    if (this.deviceId.length > 0 && (id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)) {\n      Log.info(TAG, 'no need');\n      return;\n    }\n    let albumType = MediaConstants.ALBUM_TYPE_SYSTEM;\n    let albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n    switch (id) {\n      case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;\n      case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;\n      case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;\n      case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;\n      case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;\n      case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;\n      case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;\n      case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;\n      default:\n        break;\n    }\n    await this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAlbumItem",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albumDataItems: AlbumDataItem[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumDataItems",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getAlbumItem: ' + id);\n    if (this.blackList.indexOf(id) >= 0) {\n      Log.debug(TAG, 'no need as in black list');\n      return;\n    }\n    if (this.deviceId.length > 0 && (id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)) {\n      Log.info(TAG, 'no need');\n      return;\n    }\n    let albumType = MediaConstants.ALBUM_TYPE_SYSTEM;\n    let albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n    switch (id) {\n      case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;\n      case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;\n      case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;\n      case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;\n      case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;\n      case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;\n      case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;\n      case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;\n      default:\n        break;\n    }\n    await this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getAlbumItem: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getAlbumItem: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'getAlbumItem: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'getAlbumItem: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.blackList.indexOf(id) >= 0) {\n      Log.debug(TAG, 'no need as in black list');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.blackList.indexOf(id) >= 0",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.blackList.indexOf(id)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.blackList.indexOf",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.blackList",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "blackList",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "indexOf",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanEqualsToken",
                          "label": ">=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.debug(TAG, 'no need as in black list');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'no need as in black list');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'no need as in black list')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'no need as in black list'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.deviceId.length > 0 && (id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)) {\n      Log.info(TAG, 'no need');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.deviceId.length > 0 && (id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.deviceId.length > 0",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.deviceId.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.deviceId",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "deviceId",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "GreaterThanToken",
                              "label": ">",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "ParenthesizedExpression",
                          "label": "(id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA)",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "id !== MediaConstants.ALBUM_ID_SNAPSHOT && id !== MediaConstants.ALBUM_ID_CAMERA",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "id !== MediaConstants.ALBUM_ID_SNAPSHOT",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "id",
                                      "children": []
                                    },
                                    {
                                      "type": "ExclamationEqualsEqualsToken",
                                      "label": "!==",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_ID_SNAPSHOT",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_ID_SNAPSHOT",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "id !== MediaConstants.ALBUM_ID_CAMERA",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "id",
                                      "children": []
                                    },
                                    {
                                      "type": "ExclamationEqualsEqualsToken",
                                      "label": "!==",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_ID_CAMERA",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_ID_CAMERA",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'no need');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'no need');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'no need')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'no need'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albumType = MediaConstants.ALBUM_TYPE_SYSTEM;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumType = MediaConstants.ALBUM_TYPE_SYSTEM",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumType = MediaConstants.ALBUM_TYPE_SYSTEM",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumType",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_TYPE_SYSTEM",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_TYPE_SYSTEM",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumSubType",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_SUBTYPE_USER_GENERIC",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_SUBTYPE_USER_GENERIC",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "SwitchStatement",
                  "label": "switch (id) {\n      case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;\n      case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;\n      case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;\n      case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;\n      case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;\n      case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;\n      case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;\n      case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;\n      default:\n        break;\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "id",
                      "children": []
                    },
                    {
                      "type": "CaseBlock",
                      "label": "{\n      case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;\n      case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;\n      case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;\n      case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;\n      case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;\n      case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;\n      case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;\n      case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;\n      default:\n        break;\n    }",
                      "children": [
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_FAVOR:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;\n        break;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_FAVOR",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_FAVOR",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_FAVOR",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumSubType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_FAVOR",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_FAVOR",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_CAMERA:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;\n        break;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_CAMERA",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_CAMERA",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_CAMERA",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumSubType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_CAMERA",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_CAMERA",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_RECYCLE:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;\n        break;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_RECYCLE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_RECYCLE",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_RECYCLE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumSubType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_RECYCLE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_RECYCLE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_SNAPSHOT:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;\n        break;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_SNAPSHOT",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_SNAPSHOT",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_SNAPSHOT",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumSubType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_SNAPSHOT",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_SNAPSHOT",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_VIDEO:\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;\n        break;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_VIDEO",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_VIDEO",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_VIDEO",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumSubType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_VIDEO",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_VIDEO",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_ALL:\n        await this.getAllPhotoAlbum(albumDataItems);\n        return;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_ALL",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_ALL",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "await this.getAllPhotoAlbum(albumDataItems);",
                              "children": [
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.getAllPhotoAlbum(albumDataItems)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.getAllPhotoAlbum(albumDataItems)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.getAllPhotoAlbum",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAllPhotoAlbum",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumDataItems",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_USER:\n        albumType = MediaConstants.ALBUM_TYPE_USER;\n        albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;\n        break;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_USER",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_USER",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumType = MediaConstants.ALBUM_TYPE_USER;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumType = MediaConstants.ALBUM_TYPE_USER",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_TYPE_USER",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_TYPE_USER",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumSubType = MediaConstants.ALBUM_SUBTYPE_USER_GENERIC",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumSubType",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_USER_GENERIC",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_USER_GENERIC",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CaseClause",
                          "label": "case MediaConstants.ALBUM_ID_MOVING_PHOTO:\n        await this.getMovingPhotoAbstractAlbum(albumDataItems);\n        return;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_MOVING_PHOTO",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_MOVING_PHOTO",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "await this.getMovingPhotoAbstractAlbum(albumDataItems);",
                              "children": [
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.getMovingPhotoAbstractAlbum(albumDataItems)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.getMovingPhotoAbstractAlbum(albumDataItems)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.getMovingPhotoAbstractAlbum",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getMovingPhotoAbstractAlbum",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumDataItems",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return;",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "DefaultClause",
                          "label": "default:\n        break;",
                          "children": [
                            {
                              "type": "BreakStatement",
                              "label": "break;",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.getAlbumItemByUserFileMgr(id, albumType, albumSubType, albumDataItems)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.getAlbumItemByUserFileMgr",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getAlbumItemByUserFileMgr",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumType",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumSubType",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private async getAlbumItemByUserFileMgr(id: string, type: photoAccessHelper.AlbumType, subType: photoAccessHelper.AlbumSubtype, albumDataItems: AlbumDataItem[]): Promise<void> {\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAlbumItemByUserFileMgr');\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAlbumItemByUserFileMgr",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "type: photoAccessHelper.AlbumType",
              "children": [
                {
                  "type": "Identifier",
                  "label": "type",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.AlbumType",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.AlbumType",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "AlbumType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "subType: photoAccessHelper.AlbumSubtype",
              "children": [
                {
                  "type": "Identifier",
                  "label": "subType",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.AlbumSubtype",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.AlbumSubtype",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "AlbumSubtype",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albumDataItems: AlbumDataItem[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumDataItems",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAlbumItemByUserFileMgr');\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.Album>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.info(TAG, 'getAlbumItemByUserFileMgr');\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'getAlbumItemByUserFileMgr');\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getAlbumItemByUserFileMgr');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getAlbumItemByUserFileMgr')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'getAlbumItemByUserFileMgr'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await userFileModel.getUserFileMgr().getAlbums(type, subType)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await userFileModel.getUserFileMgr().getAlbums(type, subType)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileModel.getUserFileMgr().getAlbums(type, subType)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileModel.getUserFileMgr().getAlbums",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "userFileModel.getUserFileMgr()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileModel.getUserFileMgr",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFileModel",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getUserFileMgr",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "subType",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'type:' + type);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'type:' + type)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'type:' + type",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'type:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "type",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'subType:' + subType);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'subType:' + subType)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'subType:' + subType",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'subType:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "subType",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'get Album fetchResult, count: ' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'get Album fetchResult, count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < fetchResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);\n        Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);\n        Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);\n        Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);\n        if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }\n        Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);\n        Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);\n        let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        let fileAsset:photoAccessHelper.PhotoAsset = null;\n        let count = 0;\n        try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i)",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "albumAsset:photoAccessHelper.Album = await fetchResult.getObjectByPosition(i)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "TypeReference",
                                              "label": "photoAccessHelper.Album",
                                              "children": [
                                                {
                                                  "type": "FirstNode",
                                                  "label": "photoAccessHelper.Album",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAccessHelper",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Album",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AwaitExpression",
                                              "label": "await fetchResult.getObjectByPosition(i)",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "fetchResult.getObjectByPosition(i)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "fetchResult.getObjectByPosition",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getObjectByPosition",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumAsset albumType: ' + i + '---' + albumAsset.albumType)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'albumAsset albumType: ' + i + '---' + albumAsset.albumType",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'albumAsset albumType: ' + i + '---'",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'albumAsset albumType: ' + i",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'albumAsset albumType: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'---'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumType",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'albumAsset albumSubType: ' + i + '---' + albumAsset.albumSubtype",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'albumAsset albumSubType: ' + i + '---'",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'albumAsset albumSubType: ' + i",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'albumAsset albumSubType: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'---'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumAsset albumName: ' + i + '---' + albumAsset.albumName)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'albumAsset albumName: ' + i + '---' + albumAsset.albumName",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'albumAsset albumName: ' + i + '---'",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'albumAsset albumName: ' + i",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'albumAsset albumName: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'---'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumName",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumName",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'albumAsset albumUri: ' + i + '---' + albumAsset.albumUri",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'albumAsset albumUri: ' + i + '---'",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'albumAsset albumUri: ' + i",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'albumAsset albumUri: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'---'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumUri",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumUri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "IfStatement",
                                  "label": "if (this.blackList.indexOf(albumAsset.albumUri) >= 0) {\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.blackList.indexOf(albumAsset.albumUri) >= 0",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.blackList.indexOf(albumAsset.albumUri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.blackList.indexOf",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.blackList",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "blackList",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "indexOf",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumUri",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumUri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "GreaterThanEqualsToken",
                                          "label": ">=",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);\n          continue;\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Log.debug(TAG, 'no need as in black list:'+albumAsset.albumUri)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Log.debug",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Log",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "debug",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'no need as in black list:'+albumAsset.albumUri",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'no need as in black list:'",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "albumAsset.albumUri",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumAsset",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumUri",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ContinueStatement",
                                          "label": "continue;",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumAsset count: ' + i + '---' + albumAsset.count)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'albumAsset count: ' + i + '---' + albumAsset.count",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'albumAsset count: ' + i + '---'",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'albumAsset count: ' + i",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'albumAsset count: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'---'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.count",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "count",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'albumAsset coverUri: ' + i + '---' + albumAsset.coverUri",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'albumAsset coverUri: ' + i + '---'",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'albumAsset coverUri: ' + i",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'albumAsset coverUri: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'---'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.coverUri",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "coverUri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstStatement",
                                  "label": "let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "photoFetchResult:photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "TypeReference",
                                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                                              "children": [
                                                {
                                                  "type": "FirstNode",
                                                  "label": "photoAccessHelper.FetchResult",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAccessHelper",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "FetchResult",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "TypeReference",
                                                  "label": "photoAccessHelper.PhotoAsset",
                                                  "children": [
                                                    {
                                                      "type": "FirstNode",
                                                      "label": "photoAccessHelper.PhotoAsset",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAccessHelper",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PhotoAsset",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NullKeyword",
                                              "label": "null",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstStatement",
                                  "label": "let fileAsset:photoAccessHelper.PhotoAsset = null;",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let fileAsset:photoAccessHelper.PhotoAsset = null",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "fileAsset:photoAccessHelper.PhotoAsset = null",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "TypeReference",
                                              "label": "photoAccessHelper.PhotoAsset",
                                              "children": [
                                                {
                                                  "type": "FirstNode",
                                                  "label": "photoAccessHelper.PhotoAsset",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAccessHelper",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "PhotoAsset",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NullKeyword",
                                              "label": "null",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstStatement",
                                  "label": "let count = 0;",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let count = 0",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "count = 0",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "TryStatement",
                                  "label": "try {\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        } catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }",
                                  "children": [
                                    {
                                      "type": "Block",
                                      "label": "{\n          let predicates = new dataSharePredicates.DataSharePredicates();\n          let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };\n          photoFetchResult = await albumAsset.getAssets(fetchOptions);\n          count = photoFetchResult.getCount();\n          Log.info(TAG, 'photoFetchResult count: ' + count);\n          let displayName = 'unknown';\n          if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }\n          let albumType = albumAsset.albumType;\n          let albumSubType = albumAsset.albumSubtype;\n          let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);\n          albumItem.uri = albumAsset.albumUri;\n          if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }\n          albumDataItems.push(albumItem);\n        }",
                                      "children": [
                                        {
                                          "type": "FirstStatement",
                                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "predicates",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "NewExpression",
                                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "dataSharePredicates.DataSharePredicates",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "dataSharePredicates",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "DataSharePredicates",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          };",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          }",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "fetchOptions = {\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          }",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fetchOptions",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ObjectLiteralExpression",
                                                      "label": "{\n            fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n            predicates: predicates\n          }",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAssignment",
                                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "fetchColumns",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "MediaConstants",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAssignment",
                                                          "label": "predicates: predicates",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "predicates",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "predicates",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "photoFetchResult = await albumAsset.getAssets(fetchOptions);",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "photoFetchResult = await albumAsset.getAssets(fetchOptions)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "AwaitExpression",
                                                  "label": "await albumAsset.getAssets(fetchOptions)",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "albumAsset.getAssets(fetchOptions)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "albumAsset.getAssets",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "albumAsset",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "getAssets",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fetchOptions",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "count = photoFetchResult.getCount();",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "count = photoFetchResult.getCount()",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "count",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoFetchResult.getCount()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoFetchResult.getCount",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoFetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getCount",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "Log.info(TAG, 'photoFetchResult count: ' + count);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Log.info(TAG, 'photoFetchResult count: ' + count)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Log.info",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Log",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "info",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'photoFetchResult count: ' + count",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'photoFetchResult count: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "count",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "let displayName = 'unknown';",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let displayName = 'unknown'",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "displayName = 'unknown'",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "displayName",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'unknown'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "label": "if (id === MediaConstants.ALBUM_ID_USER) {\n            displayName = albumAsset.albumName;\n          } else {\n            displayName = await getAlbumDisplayName(id);\n          }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "id === MediaConstants.ALBUM_ID_USER",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "id",
                                                  "children": []
                                                },
                                                {
                                                  "type": "EqualsEqualsEqualsToken",
                                                  "label": "===",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "MediaConstants.ALBUM_ID_USER",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "MediaConstants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "ALBUM_ID_USER",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            displayName = albumAsset.albumName;\n          }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "displayName = albumAsset.albumName;",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "displayName = albumAsset.albumName",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "displayName",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstAssignment",
                                                          "label": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "albumAsset.albumName",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "albumAsset",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "albumName",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            displayName = await getAlbumDisplayName(id);\n          }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "displayName = await getAlbumDisplayName(id);",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "displayName = await getAlbumDisplayName(id)",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "displayName",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstAssignment",
                                                          "label": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "AwaitExpression",
                                                          "label": "await getAlbumDisplayName(id)",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "getAlbumDisplayName(id)",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "getAlbumDisplayName",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "let albumType = albumAsset.albumType;",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let albumType = albumAsset.albumType",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "albumType = albumAsset.albumType",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumType",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "albumAsset.albumType",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumAsset",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumType",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "let albumSubType = albumAsset.albumSubtype;",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let albumSubType = albumAsset.albumSubtype",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "albumSubType = albumAsset.albumSubtype",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumSubType",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "albumAsset.albumSubtype",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumAsset",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumSubtype",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType);",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType)",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TypeReference",
                                                      "label": "AlbumDataItem",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "AlbumDataItem",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "NewExpression",
                                                      "label": "new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, albumType, albumSubType)",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "AlbumDataItem",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "id",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "count",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "displayName",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.selectType",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "selectType",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.deviceId",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "deviceId",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumType",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "albumSubType",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "albumItem.uri = albumAsset.albumUri;",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "albumItem.uri = albumAsset.albumUri",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "albumItem.uri",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "albumAsset.albumUri",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumUri",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "label": "if (count > 0) {\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "count > 0",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "count",
                                                  "children": []
                                                },
                                                {
                                                  "type": "GreaterThanToken",
                                                  "label": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            fileAsset = await photoFetchResult.getFirstObject();\n            Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n            await albumItem.update(fileAsset);\n          }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "fileAsset = await photoFetchResult.getFirstObject();",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "fileAsset = await photoFetchResult.getFirstObject()",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fileAsset",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstAssignment",
                                                          "label": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "AwaitExpression",
                                                          "label": "await photoFetchResult.getFirstObject()",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "photoFetchResult.getFirstObject()",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "photoFetchResult.getFirstObject",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "photoFetchResult",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "getFirstObject",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.info",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'getFirstObject file displayName: ' + fileAsset.displayName",
                                                          "children": [
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'getFirstObject file displayName: '",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fileAsset.displayName",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fileAsset",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "displayName",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "await albumItem.update(fileAsset);",
                                                  "children": [
                                                    {
                                                      "type": "AwaitExpression",
                                                      "label": "await albumItem.update(fileAsset)",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "albumItem.update(fileAsset)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "albumItem.update",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "albumItem",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "update",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "fileAsset",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "albumDataItems.push(albumItem);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "albumDataItems.push(albumItem)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "albumDataItems.push",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumDataItems",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "push",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumItem",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CatchClause",
                                      "label": "catch (err) {\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        }",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "err",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "Log.error",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Log",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "error",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "TAG",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'get Album getPhotoAssets failed with err: ' + err",
                                                      "children": [
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'get Album getPhotoAssets failed with err: '",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "err",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }",
                                      "children": [
                                        {
                                          "type": "IfStatement",
                                          "label": "if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "photoFetchResult != null",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "ExclamationEqualsToken",
                                                  "label": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "NullKeyword",
                                                  "label": "null",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            photoFetchResult.close();\n          }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "photoFetchResult.close();",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "photoFetchResult.close()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoFetchResult.close",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoFetchResult",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "close",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get Album fetchResult failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get Album fetchResult failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getUserAlbumItemByUri(uri: string): Promise<photoAccessHelper.Album> {\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getUserAlbumItemByUri",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.Album>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.Album",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.Album",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "Album",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult:photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.Album>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let album: photoAccessHelper.Album = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let album: photoAccessHelper.Album = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "album: photoAccessHelper.Album = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "album",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.Album",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "Album",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getUserAlbumItemByUri');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getUserAlbumItemByUri')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'getUserAlbumItemByUri'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.AlbumKeys.URI",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.AlbumKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "URI",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "uri",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "EMPTY_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileModel.getUserFileMgr().getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileModel.getUserFileMgr().getAlbums",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "userFileModel.getUserFileMgr()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileModel.getUserFileMgr",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFileModel",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getUserFileMgr",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.USER",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.USER_GENERIC",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER_GENERIC",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'get Album fetchResult, count: ' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'get Album fetchResult, count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult.getCount() > 0) {\n        album = await fetchResult.getFirstObject();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult.getCount() > 0",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        album = await fetchResult.getFirstObject();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "album = await fetchResult.getFirstObject();",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "album = await fetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "album",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await fetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "fetchResult.getFirstObject()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fetchResult.getFirstObject",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fetchResult",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getFirstObject",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get Album fetchResult failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get Album fetchResult failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return album;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "album",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async removeFileFromAlbum(albumUri: string, uri: string): Promise<boolean> {\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    let fileAsset = await userFileModel.getMediaItemByUri(uri);\n    if (album != null && fileAsset != null) {\n      try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }\n    }\n    return false;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "removeFileFromAlbum",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumUri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumUri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<boolean>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    let fileAsset = await userFileModel.getMediaItemByUri(uri);\n    if (album != null && fileAsset != null) {\n      try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }\n    }\n    return false;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let album = await this.getUserAlbumItemByUri(albumUri);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let album = await this.getUserAlbumItemByUri(albumUri)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "album = await this.getUserAlbumItemByUri(albumUri)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "album",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.getUserAlbumItemByUri(albumUri)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.getUserAlbumItemByUri(albumUri)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.getUserAlbumItemByUri",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getUserAlbumItemByUri",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumUri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset = await userFileModel.getMediaItemByUri(uri);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset = await userFileModel.getMediaItemByUri(uri)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset = await userFileModel.getMediaItemByUri(uri)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await userFileModel.getMediaItemByUri(uri)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "userFileModel.getMediaItemByUri(uri)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "userFileModel.getMediaItemByUri",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "userFileModel",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getMediaItemByUri",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (album != null && fileAsset != null) {\n      try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "album != null && fileAsset != null",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "album != null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "album",
                              "children": []
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "fileAsset != null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }\n    }",
                      "children": [
                        {
                          "type": "TryStatement",
                          "label": "try {\n        await album.removeAssets([fileAsset]);\n        return true;\n      } catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }",
                          "children": [
                            {
                              "type": "Block",
                              "label": "{\n        await album.removeAssets([fileAsset]);\n        return true;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "await album.removeAssets([fileAsset]);",
                                  "children": [
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await album.removeAssets([fileAsset])",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "album.removeAssets([fileAsset])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "album.removeAssets",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "album",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "removeAssets",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ArrayLiteralExpression",
                                              "label": "[fileAsset]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ReturnStatement",
                                  "label": "return true;",
                                  "children": [
                                    {
                                      "type": "TrueKeyword",
                                      "label": "true",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CatchClause",
                              "label": "catch (err) {\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "err",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "err",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);\n      }",
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "Log.error(TAG, 'album removePhotoAssets failed with error: ' + err);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Log.error(TAG, 'album removePhotoAssets failed with error: ' + err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Log.error",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Log",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "error",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TAG",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'album removePhotoAssets failed with error: ' + err",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'album removePhotoAssets failed with error: '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "err",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return false;",
                  "children": [
                    {
                      "type": "FalseKeyword",
                      "label": "false",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getAllPhotoAlbum(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let photoFetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getAllPhotoAlbum count: ' + count);\n      let displayName = '';\n      let id = MediaConstants.ALBUM_ID_ALL;\n      displayName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAllPhotoAlbum",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumDataItems: AlbumDataItem[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumDataItems",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let photoFetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getAllPhotoAlbum count: ' + count);\n      let displayName = '';\n      let id = MediaConstants.ALBUM_ID_ALL;\n      displayName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let photoFetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let photoFetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "photoFetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoFetchResult",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getAllPhotoAlbum count: ' + count);\n      let displayName = '';\n      let id = MediaConstants.ALBUM_ID_ALL;\n      displayName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getAllPhotoAlbum count: ' + count);\n      let displayName = '';\n      let id = MediaConstants.ALBUM_ID_ALL;\n      displayName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await userFileModel.getUserFileMgr().getAssets(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileModel.getUserFileMgr().getAssets(fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileModel.getUserFileMgr().getAssets",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "userFileModel.getUserFileMgr()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileModel.getUserFileMgr",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFileModel",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getUserFileMgr",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let count = photoFetchResult.getCount();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let count = photoFetchResult.getCount()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "count = photoFetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getAllPhotoAlbum count: ' + count);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getAllPhotoAlbum count: ' + count)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getAllPhotoAlbum count: ' + count",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getAllPhotoAlbum count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let displayName = '';",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let displayName = ''",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "displayName = ''",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "displayName",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "''",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let id = MediaConstants.ALBUM_ID_ALL;",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let id = MediaConstants.ALBUM_ID_ALL",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "id = MediaConstants.ALBUM_ID_ALL",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "id",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_ID_ALL",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_ID_ALL",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "displayName = await getAlbumDisplayName(id);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "displayName = await getAlbumDisplayName(id)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "displayName",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await getAlbumDisplayName(id)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "getAlbumDisplayName(id)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "getAlbumDisplayName",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "albumItem: AlbumDataItem = new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumItem",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "AlbumDataItem",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumDataItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new AlbumDataItem(id, count, displayName, this.selectType, this.deviceId, -1, -1)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumDataItem",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "id",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "count",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "displayName",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.selectType",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "selectType",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.deviceId",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "deviceId",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PrefixUnaryExpression",
                                          "label": "-1",
                                          "children": [
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PrefixUnaryExpression",
                                          "label": "-1",
                                          "children": [
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "count > 0",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let fileAsset = await photoFetchResult.getFirstObject();",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let fileAsset = await photoFetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "fileAsset = await photoFetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "AwaitExpression",
                                              "label": "await photoFetchResult.getFirstObject()",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoFetchResult.getFirstObject()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoFetchResult.getFirstObject",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoFetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getFirstObject",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "await albumItem.update(fileAsset);",
                                  "children": [
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await albumItem.update(fileAsset)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "albumItem.update(fileAsset)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumItem.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'getFirstObject file displayName: ' + fileAsset.displayName)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'getFirstObject file displayName: ' + fileAsset.displayName",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'getFirstObject file displayName: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAsset.displayName",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "displayName",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "albumDataItems.push(albumItem);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "albumDataItems.push(albumItem)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "albumDataItems.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumDataItems",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumItem",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get Album getPhotoAssets failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get Album getPhotoAssets failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get Album getPhotoAssets failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        photoFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "photoFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getMovingPhotoAbstractAlbum(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);\n      let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;\n      let albumName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getMovingPhotoAbstractAlbum",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumDataItems: AlbumDataItem[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumDataItems",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);\n      let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;\n      let albumName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoFetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);\n      let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;\n      let albumName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    } catch (err) {\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);\n      let count = photoFetchResult.getCount();\n      Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);\n      let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;\n      let albumName = await getAlbumDisplayName(id);\n      let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);\n      if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }\n      albumDataItems.push(albumItem);\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.PHOTO_SUBTYPE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PHOTO_SUBTYPE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.MOVING_PHOTO",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MOVING_PHOTO",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "photoAccessHelper.FetchOptions",
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "photoAccessHelper.FetchOptions",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoAccessHelper",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "FetchOptions",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult = await userFileModel.getUserFileMgr().getAssets(fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await userFileModel.getUserFileMgr().getAssets(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileModel.getUserFileMgr().getAssets(fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileModel.getUserFileMgr().getAssets",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "userFileModel.getUserFileMgr()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileModel.getUserFileMgr",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFileModel",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getUserFileMgr",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let count = photoFetchResult.getCount();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let count = photoFetchResult.getCount()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "count = photoFetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getMovingPhotoAbstractAlbum count: ' + count)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getMovingPhotoAbstractAlbum count: ' + count",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getMovingPhotoAbstractAlbum count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let id = MediaConstants.ALBUM_ID_MOVING_PHOTO;",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let id = MediaConstants.ALBUM_ID_MOVING_PHOTO",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "id = MediaConstants.ALBUM_ID_MOVING_PHOTO",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "id",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_ID_MOVING_PHOTO",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_ID_MOVING_PHOTO",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let albumName = await getAlbumDisplayName(id);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let albumName = await getAlbumDisplayName(id)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "albumName = await getAlbumDisplayName(id)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumName",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await getAlbumDisplayName(id)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "getAlbumDisplayName(id)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbumDisplayName",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "albumItem: AlbumDataItem = new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumItem",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "AlbumDataItem",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumDataItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new AlbumDataItem(id, count, albumName, this.selectType, this.deviceId,\n        MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO, -1)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumDataItem",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "id",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "count",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumName",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.selectType",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "selectType",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.deviceId",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "deviceId",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "MediaConstants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "ABSTRACT_ALBUM_TYPE_MOVING_PHOTO",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PrefixUnaryExpression",
                                          "label": "-1",
                                          "children": [
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (count > 0) {\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "count > 0",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let fileAsset = await photoFetchResult.getFirstObject();\n        await albumItem.update(fileAsset);\n        Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let fileAsset = await photoFetchResult.getFirstObject();",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let fileAsset = await photoFetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "fileAsset = await photoFetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "AwaitExpression",
                                              "label": "await photoFetchResult.getFirstObject()",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoFetchResult.getFirstObject()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoFetchResult.getFirstObject",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoFetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getFirstObject",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "await albumItem.update(fileAsset);",
                                  "children": [
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await albumItem.update(fileAsset)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "albumItem.update(fileAsset)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumItem.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'first moving photo displayName: ' + fileAsset.displayName)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'first moving photo displayName: ' + fileAsset.displayName",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'first moving photo displayName: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAsset.displayName",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "displayName",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "albumDataItems.push(albumItem);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "albumDataItems.push(albumItem)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "albumDataItems.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumDataItems",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumItem",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getMovingPhotoAbstractAlbum failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getMovingPhotoAbstractAlbum failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getMovingPhotoAbstractAlbum failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        photoFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "photoFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async reloadAlbumListItemData(): Promise<AlbumDataItem[]> {\n    Log.info(TAG, 'reloadAlbumListItemData start');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getCommonListAlbumItem(albumDataItems);\n    return albumDataItems;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "reloadAlbumListItemData",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<AlbumDataItem[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'reloadAlbumListItemData start');\n    let albumDataItems: AlbumDataItem[] = [];\n    for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }\n    await this.getCommonListAlbumItem(albumDataItems);\n    return albumDataItems;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'reloadAlbumListItemData start');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'reloadAlbumListItemData start')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'reloadAlbumListItemData start'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albumDataItems: AlbumDataItem[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumDataItems: AlbumDataItem[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumDataItems: AlbumDataItem[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "AlbumDataItem[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "AlbumDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "AlbumDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0;i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length; i++) {\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < MediaConstants.ALBUM_DEFAULT_SORT_LIST.length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST.length",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_DEFAULT_SORT_LIST",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.getAlbumItem(MediaConstants.ALBUM_DEFAULT_SORT_LIST[i], albumDataItems)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.getAlbumItem",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getAlbumItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST[i]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "MediaConstants.ALBUM_DEFAULT_SORT_LIST",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "MediaConstants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "ALBUM_DEFAULT_SORT_LIST",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumDataItems",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.getCommonListAlbumItem(albumDataItems);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.getCommonListAlbumItem(albumDataItems)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.getCommonListAlbumItem(albumDataItems)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.getCommonListAlbumItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getCommonListAlbumItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return albumDataItems;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "albumDataItems",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private async getCommonListAlbumItem(albumDataItems: AlbumDataItem[]): Promise<void> {\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    let fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions);\n    await this.getAlbumDataItem(albumDataItems, albums);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getCommonListAlbumItem",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumDataItems: AlbumDataItem[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumDataItems",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    let fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions);\n    await this.getAlbumDataItem(albumDataItems, albums);\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "dataSharePredicates.DataSharePredicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "dataSharePredicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DataSharePredicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchOptions = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchOptions",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchColumns",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "EMPTY_FETCH_COLUMNS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "predicates: predicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albums: photoAccessHelper.Album[] = await userFileModel.getAlbums(fetchOptions)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albums",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "photoAccessHelper.Album[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await userFileModel.getAlbums(fetchOptions)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "userFileModel.getAlbums(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "userFileModel.getAlbums",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "userFileModel",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getAlbums",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.getAlbumDataItem(albumDataItems, albums);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.getAlbumDataItem(albumDataItems, albums)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.getAlbumDataItem(albumDataItems, albums)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.getAlbumDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getAlbumDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "albumDataItems",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albums",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private async getAlbumDataItem(albumDataItems: AlbumDataItem[], albums: photoAccessHelper.Album[]): Promise<void> {\n    for (let i = 0;i < albums.length; i++) {\n      let album: photoAccessHelper.Album = albums[i];\n      if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      let fetchFileResult = await album.getAssets(fetchOptions);\n      try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAlbumDataItem",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumDataItems: AlbumDataItem[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumDataItems",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "AlbumDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "AlbumDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AlbumDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albums: photoAccessHelper.Album[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albums",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.Album[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.Album",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.Album",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "Album",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    for (let i = 0;i < albums.length; i++) {\n      let album: photoAccessHelper.Album = albums[i];\n      if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      let fetchFileResult = await album.getAssets(fetchOptions);\n      try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0;i < albums.length; i++) {\n      let album: photoAccessHelper.Album = albums[i];\n      if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      let fetchFileResult = await album.getAssets(fetchOptions);\n      try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < albums.length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "albums.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albums",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let album: photoAccessHelper.Album = albums[i];\n      if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      let fetchFileResult = await album.getAssets(fetchOptions);\n      try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let album: photoAccessHelper.Album = albums[i];",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let album: photoAccessHelper.Album = albums[i]",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "album: photoAccessHelper.Album = albums[i]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "album",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "photoAccessHelper.Album",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoAccessHelper",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "Album",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "albums[i]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "albums",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (this.blackList.indexOf(album.albumUri.toString()) >= 0) {\n        continue;\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.blackList.indexOf(album.albumUri.toString()) >= 0",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.blackList.indexOf(album.albumUri.toString())",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.blackList.indexOf",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.blackList",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "blackList",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "indexOf",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "album.albumUri.toString()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "album.albumUri.toString",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "album.albumUri",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "album",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumUri",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toString",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanEqualsToken",
                                  "label": ">=",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        continue;\n      }",
                              "children": [
                                {
                                  "type": "ContinueStatement",
                                  "label": "continue;",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchFileResult = await album.getAssets(fetchOptions);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchFileResult = await album.getAssets(fetchOptions)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchFileResult = await album.getAssets(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchFileResult",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await album.getAssets(fetchOptions)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "album.getAssets(fetchOptions)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "album.getAssets",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "album",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getAssets",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "fetchOptions",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TryStatement",
                          "label": "try {\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      } catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      } finally {\n        fetchFileResult.close();\n      }",
                          "children": [
                            {
                              "type": "Block",
                              "label": "{\n        let count = fetchFileResult.getCount();\n        if (count === 0) {\n          continue;\n        }\n        let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);\n        item.uri = album.albumUri;\n        await item.update(await fetchFileResult.getFirstObject());\n        albumDataItems.push(item);\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let count = fetchFileResult.getCount();",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let count = fetchFileResult.getCount()",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "count = fetchFileResult.getCount()",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "fetchFileResult.getCount()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fetchFileResult.getCount",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fetchFileResult",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getCount",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "IfStatement",
                                  "label": "if (count === 0) {\n          continue;\n        }",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "count === 0",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "count",
                                          "children": []
                                        },
                                        {
                                          "type": "EqualsEqualsEqualsToken",
                                          "label": "===",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          continue;\n        }",
                                      "children": [
                                        {
                                          "type": "ContinueStatement",
                                          "label": "continue;",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstStatement",
                                  "label": "let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0);",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0)",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "item = new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            },
                                            {
                                              "type": "NewExpression",
                                              "label": "new AlbumDataItem(MediaConstants.ALBUM_ID_USER, count, album.albumName, this.selectType, this.deviceId, 0, 0)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "MediaConstants.ALBUM_ID_USER",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "MediaConstants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "ALBUM_ID_USER",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "count",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "album.albumName",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "album",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumName",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.selectType",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "selectType",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.deviceId",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "deviceId",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "item.uri = album.albumUri;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "item.uri = album.albumUri",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "item.uri",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "uri",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "album.albumUri",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "album",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "albumUri",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "await item.update(await fetchFileResult.getFirstObject());",
                                  "children": [
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await item.update(await fetchFileResult.getFirstObject())",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "item.update(await fetchFileResult.getFirstObject())",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "item.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AwaitExpression",
                                              "label": "await fetchFileResult.getFirstObject()",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "fetchFileResult.getFirstObject()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "fetchFileResult.getFirstObject",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fetchFileResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getFirstObject",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "albumDataItems.push(item);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "albumDataItems.push(item)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "albumDataItems.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumDataItems",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CatchClause",
                              "label": "catch (err) {\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "err",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "err",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        Log.error(TAG, 'on err: ' + JSON.stringify(err));\n      }",
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "Log.error(TAG, 'on err: ' + JSON.stringify(err));",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Log.error(TAG, 'on err: ' + JSON.stringify(err))",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Log.error",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Log",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "error",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TAG",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'on err: ' + JSON.stringify(err)",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'on err: '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "JSON.stringify(err)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "JSON.stringify",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "JSON",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "stringify",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchFileResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchFileResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchFileResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchFileResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchFileResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}