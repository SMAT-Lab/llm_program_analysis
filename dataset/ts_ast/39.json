{
  "type": "SourceFile",
  "label": "import { Log } from '../utils/Log';\nimport { GroupDataImpl } from './GroupDataImpl';\nimport { LazyItem, ItemDataSource } from './ItemDataSource';\nimport { UserFileDataItem } from '../base/UserFileDataItem';\n\nconst TAG = 'GroupItemDataSource';\n\nexport class GroupItemDataSource extends ItemDataSource {\n  groupDataItem: UserFileDataItem[] = [];\n  private groupDataImpl: GroupDataImpl = new GroupDataImpl();\n\n  constructor() {\n    super();\n  }\n\n  setSelectType(selectType: number): void {\n    this.groupDataImpl.setSelectType(selectType);\n  }\n\n  setAlbumId(id: string): void {\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.groupDataImpl.setAlbumId(id);\n  }\n\n  setAlbumType(id: number): void {\n    Log.info(TAG, 'setAlbumType: ' + id);\n    this.groupDataImpl.setAlbumType(id);\n  }\n\n  setAlbumSubtype(id: number): void {\n    Log.info(TAG, 'setAlbumSubtype: ' + id);\n    this.groupDataImpl.setAlbumSubtype(id);\n  }\n\n  setAlbumName(name: string): void {\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.groupDataImpl.setAlbumName(name);\n  }\n\n  setDeviceId(id: string): void {\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.groupDataImpl.setDeviceId(id);\n  }\n\n  totalCount(): number {\n    return this.groupDataItem.length;\n  }\n\n  getIndexByItem(item: UserFileDataItem): number {\n    let index = -1;\n    let length = this.groupDataItem.length;\n    for (let i = 0;i < length; i++) {\n      if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n\n  getData(index: number): LazyItem<UserFileDataItem> {\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return new LazyItem<UserFileDataItem>(this.groupDataItem[index], index, (index: number): void => this.onDataUpdateBindImpl(index));\n  }\n\n  getDataByIndex(index: number): UserFileDataItem {\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return this.groupDataItem[index];\n  }\n\n  isSelect(): boolean {\n    let isSelect = true;\n    for (let i = 0;i < this.groupDataItem.length; i++) {\n      if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }\n    }\n    return isSelect;\n  }\n\n  getSelectedCount(): number {\n    let count = 0;\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    })\n    return count;\n  }\n\n  getItems(): UserFileDataItem[] {\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      items.push(item);\n    })\n    return items;\n  }\n\n  getSelectedItems(): Object[] {\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    })\n    return items;\n  }\n\n  getSelectedUris(): string[] {\n    let uris: string[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    })\n    return uris;\n  }\n\n  setSelect(isSelect: boolean): void {\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    })\n    this.notifyDataReload();\n  }\n\n  async reloadGroupItemData(isGrid: boolean): Promise<boolean> {\n    this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid);\n    return this.groupDataItem.length === 0;\n  }\n\n  onDataUpdate(index: number): void {\n    this.onDataUpdateBindImpl(index);\n  }\n\n  private onDataUpdateBindImpl(index: number): void {\n    Log.debug(TAG, 'onDataUpdate ' + index);\n    if (index !== -1) {\n      this.notifyDataChange(index);\n    }\n  }\n\n  dataReload(isGrid: boolean): void {\n    this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {\n      this.notifyDataReload();\n    })\n  }\n\n  dataRemove(): void {\n    for (let i = this.groupDataItem.length - 1;i >= 0; i--) {\n      if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }\n    }\n  }\n\n  dataDelete(uri: string): void {\n    const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })\n    if (mediaDataItemIndex !== -1 && this.groupDataItem[mediaDataItemIndex].isDeleted()) {\n      this.groupDataItem.splice(mediaDataItemIndex, 1);\n      super.notifyDataDelete(mediaDataItemIndex);\n    }\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { GroupDataImpl } from './GroupDataImpl';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ GroupDataImpl }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ GroupDataImpl }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "GroupDataImpl",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "GroupDataImpl",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./GroupDataImpl'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { LazyItem, ItemDataSource } from './ItemDataSource';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ LazyItem, ItemDataSource }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ LazyItem, ItemDataSource }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "LazyItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "LazyItem",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "ItemDataSource",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ItemDataSource",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ItemDataSource'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { UserFileDataItem } from '../base/UserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ UserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ UserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'GroupItemDataSource';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'GroupItemDataSource'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'GroupItemDataSource'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'GroupItemDataSource'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GroupItemDataSource extends ItemDataSource {\n  groupDataItem: UserFileDataItem[] = [];\n  private groupDataImpl: GroupDataImpl = new GroupDataImpl();\n\n  constructor() {\n    super();\n  }\n\n  setSelectType(selectType: number): void {\n    this.groupDataImpl.setSelectType(selectType);\n  }\n\n  setAlbumId(id: string): void {\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.groupDataImpl.setAlbumId(id);\n  }\n\n  setAlbumType(id: number): void {\n    Log.info(TAG, 'setAlbumType: ' + id);\n    this.groupDataImpl.setAlbumType(id);\n  }\n\n  setAlbumSubtype(id: number): void {\n    Log.info(TAG, 'setAlbumSubtype: ' + id);\n    this.groupDataImpl.setAlbumSubtype(id);\n  }\n\n  setAlbumName(name: string): void {\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.groupDataImpl.setAlbumName(name);\n  }\n\n  setDeviceId(id: string): void {\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.groupDataImpl.setDeviceId(id);\n  }\n\n  totalCount(): number {\n    return this.groupDataItem.length;\n  }\n\n  getIndexByItem(item: UserFileDataItem): number {\n    let index = -1;\n    let length = this.groupDataItem.length;\n    for (let i = 0;i < length; i++) {\n      if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n\n  getData(index: number): LazyItem<UserFileDataItem> {\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return new LazyItem<UserFileDataItem>(this.groupDataItem[index], index, (index: number): void => this.onDataUpdateBindImpl(index));\n  }\n\n  getDataByIndex(index: number): UserFileDataItem {\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return this.groupDataItem[index];\n  }\n\n  isSelect(): boolean {\n    let isSelect = true;\n    for (let i = 0;i < this.groupDataItem.length; i++) {\n      if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }\n    }\n    return isSelect;\n  }\n\n  getSelectedCount(): number {\n    let count = 0;\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    })\n    return count;\n  }\n\n  getItems(): UserFileDataItem[] {\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      items.push(item);\n    })\n    return items;\n  }\n\n  getSelectedItems(): Object[] {\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    })\n    return items;\n  }\n\n  getSelectedUris(): string[] {\n    let uris: string[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    })\n    return uris;\n  }\n\n  setSelect(isSelect: boolean): void {\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    })\n    this.notifyDataReload();\n  }\n\n  async reloadGroupItemData(isGrid: boolean): Promise<boolean> {\n    this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid);\n    return this.groupDataItem.length === 0;\n  }\n\n  onDataUpdate(index: number): void {\n    this.onDataUpdateBindImpl(index);\n  }\n\n  private onDataUpdateBindImpl(index: number): void {\n    Log.debug(TAG, 'onDataUpdate ' + index);\n    if (index !== -1) {\n      this.notifyDataChange(index);\n    }\n  }\n\n  dataReload(isGrid: boolean): void {\n    this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {\n      this.notifyDataReload();\n    })\n  }\n\n  dataRemove(): void {\n    for (let i = this.groupDataItem.length - 1;i >= 0; i--) {\n      if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }\n    }\n  }\n\n  dataDelete(uri: string): void {\n    const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })\n    if (mediaDataItemIndex !== -1 && this.groupDataItem[mediaDataItemIndex].isDeleted()) {\n      this.groupDataItem.splice(mediaDataItemIndex, 1);\n      super.notifyDataDelete(mediaDataItemIndex);\n    }\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GroupItemDataSource",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends ItemDataSource",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "ItemDataSource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ItemDataSource",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "groupDataItem: UserFileDataItem[] = [];",
          "children": [
            {
              "type": "Identifier",
              "label": "groupDataItem",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "UserFileDataItem[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private groupDataImpl: GroupDataImpl = new GroupDataImpl();",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "groupDataImpl",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "GroupDataImpl",
              "children": [
                {
                  "type": "Identifier",
                  "label": "GroupDataImpl",
                  "children": []
                }
              ]
            },
            {
              "type": "NewExpression",
              "label": "new GroupDataImpl()",
              "children": [
                {
                  "type": "Identifier",
                  "label": "GroupDataImpl",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor() {\n    super();\n  }",
          "children": [
            {
              "type": "Block",
              "label": "{\n    super();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super()",
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setSelectType(selectType: number): void {\n    this.groupDataImpl.setSelectType(selectType);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setSelectType",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "selectType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.groupDataImpl.setSelectType(selectType);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataImpl.setSelectType(selectType);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataImpl.setSelectType(selectType)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataImpl.setSelectType",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataImpl",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataImpl",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setSelectType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "selectType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumId(id: string): void {\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.groupDataImpl.setAlbumId(id);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumId",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.groupDataImpl.setAlbumId(id);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumId: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumId: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumId: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumId: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataImpl.setAlbumId(id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataImpl.setAlbumId(id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataImpl.setAlbumId",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataImpl",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataImpl",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setAlbumId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumType(id: number): void {\n    Log.info(TAG, 'setAlbumType: ' + id);\n    this.groupDataImpl.setAlbumType(id);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumType",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumType: ' + id);\n    this.groupDataImpl.setAlbumType(id);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumType: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumType: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumType: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumType: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataImpl.setAlbumType(id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataImpl.setAlbumType(id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataImpl.setAlbumType",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataImpl",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataImpl",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setAlbumType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumSubtype(id: number): void {\n    Log.info(TAG, 'setAlbumSubtype: ' + id);\n    this.groupDataImpl.setAlbumSubtype(id);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumSubtype",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumSubtype: ' + id);\n    this.groupDataImpl.setAlbumSubtype(id);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumSubtype: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumSubtype: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumSubtype: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumSubtype: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataImpl.setAlbumSubtype(id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataImpl.setAlbumSubtype(id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataImpl.setAlbumSubtype",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataImpl",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataImpl",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setAlbumSubtype",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumName(name: string): void {\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.groupDataImpl.setAlbumName(name);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumName",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.groupDataImpl.setAlbumName(name);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumName: ' + name);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumName: ' + name)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumName: ' + name",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumName: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "name",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataImpl.setAlbumName(name);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataImpl.setAlbumName(name)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataImpl.setAlbumName",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataImpl",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataImpl",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setAlbumName",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setDeviceId(id: string): void {\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.groupDataImpl.setDeviceId(id);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setDeviceId",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.groupDataImpl.setDeviceId(id);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setDeviceId: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setDeviceId: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setDeviceId: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setDeviceId: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataImpl.setDeviceId(id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataImpl.setDeviceId(id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataImpl.setDeviceId",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataImpl",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataImpl",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setDeviceId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "totalCount(): number {\n    return this.groupDataItem.length;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "totalCount",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    return this.groupDataItem.length;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.groupDataItem.length;",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.groupDataItem.length",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "groupDataItem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "length",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getIndexByItem(item: UserFileDataItem): number {\n    let index = -1;\n    let length = this.groupDataItem.length;\n    for (let i = 0;i < length; i++) {\n      if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getIndexByItem",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "item: UserFileDataItem",
              "children": [
                {
                  "type": "Identifier",
                  "label": "item",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let index = -1;\n    let length = this.groupDataItem.length;\n    for (let i = 0;i < length; i++) {\n      if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let index = -1;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let index = -1",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "index = -1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "-1",
                              "children": [
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let length = this.groupDataItem.length;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let length = this.groupDataItem.length",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "length = this.groupDataItem.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0;i < length; i++) {\n      if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "length",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (this.groupDataItem[i].uri === item.uri) {\n        index = i;\n        break;\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.groupDataItem[i].uri === item.uri",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem[i].uri",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.groupDataItem[i]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "item.uri",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        index = i;\n        break;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "index = i;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "index = i",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BreakStatement",
                                  "label": "break;",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return index;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "index",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getData(index: number): LazyItem<UserFileDataItem> {\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return new LazyItem<UserFileDataItem>(this.groupDataItem[index], index, (index: number): void => this.onDataUpdateBindImpl(index));\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getData",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "LazyItem<UserFileDataItem>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "LazyItem",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return new LazyItem<UserFileDataItem>(this.groupDataItem[index], index, (index: number): void => this.onDataUpdateBindImpl(index));\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "index < 0 || index >= this.groupDataItem.length",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "index < 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            },
                            {
                              "type": "FirstBinaryOperator",
                              "label": "<",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "index >= this.groupDataItem.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            },
                            {
                              "type": "GreaterThanEqualsToken",
                              "label": ">=",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, index + '/' + this.groupDataItem.length);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, index + '/' + this.groupDataItem.length)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "index + '/' + this.groupDataItem.length",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "index + '/'",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'/'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem.length",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return undefined;",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.groupDataItem[index] != null && this.groupDataItem[index] != undefined",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.groupDataItem[index] != null",
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "this.groupDataItem[index]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.groupDataItem[index] != undefined",
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "this.groupDataItem[index]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.groupDataItem[index].index = index;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.groupDataItem[index].index = index;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.groupDataItem[index].index = index",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem[index].index",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.groupDataItem[index]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "index",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return new LazyItem<UserFileDataItem>(this.groupDataItem[index], index, (index: number): void => this.onDataUpdateBindImpl(index));",
                  "children": [
                    {
                      "type": "NewExpression",
                      "label": "new LazyItem<UserFileDataItem>(this.groupDataItem[index], index, (index: number): void => this.onDataUpdateBindImpl(index))",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "LazyItem",
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "UserFileDataItem",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "UserFileDataItem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ElementAccessExpression",
                          "label": "this.groupDataItem[index]",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(index: number): void => this.onDataUpdateBindImpl(index)",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "index: number",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                },
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.onDataUpdateBindImpl(index)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.onDataUpdateBindImpl",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "onDataUpdateBindImpl",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getDataByIndex(index: number): UserFileDataItem {\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return this.groupDataItem[index];\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getDataByIndex",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "UserFileDataItem",
              "children": [
                {
                  "type": "Identifier",
                  "label": "UserFileDataItem",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }\n    if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }\n    return this.groupDataItem[index];\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (index < 0 || index >= this.groupDataItem.length) {\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "index < 0 || index >= this.groupDataItem.length",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "index < 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            },
                            {
                              "type": "FirstBinaryOperator",
                              "label": "<",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "index >= this.groupDataItem.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            },
                            {
                              "type": "GreaterThanEqualsToken",
                              "label": ">=",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, index + '/' + this.groupDataItem.length);\n      return undefined;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, index + '/' + this.groupDataItem.length);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, index + '/' + this.groupDataItem.length)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "index + '/' + this.groupDataItem.length",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "index + '/'",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'/'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem.length",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return undefined;",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.groupDataItem[index] != null && this.groupDataItem[index] != undefined) {\n      this.groupDataItem[index].index = index;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.groupDataItem[index] != null && this.groupDataItem[index] != undefined",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.groupDataItem[index] != null",
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "this.groupDataItem[index]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.groupDataItem[index] != undefined",
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "this.groupDataItem[index]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "groupDataItem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.groupDataItem[index].index = index;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.groupDataItem[index].index = index;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.groupDataItem[index].index = index",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem[index].index",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.groupDataItem[index]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "index",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return this.groupDataItem[index];",
                  "children": [
                    {
                      "type": "ElementAccessExpression",
                      "label": "this.groupDataItem[index]",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "groupDataItem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "isSelect(): boolean {\n    let isSelect = true;\n    for (let i = 0;i < this.groupDataItem.length; i++) {\n      if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }\n    }\n    return isSelect;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "isSelect",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let isSelect = true;\n    for (let i = 0;i < this.groupDataItem.length; i++) {\n      if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }\n    }\n    return isSelect;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let isSelect = true;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isSelect = true",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isSelect = true",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isSelect",
                              "children": []
                            },
                            {
                              "type": "TrueKeyword",
                              "label": "true",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0;i < this.groupDataItem.length; i++) {\n      if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < this.groupDataItem.length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.length",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (!this.groupDataItem[i].isSelect) {\n        isSelect = false;\n        break;\n      }",
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!this.groupDataItem[i].isSelect",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem[i].isSelect",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.groupDataItem[i]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isSelect",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        isSelect = false;\n        break;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "isSelect = false;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "isSelect = false",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "isSelect",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "FalseKeyword",
                                          "label": "false",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BreakStatement",
                                  "label": "break;",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return isSelect;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isSelect",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getSelectedCount(): number {\n    let count = 0;\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    })\n    return count;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getSelectedCount",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let count = 0;\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    })\n    return count;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let count = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let count = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "count = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "count",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        count++;\n      }\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "item: UserFileDataItem",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "item",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      if (item.isSelect) {\n        count++;\n      }\n    }",
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (item.isSelect) {\n        count++;\n      }",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "item.isSelect",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isSelect",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        count++;\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "count++;",
                                          "children": [
                                            {
                                              "type": "PostfixUnaryExpression",
                                              "label": "count++",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "count",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return count;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "count",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getItems(): UserFileDataItem[] {\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      items.push(item);\n    })\n    return items;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getItems",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "UserFileDataItem[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      items.push(item);\n    })\n    return items;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let items: UserFileDataItem[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let items: UserFileDataItem[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "items: UserFileDataItem[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "items",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "UserFileDataItem[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      items.push(item);\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      items.push(item);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(item: UserFileDataItem): void => {\n      items.push(item);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "item: UserFileDataItem",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "item",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      items.push(item);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "items.push(item);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "items.push(item)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "items.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "items",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return items;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "items",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getSelectedItems(): Object[] {\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    })\n    return items;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getSelectedItems",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "Object[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let items: UserFileDataItem[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    })\n    return items;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let items: UserFileDataItem[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let items: UserFileDataItem[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "items: UserFileDataItem[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "items",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "UserFileDataItem[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        items.push(item);\n      }\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "item: UserFileDataItem",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "item",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      if (item.isSelect) {\n        items.push(item);\n      }\n    }",
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (item.isSelect) {\n        items.push(item);\n      }",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "item.isSelect",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isSelect",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        items.push(item);\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "items.push(item);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "items.push(item)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "items.push",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "items",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "push",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return items;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "items",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getSelectedUris(): string[] {\n    let uris: string[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    })\n    return uris;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getSelectedUris",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "string[]",
              "children": [
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let uris: string[] = [];\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    })\n    return uris;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let uris: string[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let uris: string[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "uris: string[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "uris",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "string[]",
                              "children": [
                                {
                                  "type": "StringKeyword",
                                  "label": "string",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(item: UserFileDataItem): void => {\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "item: UserFileDataItem",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "item",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      if (item.isSelect) {\n        uris.push(item.uri);\n      }\n    }",
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (item.isSelect) {\n        uris.push(item.uri);\n      }",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "item.isSelect",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isSelect",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        uris.push(item.uri);\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "uris.push(item.uri);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "uris.push(item.uri)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "uris.push",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uris",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "push",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "item.uri",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return uris;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "uris",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setSelect(isSelect: boolean): void {\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    })\n    this.notifyDataReload();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setSelect",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isSelect: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelect",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    })\n    this.notifyDataReload();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.groupDataItem.forEach((item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(item: UserFileDataItem): void => {\n      item.setSelect(isSelect);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "item: UserFileDataItem",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "item",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      item.setSelect(isSelect);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "item.setSelect(isSelect);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "item.setSelect(isSelect)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "item.setSelect",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setSelect",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isSelect",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.notifyDataReload();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.notifyDataReload()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.notifyDataReload",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "notifyDataReload",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async reloadGroupItemData(isGrid: boolean): Promise<boolean> {\n    this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid);\n    return this.groupDataItem.length === 0;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "reloadGroupItemData",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isGrid: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isGrid",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<boolean>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid);\n    return this.groupDataItem.length === 0;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "groupDataItem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "AwaitExpression",
                          "label": "await this.groupDataImpl.reloadGroupItemData(isGrid)",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.groupDataImpl.reloadGroupItemData(isGrid)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataImpl.reloadGroupItemData",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataImpl",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "groupDataImpl",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "reloadGroupItemData",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isGrid",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return this.groupDataItem.length === 0;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.groupDataItem.length === 0",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.groupDataItem.length",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "groupDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onDataUpdate(index: number): void {\n    this.onDataUpdateBindImpl(index);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onDataUpdate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.onDataUpdateBindImpl(index);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.onDataUpdateBindImpl(index);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.onDataUpdateBindImpl(index)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onDataUpdateBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onDataUpdateBindImpl",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private onDataUpdateBindImpl(index: number): void {\n    Log.debug(TAG, 'onDataUpdate ' + index);\n    if (index !== -1) {\n      this.notifyDataChange(index);\n    }\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "onDataUpdateBindImpl",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'onDataUpdate ' + index);\n    if (index !== -1) {\n      this.notifyDataChange(index);\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'onDataUpdate ' + index);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'onDataUpdate ' + index)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onDataUpdate ' + index",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'onDataUpdate '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (index !== -1) {\n      this.notifyDataChange(index);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "index !== -1",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsEqualsToken",
                          "label": "!==",
                          "children": []
                        },
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "-1",
                          "children": [
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.notifyDataChange(index);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.notifyDataChange(index);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.notifyDataChange(index)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.notifyDataChange",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "notifyDataChange",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "dataReload(isGrid: boolean): void {\n    this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {\n      this.notifyDataReload();\n    })\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "dataReload",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isGrid: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isGrid",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {\n      this.notifyDataReload();\n    })\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {\n      this.notifyDataReload();\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {\n      this.notifyDataReload();\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.reloadGroupItemData(isGrid).then",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.reloadGroupItemData(isGrid)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.reloadGroupItemData",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "reloadGroupItemData",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isGrid",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "then",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "VoidKeyword",
                          "label": "void",
                          "children": []
                        },
                        {
                          "type": "VoidKeyword",
                          "label": "void",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(isEmpty: boolean): void => {\n      this.notifyDataReload();\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "isEmpty: boolean",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "isEmpty",
                                  "children": []
                                },
                                {
                                  "type": "BooleanKeyword",
                                  "label": "boolean",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      this.notifyDataReload();\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.notifyDataReload();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.notifyDataReload()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.notifyDataReload",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "notifyDataReload",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "dataRemove(): void {\n    for (let i = this.groupDataItem.length - 1;i >= 0; i--) {\n      if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "dataRemove",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    for (let i = this.groupDataItem.length - 1;i >= 0; i--) {\n      if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }\n    }\n  }",
              "children": [
                {
                  "type": "ForStatement",
                  "label": "for (let i = this.groupDataItem.length - 1;i >= 0; i--) {\n      if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = this.groupDataItem.length - 1",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = this.groupDataItem.length - 1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.groupDataItem.length - 1",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem.length",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "groupDataItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "MinusToken",
                                  "label": "-",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i >= 0",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "GreaterThanEqualsToken",
                          "label": ">=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i--",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()) {\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.groupDataItem[i] != undefined && this.groupDataItem[i].isDeleted()",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.groupDataItem[i] != undefined",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.groupDataItem[i]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExclamationEqualsToken",
                                      "label": "!=",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "undefined",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "this.groupDataItem[i].isDeleted()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem[i].isDeleted",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "this.groupDataItem[i]",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.groupDataItem",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "groupDataItem",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isDeleted",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        this.groupDataItem.splice(i, 1);\n        super.notifyDataDelete(i);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.groupDataItem.splice(i, 1);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.groupDataItem.splice(i, 1)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.groupDataItem.splice",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.groupDataItem",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "groupDataItem",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "splice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "super.notifyDataDelete(i);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "super.notifyDataDelete(i)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "super.notifyDataDelete",
                                          "children": [
                                            {
                                              "type": "SuperKeyword",
                                              "label": "super",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "notifyDataDelete",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "dataDelete(uri: string): void {\n    const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })\n    if (mediaDataItemIndex !== -1 && this.groupDataItem[mediaDataItemIndex].isDeleted()) {\n      this.groupDataItem.splice(mediaDataItemIndex, 1);\n      super.notifyDataDelete(mediaDataItemIndex);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "dataDelete",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })\n    if (mediaDataItemIndex !== -1 && this.groupDataItem[mediaDataItemIndex].isDeleted()) {\n      this.groupDataItem.splice(mediaDataItemIndex, 1);\n      super.notifyDataDelete(mediaDataItemIndex);\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaDataItemIndex",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem.findIndex",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "groupDataItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "findIndex",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(item: UserFileDataItem): boolean => {\n      return item.uri === uri;\n    }",
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "item: UserFileDataItem",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "UserFileDataItem",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "UserFileDataItem",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BooleanKeyword",
                                      "label": "boolean",
                                      "children": []
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n      return item.uri === uri;\n    }",
                                      "children": [
                                        {
                                          "type": "ReturnStatement",
                                          "label": "return item.uri === uri;",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "item.uri === uri",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "item.uri",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "EqualsEqualsEqualsToken",
                                                  "label": "===",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (mediaDataItemIndex !== -1 && this.groupDataItem[mediaDataItemIndex].isDeleted()) {\n      this.groupDataItem.splice(mediaDataItemIndex, 1);\n      super.notifyDataDelete(mediaDataItemIndex);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "mediaDataItemIndex !== -1 && this.groupDataItem[mediaDataItemIndex].isDeleted()",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "mediaDataItemIndex !== -1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaDataItemIndex",
                              "children": []
                            },
                            {
                              "type": "ExclamationEqualsEqualsToken",
                              "label": "!==",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "-1",
                              "children": [
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "this.groupDataItem[mediaDataItemIndex].isDeleted()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.groupDataItem[mediaDataItemIndex].isDeleted",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "this.groupDataItem[mediaDataItemIndex]",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "groupDataItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "mediaDataItemIndex",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDeleted",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.groupDataItem.splice(mediaDataItemIndex, 1);\n      super.notifyDataDelete(mediaDataItemIndex);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.groupDataItem.splice(mediaDataItemIndex, 1);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.groupDataItem.splice(mediaDataItemIndex, 1)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.groupDataItem.splice",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.groupDataItem",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "groupDataItem",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "splice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "mediaDataItemIndex",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "super.notifyDataDelete(mediaDataItemIndex);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "super.notifyDataDelete(mediaDataItemIndex)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "super.notifyDataDelete",
                                  "children": [
                                    {
                                      "type": "SuperKeyword",
                                      "label": "super",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "notifyDataDelete",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "mediaDataItemIndex",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}