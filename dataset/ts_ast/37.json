{
  "type": "SourceFile",
  "label": "import { Log } from '../utils/Log';\n\nconst TAG = 'ItemDataSource'\n\nexport class LazyItem<T> {\n  item: T;\n  onItemUpdate: Function;\n  index: number = -1;\n\n  constructor(item: T, index: number, onItemUpdate?: Function) {\n    this.item = item;\n    this.onItemUpdate = onItemUpdate;\n    this.index = index;\n  }\n\n  update(item: T): void {\n    if (this.onItemUpdate != null && this.index !== -1) {\n      this.onItemUpdate(this.index, item);\n    }\n  }\n\n  getHashCode(): string {\n    // @ts-ignore\n    return this.index + '' + this.item.getHashCode();\n  }\n\n  get(): T {\n    return this.item;\n  }\n\n  set(item: T): void {\n    this.item = item;\n  }\n}\n\nexport abstract class ItemDataSource implements IDataSource {\n  private listeners: DataChangeListener[] = [];\n\n  abstract totalCount(): number;\n\n  abstract getData(index: number): Object;\n\n  abstract isSelect(): boolean;\n\n  abstract getSelectedCount(): number;\n\n  abstract getSelectedItems(): Object[];\n\n  abstract getSelectedUris(): string[];\n\n  abstract dataRemove(): void;\n\n  registerDataChangeListener(listener: DataChangeListener): void {\n    Log.info(TAG, 'registerDataChangeListener');\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n      Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);\n    }\n  }\n\n  unregisterDataChangeListener(listener: DataChangeListener): void {\n    Log.info(TAG, 'unregisterDataChangeListener');\n    const pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n      Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);\n    }\n  }\n\n  notifyDataChange(index: number): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    })\n  }\n\n  notifyDataReload(): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    })\n  }\n\n  notifyDataDelete(index: number): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    })\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'ItemDataSource'",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'ItemDataSource'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'ItemDataSource'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'ItemDataSource'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class LazyItem<T> {\n  item: T;\n  onItemUpdate: Function;\n  index: number = -1;\n\n  constructor(item: T, index: number, onItemUpdate?: Function) {\n    this.item = item;\n    this.onItemUpdate = onItemUpdate;\n    this.index = index;\n  }\n\n  update(item: T): void {\n    if (this.onItemUpdate != null && this.index !== -1) {\n      this.onItemUpdate(this.index, item);\n    }\n  }\n\n  getHashCode(): string {\n    // @ts-ignore\n    return this.index + '' + this.item.getHashCode();\n  }\n\n  get(): T {\n    return this.item;\n  }\n\n  set(item: T): void {\n    this.item = item;\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "LazyItem",
          "children": []
        },
        {
          "type": "TypeParameter",
          "label": "T",
          "children": [
            {
              "type": "Identifier",
              "label": "T",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "item: T;",
          "children": [
            {
              "type": "Identifier",
              "label": "item",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "T",
              "children": [
                {
                  "type": "Identifier",
                  "label": "T",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "onItemUpdate: Function;",
          "children": [
            {
              "type": "Identifier",
              "label": "onItemUpdate",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Function",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Function",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "index: number = -1;",
          "children": [
            {
              "type": "Identifier",
              "label": "index",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PrefixUnaryExpression",
              "label": "-1",
              "children": [
                {
                  "type": "FirstLiteralToken",
                  "label": "1",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(item: T, index: number, onItemUpdate?: Function) {\n    this.item = item;\n    this.onItemUpdate = onItemUpdate;\n    this.index = index;\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "item: T",
              "children": [
                {
                  "type": "Identifier",
                  "label": "item",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "T",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "onItemUpdate?: Function",
              "children": [
                {
                  "type": "Identifier",
                  "label": "onItemUpdate",
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Function",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Function",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.item = item;\n    this.onItemUpdate = onItemUpdate;\n    this.index = index;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.item = item;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.item = item",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.item",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "item",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "item",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.onItemUpdate = onItemUpdate;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.onItemUpdate = onItemUpdate",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onItemUpdate",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onItemUpdate",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "onItemUpdate",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.index = index;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.index = index",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.index",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "update(item: T): void {\n    if (this.onItemUpdate != null && this.index !== -1) {\n      this.onItemUpdate(this.index, item);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "update",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "item: T",
              "children": [
                {
                  "type": "Identifier",
                  "label": "item",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "T",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.onItemUpdate != null && this.index !== -1) {\n      this.onItemUpdate(this.index, item);\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.onItemUpdate != null && this.index !== -1) {\n      this.onItemUpdate(this.index, item);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.onItemUpdate != null && this.index !== -1",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.onItemUpdate != null",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.onItemUpdate",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "onItemUpdate",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.index !== -1",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.index",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsEqualsToken",
                              "label": "!==",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "-1",
                              "children": [
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.onItemUpdate(this.index, item);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.onItemUpdate(this.index, item);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.onItemUpdate(this.index, item)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.onItemUpdate",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "onItemUpdate",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.index",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "index",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "item",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getHashCode(): string {\n    // @ts-ignore\n    return this.index + '' + this.item.getHashCode();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getHashCode",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // @ts-ignore\n    return this.index + '' + this.item.getHashCode();\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.index + '' + this.item.getHashCode();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.index + '' + this.item.getHashCode()",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.index + ''",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.index",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "''",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PlusToken",
                          "label": "+",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "this.item.getHashCode()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.item.getHashCode",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getHashCode",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "get(): T {\n    return this.item;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "get",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "T",
              "children": [
                {
                  "type": "Identifier",
                  "label": "T",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return this.item;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.item;",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.item",
                      "children": [
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "item",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "set(item: T): void {\n    this.item = item;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "set",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "item: T",
              "children": [
                {
                  "type": "Identifier",
                  "label": "item",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "T",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.item = item;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.item = item;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.item = item",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.item",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "item",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "item",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export abstract class ItemDataSource implements IDataSource {\n  private listeners: DataChangeListener[] = [];\n\n  abstract totalCount(): number;\n\n  abstract getData(index: number): Object;\n\n  abstract isSelect(): boolean;\n\n  abstract getSelectedCount(): number;\n\n  abstract getSelectedItems(): Object[];\n\n  abstract getSelectedUris(): string[];\n\n  abstract dataRemove(): void;\n\n  registerDataChangeListener(listener: DataChangeListener): void {\n    Log.info(TAG, 'registerDataChangeListener');\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n      Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);\n    }\n  }\n\n  unregisterDataChangeListener(listener: DataChangeListener): void {\n    Log.info(TAG, 'unregisterDataChangeListener');\n    const pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n      Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);\n    }\n  }\n\n  notifyDataChange(index: number): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    })\n  }\n\n  notifyDataReload(): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    })\n  }\n\n  notifyDataDelete(index: number): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    })\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "FirstContextualKeyword",
          "label": "abstract",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "ItemDataSource",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements IDataSource",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "IDataSource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "IDataSource",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private listeners: DataChangeListener[] = [];",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "listeners",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "DataChangeListener[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "DataChangeListener",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "DataChangeListener",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract totalCount(): number;",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "totalCount",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract getData(index: number): Object;",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getData",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Object",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Object",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract isSelect(): boolean;",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "isSelect",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract getSelectedCount(): number;",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getSelectedCount",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract getSelectedItems(): Object[];",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getSelectedItems",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "Object[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract getSelectedUris(): string[];",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getSelectedUris",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "string[]",
              "children": [
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract dataRemove(): void;",
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "dataRemove",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "registerDataChangeListener(listener: DataChangeListener): void {\n    Log.info(TAG, 'registerDataChangeListener');\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n      Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "registerDataChangeListener",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "listener: DataChangeListener",
              "children": [
                {
                  "type": "Identifier",
                  "label": "listener",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "DataChangeListener",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "DataChangeListener",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'registerDataChangeListener');\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n      Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'registerDataChangeListener');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'registerDataChangeListener')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'registerDataChangeListener'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener);\n      Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.listeners.indexOf(listener) < 0",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.listeners.indexOf(listener)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.listeners.indexOf",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.listeners",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "listeners",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "indexOf",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "listener",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.listeners.push(listener);\n      Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.listeners.push(listener);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.listeners.push(listener)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.listeners.push",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.listeners",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "listeners",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "listener",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'registerDataChangeListener, add listener, length: ' + this.listeners.length)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'registerDataChangeListener, add listener, length: ' + this.listeners.length",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'registerDataChangeListener, add listener, length: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.listeners.length",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.listeners",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "listeners",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "unregisterDataChangeListener(listener: DataChangeListener): void {\n    Log.info(TAG, 'unregisterDataChangeListener');\n    const pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n      Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "unregisterDataChangeListener",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "listener: DataChangeListener",
              "children": [
                {
                  "type": "Identifier",
                  "label": "listener",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "DataChangeListener",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "DataChangeListener",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'unregisterDataChangeListener');\n    const pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n      Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'unregisterDataChangeListener');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'unregisterDataChangeListener')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'unregisterDataChangeListener'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const pos = this.listeners.indexOf(listener);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const pos = this.listeners.indexOf(listener)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "pos = this.listeners.indexOf(listener)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "pos",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.listeners.indexOf(listener)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.listeners.indexOf",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.listeners",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "listeners",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "indexOf",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "listener",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (pos >= 0) {\n      this.listeners.splice(pos, 1);\n      Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "pos >= 0",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "pos",
                          "children": []
                        },
                        {
                          "type": "GreaterThanEqualsToken",
                          "label": ">=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.listeners.splice(pos, 1);\n      Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.listeners.splice(pos, 1);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.listeners.splice(pos, 1)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.listeners.splice",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.listeners",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "listeners",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "splice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "pos",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'registerDataChangeListener, remove listener, length: ' + this.listeners.length)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'registerDataChangeListener, remove listener, length: ' + this.listeners.length",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'registerDataChangeListener, remove listener, length: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.listeners.length",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.listeners",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "listeners",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "notifyDataChange(index: number): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    })\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "notifyDataChange",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    })\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.listeners.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.listeners",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "listeners",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(listener: DataChangeListener): void => {\n      listener.onDataChange(index);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "listener: DataChangeListener",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "listener",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "DataChangeListener",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "DataChangeListener",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      listener.onDataChange(index);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "listener.onDataChange(index);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "listener.onDataChange(index)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "listener.onDataChange",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "listener",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "onDataChange",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "notifyDataReload(): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    })\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "notifyDataReload",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    })\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.listeners.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.listeners",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "listeners",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(listener: DataChangeListener): void => {\n      listener.onDataReloaded();\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "listener: DataChangeListener",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "listener",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "DataChangeListener",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "DataChangeListener",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      listener.onDataReloaded();\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "listener.onDataReloaded();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "listener.onDataReloaded()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "listener.onDataReloaded",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "listener",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "onDataReloaded",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "notifyDataDelete(index: number): void {\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    })\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "notifyDataDelete",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    })\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.listeners.forEach((listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.listeners.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.listeners",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "listeners",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(listener: DataChangeListener): void => {\n      listener.onDataDelete(index);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "listener: DataChangeListener",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "listener",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "DataChangeListener",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "DataChangeListener",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      listener.onDataDelete(index);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "listener.onDataDelete(index);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "listener.onDataDelete(index)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "listener.onDataDelete",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "listener",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "onDataDelete",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "index",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}