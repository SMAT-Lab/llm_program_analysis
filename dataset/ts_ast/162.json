{
  "type": "SourceFile",
  "label": "import {\n  joinPathFragments,\n  readJson,\n  updateJson,\n  type ProjectConfiguration,\n  type Tree,\n} from '@nx/devkit';\nexport function updateAppEditorTsConfigExcludedFiles(\n  tree: Tree,\n  projectConfig: ProjectConfiguration\n) {\n  if (projectConfig.projectType !== 'application') {\n    return;\n  }\n  const editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  );\n  const appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  );\n  if (!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)) {\n    return;\n  }\n  const appTsConfig = readJson(tree, appTsConfigPath);\n  updateJson(tree, editorTsConfigPath, (json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  });\n}",
  "start_token": 0,
  "end_token": 170,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import {\n  joinPathFragments,\n  readJson,\n  updateJson,\n  type ProjectConfiguration,\n  type Tree,\n} from '@nx/devkit';",
      "start_token": 0,
      "end_token": 17,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  joinPathFragments,\n  readJson,\n  updateJson,\n  type ProjectConfiguration,\n  type Tree,\n}",
          "start_token": 1,
          "end_token": 14,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  joinPathFragments,\n  readJson,\n  updateJson,\n  type ProjectConfiguration,\n  type Tree,\n}",
              "start_token": 1,
              "end_token": 14,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "joinPathFragments",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "joinPathFragments",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "readJson",
                  "start_token": 4,
                  "end_token": 4,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "readJson",
                      "start_token": 4,
                      "end_token": 4,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "updateJson",
                  "start_token": 6,
                  "end_token": 6,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "updateJson",
                      "start_token": 6,
                      "end_token": 6,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "type ProjectConfiguration",
                  "start_token": 8,
                  "end_token": 9,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ProjectConfiguration",
                      "start_token": 9,
                      "end_token": 9,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "type Tree",
                  "start_token": 11,
                  "end_token": 12,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Tree",
                      "start_token": 12,
                      "end_token": 12,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@nx/devkit'",
          "start_token": 16,
          "end_token": 16,
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export function updateAppEditorTsConfigExcludedFiles(\n  tree: Tree,\n  projectConfig: ProjectConfiguration\n) {\n  if (projectConfig.projectType !== 'application') {\n    return;\n  }\n  const editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  );\n  const appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  );\n  if (!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)) {\n    return;\n  }\n  const appTsConfig = readJson(tree, appTsConfigPath);\n  updateJson(tree, editorTsConfigPath, (json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  });\n}",
      "start_token": 18,
      "end_token": 170,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 18,
          "end_token": 18,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "updateAppEditorTsConfigExcludedFiles",
          "start_token": 20,
          "end_token": 20,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "tree: Tree",
          "start_token": 22,
          "end_token": 24,
          "children": [
            {
              "type": "Identifier",
              "label": "tree",
              "start_token": 22,
              "end_token": 22,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Tree",
              "start_token": 24,
              "end_token": 24,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Tree",
                  "start_token": 24,
                  "end_token": 24,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "projectConfig: ProjectConfiguration",
          "start_token": 26,
          "end_token": 28,
          "children": [
            {
              "type": "Identifier",
              "label": "projectConfig",
              "start_token": 26,
              "end_token": 26,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "ProjectConfiguration",
              "start_token": 28,
              "end_token": 28,
              "children": [
                {
                  "type": "Identifier",
                  "label": "ProjectConfiguration",
                  "start_token": 28,
                  "end_token": 28,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (projectConfig.projectType !== 'application') {\n    return;\n  }\n  const editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  );\n  const appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  );\n  if (!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)) {\n    return;\n  }\n  const appTsConfig = readJson(tree, appTsConfigPath);\n  updateJson(tree, editorTsConfigPath, (json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  });\n}",
          "start_token": 30,
          "end_token": 170,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (projectConfig.projectType !== 'application') {\n    return;\n  }",
              "start_token": 31,
              "end_token": 42,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "projectConfig.projectType !== 'application'",
                  "start_token": 33,
                  "end_token": 37,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "projectConfig.projectType",
                      "start_token": 33,
                      "end_token": 35,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "projectConfig",
                          "start_token": 33,
                          "end_token": 33,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "projectType",
                          "start_token": 35,
                          "end_token": 35,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ExclamationEqualsEqualsToken",
                      "label": "!==",
                      "start_token": 36,
                      "end_token": 36,
                      "children": []
                    },
                    {
                      "type": "StringLiteral",
                      "label": "'application'",
                      "start_token": 37,
                      "end_token": 37,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    return;\n  }",
                  "start_token": 39,
                  "end_token": 42,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return;",
                      "start_token": 40,
                      "end_token": 41,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  );",
              "start_token": 43,
              "end_token": 54,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  )",
                  "start_token": 43,
                  "end_token": 53,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  )",
                      "start_token": 44,
                      "end_token": 53,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "editorTsConfigPath",
                          "start_token": 44,
                          "end_token": 44,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  )",
                          "start_token": 46,
                          "end_token": 53,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "joinPathFragments",
                              "start_token": 46,
                              "end_token": 46,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "projectConfig.root",
                              "start_token": 48,
                              "end_token": 50,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "projectConfig",
                                  "start_token": 48,
                                  "end_token": 48,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "root",
                                  "start_token": 50,
                                  "end_token": 50,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'tsconfig.editor.json'",
                              "start_token": 52,
                              "end_token": 52,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  );",
              "start_token": 55,
              "end_token": 66,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  )",
                  "start_token": 55,
                  "end_token": 65,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  )",
                      "start_token": 56,
                      "end_token": 65,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "appTsConfigPath",
                          "start_token": 56,
                          "end_token": 56,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  )",
                          "start_token": 58,
                          "end_token": 65,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "joinPathFragments",
                              "start_token": 58,
                              "end_token": 58,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "projectConfig.root",
                              "start_token": 60,
                              "end_token": 62,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "projectConfig",
                                  "start_token": 60,
                                  "end_token": 60,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "root",
                                  "start_token": 62,
                                  "end_token": 62,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'tsconfig.app.json'",
                              "start_token": 64,
                              "end_token": 64,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)) {\n    return;\n  }",
              "start_token": 67,
              "end_token": 88,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)",
                  "start_token": 69,
                  "end_token": 83,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!tree.exists(editorTsConfigPath)",
                      "start_token": 69,
                      "end_token": 75,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "tree.exists(editorTsConfigPath)",
                          "start_token": 70,
                          "end_token": 75,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "tree.exists",
                              "start_token": 70,
                              "end_token": 72,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "tree",
                                  "start_token": 70,
                                  "end_token": 70,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "exists",
                                  "start_token": 72,
                                  "end_token": 72,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "editorTsConfigPath",
                              "start_token": 74,
                              "end_token": 74,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BarBarToken",
                      "label": "||",
                      "start_token": 76,
                      "end_token": 76,
                      "children": []
                    },
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!tree.exists(appTsConfigPath)",
                      "start_token": 77,
                      "end_token": 83,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "tree.exists(appTsConfigPath)",
                          "start_token": 78,
                          "end_token": 83,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "tree.exists",
                              "start_token": 78,
                              "end_token": 80,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "tree",
                                  "start_token": 78,
                                  "end_token": 78,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "exists",
                                  "start_token": 80,
                                  "end_token": 80,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "appTsConfigPath",
                              "start_token": 82,
                              "end_token": 82,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    return;\n  }",
                  "start_token": 85,
                  "end_token": 88,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return;",
                      "start_token": 86,
                      "end_token": 87,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const appTsConfig = readJson(tree, appTsConfigPath);",
              "start_token": 89,
              "end_token": 98,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const appTsConfig = readJson(tree, appTsConfigPath)",
                  "start_token": 89,
                  "end_token": 97,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "appTsConfig = readJson(tree, appTsConfigPath)",
                      "start_token": 90,
                      "end_token": 97,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "appTsConfig",
                          "start_token": 90,
                          "end_token": 90,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "readJson(tree, appTsConfigPath)",
                          "start_token": 92,
                          "end_token": 97,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "readJson",
                              "start_token": 92,
                              "end_token": 92,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "tree",
                              "start_token": 94,
                              "end_token": 94,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "appTsConfigPath",
                              "start_token": 96,
                              "end_token": 96,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "updateJson(tree, editorTsConfigPath, (json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  });",
              "start_token": 99,
              "end_token": 169,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "updateJson(tree, editorTsConfigPath, (json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  })",
                  "start_token": 99,
                  "end_token": 168,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "updateJson",
                      "start_token": 99,
                      "end_token": 99,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "tree",
                      "start_token": 101,
                      "end_token": 101,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "editorTsConfigPath",
                      "start_token": 103,
                      "end_token": 103,
                      "children": []
                    },
                    {
                      "type": "ArrowFunction",
                      "label": "(json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  }",
                      "start_token": 105,
                      "end_token": 167,
                      "children": [
                        {
                          "type": "Parameter",
                          "label": "json",
                          "start_token": 106,
                          "end_token": 106,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "json",
                              "start_token": 106,
                              "end_token": 106,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsGreaterThanToken",
                          "label": "=>",
                          "start_token": 108,
                          "end_token": 108,
                          "children": []
                        },
                        {
                          "type": "Block",
                          "label": "{\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  }",
                          "start_token": 109,
                          "end_token": 167,
                          "children": [
                            {
                              "type": "FirstStatement",
                              "label": "const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];",
                              "start_token": 110,
                              "end_token": 140,
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])]",
                                  "start_token": 110,
                                  "end_token": 139,
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])]",
                                      "start_token": 111,
                                      "end_token": 139,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "exclude",
                                          "start_token": 111,
                                          "end_token": 111,
                                          "children": []
                                        },
                                        {
                                          "type": "ArrayLiteralExpression",
                                          "label": "[...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])]",
                                          "start_token": 113,
                                          "end_token": 139,
                                          "children": [
                                            {
                                              "type": "SpreadElement",
                                              "label": "...(json.exclude ?? [])",
                                              "start_token": 114,
                                              "end_token": 125,
                                              "children": [
                                                {
                                                  "type": "ParenthesizedExpression",
                                                  "label": "(json.exclude ?? [])",
                                                  "start_token": 117,
                                                  "end_token": 125,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "json.exclude ?? []",
                                                      "start_token": 118,
                                                      "end_token": 124,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "json.exclude",
                                                          "start_token": 118,
                                                          "end_token": 120,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "json",
                                                              "start_token": 118,
                                                              "end_token": 118,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "exclude",
                                                              "start_token": 120,
                                                              "end_token": 120,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "QuestionQuestionToken",
                                                          "label": "??",
                                                          "start_token": 121,
                                                          "end_token": 122,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "ArrayLiteralExpression",
                                                          "label": "[]",
                                                          "start_token": 123,
                                                          "end_token": 124,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SpreadElement",
                                              "label": "...(appTsConfig.exclude ?? [])",
                                              "start_token": 127,
                                              "end_token": 138,
                                              "children": [
                                                {
                                                  "type": "ParenthesizedExpression",
                                                  "label": "(appTsConfig.exclude ?? [])",
                                                  "start_token": 130,
                                                  "end_token": 138,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "appTsConfig.exclude ?? []",
                                                      "start_token": 131,
                                                      "end_token": 137,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "appTsConfig.exclude",
                                                          "start_token": 131,
                                                          "end_token": 133,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "appTsConfig",
                                                              "start_token": 131,
                                                              "end_token": 131,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "exclude",
                                                              "start_token": 133,
                                                              "end_token": 133,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "QuestionQuestionToken",
                                                          "label": "??",
                                                          "start_token": 134,
                                                          "end_token": 135,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "ArrayLiteralExpression",
                                                          "label": "[]",
                                                          "start_token": 136,
                                                          "end_token": 137,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "IfStatement",
                              "label": "if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }",
                              "start_token": 141,
                              "end_token": 163,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "exclude.length",
                                  "start_token": 143,
                                  "end_token": 145,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "exclude",
                                      "start_token": 143,
                                      "end_token": 143,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "start_token": 145,
                                      "end_token": 145,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n      json.exclude = Array.from(new Set(exclude));\n    }",
                                  "start_token": 147,
                                  "end_token": 163,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "json.exclude = Array.from(new Set(exclude));",
                                      "start_token": 148,
                                      "end_token": 162,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "json.exclude = Array.from(new Set(exclude))",
                                          "start_token": 148,
                                          "end_token": 161,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "json.exclude",
                                              "start_token": 148,
                                              "end_token": 150,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "json",
                                                  "start_token": 148,
                                                  "end_token": 148,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "exclude",
                                                  "start_token": 150,
                                                  "end_token": 150,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstAssignment",
                                              "label": "=",
                                              "start_token": 151,
                                              "end_token": 151,
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "Array.from(new Set(exclude))",
                                              "start_token": 152,
                                              "end_token": 161,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Array.from",
                                                  "start_token": 152,
                                                  "end_token": 154,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Array",
                                                      "start_token": 152,
                                                      "end_token": 152,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "from",
                                                      "start_token": 154,
                                                      "end_token": 154,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new Set(exclude)",
                                                  "start_token": 156,
                                                  "end_token": 160,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Set",
                                                      "start_token": 157,
                                                      "end_token": 157,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "exclude",
                                                      "start_token": 159,
                                                      "end_token": 159,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return json;",
                              "start_token": 164,
                              "end_token": 166,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "json",
                                  "start_token": 165,
                                  "end_token": 165,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}