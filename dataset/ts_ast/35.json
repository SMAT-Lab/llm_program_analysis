{
  "type": "SourceFile",
  "label": "import inputConsumer from '@ohos.multimodalInput.inputConsumer';\nimport { Log } from '../utils/Log';\n\n\nconst TAG = 'MultimodalInputManager';\n\nexport class MultimodalInputManager {\n\n  //win + N\n  leftKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2014,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };\n\n  //win + I\n  rightKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2015,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };\n  escKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2070,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };\n\n  async registerListener(callback): Promise<void> {\n    Log.debug(TAG, 'registerListener start');\n    inputConsumer.on('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    });\n    inputConsumer.on('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    });\n    inputConsumer.on('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    });\n    Log.debug(TAG, 'registerListener end');\n  }\n\n  async unregisterListener(): Promise<void> {\n    Log.debug(TAG, 'unregisterListener start');\n    inputConsumer.off('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    });\n    Log.debug(TAG, 'unregisterListener end');\n  }\n}\n\nexport let mMultimodalInputManager = new MultimodalInputManager();\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import inputConsumer from '@ohos.multimodalInput.inputConsumer';",
      "children": [
        {
          "type": "ImportClause",
          "label": "inputConsumer",
          "children": [
            {
              "type": "Identifier",
              "label": "inputConsumer",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.multimodalInput.inputConsumer'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'MultimodalInputManager';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'MultimodalInputManager'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'MultimodalInputManager'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'MultimodalInputManager'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class MultimodalInputManager {\n\n  //win + N\n  leftKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2014,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };\n\n  //win + I\n  rightKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2015,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };\n  escKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2070,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };\n\n  async registerListener(callback): Promise<void> {\n    Log.debug(TAG, 'registerListener start');\n    inputConsumer.on('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    });\n    inputConsumer.on('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    });\n    inputConsumer.on('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    });\n    Log.debug(TAG, 'registerListener end');\n  }\n\n  async unregisterListener(): Promise<void> {\n    Log.debug(TAG, 'unregisterListener start');\n    inputConsumer.off('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    });\n    Log.debug(TAG, 'unregisterListener end');\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "MultimodalInputManager",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "leftKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2014,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };",
          "children": [
            {
              "type": "Identifier",
              "label": "leftKeyOptions",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "inputConsumer.KeyOptions",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "inputConsumer.KeyOptions",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "inputConsumer",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "KeyOptions",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ObjectLiteralExpression",
              "label": "{\n    preKeys: Array<number>(),\n    finalKey: 2014,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  }",
              "children": [
                {
                  "type": "PropertyAssignment",
                  "label": "preKeys: Array<number>()",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "preKeys",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Array<number>()",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Array",
                          "children": []
                        },
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "finalKey: 2014",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "finalKey",
                      "children": []
                    },
                    {
                      "type": "FirstLiteralToken",
                      "label": "2014",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "isFinalKeyDown: true",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isFinalKeyDown",
                      "children": []
                    },
                    {
                      "type": "TrueKeyword",
                      "label": "true",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "finalKeyDownDuration: 0",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "finalKeyDownDuration",
                      "children": []
                    },
                    {
                      "type": "FirstLiteralToken",
                      "label": "0",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "rightKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2015,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };",
          "children": [
            {
              "type": "Identifier",
              "label": "rightKeyOptions",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "inputConsumer.KeyOptions",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "inputConsumer.KeyOptions",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "inputConsumer",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "KeyOptions",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ObjectLiteralExpression",
              "label": "{\n    preKeys: Array<number>(),\n    finalKey: 2015,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  }",
              "children": [
                {
                  "type": "PropertyAssignment",
                  "label": "preKeys: Array<number>()",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "preKeys",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Array<number>()",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Array",
                          "children": []
                        },
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "finalKey: 2015",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "finalKey",
                      "children": []
                    },
                    {
                      "type": "FirstLiteralToken",
                      "label": "2015",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "isFinalKeyDown: true",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isFinalKeyDown",
                      "children": []
                    },
                    {
                      "type": "TrueKeyword",
                      "label": "true",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "finalKeyDownDuration: 0",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "finalKeyDownDuration",
                      "children": []
                    },
                    {
                      "type": "FirstLiteralToken",
                      "label": "0",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "escKeyOptions: inputConsumer.KeyOptions = {\n    preKeys: Array<number>(),\n    finalKey: 2070,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  };",
          "children": [
            {
              "type": "Identifier",
              "label": "escKeyOptions",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "inputConsumer.KeyOptions",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "inputConsumer.KeyOptions",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "inputConsumer",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "KeyOptions",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ObjectLiteralExpression",
              "label": "{\n    preKeys: Array<number>(),\n    finalKey: 2070,\n    isFinalKeyDown: true,\n    finalKeyDownDuration: 0\n  }",
              "children": [
                {
                  "type": "PropertyAssignment",
                  "label": "preKeys: Array<number>()",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "preKeys",
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "Array<number>()",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Array",
                          "children": []
                        },
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "finalKey: 2070",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "finalKey",
                      "children": []
                    },
                    {
                      "type": "FirstLiteralToken",
                      "label": "2070",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "isFinalKeyDown: true",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isFinalKeyDown",
                      "children": []
                    },
                    {
                      "type": "TrueKeyword",
                      "label": "true",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAssignment",
                  "label": "finalKeyDownDuration: 0",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "finalKeyDownDuration",
                      "children": []
                    },
                    {
                      "type": "FirstLiteralToken",
                      "label": "0",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async registerListener(callback): Promise<void> {\n    Log.debug(TAG, 'registerListener start');\n    inputConsumer.on('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    });\n    inputConsumer.on('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    });\n    inputConsumer.on('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    });\n    Log.debug(TAG, 'registerListener end');\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "registerListener",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "callback",
              "children": [
                {
                  "type": "Identifier",
                  "label": "callback",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'registerListener start');\n    inputConsumer.on('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    });\n    inputConsumer.on('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    });\n    inputConsumer.on('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    });\n    Log.debug(TAG, 'registerListener end');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'registerListener start');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'registerListener start')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'registerListener start'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "inputConsumer.on('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "inputConsumer.on('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "inputConsumer.on",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "inputConsumer",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "on",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'key'",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.leftKeyOptions",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "leftKeyOptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "data: inputConsumer.KeyOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "inputConsumer.KeyOptions",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "inputConsumer.KeyOptions",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "inputConsumer",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "KeyOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));\n      callback(0);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.debug(TAG, 'notificationRegister data: ' + JSON.stringify(data))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.debug",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "debug",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'notificationRegister data: ' + JSON.stringify(data)",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'notificationRegister data: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "callback(0);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "callback(0)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "callback",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "inputConsumer.on('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "inputConsumer.on('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "inputConsumer.on",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "inputConsumer",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "on",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'key'",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.rightKeyOptions",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "rightKeyOptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "data: inputConsumer.KeyOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "inputConsumer.KeyOptions",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "inputConsumer.KeyOptions",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "inputConsumer",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "KeyOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));\n      callback(1);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.debug(TAG, 'controlRegister data: ' + JSON.stringify(data))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.debug",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "debug",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'controlRegister data: ' + JSON.stringify(data)",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'controlRegister data: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "callback(1);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "callback(1)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "callback",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "inputConsumer.on('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "inputConsumer.on('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "inputConsumer.on",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "inputConsumer",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "on",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'key'",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.escKeyOptions",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "escKeyOptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(data: inputConsumer.KeyOptions): void => {\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "data: inputConsumer.KeyOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "inputConsumer.KeyOptions",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "inputConsumer.KeyOptions",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "inputConsumer",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "KeyOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));\n      callback(2);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.debug(TAG, 'escRegister data: ' + JSON.stringify(data))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.debug",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "debug",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'escRegister data: ' + JSON.stringify(data)",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'escRegister data: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "callback(2);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "callback(2)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "callback",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "2",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'registerListener end');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'registerListener end')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'registerListener end'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async unregisterListener(): Promise<void> {\n    Log.debug(TAG, 'unregisterListener start');\n    inputConsumer.off('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    });\n    Log.debug(TAG, 'unregisterListener end');\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "unregisterListener",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'unregisterListener start');\n    inputConsumer.off('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    });\n    inputConsumer.off('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    });\n    Log.debug(TAG, 'unregisterListener end');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'unregisterListener start');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'unregisterListener start')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'unregisterListener start'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "inputConsumer.off('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "inputConsumer.off('key', this.leftKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "inputConsumer.off",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "inputConsumer",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "off",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'key'",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.leftKeyOptions",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "leftKeyOptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "data: inputConsumer.KeyOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "inputConsumer.KeyOptions",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "inputConsumer.KeyOptions",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "inputConsumer",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "KeyOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.debug(TAG, 'notificationUnregister data: ' + JSON.stringify(data))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.debug",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "debug",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'notificationUnregister data: ' + JSON.stringify(data)",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'notificationUnregister data: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "inputConsumer.off('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "inputConsumer.off('key', this.rightKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "inputConsumer.off",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "inputConsumer",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "off",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'key'",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.rightKeyOptions",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "rightKeyOptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "data: inputConsumer.KeyOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "inputConsumer.KeyOptions",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "inputConsumer.KeyOptions",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "inputConsumer",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "KeyOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.debug(TAG, 'controlUnregister data: ' + JSON.stringify(data))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.debug",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "debug",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'controlUnregister data: ' + JSON.stringify(data)",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'controlUnregister data: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "inputConsumer.off('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "inputConsumer.off('key', this.escKeyOptions, (data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "inputConsumer.off",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "inputConsumer",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "off",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'key'",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.escKeyOptions",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "escKeyOptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(data: inputConsumer.KeyOptions): void  => {\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "data: inputConsumer.KeyOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "inputConsumer.KeyOptions",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "inputConsumer.KeyOptions",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "inputConsumer",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "KeyOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.debug(TAG, 'escUnregister data: ' + JSON.stringify(data))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.debug",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "debug",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'escUnregister data: ' + JSON.stringify(data)",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'escUnregister data: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'unregisterListener end');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'unregisterListener end')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'unregisterListener end'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "export let mMultimodalInputManager = new MultimodalInputManager();",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "VariableDeclarationList",
          "label": "let mMultimodalInputManager = new MultimodalInputManager()",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "mMultimodalInputManager = new MultimodalInputManager()",
              "children": [
                {
                  "type": "Identifier",
                  "label": "mMultimodalInputManager",
                  "children": []
                },
                {
                  "type": "NewExpression",
                  "label": "new MultimodalInputManager()",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MultimodalInputManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}