{
  "type": "SourceFile",
  "label": "import { BadRequestException, NotFoundException, Scope } from '@nestjs/common';\nimport { WorkspaceQueryHookInstance } from 'src/engine/api/graphql/workspace-query-runner/workspace-query-hook/interfaces/workspace-query-hook.interface';\nimport { FindManyResolverArgs } from 'src/engine/api/graphql/workspace-resolver-builder/interfaces/workspace-resolvers-builder.interface';\nimport { WorkspaceQueryHook } from 'src/engine/api/graphql/workspace-query-runner/workspace-query-hook/decorators/workspace-query-hook.decorator';\nimport { TwentyORMManager } from 'src/engine/twenty-orm/twenty-orm.manager';\nimport { CanAccessCalendarEventService } from 'src/modules/calendar/common/query-hooks/calendar-event/services/can-access-calendar-event.service';\nimport { CalendarChannelEventAssociationWorkspaceEntity } from 'src/modules/calendar/common/standard-objects/calendar-channel-event-association.workspace-entity';\nimport { AuthContext } from 'src/engine/core-modules/auth/types/auth-context.type';\n@WorkspaceQueryHook({\n  key: `calendarEvent.findMany`,\n  scope: Scope.REQUEST,\n})\nexport class CalendarEventFindManyPreQueryHook\n  implements WorkspaceQueryHookInstance\n{\n  constructor(\n    private readonly twentyORMManager: TwentyORMManager,\n    private readonly canAccessCalendarEventService: CanAccessCalendarEventService,\n  ) {}\n  async execute(\n    authContext: AuthContext,\n    objectName: string,\n    payload: FindManyResolverArgs,\n  ): Promise<FindManyResolverArgs> {\n    if (!payload?.filter?.id?.eq) {\n      throw new BadRequestException('id filter is required');\n    }\n    if (!authContext.user?.id) {\n      throw new BadRequestException('User id is required');\n    }\n    const calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      );\n    const calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      });\n    if (calendarChannelCalendarEventAssociations.length === 0) {\n      throw new NotFoundException();\n    }\n    await this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    );\n    return payload;\n  }\n}",
  "start_token": 0,
  "end_token": 258,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { BadRequestException, NotFoundException, Scope } from '@nestjs/common';",
      "start_token": 0,
      "end_token": 10,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ BadRequestException, NotFoundException, Scope }",
          "start_token": 1,
          "end_token": 7,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BadRequestException, NotFoundException, Scope }",
              "start_token": 1,
              "end_token": 7,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BadRequestException",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BadRequestException",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NotFoundException",
                  "start_token": 4,
                  "end_token": 4,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NotFoundException",
                      "start_token": 4,
                      "end_token": 4,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Scope",
                  "start_token": 6,
                  "end_token": 6,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Scope",
                      "start_token": 6,
                      "end_token": 6,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@nestjs/common'",
          "start_token": 9,
          "end_token": 9,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { WorkspaceQueryHookInstance } from 'src/engine/api/graphql/workspace-query-runner/workspace-query-hook/interfaces/workspace-query-hook.interface';",
      "start_token": 11,
      "end_token": 17,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ WorkspaceQueryHookInstance }",
          "start_token": 12,
          "end_token": 14,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ WorkspaceQueryHookInstance }",
              "start_token": 12,
              "end_token": 14,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "WorkspaceQueryHookInstance",
                  "start_token": 13,
                  "end_token": 13,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "WorkspaceQueryHookInstance",
                      "start_token": 13,
                      "end_token": 13,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/engine/api/graphql/workspace-query-runner/workspace-query-hook/interfaces/workspace-query-hook.interface'",
          "start_token": 16,
          "end_token": 16,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { FindManyResolverArgs } from 'src/engine/api/graphql/workspace-resolver-builder/interfaces/workspace-resolvers-builder.interface';",
      "start_token": 18,
      "end_token": 24,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ FindManyResolverArgs }",
          "start_token": 19,
          "end_token": 21,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ FindManyResolverArgs }",
              "start_token": 19,
              "end_token": 21,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "FindManyResolverArgs",
                  "start_token": 20,
                  "end_token": 20,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FindManyResolverArgs",
                      "start_token": 20,
                      "end_token": 20,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/engine/api/graphql/workspace-resolver-builder/interfaces/workspace-resolvers-builder.interface'",
          "start_token": 23,
          "end_token": 23,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { WorkspaceQueryHook } from 'src/engine/api/graphql/workspace-query-runner/workspace-query-hook/decorators/workspace-query-hook.decorator';",
      "start_token": 25,
      "end_token": 31,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ WorkspaceQueryHook }",
          "start_token": 26,
          "end_token": 28,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ WorkspaceQueryHook }",
              "start_token": 26,
              "end_token": 28,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "WorkspaceQueryHook",
                  "start_token": 27,
                  "end_token": 27,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "WorkspaceQueryHook",
                      "start_token": 27,
                      "end_token": 27,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/engine/api/graphql/workspace-query-runner/workspace-query-hook/decorators/workspace-query-hook.decorator'",
          "start_token": 30,
          "end_token": 30,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { TwentyORMManager } from 'src/engine/twenty-orm/twenty-orm.manager';",
      "start_token": 32,
      "end_token": 38,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ TwentyORMManager }",
          "start_token": 33,
          "end_token": 35,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ TwentyORMManager }",
              "start_token": 33,
              "end_token": 35,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "TwentyORMManager",
                  "start_token": 34,
                  "end_token": 34,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TwentyORMManager",
                      "start_token": 34,
                      "end_token": 34,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/engine/twenty-orm/twenty-orm.manager'",
          "start_token": 37,
          "end_token": 37,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { CanAccessCalendarEventService } from 'src/modules/calendar/common/query-hooks/calendar-event/services/can-access-calendar-event.service';",
      "start_token": 39,
      "end_token": 45,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ CanAccessCalendarEventService }",
          "start_token": 40,
          "end_token": 42,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ CanAccessCalendarEventService }",
              "start_token": 40,
              "end_token": 42,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "CanAccessCalendarEventService",
                  "start_token": 41,
                  "end_token": 41,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "CanAccessCalendarEventService",
                      "start_token": 41,
                      "end_token": 41,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/modules/calendar/common/query-hooks/calendar-event/services/can-access-calendar-event.service'",
          "start_token": 44,
          "end_token": 44,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { CalendarChannelEventAssociationWorkspaceEntity } from 'src/modules/calendar/common/standard-objects/calendar-channel-event-association.workspace-entity';",
      "start_token": 46,
      "end_token": 52,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ CalendarChannelEventAssociationWorkspaceEntity }",
          "start_token": 47,
          "end_token": 49,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ CalendarChannelEventAssociationWorkspaceEntity }",
              "start_token": 47,
              "end_token": 49,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "CalendarChannelEventAssociationWorkspaceEntity",
                  "start_token": 48,
                  "end_token": 48,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "CalendarChannelEventAssociationWorkspaceEntity",
                      "start_token": 48,
                      "end_token": 48,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/modules/calendar/common/standard-objects/calendar-channel-event-association.workspace-entity'",
          "start_token": 51,
          "end_token": 51,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { AuthContext } from 'src/engine/core-modules/auth/types/auth-context.type';",
      "start_token": 53,
      "end_token": 59,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ AuthContext }",
          "start_token": 54,
          "end_token": 56,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ AuthContext }",
              "start_token": 54,
              "end_token": 56,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "AuthContext",
                  "start_token": 55,
                  "end_token": 55,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "AuthContext",
                      "start_token": 55,
                      "end_token": 55,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'src/engine/core-modules/auth/types/auth-context.type'",
          "start_token": 58,
          "end_token": 58,
          "children": []
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "@WorkspaceQueryHook({\n  key: `calendarEvent.findMany`,\n  scope: Scope.REQUEST,\n})\nexport class CalendarEventFindManyPreQueryHook\n  implements WorkspaceQueryHookInstance\n{\n  constructor(\n    private readonly twentyORMManager: TwentyORMManager,\n    private readonly canAccessCalendarEventService: CanAccessCalendarEventService,\n  ) {}\n  async execute(\n    authContext: AuthContext,\n    objectName: string,\n    payload: FindManyResolverArgs,\n  ): Promise<FindManyResolverArgs> {\n    if (!payload?.filter?.id?.eq) {\n      throw new BadRequestException('id filter is required');\n    }\n    if (!authContext.user?.id) {\n      throw new BadRequestException('User id is required');\n    }\n    const calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      );\n    const calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      });\n    if (calendarChannelCalendarEventAssociations.length === 0) {\n      throw new NotFoundException();\n    }\n    await this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    );\n    return payload;\n  }\n}",
      "start_token": 60,
      "end_token": 258,
      "children": [
        {
          "type": "Decorator",
          "label": "@WorkspaceQueryHook({\n  key: `calendarEvent.findMany`,\n  scope: Scope.REQUEST,\n})",
          "start_token": 60,
          "end_token": 74,
          "children": [
            {
              "type": "CallExpression",
              "label": "WorkspaceQueryHook({\n  key: `calendarEvent.findMany`,\n  scope: Scope.REQUEST,\n})",
              "start_token": 60,
              "end_token": 74,
              "children": [
                {
                  "type": "Identifier",
                  "label": "WorkspaceQueryHook",
                  "start_token": 60,
                  "end_token": 60,
                  "children": []
                },
                {
                  "type": "ObjectLiteralExpression",
                  "label": "{\n  key: `calendarEvent.findMany`,\n  scope: Scope.REQUEST,\n}",
                  "start_token": 62,
                  "end_token": 73,
                  "children": [
                    {
                      "type": "PropertyAssignment",
                      "label": "key: `calendarEvent.findMany`",
                      "start_token": 63,
                      "end_token": 65,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "key",
                          "start_token": 63,
                          "end_token": 63,
                          "children": []
                        },
                        {
                          "type": "FirstTemplateToken",
                          "label": "`calendarEvent.findMany`",
                          "start_token": 65,
                          "end_token": 65,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "PropertyAssignment",
                      "label": "scope: Scope.REQUEST",
                      "start_token": 67,
                      "end_token": 71,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "scope",
                          "start_token": 67,
                          "end_token": 67,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Scope.REQUEST",
                          "start_token": 69,
                          "end_token": 71,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Scope",
                              "start_token": 69,
                              "end_token": 69,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "REQUEST",
                              "start_token": 71,
                              "end_token": 71,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 75,
          "end_token": 75,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "CalendarEventFindManyPreQueryHook",
          "start_token": 77,
          "end_token": 77,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements WorkspaceQueryHookInstance",
          "start_token": 78,
          "end_token": 79,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "WorkspaceQueryHookInstance",
              "start_token": 79,
              "end_token": 79,
              "children": [
                {
                  "type": "Identifier",
                  "label": "WorkspaceQueryHookInstance",
                  "start_token": 79,
                  "end_token": 79,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(\n    private readonly twentyORMManager: TwentyORMManager,\n    private readonly canAccessCalendarEventService: CanAccessCalendarEventService,\n  ) {}",
          "start_token": 81,
          "end_token": 97,
          "children": [
            {
              "type": "Parameter",
              "label": "private readonly twentyORMManager: TwentyORMManager",
              "start_token": 83,
              "end_token": 87,
              "children": [
                {
                  "type": "PrivateKeyword",
                  "label": "private",
                  "start_token": 83,
                  "end_token": 83,
                  "children": []
                },
                {
                  "type": "ReadonlyKeyword",
                  "label": "readonly",
                  "start_token": 84,
                  "end_token": 84,
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "twentyORMManager",
                  "start_token": 85,
                  "end_token": 85,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "TwentyORMManager",
                  "start_token": 87,
                  "end_token": 87,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TwentyORMManager",
                      "start_token": 87,
                      "end_token": 87,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "private readonly canAccessCalendarEventService: CanAccessCalendarEventService",
              "start_token": 89,
              "end_token": 93,
              "children": [
                {
                  "type": "PrivateKeyword",
                  "label": "private",
                  "start_token": 89,
                  "end_token": 89,
                  "children": []
                },
                {
                  "type": "ReadonlyKeyword",
                  "label": "readonly",
                  "start_token": 90,
                  "end_token": 90,
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "canAccessCalendarEventService",
                  "start_token": 91,
                  "end_token": 91,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "CanAccessCalendarEventService",
                  "start_token": 93,
                  "end_token": 93,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "CanAccessCalendarEventService",
                      "start_token": 93,
                      "end_token": 93,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{}",
              "start_token": 96,
              "end_token": 97,
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async execute(\n    authContext: AuthContext,\n    objectName: string,\n    payload: FindManyResolverArgs,\n  ): Promise<FindManyResolverArgs> {\n    if (!payload?.filter?.id?.eq) {\n      throw new BadRequestException('id filter is required');\n    }\n    if (!authContext.user?.id) {\n      throw new BadRequestException('User id is required');\n    }\n    const calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      );\n    const calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      });\n    if (calendarChannelCalendarEventAssociations.length === 0) {\n      throw new NotFoundException();\n    }\n    await this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    );\n    return payload;\n  }",
          "start_token": 98,
          "end_token": 257,
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "start_token": 98,
              "end_token": 98,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "execute",
              "start_token": 99,
              "end_token": 99,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "authContext: AuthContext",
              "start_token": 101,
              "end_token": 103,
              "children": [
                {
                  "type": "Identifier",
                  "label": "authContext",
                  "start_token": 101,
                  "end_token": 101,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "AuthContext",
                  "start_token": 103,
                  "end_token": 103,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "AuthContext",
                      "start_token": 103,
                      "end_token": 103,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "objectName: string",
              "start_token": 105,
              "end_token": 107,
              "children": [
                {
                  "type": "Identifier",
                  "label": "objectName",
                  "start_token": 105,
                  "end_token": 105,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 107,
                  "end_token": 107,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "payload: FindManyResolverArgs",
              "start_token": 109,
              "end_token": 111,
              "children": [
                {
                  "type": "Identifier",
                  "label": "payload",
                  "start_token": 109,
                  "end_token": 109,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FindManyResolverArgs",
                  "start_token": 111,
                  "end_token": 111,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FindManyResolverArgs",
                      "start_token": 111,
                      "end_token": 111,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<FindManyResolverArgs>",
              "start_token": 115,
              "end_token": 118,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "start_token": 115,
                  "end_token": 115,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "FindManyResolverArgs",
                  "start_token": 117,
                  "end_token": 117,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FindManyResolverArgs",
                      "start_token": 117,
                      "end_token": 117,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (!payload?.filter?.id?.eq) {\n      throw new BadRequestException('id filter is required');\n    }\n    if (!authContext.user?.id) {\n      throw new BadRequestException('User id is required');\n    }\n    const calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      );\n    const calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      });\n    if (calendarChannelCalendarEventAssociations.length === 0) {\n      throw new NotFoundException();\n    }\n    await this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    );\n    return payload;\n  }",
              "start_token": 119,
              "end_token": 257,
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (!payload?.filter?.id?.eq) {\n      throw new BadRequestException('id filter is required');\n    }",
                  "start_token": 120,
                  "end_token": 142,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!payload?.filter?.id?.eq",
                      "start_token": 122,
                      "end_token": 132,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "payload?.filter?.id?.eq",
                          "start_token": 123,
                          "end_token": 132,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "payload?.filter?.id",
                              "start_token": 123,
                              "end_token": 129,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "payload?.filter",
                                  "start_token": 123,
                                  "end_token": 126,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "payload",
                                      "start_token": 123,
                                      "end_token": 123,
                                      "children": []
                                    },
                                    {
                                      "type": "QuestionDotToken",
                                      "label": "?.",
                                      "start_token": 124,
                                      "end_token": 125,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "filter",
                                      "start_token": 126,
                                      "end_token": 126,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "QuestionDotToken",
                                  "label": "?.",
                                  "start_token": 127,
                                  "end_token": 128,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "id",
                                  "start_token": 129,
                                  "end_token": 129,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionDotToken",
                              "label": "?.",
                              "start_token": 130,
                              "end_token": 131,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "eq",
                              "start_token": 132,
                              "end_token": 132,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new BadRequestException('id filter is required');\n    }",
                      "start_token": 134,
                      "end_token": 142,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new BadRequestException('id filter is required');",
                          "start_token": 135,
                          "end_token": 141,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new BadRequestException('id filter is required')",
                              "start_token": 136,
                              "end_token": 140,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "BadRequestException",
                                  "start_token": 137,
                                  "end_token": 137,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'id filter is required'",
                                  "start_token": 139,
                                  "end_token": 139,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!authContext.user?.id) {\n      throw new BadRequestException('User id is required');\n    }",
                  "start_token": 143,
                  "end_token": 161,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!authContext.user?.id",
                      "start_token": 145,
                      "end_token": 151,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "authContext.user?.id",
                          "start_token": 146,
                          "end_token": 151,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "authContext.user",
                              "start_token": 146,
                              "end_token": 148,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "authContext",
                                  "start_token": 146,
                                  "end_token": 146,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "user",
                                  "start_token": 148,
                                  "end_token": 148,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionDotToken",
                              "label": "?.",
                              "start_token": 149,
                              "end_token": 150,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "start_token": 151,
                              "end_token": 151,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new BadRequestException('User id is required');\n    }",
                      "start_token": 153,
                      "end_token": 161,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new BadRequestException('User id is required');",
                          "start_token": 154,
                          "end_token": 160,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new BadRequestException('User id is required')",
                              "start_token": 155,
                              "end_token": 159,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "BadRequestException",
                                  "start_token": 156,
                                  "end_token": 156,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'User id is required'",
                                  "start_token": 158,
                                  "end_token": 158,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      );",
                  "start_token": 162,
                  "end_token": 178,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      )",
                      "start_token": 162,
                      "end_token": 177,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "calendarChannelEventAssociationRepository =\n      await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      )",
                          "start_token": 163,
                          "end_token": 177,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "calendarChannelEventAssociationRepository",
                              "start_token": 163,
                              "end_token": 163,
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      )",
                              "start_token": 165,
                              "end_token": 177,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.twentyORMManager.getRepository<CalendarChannelEventAssociationWorkspaceEntity>(\n        'calendarChannelEventAssociation',\n      )",
                                  "start_token": 166,
                                  "end_token": 177,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.twentyORMManager.getRepository",
                                      "start_token": 166,
                                      "end_token": 170,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.twentyORMManager",
                                          "start_token": 166,
                                          "end_token": 168,
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "start_token": 166,
                                              "end_token": 166,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "twentyORMManager",
                                              "start_token": 168,
                                              "end_token": 168,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getRepository",
                                          "start_token": 170,
                                          "end_token": 170,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "CalendarChannelEventAssociationWorkspaceEntity",
                                      "start_token": 172,
                                      "end_token": 172,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "CalendarChannelEventAssociationWorkspaceEntity",
                                          "start_token": 172,
                                          "end_token": 172,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'calendarChannelEventAssociation'",
                                      "start_token": 175,
                                      "end_token": 175,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      });",
                  "start_token": 179,
                  "end_token": 214,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      })",
                      "start_token": 179,
                      "end_token": 213,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "calendarChannelCalendarEventAssociations =\n      await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      })",
                          "start_token": 180,
                          "end_token": 213,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "calendarChannelCalendarEventAssociations",
                              "start_token": 180,
                              "end_token": 180,
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      })",
                              "start_token": 182,
                              "end_token": 213,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "calendarChannelEventAssociationRepository.find({\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      })",
                                  "start_token": 183,
                                  "end_token": 213,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "calendarChannelEventAssociationRepository.find",
                                      "start_token": 183,
                                      "end_token": 185,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "calendarChannelEventAssociationRepository",
                                          "start_token": 183,
                                          "end_token": 183,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "find",
                                          "start_token": 185,
                                          "end_token": 185,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        },\n        relations: ['calendarChannel.connectedAccount'],\n      }",
                                      "start_token": 187,
                                      "end_token": 212,
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "where: {\n          calendarEventId: payload?.filter?.id?.eq,\n        }",
                                          "start_token": 188,
                                          "end_token": 204,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "where",
                                              "start_token": 188,
                                              "end_token": 188,
                                              "children": []
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n          calendarEventId: payload?.filter?.id?.eq,\n        }",
                                              "start_token": 190,
                                              "end_token": 204,
                                              "children": [
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "calendarEventId: payload?.filter?.id?.eq",
                                                  "start_token": 191,
                                                  "end_token": 202,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "calendarEventId",
                                                      "start_token": 191,
                                                      "end_token": 191,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "payload?.filter?.id?.eq",
                                                      "start_token": 193,
                                                      "end_token": 202,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "payload?.filter?.id",
                                                          "start_token": 193,
                                                          "end_token": 199,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "payload?.filter",
                                                              "start_token": 193,
                                                              "end_token": 196,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "payload",
                                                                  "start_token": 193,
                                                                  "end_token": 193,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "QuestionDotToken",
                                                                  "label": "?.",
                                                                  "start_token": 194,
                                                                  "end_token": 195,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "filter",
                                                                  "start_token": 196,
                                                                  "end_token": 196,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "QuestionDotToken",
                                                              "label": "?.",
                                                              "start_token": 197,
                                                              "end_token": 198,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "id",
                                                              "start_token": 199,
                                                              "end_token": 199,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "QuestionDotToken",
                                                          "label": "?.",
                                                          "start_token": 200,
                                                          "end_token": 201,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "eq",
                                                          "start_token": 202,
                                                          "end_token": 202,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "relations: ['calendarChannel.connectedAccount']",
                                          "start_token": 206,
                                          "end_token": 210,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "relations",
                                              "start_token": 206,
                                              "end_token": 206,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrayLiteralExpression",
                                              "label": "['calendarChannel.connectedAccount']",
                                              "start_token": 208,
                                              "end_token": 210,
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'calendarChannel.connectedAccount'",
                                                  "start_token": 209,
                                                  "end_token": 209,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (calendarChannelCalendarEventAssociations.length === 0) {\n      throw new NotFoundException();\n    }",
                  "start_token": 215,
                  "end_token": 230,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "calendarChannelCalendarEventAssociations.length === 0",
                      "start_token": 217,
                      "end_token": 221,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "calendarChannelCalendarEventAssociations.length",
                          "start_token": 217,
                          "end_token": 219,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "calendarChannelCalendarEventAssociations",
                              "start_token": 217,
                              "end_token": 217,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "start_token": 219,
                              "end_token": 219,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 220,
                          "end_token": 220,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 221,
                          "end_token": 221,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new NotFoundException();\n    }",
                      "start_token": 223,
                      "end_token": 230,
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new NotFoundException();",
                          "start_token": 224,
                          "end_token": 229,
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new NotFoundException()",
                              "start_token": 225,
                              "end_token": 228,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "NotFoundException",
                                  "start_token": 226,
                                  "end_token": 226,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    );",
                  "start_token": 231,
                  "end_token": 253,
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    )",
                      "start_token": 231,
                      "end_token": 252,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.canAccessCalendarEventService.canAccessCalendarEvent(\n      authContext.user.id,\n      authContext.workspace.id,\n      calendarChannelCalendarEventAssociations,\n    )",
                          "start_token": 232,
                          "end_token": 252,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.canAccessCalendarEventService.canAccessCalendarEvent",
                              "start_token": 232,
                              "end_token": 236,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.canAccessCalendarEventService",
                                  "start_token": 232,
                                  "end_token": 234,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 232,
                                      "end_token": 232,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "canAccessCalendarEventService",
                                      "start_token": 234,
                                      "end_token": 234,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "canAccessCalendarEvent",
                                  "start_token": 236,
                                  "end_token": 236,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "authContext.user.id",
                              "start_token": 238,
                              "end_token": 242,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "authContext.user",
                                  "start_token": 238,
                                  "end_token": 240,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "authContext",
                                      "start_token": 238,
                                      "end_token": 238,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "user",
                                      "start_token": 240,
                                      "end_token": 240,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "id",
                                  "start_token": 242,
                                  "end_token": 242,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "authContext.workspace.id",
                              "start_token": 244,
                              "end_token": 248,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "authContext.workspace",
                                  "start_token": 244,
                                  "end_token": 246,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "authContext",
                                      "start_token": 244,
                                      "end_token": 244,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "workspace",
                                      "start_token": 246,
                                      "end_token": 246,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "id",
                                  "start_token": 248,
                                  "end_token": 248,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "calendarChannelCalendarEventAssociations",
                              "start_token": 250,
                              "end_token": 250,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return payload;",
                  "start_token": 254,
                  "end_token": 256,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "payload",
                      "start_token": 255,
                      "end_token": 255,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}