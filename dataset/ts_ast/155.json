{
  "type": "SourceFile",
  "label": "import { Observable } from \"./observable\"\n(<any>Observable.prototype).map = function() { }\ndeclare module \"./observable\" {\n    interface Observable<T> {\n        map<U>(proj: (e:T) => U): Observable<U>\n    }\n    namespace Observable {\n        let someAnotherValue: string;\n    }\n}\n// @filename: observable.ts\nexport declare class Observable<T> {\n    filter(pred: (e:T) => boolean): Observable<T>;\n}\nexport namespace Observable {\n    export let someValue: number;\n}\n// @filename: main.ts\nimport { Observable } from \"./observable\"\nimport \"./map\";\nlet x: Observable<number>;\nlet y = x.map(x => x + 1);\nlet z1 = Observable.someValue.toFixed();\nlet z2 = Observable.someAnotherValue.toLowerCase();",
  "start_token": 0,
  "end_token": 157,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Observable } from \"./observable\"",
      "start_token": 2,
      "end_token": 7,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Observable }",
          "start_token": 3,
          "end_token": 5,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Observable }",
              "start_token": 3,
              "end_token": 5,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Observable",
                  "start_token": 4,
                  "end_token": 4,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Observable",
                      "start_token": 4,
                      "end_token": 4,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "\"./observable\"",
          "start_token": 7,
          "end_token": 7,
          "children": []
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "label": "(<any>Observable.prototype).map = function() { }",
      "start_token": 8,
      "end_token": 23,
      "children": [
        {
          "type": "BinaryExpression",
          "label": "(<any>Observable.prototype).map = function() { }",
          "start_token": 8,
          "end_token": 23,
          "children": [
            {
              "type": "PropertyAccessExpression",
              "label": "(<any>Observable.prototype).map",
              "start_token": 8,
              "end_token": 17,
              "children": [
                {
                  "type": "ParenthesizedExpression",
                  "label": "(<any>Observable.prototype)",
                  "start_token": 8,
                  "end_token": 15,
                  "children": [
                    {
                      "type": "TypeAssertionExpression",
                      "label": "<any>Observable.prototype",
                      "start_token": 9,
                      "end_token": 14,
                      "children": [
                        {
                          "type": "AnyKeyword",
                          "label": "any",
                          "start_token": 10,
                          "end_token": 10,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Observable.prototype",
                          "start_token": 12,
                          "end_token": 14,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Observable",
                              "start_token": 12,
                              "end_token": 12,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "prototype",
                              "start_token": 14,
                              "end_token": 14,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Identifier",
                  "label": "map",
                  "start_token": 17,
                  "end_token": 17,
                  "children": []
                }
              ]
            },
            {
              "type": "FirstAssignment",
              "label": "=",
              "start_token": 18,
              "end_token": 18,
              "children": []
            },
            {
              "type": "FunctionExpression",
              "label": "function() { }",
              "start_token": 19,
              "end_token": 23,
              "children": [
                {
                  "type": "Block",
                  "label": "{ }",
                  "start_token": 22,
                  "end_token": 23,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ModuleDeclaration",
      "label": "declare module \"./observable\" {\n    interface Observable<T> {\n        map<U>(proj: (e:T) => U): Observable<U>\n    }\n    namespace Observable {\n        let someAnotherValue: string;\n    }\n}",
      "start_token": 24,
      "end_token": 64,
      "children": [
        {
          "type": "DeclareKeyword",
          "label": "declare",
          "start_token": 24,
          "end_token": 24,
          "children": []
        },
        {
          "type": "StringLiteral",
          "label": "\"./observable\"",
          "start_token": 26,
          "end_token": 26,
          "children": []
        },
        {
          "type": "ModuleBlock",
          "label": "{\n    interface Observable<T> {\n        map<U>(proj: (e:T) => U): Observable<U>\n    }\n    namespace Observable {\n        let someAnotherValue: string;\n    }\n}",
          "start_token": 27,
          "end_token": 64,
          "children": [
            {
              "type": "InterfaceDeclaration",
              "label": "interface Observable<T> {\n        map<U>(proj: (e:T) => U): Observable<U>\n    }",
              "start_token": 28,
              "end_token": 54,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Observable",
                  "start_token": 29,
                  "end_token": 29,
                  "children": []
                },
                {
                  "type": "TypeParameter",
                  "label": "T",
                  "start_token": 31,
                  "end_token": 31,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "start_token": 31,
                      "end_token": 31,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "MethodSignature",
                  "label": "map<U>(proj: (e:T) => U): Observable<U>",
                  "start_token": 34,
                  "end_token": 53,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "map",
                      "start_token": 34,
                      "end_token": 34,
                      "children": []
                    },
                    {
                      "type": "TypeParameter",
                      "label": "U",
                      "start_token": 36,
                      "end_token": 36,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "U",
                          "start_token": 36,
                          "end_token": 36,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Parameter",
                      "label": "proj: (e:T) => U",
                      "start_token": 39,
                      "end_token": 47,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "proj",
                          "start_token": 39,
                          "end_token": 39,
                          "children": []
                        },
                        {
                          "type": "FunctionType",
                          "label": "(e:T) => U",
                          "start_token": 41,
                          "end_token": 47,
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "e:T",
                              "start_token": 42,
                              "end_token": 44,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "e",
                                  "start_token": 42,
                                  "end_token": 42,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "T",
                                  "start_token": 44,
                                  "end_token": 44,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "T",
                                      "start_token": 44,
                                      "end_token": 44,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "TypeReference",
                              "label": "U",
                              "start_token": 47,
                              "end_token": 47,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "U",
                                  "start_token": 47,
                                  "end_token": 47,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "TypeReference",
                      "label": "Observable<U>",
                      "start_token": 50,
                      "end_token": 53,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Observable",
                          "start_token": 50,
                          "end_token": 50,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "U",
                          "start_token": 52,
                          "end_token": 52,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "U",
                              "start_token": 52,
                              "end_token": 52,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ModuleDeclaration",
              "label": "namespace Observable {\n        let someAnotherValue: string;\n    }",
              "start_token": 55,
              "end_token": 63,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Observable",
                  "start_token": 56,
                  "end_token": 56,
                  "children": []
                },
                {
                  "type": "ModuleBlock",
                  "label": "{\n        let someAnotherValue: string;\n    }",
                  "start_token": 57,
                  "end_token": 63,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "let someAnotherValue: string;",
                      "start_token": 58,
                      "end_token": 62,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "let someAnotherValue: string",
                          "start_token": 58,
                          "end_token": 61,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "someAnotherValue: string",
                              "start_token": 59,
                              "end_token": 61,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "someAnotherValue",
                                  "start_token": 59,
                                  "end_token": 59,
                                  "children": []
                                },
                                {
                                  "type": "StringKeyword",
                                  "label": "string",
                                  "start_token": 61,
                                  "end_token": 61,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export declare class Observable<T> {\n    filter(pred: (e:T) => boolean): Observable<T>;\n}",
      "start_token": 66,
      "end_token": 92,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 66,
          "end_token": 66,
          "children": []
        },
        {
          "type": "DeclareKeyword",
          "label": "declare",
          "start_token": 67,
          "end_token": 67,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "Observable",
          "start_token": 69,
          "end_token": 69,
          "children": []
        },
        {
          "type": "TypeParameter",
          "label": "T",
          "start_token": 71,
          "end_token": 71,
          "children": [
            {
              "type": "Identifier",
              "label": "T",
              "start_token": 71,
              "end_token": 71,
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "filter(pred: (e:T) => boolean): Observable<T>;",
          "start_token": 74,
          "end_token": 91,
          "children": [
            {
              "type": "Identifier",
              "label": "filter",
              "start_token": 74,
              "end_token": 74,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "pred: (e:T) => boolean",
              "start_token": 76,
              "end_token": 84,
              "children": [
                {
                  "type": "Identifier",
                  "label": "pred",
                  "start_token": 76,
                  "end_token": 76,
                  "children": []
                },
                {
                  "type": "FunctionType",
                  "label": "(e:T) => boolean",
                  "start_token": 78,
                  "end_token": 84,
                  "children": [
                    {
                      "type": "Parameter",
                      "label": "e:T",
                      "start_token": 79,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "e",
                          "start_token": 79,
                          "end_token": 79,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "T",
                          "start_token": 81,
                          "end_token": 81,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "T",
                              "start_token": 81,
                              "end_token": 81,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BooleanKeyword",
                      "label": "boolean",
                      "start_token": 84,
                      "end_token": 84,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Observable<T>",
              "start_token": 87,
              "end_token": 90,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Observable",
                  "start_token": 87,
                  "end_token": 87,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "T",
                  "start_token": 89,
                  "end_token": 89,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "T",
                      "start_token": 89,
                      "end_token": 89,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ModuleDeclaration",
      "label": "export namespace Observable {\n    export let someValue: number;\n}",
      "start_token": 93,
      "end_token": 103,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 93,
          "end_token": 93,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "Observable",
          "start_token": 95,
          "end_token": 95,
          "children": []
        },
        {
          "type": "ModuleBlock",
          "label": "{\n    export let someValue: number;\n}",
          "start_token": 96,
          "end_token": 103,
          "children": [
            {
              "type": "FirstStatement",
              "label": "export let someValue: number;",
              "start_token": 97,
              "end_token": 102,
              "children": [
                {
                  "type": "ExportKeyword",
                  "label": "export",
                  "start_token": 97,
                  "end_token": 97,
                  "children": []
                },
                {
                  "type": "VariableDeclarationList",
                  "label": "let someValue: number",
                  "start_token": 98,
                  "end_token": 101,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "someValue: number",
                      "start_token": 99,
                      "end_token": 101,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "someValue",
                          "start_token": 99,
                          "end_token": 99,
                          "children": []
                        },
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "start_token": 101,
                          "end_token": 101,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Observable } from \"./observable\"",
      "start_token": 105,
      "end_token": 110,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Observable }",
          "start_token": 106,
          "end_token": 108,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Observable }",
              "start_token": 106,
              "end_token": 108,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Observable",
                  "start_token": 107,
                  "end_token": 107,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Observable",
                      "start_token": 107,
                      "end_token": 107,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "\"./observable\"",
          "start_token": 110,
          "end_token": 110,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import \"./map\";",
      "start_token": 111,
      "end_token": 113,
      "children": [
        {
          "type": "StringLiteral",
          "label": "\"./map\"",
          "start_token": 112,
          "end_token": 112,
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "let x: Observable<number>;",
      "start_token": 114,
      "end_token": 121,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "let x: Observable<number>",
          "start_token": 114,
          "end_token": 120,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "x: Observable<number>",
              "start_token": 115,
              "end_token": 120,
              "children": [
                {
                  "type": "Identifier",
                  "label": "x",
                  "start_token": 115,
                  "end_token": 115,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Observable<number>",
                  "start_token": 117,
                  "end_token": 120,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Observable",
                      "start_token": 117,
                      "end_token": 117,
                      "children": []
                    },
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 119,
                      "end_token": 119,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "let y = x.map(x => x + 1);",
      "start_token": 122,
      "end_token": 135,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "let y = x.map(x => x + 1)",
          "start_token": 122,
          "end_token": 134,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "y = x.map(x => x + 1)",
              "start_token": 123,
              "end_token": 134,
              "children": [
                {
                  "type": "Identifier",
                  "label": "y",
                  "start_token": 123,
                  "end_token": 123,
                  "children": []
                },
                {
                  "type": "CallExpression",
                  "label": "x.map(x => x + 1)",
                  "start_token": 125,
                  "end_token": 134,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "x.map",
                      "start_token": 125,
                      "end_token": 127,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "x",
                          "start_token": 125,
                          "end_token": 125,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "map",
                          "start_token": 127,
                          "end_token": 127,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ArrowFunction",
                      "label": "x => x + 1",
                      "start_token": 129,
                      "end_token": 133,
                      "children": [
                        {
                          "type": "Parameter",
                          "label": "x",
                          "start_token": 129,
                          "end_token": 129,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "x",
                              "start_token": 129,
                              "end_token": 129,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsGreaterThanToken",
                          "label": "=>",
                          "start_token": 130,
                          "end_token": 130,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "x + 1",
                          "start_token": 131,
                          "end_token": 133,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "x",
                              "start_token": 131,
                              "end_token": 131,
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "start_token": 132,
                              "end_token": 132,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "start_token": 133,
                              "end_token": 133,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "let z1 = Observable.someValue.toFixed();",
      "start_token": 136,
      "end_token": 146,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "let z1 = Observable.someValue.toFixed()",
          "start_token": 136,
          "end_token": 145,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "z1 = Observable.someValue.toFixed()",
              "start_token": 137,
              "end_token": 145,
              "children": [
                {
                  "type": "Identifier",
                  "label": "z1",
                  "start_token": 137,
                  "end_token": 137,
                  "children": []
                },
                {
                  "type": "CallExpression",
                  "label": "Observable.someValue.toFixed()",
                  "start_token": 139,
                  "end_token": 145,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "Observable.someValue.toFixed",
                      "start_token": 139,
                      "end_token": 143,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Observable.someValue",
                          "start_token": 139,
                          "end_token": 141,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Observable",
                              "start_token": 139,
                              "end_token": 139,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "someValue",
                              "start_token": 141,
                              "end_token": 141,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "toFixed",
                          "start_token": 143,
                          "end_token": 143,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "let z2 = Observable.someAnotherValue.toLowerCase();",
      "start_token": 147,
      "end_token": 157,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "let z2 = Observable.someAnotherValue.toLowerCase()",
          "start_token": 147,
          "end_token": 156,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "z2 = Observable.someAnotherValue.toLowerCase()",
              "start_token": 148,
              "end_token": 156,
              "children": [
                {
                  "type": "Identifier",
                  "label": "z2",
                  "start_token": 148,
                  "end_token": 148,
                  "children": []
                },
                {
                  "type": "CallExpression",
                  "label": "Observable.someAnotherValue.toLowerCase()",
                  "start_token": 150,
                  "end_token": 156,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "Observable.someAnotherValue.toLowerCase",
                      "start_token": 150,
                      "end_token": 154,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Observable.someAnotherValue",
                          "start_token": 150,
                          "end_token": 152,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Observable",
                              "start_token": 150,
                              "end_token": 150,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "someAnotherValue",
                              "start_token": 152,
                              "end_token": 152,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "toLowerCase",
                          "start_token": 154,
                          "end_token": 154,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}