{
  "type": "SourceFile",
  "label": "import type { IFederationServer, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationServersModel } from '@rocket.chat/model-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Collection, Db, IndexDescription, UpdateResult } from 'mongodb';\nimport { BaseRaw } from './BaseRaw';\nexport class FederationServersRaw extends BaseRaw<IFederationServer> implements IFederationServersModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IFederationServer>>) {\n\t\tsuper(db, 'federation_servers', trash);\n\t}\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { domain: 1 } }];\n\t}\n\tsaveDomain(domain: string): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\tasync refreshServers(): Promise<void> {\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}",
  "start_token": 0,
  "end_token": 204,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import type { IFederationServer, RocketChatRecordDeleted } from '@rocket.chat/core-typings';",
      "start_token": 0,
      "end_token": 9,
      "children": [
        {
          "type": "ImportClause",
          "label": "type { IFederationServer, RocketChatRecordDeleted }",
          "start_token": 1,
          "end_token": 6,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ IFederationServer, RocketChatRecordDeleted }",
              "start_token": 2,
              "end_token": 6,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "IFederationServer",
                  "start_token": 3,
                  "end_token": 3,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "IFederationServer",
                      "start_token": 3,
                      "end_token": 3,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "RocketChatRecordDeleted",
                  "start_token": 5,
                  "end_token": 5,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "RocketChatRecordDeleted",
                      "start_token": 5,
                      "end_token": 5,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@rocket.chat/core-typings'",
          "start_token": 8,
          "end_token": 8,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { IFederationServersModel } from '@rocket.chat/model-typings';",
      "start_token": 10,
      "end_token": 17,
      "children": [
        {
          "type": "ImportClause",
          "label": "type { IFederationServersModel }",
          "start_token": 11,
          "end_token": 14,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ IFederationServersModel }",
              "start_token": 12,
              "end_token": 14,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "IFederationServersModel",
                  "start_token": 13,
                  "end_token": 13,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "IFederationServersModel",
                      "start_token": 13,
                      "end_token": 13,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@rocket.chat/model-typings'",
          "start_token": 16,
          "end_token": 16,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Users } from '@rocket.chat/models';",
      "start_token": 18,
      "end_token": 24,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Users }",
          "start_token": 19,
          "end_token": 21,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Users }",
              "start_token": 19,
              "end_token": 21,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Users",
                  "start_token": 20,
                  "end_token": 20,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Users",
                      "start_token": 20,
                      "end_token": 20,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@rocket.chat/models'",
          "start_token": 23,
          "end_token": 23,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { Collection, Db, IndexDescription, UpdateResult } from 'mongodb';",
      "start_token": 25,
      "end_token": 38,
      "children": [
        {
          "type": "ImportClause",
          "label": "type { Collection, Db, IndexDescription, UpdateResult }",
          "start_token": 26,
          "end_token": 35,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Collection, Db, IndexDescription, UpdateResult }",
              "start_token": 27,
              "end_token": 35,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Collection",
                  "start_token": 28,
                  "end_token": 28,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Collection",
                      "start_token": 28,
                      "end_token": 28,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Db",
                  "start_token": 30,
                  "end_token": 30,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Db",
                      "start_token": 30,
                      "end_token": 30,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "IndexDescription",
                  "start_token": 32,
                  "end_token": 32,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "IndexDescription",
                      "start_token": 32,
                      "end_token": 32,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "UpdateResult",
                  "start_token": 34,
                  "end_token": 34,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UpdateResult",
                      "start_token": 34,
                      "end_token": 34,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'mongodb'",
          "start_token": 37,
          "end_token": 37,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { BaseRaw } from './BaseRaw';",
      "start_token": 39,
      "end_token": 45,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ BaseRaw }",
          "start_token": 40,
          "end_token": 42,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BaseRaw }",
              "start_token": 40,
              "end_token": 42,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BaseRaw",
                  "start_token": 41,
                  "end_token": 41,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BaseRaw",
                      "start_token": 41,
                      "end_token": 41,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./BaseRaw'",
          "start_token": 44,
          "end_token": 44,
          "children": []
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class FederationServersRaw extends BaseRaw<IFederationServer> implements IFederationServersModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IFederationServer>>) {\n\t\tsuper(db, 'federation_servers', trash);\n\t}\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { domain: 1 } }];\n\t}\n\tsaveDomain(domain: string): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\tasync refreshServers(): Promise<void> {\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}",
      "start_token": 46,
      "end_token": 204,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 46,
          "end_token": 46,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "FederationServersRaw",
          "start_token": 48,
          "end_token": 48,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends BaseRaw<IFederationServer>",
          "start_token": 49,
          "end_token": 53,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "BaseRaw<IFederationServer>",
              "start_token": 50,
              "end_token": 53,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BaseRaw",
                  "start_token": 50,
                  "end_token": 50,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "IFederationServer",
                  "start_token": 52,
                  "end_token": 52,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "IFederationServer",
                      "start_token": 52,
                      "end_token": 52,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "HeritageClause",
          "label": "implements IFederationServersModel",
          "start_token": 54,
          "end_token": 55,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "IFederationServersModel",
              "start_token": 55,
              "end_token": 55,
              "children": [
                {
                  "type": "Identifier",
                  "label": "IFederationServersModel",
                  "start_token": 55,
                  "end_token": 55,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IFederationServer>>) {\n\t\tsuper(db, 'federation_servers', trash);\n\t}",
          "start_token": 57,
          "end_token": 84,
          "children": [
            {
              "type": "Parameter",
              "label": "db: Db",
              "start_token": 59,
              "end_token": 61,
              "children": [
                {
                  "type": "Identifier",
                  "label": "db",
                  "start_token": 59,
                  "end_token": 59,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Db",
                  "start_token": 61,
                  "end_token": 61,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Db",
                      "start_token": 61,
                      "end_token": 61,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "trash?: Collection<RocketChatRecordDeleted<IFederationServer>>",
              "start_token": 63,
              "end_token": 72,
              "children": [
                {
                  "type": "Identifier",
                  "label": "trash",
                  "start_token": 63,
                  "end_token": 63,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 64,
                  "end_token": 64,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Collection<RocketChatRecordDeleted<IFederationServer>>",
                  "start_token": 66,
                  "end_token": 72,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Collection",
                      "start_token": 66,
                      "end_token": 66,
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "RocketChatRecordDeleted<IFederationServer>",
                      "start_token": 68,
                      "end_token": 71,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "RocketChatRecordDeleted",
                          "start_token": 68,
                          "end_token": 68,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "IFederationServer",
                          "start_token": 70,
                          "end_token": 70,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "IFederationServer",
                              "start_token": 70,
                              "end_token": 70,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n\t\tsuper(db, 'federation_servers', trash);\n\t}",
              "start_token": 74,
              "end_token": 84,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(db, 'federation_servers', trash);",
                  "start_token": 75,
                  "end_token": 83,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(db, 'federation_servers', trash)",
                      "start_token": 75,
                      "end_token": 82,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 75,
                          "end_token": 75,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "db",
                          "start_token": 77,
                          "end_token": 77,
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'federation_servers'",
                          "start_token": 79,
                          "end_token": 79,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "trash",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { domain: 1 } }];\n\t}",
          "start_token": 85,
          "end_token": 107,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 85,
              "end_token": 85,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "modelIndexes",
              "start_token": 86,
              "end_token": 86,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "IndexDescription[]",
              "start_token": 90,
              "end_token": 92,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "IndexDescription",
                  "start_token": 90,
                  "end_token": 90,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "IndexDescription",
                      "start_token": 90,
                      "end_token": 90,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n\t\treturn [{ key: { domain: 1 } }];\n\t}",
              "start_token": 93,
              "end_token": 107,
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return [{ key: { domain: 1 } }];",
                  "start_token": 94,
                  "end_token": 106,
                  "children": [
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[{ key: { domain: 1 } }]",
                      "start_token": 95,
                      "end_token": 105,
                      "children": [
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{ key: { domain: 1 } }",
                          "start_token": 96,
                          "end_token": 104,
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "key: { domain: 1 }",
                              "start_token": 97,
                              "end_token": 103,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "key",
                                  "start_token": 97,
                                  "end_token": 97,
                                  "children": []
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{ domain: 1 }",
                                  "start_token": 99,
                                  "end_token": 103,
                                  "children": [
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "domain: 1",
                                      "start_token": 100,
                                      "end_token": 102,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "domain",
                                          "start_token": 100,
                                          "end_token": 100,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "start_token": 102,
                                          "end_token": 102,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "saveDomain(domain: string): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}",
          "start_token": 108,
          "end_token": 147,
          "children": [
            {
              "type": "Identifier",
              "label": "saveDomain",
              "start_token": 108,
              "end_token": 108,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "domain: string",
              "start_token": 110,
              "end_token": 112,
              "children": [
                {
                  "type": "Identifier",
                  "label": "domain",
                  "start_token": 110,
                  "end_token": 110,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 112,
                  "end_token": 112,
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<UpdateResult>",
              "start_token": 115,
              "end_token": 118,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "start_token": 115,
                  "end_token": 115,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "UpdateResult",
                  "start_token": 117,
                  "end_token": 117,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UpdateResult",
                      "start_token": 117,
                      "end_token": 117,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}",
              "start_token": 119,
              "end_token": 147,
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);",
                  "start_token": 120,
                  "end_token": 146,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t)",
                      "start_token": 121,
                      "end_token": 145,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.updateOne",
                          "start_token": 121,
                          "end_token": 123,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 121,
                              "end_token": 121,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "updateOne",
                              "start_token": 123,
                              "end_token": 123,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{ domain }",
                          "start_token": 125,
                          "end_token": 127,
                          "children": [
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "domain",
                              "start_token": 126,
                              "end_token": 126,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "domain",
                                  "start_token": 126,
                                  "end_token": 126,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t}",
                          "start_token": 129,
                          "end_token": 137,
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t}",
                              "start_token": 130,
                              "end_token": 135,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$setOnInsert",
                                  "start_token": 130,
                                  "end_token": 130,
                                  "children": []
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n\t\t\t\t\tdomain,\n\t\t\t\t}",
                                  "start_token": 132,
                                  "end_token": 135,
                                  "children": [
                                    {
                                      "type": "ShorthandPropertyAssignment",
                                      "label": "domain",
                                      "start_token": 133,
                                      "end_token": 133,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "domain",
                                          "start_token": 133,
                                          "end_token": 133,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{ upsert: true }",
                          "start_token": 139,
                          "end_token": 143,
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "upsert: true",
                              "start_token": 140,
                              "end_token": 142,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "upsert",
                                  "start_token": 140,
                                  "end_token": 140,
                                  "children": []
                                },
                                {
                                  "type": "TrueKeyword",
                                  "label": "true",
                                  "start_token": 142,
                                  "end_token": 142,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async refreshServers(): Promise<void> {\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}",
          "start_token": 148,
          "end_token": 203,
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "start_token": 148,
              "end_token": 148,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "refreshServers",
              "start_token": 149,
              "end_token": 149,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "start_token": 153,
              "end_token": 156,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "start_token": 153,
                  "end_token": 153,
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "start_token": 155,
                  "end_token": 155,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}",
              "start_token": 157,
              "end_token": 203,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const domains = await Users.getDistinctFederationDomains();",
                  "start_token": 159,
                  "end_token": 168,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const domains = await Users.getDistinctFederationDomains()",
                      "start_token": 159,
                      "end_token": 167,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "domains = await Users.getDistinctFederationDomains()",
                          "start_token": 160,
                          "end_token": 167,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "domains",
                              "start_token": 160,
                              "end_token": 160,
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await Users.getDistinctFederationDomains()",
                              "start_token": 162,
                              "end_token": 167,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Users.getDistinctFederationDomains()",
                                  "start_token": 163,
                                  "end_token": 167,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Users.getDistinctFederationDomains",
                                      "start_token": 163,
                                      "end_token": 165,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Users",
                                          "start_token": 163,
                                          "end_token": 163,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getDistinctFederationDomains",
                                          "start_token": 165,
                                          "end_token": 165,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForOfStatement",
                  "label": "for await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}",
                  "start_token": 169,
                  "end_token": 186,
                  "children": [
                    {
                      "type": "AwaitKeyword",
                      "label": "await",
                      "start_token": 170,
                      "end_token": 170,
                      "children": []
                    },
                    {
                      "type": "VariableDeclarationList",
                      "label": "const domain",
                      "start_token": 172,
                      "end_token": 173,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "domain",
                          "start_token": 173,
                          "end_token": 173,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "domain",
                              "start_token": 173,
                              "end_token": 173,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Identifier",
                      "label": "domains",
                      "start_token": 175,
                      "end_token": 175,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n\t\t\tawait this.saveDomain(domain);\n\t\t}",
                      "start_token": 177,
                      "end_token": 186,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await this.saveDomain(domain);",
                          "start_token": 178,
                          "end_token": 185,
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await this.saveDomain(domain)",
                              "start_token": 178,
                              "end_token": 184,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.saveDomain(domain)",
                                  "start_token": 179,
                                  "end_token": 184,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.saveDomain",
                                      "start_token": 179,
                                      "end_token": 181,
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "start_token": 179,
                                          "end_token": 179,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "saveDomain",
                                          "start_token": 181,
                                          "end_token": 181,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "domain",
                                      "start_token": 183,
                                      "end_token": 183,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.deleteMany({ domain: { $nin: domains } });",
                  "start_token": 187,
                  "end_token": 202,
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.deleteMany({ domain: { $nin: domains } })",
                      "start_token": 187,
                      "end_token": 201,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.deleteMany({ domain: { $nin: domains } })",
                          "start_token": 188,
                          "end_token": 201,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.deleteMany",
                              "start_token": 188,
                              "end_token": 190,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 188,
                                  "end_token": 188,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "deleteMany",
                                  "start_token": 190,
                                  "end_token": 190,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{ domain: { $nin: domains } }",
                              "start_token": 192,
                              "end_token": 200,
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "domain: { $nin: domains }",
                                  "start_token": 193,
                                  "end_token": 199,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "domain",
                                      "start_token": 193,
                                      "end_token": 193,
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{ $nin: domains }",
                                      "start_token": 195,
                                      "end_token": 199,
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "$nin: domains",
                                          "start_token": 196,
                                          "end_token": 198,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "$nin",
                                              "start_token": 196,
                                              "end_token": 196,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "domains",
                                              "start_token": 198,
                                              "end_token": 198,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}