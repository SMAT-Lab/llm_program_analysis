{
  "type": "SourceFile",
  "label": "import {CommonModule} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewRef,\n} from '@angular/core';\nimport {TestBed} from '@angular/core/testing';\nimport {By} from '@angular/platform-browser';\ndescribe('view insertion', () => {\n  describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  });\n  describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  });\n  describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  });\n  describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  });\n  describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  });\n  describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  });\n  describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  });\n});",
  "start_token": 0,
  "end_token": 4477,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import {CommonModule} from '@angular/common';",
      "start_token": 0,
      "end_token": 6,
      "children": [
        {
          "type": "ImportClause",
          "label": "{CommonModule}",
          "start_token": 1,
          "end_token": 3,
          "children": [
            {
              "type": "NamedImports",
              "label": "{CommonModule}",
              "start_token": 1,
              "end_token": 3,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "CommonModule",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "CommonModule",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@angular/common'",
          "start_token": 5,
          "end_token": 5,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewRef,\n} from '@angular/core';",
      "start_token": 7,
      "end_token": 34,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewRef,\n}",
          "start_token": 8,
          "end_token": 31,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewRef,\n}",
              "start_token": 8,
              "end_token": 31,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ChangeDetectorRef",
                  "start_token": 9,
                  "end_token": 9,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ChangeDetectorRef",
                      "start_token": 9,
                      "end_token": 9,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Component",
                  "start_token": 11,
                  "end_token": 11,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Component",
                      "start_token": 11,
                      "end_token": 11,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Directive",
                  "start_token": 13,
                  "end_token": 13,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Directive",
                      "start_token": 13,
                      "end_token": 13,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "EmbeddedViewRef",
                  "start_token": 15,
                  "end_token": 15,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "EmbeddedViewRef",
                      "start_token": 15,
                      "end_token": 15,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Injectable",
                  "start_token": 17,
                  "end_token": 17,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Injectable",
                      "start_token": 17,
                      "end_token": 17,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Injector",
                  "start_token": 19,
                  "end_token": 19,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Injector",
                      "start_token": 19,
                      "end_token": 19,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Input",
                  "start_token": 21,
                  "end_token": 21,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Input",
                      "start_token": 21,
                      "end_token": 21,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "TemplateRef",
                  "start_token": 23,
                  "end_token": 23,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TemplateRef",
                      "start_token": 23,
                      "end_token": 23,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "ViewChild",
                  "start_token": 25,
                  "end_token": 25,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ViewChild",
                      "start_token": 25,
                      "end_token": 25,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "ViewContainerRef",
                  "start_token": 27,
                  "end_token": 27,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ViewContainerRef",
                      "start_token": 27,
                      "end_token": 27,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "ViewRef",
                  "start_token": 29,
                  "end_token": 29,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ViewRef",
                      "start_token": 29,
                      "end_token": 29,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@angular/core'",
          "start_token": 33,
          "end_token": 33,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {TestBed} from '@angular/core/testing';",
      "start_token": 35,
      "end_token": 41,
      "children": [
        {
          "type": "ImportClause",
          "label": "{TestBed}",
          "start_token": 36,
          "end_token": 38,
          "children": [
            {
              "type": "NamedImports",
              "label": "{TestBed}",
              "start_token": 36,
              "end_token": 38,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "TestBed",
                  "start_token": 37,
                  "end_token": 37,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TestBed",
                      "start_token": 37,
                      "end_token": 37,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@angular/core/testing'",
          "start_token": 40,
          "end_token": 40,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {By} from '@angular/platform-browser';",
      "start_token": 42,
      "end_token": 48,
      "children": [
        {
          "type": "ImportClause",
          "label": "{By}",
          "start_token": 43,
          "end_token": 45,
          "children": [
            {
              "type": "NamedImports",
              "label": "{By}",
              "start_token": 43,
              "end_token": 45,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "By",
                  "start_token": 44,
                  "end_token": 44,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "By",
                      "start_token": 44,
                      "end_token": 44,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@angular/platform-browser'",
          "start_token": 47,
          "end_token": 47,
          "children": []
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "label": "describe('view insertion', () => {\n  describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  });\n  describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  });\n  describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  });\n  describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  });\n  describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  });\n  describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  });\n  describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  });\n});",
      "start_token": 49,
      "end_token": 4477,
      "children": [
        {
          "type": "CallExpression",
          "label": "describe('view insertion', () => {\n  describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  });\n  describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  });\n  describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  });\n  describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  });\n  describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  });\n  describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  });\n  describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  });\n})",
          "start_token": 49,
          "end_token": 4476,
          "children": [
            {
              "type": "Identifier",
              "label": "describe",
              "start_token": 49,
              "end_token": 49,
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "'view insertion'",
              "start_token": 51,
              "end_token": 51,
              "children": []
            },
            {
              "type": "ArrowFunction",
              "label": "() => {\n  describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  });\n  describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  });\n  describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  });\n  describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  });\n  describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  });\n  describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  });\n  describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  });\n}",
              "start_token": 53,
              "end_token": 4475,
              "children": [
                {
                  "type": "EqualsGreaterThanToken",
                  "label": "=>",
                  "start_token": 55,
                  "end_token": 55,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n  describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  });\n  describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  });\n  describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  });\n  describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  });\n  describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  });\n  describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  });\n  describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  });\n}",
                  "start_token": 56,
                  "end_token": 4475,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  });",
                      "start_token": 57,
                      "end_token": 445,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('of a simple template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  })",
                          "start_token": 57,
                          "end_token": 444,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 57,
                              "end_token": 57,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'of a simple template'",
                              "start_token": 59,
                              "end_token": 59,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  }",
                              "start_token": 61,
                              "end_token": 443,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 63,
                                  "end_token": 63,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });\n  }",
                                  "start_token": 64,
                                  "end_token": 443,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    });",
                                      "start_token": 65,
                                      "end_token": 442,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    })",
                                          "start_token": 65,
                                          "end_token": 441,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 65,
                                              "end_token": 65,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should insert into an empty container, at the front, in the middle, and at the end'",
                                              "start_token": 67,
                                              "end_token": 67,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    }",
                                              "start_token": 69,
                                              "end_token": 440,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 71,
                                                  "end_token": 71,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      let _counter = 0;\n      @Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }\n      @Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      // The text in each component differs based on *when* it was created.\n      expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');\n    }",
                                                  "start_token": 72,
                                                  "end_token": 440,
                                                  "children": [
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "let _counter = 0;",
                                                      "start_token": 73,
                                                      "end_token": 77,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "let _counter = 0",
                                                          "start_token": 73,
                                                          "end_token": 76,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "_counter = 0",
                                                              "start_token": 74,
                                                              "end_token": 76,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_counter",
                                                                  "start_token": 74,
                                                                  "end_token": 74,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "FirstLiteralToken",
                                                                  "label": "0",
                                                                  "start_token": 76,
                                                                  "end_token": 76,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })\n      class IncrementComp {\n        counter = _counter++;\n      }",
                                                      "start_token": 78,
                                                      "end_token": 104,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })",
                                                          "start_token": 78,
                                                          "end_token": 94,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      })",
                                                              "start_token": 78,
                                                              "end_token": 94,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 78,
                                                                  "end_token": 78,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'increment-comp',\n        template: `<span>created{{counter}}</span>`,\n        standalone: false,\n      }",
                                                                  "start_token": 80,
                                                                  "end_token": 93,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'increment-comp'",
                                                                      "start_token": 81,
                                                                      "end_token": 83,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 81,
                                                                          "end_token": 81,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'increment-comp'",
                                                                          "start_token": 83,
                                                                          "end_token": 83,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<span>created{{counter}}</span>`",
                                                                      "start_token": 85,
                                                                      "end_token": 87,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 85,
                                                                          "end_token": 85,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<span>created{{counter}}</span>`",
                                                                          "start_token": 87,
                                                                          "end_token": 87,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 89,
                                                                      "end_token": 91,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 89,
                                                                          "end_token": 89,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 91,
                                                                          "end_token": 91,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "IncrementComp",
                                                          "start_token": 96,
                                                          "end_token": 96,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "counter = _counter++;",
                                                          "start_token": 98,
                                                          "end_token": 103,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "counter",
                                                              "start_token": 98,
                                                              "end_token": 98,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PostfixUnaryExpression",
                                                              "label": "_counter++",
                                                              "start_token": 100,
                                                              "end_token": 102,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_counter",
                                                                  "start_token": 100,
                                                                  "end_token": 100,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;\n        @ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetector: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }\n      }",
                                                      "start_token": 105,
                                                      "end_token": 309,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })",
                                                          "start_token": 105,
                                                          "end_token": 117,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })",
                                                              "start_token": 105,
                                                              "end_token": 117,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 105,
                                                                  "end_token": 105,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      }",
                                                                  "start_token": 107,
                                                                  "end_token": 116,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `",
                                                                      "start_token": 108,
                                                                      "end_token": 110,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 108,
                                                                          "end_token": 108,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n              <ng-template #simple><increment-comp></increment-comp></ng-template>\n              <div #container></div>\n            `",
                                                                          "start_token": 110,
                                                                          "end_token": 110,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 112,
                                                                      "end_token": 114,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 112,
                                                                          "end_token": 112,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 114,
                                                                          "end_token": 114,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "App",
                                                          "start_token": 119,
                                                          "end_token": 119,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('container', {read: ViewContainerRef, static: true})\n        container: ViewContainerRef = null!;",
                                                          "start_token": 121,
                                                          "end_token": 141,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('container', {read: ViewContainerRef, static: true})",
                                                              "start_token": 121,
                                                              "end_token": 134,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('container', {read: ViewContainerRef, static: true})",
                                                                  "start_token": 121,
                                                                  "end_token": 134,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 121,
                                                                      "end_token": 121,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'container'",
                                                                      "start_token": 123,
                                                                      "end_token": 123,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: ViewContainerRef, static: true}",
                                                                      "start_token": 125,
                                                                      "end_token": 133,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: ViewContainerRef",
                                                                          "start_token": 126,
                                                                          "end_token": 128,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 126,
                                                                              "end_token": 126,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "ViewContainerRef",
                                                                              "start_token": 128,
                                                                              "end_token": 128,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 130,
                                                                          "end_token": 132,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 130,
                                                                              "end_token": 130,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 132,
                                                                              "end_token": 132,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "container",
                                                              "start_token": 135,
                                                              "end_token": 135,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewContainerRef",
                                                              "start_token": 137,
                                                              "end_token": 137,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 137,
                                                                  "end_token": 137,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 139,
                                                              "end_token": 140,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 139,
                                                                  "end_token": 139,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('simple', {read: TemplateRef, static: true}) simple: TemplateRef<any> = null!;",
                                                          "start_token": 142,
                                                          "end_token": 165,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('simple', {read: TemplateRef, static: true})",
                                                              "start_token": 142,
                                                              "end_token": 155,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('simple', {read: TemplateRef, static: true})",
                                                                  "start_token": 142,
                                                                  "end_token": 155,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 142,
                                                                      "end_token": 142,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'simple'",
                                                                      "start_token": 144,
                                                                      "end_token": 144,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: TemplateRef, static: true}",
                                                                      "start_token": 146,
                                                                      "end_token": 154,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: TemplateRef",
                                                                          "start_token": 147,
                                                                          "end_token": 149,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 147,
                                                                              "end_token": 147,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TemplateRef",
                                                                              "start_token": 149,
                                                                              "end_token": 149,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 151,
                                                                          "end_token": 153,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 151,
                                                                              "end_token": 151,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 153,
                                                                              "end_token": 153,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "simple",
                                                              "start_token": 156,
                                                              "end_token": 156,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<any>",
                                                              "start_token": 158,
                                                              "end_token": 161,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 158,
                                                                  "end_token": 158,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 160,
                                                                  "end_token": 160,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 163,
                                                              "end_token": 164,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 163,
                                                                  "end_token": 163,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view0: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 166,
                                                          "end_token": 175,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view0",
                                                              "start_token": 166,
                                                              "end_token": 166,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 168,
                                                              "end_token": 171,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 168,
                                                                  "end_token": 168,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 170,
                                                                  "end_token": 170,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 173,
                                                              "end_token": 174,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 173,
                                                                  "end_token": 173,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view1: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 176,
                                                          "end_token": 185,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view1",
                                                              "start_token": 176,
                                                              "end_token": 176,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 178,
                                                              "end_token": 181,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 178,
                                                                  "end_token": 178,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 180,
                                                                  "end_token": 180,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 183,
                                                              "end_token": 184,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 183,
                                                                  "end_token": 183,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view2: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 186,
                                                          "end_token": 195,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view2",
                                                              "start_token": 186,
                                                              "end_token": 186,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 188,
                                                              "end_token": 191,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 188,
                                                                  "end_token": 188,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 190,
                                                                  "end_token": 190,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 193,
                                                              "end_token": 194,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 193,
                                                                  "end_token": 193,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view3: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 196,
                                                          "end_token": 205,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view3",
                                                              "start_token": 196,
                                                              "end_token": 196,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 198,
                                                              "end_token": 201,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 198,
                                                                  "end_token": 198,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 200,
                                                                  "end_token": 200,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 203,
                                                              "end_token": 204,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 203,
                                                                  "end_token": 203,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor(public changeDetector: ChangeDetectorRef) {}",
                                                          "start_token": 206,
                                                          "end_token": 214,
                                                          "children": [
                                                            {
                                                              "type": "Parameter",
                                                              "label": "public changeDetector: ChangeDetectorRef",
                                                              "start_token": 208,
                                                              "end_token": 211,
                                                              "children": [
                                                                {
                                                                  "type": "PublicKeyword",
                                                                  "label": "public",
                                                                  "start_token": 208,
                                                                  "end_token": 208,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "changeDetector",
                                                                  "start_token": 209,
                                                                  "end_token": 209,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "ChangeDetectorRef",
                                                                  "start_token": 211,
                                                                  "end_token": 211,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ChangeDetectorRef",
                                                                      "start_token": 211,
                                                                      "end_token": 211,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{}",
                                                              "start_token": 213,
                                                              "end_token": 214,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }",
                                                          "start_token": 215,
                                                          "end_token": 308,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "ngAfterViewInit",
                                                              "start_token": 215,
                                                              "end_token": 215,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.simple); // \"created0\"\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.simple, {}, 0); // \"created1\"\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.simple); // \"created2\"\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.simple, {}, 2); // \"created3\"\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value updating in\n          // increment-comp\n          this.changeDetector.detectChanges();\n        }",
                                                              "start_token": 218,
                                                              "end_token": 308,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view1 = this.container.createEmbeddedView(this.simple);",
                                                                  "start_token": 220,
                                                                  "end_token": 234,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view1 = this.container.createEmbeddedView(this.simple)",
                                                                      "start_token": 220,
                                                                      "end_token": 233,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view1",
                                                                          "start_token": 220,
                                                                          "end_token": 222,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 220,
                                                                              "end_token": 220,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 222,
                                                                              "end_token": 222,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 223,
                                                                          "end_token": 223,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.simple)",
                                                                          "start_token": 224,
                                                                          "end_token": 233,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 224,
                                                                              "end_token": 228,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 224,
                                                                                  "end_token": 226,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 224,
                                                                                      "end_token": 224,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 226,
                                                                                      "end_token": 226,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 228,
                                                                                  "end_token": 228,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.simple",
                                                                              "start_token": 230,
                                                                              "end_token": 232,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 230,
                                                                                  "end_token": 230,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "simple",
                                                                                  "start_token": 232,
                                                                                  "end_token": 232,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view0 = this.container.createEmbeddedView(this.simple, {}, 0);",
                                                                  "start_token": 237,
                                                                  "end_token": 256,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view0 = this.container.createEmbeddedView(this.simple, {}, 0)",
                                                                      "start_token": 237,
                                                                      "end_token": 255,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view0",
                                                                          "start_token": 237,
                                                                          "end_token": 239,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 237,
                                                                              "end_token": 237,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 239,
                                                                              "end_token": 239,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 240,
                                                                          "end_token": 240,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.simple, {}, 0)",
                                                                          "start_token": 241,
                                                                          "end_token": 255,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 241,
                                                                              "end_token": 245,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 241,
                                                                                  "end_token": 243,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 241,
                                                                                      "end_token": 241,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 243,
                                                                                      "end_token": 243,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 245,
                                                                                  "end_token": 245,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.simple",
                                                                              "start_token": 247,
                                                                              "end_token": 249,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 247,
                                                                                  "end_token": 247,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "simple",
                                                                                  "start_token": 249,
                                                                                  "end_token": 249,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{}",
                                                                              "start_token": 251,
                                                                              "end_token": 252,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "0",
                                                                              "start_token": 254,
                                                                              "end_token": 254,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view3 = this.container.createEmbeddedView(this.simple);",
                                                                  "start_token": 259,
                                                                  "end_token": 273,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view3 = this.container.createEmbeddedView(this.simple)",
                                                                      "start_token": 259,
                                                                      "end_token": 272,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view3",
                                                                          "start_token": 259,
                                                                          "end_token": 261,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 259,
                                                                              "end_token": 259,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 261,
                                                                              "end_token": 261,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 262,
                                                                          "end_token": 262,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.simple)",
                                                                          "start_token": 263,
                                                                          "end_token": 272,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 263,
                                                                              "end_token": 267,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 263,
                                                                                  "end_token": 265,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 263,
                                                                                      "end_token": 263,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 265,
                                                                                      "end_token": 265,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 267,
                                                                                  "end_token": 267,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.simple",
                                                                              "start_token": 269,
                                                                              "end_token": 271,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 269,
                                                                                  "end_token": 269,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "simple",
                                                                                  "start_token": 271,
                                                                                  "end_token": 271,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view2 = this.container.createEmbeddedView(this.simple, {}, 2);",
                                                                  "start_token": 276,
                                                                  "end_token": 295,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view2 = this.container.createEmbeddedView(this.simple, {}, 2)",
                                                                      "start_token": 276,
                                                                      "end_token": 294,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view2",
                                                                          "start_token": 276,
                                                                          "end_token": 278,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 276,
                                                                              "end_token": 276,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 278,
                                                                              "end_token": 278,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 279,
                                                                          "end_token": 279,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.simple, {}, 2)",
                                                                          "start_token": 280,
                                                                          "end_token": 294,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 280,
                                                                              "end_token": 284,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 280,
                                                                                  "end_token": 282,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 280,
                                                                                      "end_token": 280,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 282,
                                                                                      "end_token": 282,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 284,
                                                                                  "end_token": 284,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.simple",
                                                                              "start_token": 286,
                                                                              "end_token": 288,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 286,
                                                                                  "end_token": 286,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "simple",
                                                                                  "start_token": 288,
                                                                                  "end_token": 288,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{}",
                                                                              "start_token": 290,
                                                                              "end_token": 291,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "2",
                                                                              "start_token": 293,
                                                                              "end_token": 293,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.changeDetector.detectChanges();",
                                                                  "start_token": 300,
                                                                  "end_token": 307,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this.changeDetector.detectChanges()",
                                                                      "start_token": 300,
                                                                      "end_token": 306,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.changeDetector.detectChanges",
                                                                          "start_token": 300,
                                                                          "end_token": 304,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.changeDetector",
                                                                              "start_token": 300,
                                                                              "end_token": 302,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 300,
                                                                                  "end_token": 300,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "changeDetector",
                                                                                  "start_token": 302,
                                                                                  "end_token": 302,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "detectChanges",
                                                                              "start_token": 304,
                                                                              "end_token": 304,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      });",
                                                      "start_token": 310,
                                                      "end_token": 325,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [App, IncrementComp],\n      })",
                                                          "start_token": 310,
                                                          "end_token": 324,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 310,
                                                              "end_token": 312,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 310,
                                                                  "end_token": 310,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 312,
                                                                  "end_token": 312,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [App, IncrementComp],\n      }",
                                                              "start_token": 314,
                                                              "end_token": 323,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [App, IncrementComp]",
                                                                  "start_token": 315,
                                                                  "end_token": 321,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 315,
                                                                      "end_token": 315,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[App, IncrementComp]",
                                                                      "start_token": 317,
                                                                      "end_token": 321,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "App",
                                                                          "start_token": 318,
                                                                          "end_token": 318,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "IncrementComp",
                                                                          "start_token": 320,
                                                                          "end_token": 320,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(App);",
                                                      "start_token": 326,
                                                      "end_token": 335,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(App)",
                                                          "start_token": 326,
                                                          "end_token": 334,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(App)",
                                                              "start_token": 327,
                                                              "end_token": 334,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 327,
                                                                  "end_token": 327,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(App)",
                                                                  "start_token": 329,
                                                                  "end_token": 334,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 329,
                                                                      "end_token": 331,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 329,
                                                                          "end_token": 329,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 331,
                                                                          "end_token": 331,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "App",
                                                                      "start_token": 333,
                                                                      "end_token": 333,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 336,
                                                      "end_token": 341,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 336,
                                                          "end_token": 340,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 336,
                                                              "end_token": 338,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 336,
                                                                  "end_token": 336,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 338,
                                                                  "end_token": 338,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const app = fixture.componentInstance;",
                                                      "start_token": 342,
                                                      "end_token": 348,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const app = fixture.componentInstance",
                                                          "start_token": 342,
                                                          "end_token": 347,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "app = fixture.componentInstance",
                                                              "start_token": 343,
                                                              "end_token": 347,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "app",
                                                                  "start_token": 343,
                                                                  "end_token": 343,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 345,
                                                                  "end_token": 347,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 345,
                                                                      "end_token": 345,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 347,
                                                                      "end_token": 347,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view0)).toBe(0);",
                                                      "start_token": 349,
                                                      "end_token": 367,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view0)).toBe(0)",
                                                          "start_token": 349,
                                                          "end_token": 366,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view0)).toBe",
                                                              "start_token": 349,
                                                              "end_token": 363,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view0))",
                                                                  "start_token": 349,
                                                                  "end_token": 361,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 349,
                                                                      "end_token": 349,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view0)",
                                                                      "start_token": 351,
                                                                      "end_token": 360,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 351,
                                                                          "end_token": 355,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 351,
                                                                              "end_token": 353,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 351,
                                                                                  "end_token": 351,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 353,
                                                                                  "end_token": 353,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 355,
                                                                              "end_token": 355,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view0",
                                                                          "start_token": 357,
                                                                          "end_token": 359,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 357,
                                                                              "end_token": 357,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 359,
                                                                              "end_token": 359,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 363,
                                                                  "end_token": 363,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "0",
                                                              "start_token": 365,
                                                              "end_token": 365,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view1)).toBe(1);",
                                                      "start_token": 368,
                                                      "end_token": 386,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view1)).toBe(1)",
                                                          "start_token": 368,
                                                          "end_token": 385,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view1)).toBe",
                                                              "start_token": 368,
                                                              "end_token": 382,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view1))",
                                                                  "start_token": 368,
                                                                  "end_token": 380,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 368,
                                                                      "end_token": 368,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view1)",
                                                                      "start_token": 370,
                                                                      "end_token": 379,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 370,
                                                                          "end_token": 374,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 370,
                                                                              "end_token": 372,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 370,
                                                                                  "end_token": 370,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 372,
                                                                                  "end_token": 372,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 374,
                                                                              "end_token": 374,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view1",
                                                                          "start_token": 376,
                                                                          "end_token": 378,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 376,
                                                                              "end_token": 376,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 378,
                                                                              "end_token": 378,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 382,
                                                                  "end_token": 382,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "1",
                                                              "start_token": 384,
                                                              "end_token": 384,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view2)).toBe(2);",
                                                      "start_token": 387,
                                                      "end_token": 405,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view2)).toBe(2)",
                                                          "start_token": 387,
                                                          "end_token": 404,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view2)).toBe",
                                                              "start_token": 387,
                                                              "end_token": 401,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view2))",
                                                                  "start_token": 387,
                                                                  "end_token": 399,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 387,
                                                                      "end_token": 387,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view2)",
                                                                      "start_token": 389,
                                                                      "end_token": 398,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 389,
                                                                          "end_token": 393,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 389,
                                                                              "end_token": 391,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 389,
                                                                                  "end_token": 389,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 391,
                                                                                  "end_token": 391,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 393,
                                                                              "end_token": 393,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view2",
                                                                          "start_token": 395,
                                                                          "end_token": 397,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 395,
                                                                              "end_token": 395,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 397,
                                                                              "end_token": 397,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 401,
                                                                  "end_token": 401,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "2",
                                                              "start_token": 403,
                                                              "end_token": 403,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view3)).toBe(3);",
                                                      "start_token": 406,
                                                      "end_token": 424,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view3)).toBe(3)",
                                                          "start_token": 406,
                                                          "end_token": 423,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view3)).toBe",
                                                              "start_token": 406,
                                                              "end_token": 420,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view3))",
                                                                  "start_token": 406,
                                                                  "end_token": 418,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 406,
                                                                      "end_token": 406,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view3)",
                                                                      "start_token": 408,
                                                                      "end_token": 417,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 408,
                                                                          "end_token": 412,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 408,
                                                                              "end_token": 410,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 408,
                                                                                  "end_token": 408,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 410,
                                                                                  "end_token": 410,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 412,
                                                                              "end_token": 412,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view3",
                                                                          "start_token": 414,
                                                                          "end_token": 416,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 414,
                                                                              "end_token": 414,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 416,
                                                                              "end_token": 416,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 420,
                                                                  "end_token": 420,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "3",
                                                              "start_token": 422,
                                                              "end_token": 422,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toBe('created1created0created3created2');",
                                                      "start_token": 426,
                                                      "end_token": 439,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toBe('created1created0created3created2')",
                                                          "start_token": 426,
                                                          "end_token": 438,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                              "start_token": 426,
                                                              "end_token": 435,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 426,
                                                                  "end_token": 433,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 426,
                                                                      "end_token": 426,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 428,
                                                                      "end_token": 432,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 428,
                                                                          "end_token": 430,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 428,
                                                                              "end_token": 428,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 430,
                                                                              "end_token": 430,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 432,
                                                                          "end_token": 432,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 435,
                                                                  "end_token": 435,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'created1created0created3created2'",
                                                              "start_token": 437,
                                                              "end_token": 437,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  });",
                      "start_token": 446,
                      "end_token": 753,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('of an empty template', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  })",
                          "start_token": 446,
                          "end_token": 752,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 446,
                              "end_token": 446,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'of an empty template'",
                              "start_token": 448,
                              "end_token": 448,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  }",
                              "start_token": 450,
                              "end_token": 751,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 452,
                                  "end_token": 452,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });\n  }",
                                  "start_token": 453,
                                  "end_token": 751,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    });",
                                      "start_token": 454,
                                      "end_token": 750,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    })",
                                          "start_token": 454,
                                          "end_token": 749,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 454,
                                              "end_token": 454,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should insert into an empty container, at the front, in the middle, and at the end'",
                                              "start_token": 456,
                                              "end_token": 456,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    }",
                                              "start_token": 458,
                                              "end_token": 748,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 460,
                                                  "end_token": 460,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n    }",
                                                  "start_token": 461,
                                                  "end_token": 748,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }\n      }",
                                                      "start_token": 462,
                                                      "end_token": 634,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })",
                                                          "start_token": 462,
                                                          "end_token": 474,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      })",
                                                              "start_token": 462,
                                                              "end_token": 474,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 462,
                                                                  "end_token": 462,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `,\n        standalone: false,\n      }",
                                                                  "start_token": 464,
                                                                  "end_token": 473,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `",
                                                                      "start_token": 465,
                                                                      "end_token": 467,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 465,
                                                                          "end_token": 465,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n              <ng-template #empty></ng-template>\n              <div #container></div>\n            `",
                                                                          "start_token": 467,
                                                                          "end_token": 467,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 469,
                                                                      "end_token": 471,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 469,
                                                                          "end_token": 469,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 471,
                                                                          "end_token": 471,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "App",
                                                          "start_token": 476,
                                                          "end_token": 476,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;",
                                                          "start_token": 478,
                                                          "end_token": 494,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('container', {read: ViewContainerRef})",
                                                              "start_token": 478,
                                                              "end_token": 487,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('container', {read: ViewContainerRef})",
                                                                  "start_token": 478,
                                                                  "end_token": 487,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 478,
                                                                      "end_token": 478,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'container'",
                                                                      "start_token": 480,
                                                                      "end_token": 480,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: ViewContainerRef}",
                                                                      "start_token": 482,
                                                                      "end_token": 486,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: ViewContainerRef",
                                                                          "start_token": 483,
                                                                          "end_token": 485,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 483,
                                                                              "end_token": 483,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "ViewContainerRef",
                                                                              "start_token": 485,
                                                                              "end_token": 485,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "container",
                                                              "start_token": 488,
                                                              "end_token": 488,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewContainerRef",
                                                              "start_token": 490,
                                                              "end_token": 490,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 490,
                                                                  "end_token": 490,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 492,
                                                              "end_token": 493,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 492,
                                                                  "end_token": 492,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('empty', {read: TemplateRef}) empty: TemplateRef<any> = null!;",
                                                          "start_token": 495,
                                                          "end_token": 514,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('empty', {read: TemplateRef})",
                                                              "start_token": 495,
                                                              "end_token": 504,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('empty', {read: TemplateRef})",
                                                                  "start_token": 495,
                                                                  "end_token": 504,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 495,
                                                                      "end_token": 495,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'empty'",
                                                                      "start_token": 497,
                                                                      "end_token": 497,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: TemplateRef}",
                                                                      "start_token": 499,
                                                                      "end_token": 503,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: TemplateRef",
                                                                          "start_token": 500,
                                                                          "end_token": 502,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 500,
                                                                              "end_token": 500,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TemplateRef",
                                                                              "start_token": 502,
                                                                              "end_token": 502,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "empty",
                                                              "start_token": 505,
                                                              "end_token": 505,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<any>",
                                                              "start_token": 507,
                                                              "end_token": 510,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 507,
                                                                  "end_token": 507,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 509,
                                                                  "end_token": 509,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 512,
                                                              "end_token": 513,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 512,
                                                                  "end_token": 512,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view0: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 515,
                                                          "end_token": 524,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view0",
                                                              "start_token": 515,
                                                              "end_token": 515,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 517,
                                                              "end_token": 520,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 517,
                                                                  "end_token": 517,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 519,
                                                                  "end_token": 519,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 522,
                                                              "end_token": 523,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 522,
                                                                  "end_token": 522,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view1: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 525,
                                                          "end_token": 534,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view1",
                                                              "start_token": 525,
                                                              "end_token": 525,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 527,
                                                              "end_token": 530,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 527,
                                                                  "end_token": 527,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 529,
                                                                  "end_token": 529,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 532,
                                                              "end_token": 533,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 532,
                                                                  "end_token": 532,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view2: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 535,
                                                          "end_token": 544,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view2",
                                                              "start_token": 535,
                                                              "end_token": 535,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 537,
                                                              "end_token": 540,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 537,
                                                                  "end_token": 537,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 539,
                                                                  "end_token": 539,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 542,
                                                              "end_token": 543,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 542,
                                                                  "end_token": 542,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view3: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 545,
                                                          "end_token": 554,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view3",
                                                              "start_token": 545,
                                                              "end_token": 545,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 547,
                                                              "end_token": 550,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 547,
                                                                  "end_token": 547,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 549,
                                                                  "end_token": 549,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 552,
                                                              "end_token": 553,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 552,
                                                                  "end_token": 552,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }",
                                                          "start_token": 555,
                                                          "end_token": 633,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "ngAfterViewInit",
                                                              "start_token": 555,
                                                              "end_token": 555,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.empty);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.empty);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);\n        }",
                                                              "start_token": 558,
                                                              "end_token": 633,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view1 = this.container.createEmbeddedView(this.empty);",
                                                                  "start_token": 560,
                                                                  "end_token": 574,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view1 = this.container.createEmbeddedView(this.empty)",
                                                                      "start_token": 560,
                                                                      "end_token": 573,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view1",
                                                                          "start_token": 560,
                                                                          "end_token": 562,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 560,
                                                                              "end_token": 560,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 562,
                                                                              "end_token": 562,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 563,
                                                                          "end_token": 563,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.empty)",
                                                                          "start_token": 564,
                                                                          "end_token": 573,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 564,
                                                                              "end_token": 568,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 564,
                                                                                  "end_token": 566,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 564,
                                                                                      "end_token": 564,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 566,
                                                                                      "end_token": 566,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 568,
                                                                                  "end_token": 568,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.empty",
                                                                              "start_token": 570,
                                                                              "end_token": 572,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 570,
                                                                                  "end_token": 570,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "empty",
                                                                                  "start_token": 572,
                                                                                  "end_token": 572,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view0 = this.container.createEmbeddedView(this.empty, {}, 0);",
                                                                  "start_token": 576,
                                                                  "end_token": 595,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view0 = this.container.createEmbeddedView(this.empty, {}, 0)",
                                                                      "start_token": 576,
                                                                      "end_token": 594,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view0",
                                                                          "start_token": 576,
                                                                          "end_token": 578,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 576,
                                                                              "end_token": 576,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 578,
                                                                              "end_token": 578,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 579,
                                                                          "end_token": 579,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.empty, {}, 0)",
                                                                          "start_token": 580,
                                                                          "end_token": 594,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 580,
                                                                              "end_token": 584,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 580,
                                                                                  "end_token": 582,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 580,
                                                                                      "end_token": 580,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 582,
                                                                                      "end_token": 582,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 584,
                                                                                  "end_token": 584,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.empty",
                                                                              "start_token": 586,
                                                                              "end_token": 588,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 586,
                                                                                  "end_token": 586,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "empty",
                                                                                  "start_token": 588,
                                                                                  "end_token": 588,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{}",
                                                                              "start_token": 590,
                                                                              "end_token": 591,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "0",
                                                                              "start_token": 593,
                                                                              "end_token": 593,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view3 = this.container.createEmbeddedView(this.empty);",
                                                                  "start_token": 597,
                                                                  "end_token": 611,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view3 = this.container.createEmbeddedView(this.empty)",
                                                                      "start_token": 597,
                                                                      "end_token": 610,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view3",
                                                                          "start_token": 597,
                                                                          "end_token": 599,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 597,
                                                                              "end_token": 597,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 599,
                                                                              "end_token": 599,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 600,
                                                                          "end_token": 600,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.empty)",
                                                                          "start_token": 601,
                                                                          "end_token": 610,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 601,
                                                                              "end_token": 605,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 601,
                                                                                  "end_token": 603,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 601,
                                                                                      "end_token": 601,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 603,
                                                                                      "end_token": 603,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 605,
                                                                                  "end_token": 605,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.empty",
                                                                              "start_token": 607,
                                                                              "end_token": 609,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 607,
                                                                                  "end_token": 607,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "empty",
                                                                                  "start_token": 609,
                                                                                  "end_token": 609,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view2 = this.container.createEmbeddedView(this.empty, {}, 2);",
                                                                  "start_token": 613,
                                                                  "end_token": 632,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view2 = this.container.createEmbeddedView(this.empty, {}, 2)",
                                                                      "start_token": 613,
                                                                      "end_token": 631,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view2",
                                                                          "start_token": 613,
                                                                          "end_token": 615,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 613,
                                                                              "end_token": 613,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 615,
                                                                              "end_token": 615,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 616,
                                                                          "end_token": 616,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.empty, {}, 2)",
                                                                          "start_token": 617,
                                                                          "end_token": 631,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 617,
                                                                              "end_token": 621,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 617,
                                                                                  "end_token": 619,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 617,
                                                                                      "end_token": 617,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 619,
                                                                                      "end_token": 619,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 621,
                                                                                  "end_token": 621,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.empty",
                                                                              "start_token": 623,
                                                                              "end_token": 625,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 623,
                                                                                  "end_token": 623,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "empty",
                                                                                  "start_token": 625,
                                                                                  "end_token": 625,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{}",
                                                                              "start_token": 627,
                                                                              "end_token": 628,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "2",
                                                                              "start_token": 630,
                                                                              "end_token": 630,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [App],\n      });",
                                                      "start_token": 635,
                                                      "end_token": 648,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [App],\n      })",
                                                          "start_token": 635,
                                                          "end_token": 647,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 635,
                                                              "end_token": 637,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 635,
                                                                  "end_token": 635,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 637,
                                                                  "end_token": 637,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [App],\n      }",
                                                              "start_token": 639,
                                                              "end_token": 646,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [App]",
                                                                  "start_token": 640,
                                                                  "end_token": 644,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 640,
                                                                      "end_token": 640,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[App]",
                                                                      "start_token": 642,
                                                                      "end_token": 644,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "App",
                                                                          "start_token": 643,
                                                                          "end_token": 643,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(App);",
                                                      "start_token": 649,
                                                      "end_token": 658,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(App)",
                                                          "start_token": 649,
                                                          "end_token": 657,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(App)",
                                                              "start_token": 650,
                                                              "end_token": 657,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 650,
                                                                  "end_token": 650,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(App)",
                                                                  "start_token": 652,
                                                                  "end_token": 657,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 652,
                                                                      "end_token": 654,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 652,
                                                                          "end_token": 652,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 654,
                                                                          "end_token": 654,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "App",
                                                                      "start_token": 656,
                                                                      "end_token": 656,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 659,
                                                      "end_token": 664,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 659,
                                                          "end_token": 663,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 659,
                                                              "end_token": 661,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 659,
                                                                  "end_token": 659,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 661,
                                                                  "end_token": 661,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const app = fixture.componentInstance;",
                                                      "start_token": 665,
                                                      "end_token": 671,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const app = fixture.componentInstance",
                                                          "start_token": 665,
                                                          "end_token": 670,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "app = fixture.componentInstance",
                                                              "start_token": 666,
                                                              "end_token": 670,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "app",
                                                                  "start_token": 666,
                                                                  "end_token": 666,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 668,
                                                                  "end_token": 670,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 668,
                                                                      "end_token": 668,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 670,
                                                                      "end_token": 670,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view0)).toBe(0);",
                                                      "start_token": 672,
                                                      "end_token": 690,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view0)).toBe(0)",
                                                          "start_token": 672,
                                                          "end_token": 689,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view0)).toBe",
                                                              "start_token": 672,
                                                              "end_token": 686,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view0))",
                                                                  "start_token": 672,
                                                                  "end_token": 684,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 672,
                                                                      "end_token": 672,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view0)",
                                                                      "start_token": 674,
                                                                      "end_token": 683,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 674,
                                                                          "end_token": 678,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 674,
                                                                              "end_token": 676,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 674,
                                                                                  "end_token": 674,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 676,
                                                                                  "end_token": 676,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 678,
                                                                              "end_token": 678,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view0",
                                                                          "start_token": 680,
                                                                          "end_token": 682,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 680,
                                                                              "end_token": 680,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 682,
                                                                              "end_token": 682,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 686,
                                                                  "end_token": 686,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "0",
                                                              "start_token": 688,
                                                              "end_token": 688,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view1)).toBe(1);",
                                                      "start_token": 691,
                                                      "end_token": 709,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view1)).toBe(1)",
                                                          "start_token": 691,
                                                          "end_token": 708,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view1)).toBe",
                                                              "start_token": 691,
                                                              "end_token": 705,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view1))",
                                                                  "start_token": 691,
                                                                  "end_token": 703,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 691,
                                                                      "end_token": 691,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view1)",
                                                                      "start_token": 693,
                                                                      "end_token": 702,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 693,
                                                                          "end_token": 697,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 693,
                                                                              "end_token": 695,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 693,
                                                                                  "end_token": 693,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 695,
                                                                                  "end_token": 695,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 697,
                                                                              "end_token": 697,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view1",
                                                                          "start_token": 699,
                                                                          "end_token": 701,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 699,
                                                                              "end_token": 699,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 701,
                                                                              "end_token": 701,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 705,
                                                                  "end_token": 705,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "1",
                                                              "start_token": 707,
                                                              "end_token": 707,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view2)).toBe(2);",
                                                      "start_token": 710,
                                                      "end_token": 728,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view2)).toBe(2)",
                                                          "start_token": 710,
                                                          "end_token": 727,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view2)).toBe",
                                                              "start_token": 710,
                                                              "end_token": 724,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view2))",
                                                                  "start_token": 710,
                                                                  "end_token": 722,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 710,
                                                                      "end_token": 710,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view2)",
                                                                      "start_token": 712,
                                                                      "end_token": 721,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 712,
                                                                          "end_token": 716,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 712,
                                                                              "end_token": 714,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 712,
                                                                                  "end_token": 712,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 714,
                                                                                  "end_token": 714,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 716,
                                                                              "end_token": 716,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view2",
                                                                          "start_token": 718,
                                                                          "end_token": 720,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 718,
                                                                              "end_token": 718,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 720,
                                                                              "end_token": 720,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 724,
                                                                  "end_token": 724,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "2",
                                                              "start_token": 726,
                                                              "end_token": 726,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view3)).toBe(3);",
                                                      "start_token": 729,
                                                      "end_token": 747,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view3)).toBe(3)",
                                                          "start_token": 729,
                                                          "end_token": 746,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view3)).toBe",
                                                              "start_token": 729,
                                                              "end_token": 743,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view3))",
                                                                  "start_token": 729,
                                                                  "end_token": 741,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 729,
                                                                      "end_token": 729,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view3)",
                                                                      "start_token": 731,
                                                                      "end_token": 740,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 731,
                                                                          "end_token": 735,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 731,
                                                                              "end_token": 733,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 731,
                                                                                  "end_token": 731,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 733,
                                                                                  "end_token": 733,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 735,
                                                                              "end_token": 735,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view3",
                                                                          "start_token": 737,
                                                                          "end_token": 739,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 737,
                                                                              "end_token": 737,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 739,
                                                                              "end_token": 739,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 743,
                                                                  "end_token": 743,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "3",
                                                              "start_token": 745,
                                                              "end_token": 745,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  });",
                      "start_token": 754,
                      "end_token": 1117,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('of an ng-content projection', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  })",
                          "start_token": 754,
                          "end_token": 1116,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 754,
                              "end_token": 754,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'of an ng-content projection'",
                              "start_token": 756,
                              "end_token": 756,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  }",
                              "start_token": 758,
                              "end_token": 1115,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 760,
                                  "end_token": 760,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });\n  }",
                                  "start_token": 761,
                                  "end_token": 1115,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    });",
                                      "start_token": 762,
                                      "end_token": 1114,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    })",
                                          "start_token": 762,
                                          "end_token": 1113,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 762,
                                              "end_token": 762,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should insert into an empty container, at the front, in the middle, and at the end'",
                                              "start_token": 764,
                                              "end_token": 764,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    }",
                                              "start_token": 766,
                                              "end_token": 1112,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 768,
                                                  "end_token": 768,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }\n      @Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);\n      expect(comp.container.indexOf(comp.view0)).toBe(0);\n      expect(comp.container.indexOf(comp.view1)).toBe(1);\n      expect(comp.container.indexOf(comp.view2)).toBe(2);\n      expect(comp.container.indexOf(comp.view3)).toBe(3);\n      // Both ViewEngine and Ivy only honor one of the inserted ng-content components, even though\n      // all are inserted.\n      expect(fixture.nativeElement.textContent).toBe('test');\n    }",
                                                  "start_token": 769,
                                                  "end_token": 1112,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class Comp {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }\n      }",
                                                      "start_token": 770,
                                                      "end_token": 946,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })",
                                                          "start_token": 770,
                                                          "end_token": 786,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })",
                                                              "start_token": 770,
                                                              "end_token": 786,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 770,
                                                                  "end_token": 770,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'comp',\n        template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      }",
                                                                  "start_token": 772,
                                                                  "end_token": 785,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'comp'",
                                                                      "start_token": 773,
                                                                      "end_token": 775,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 773,
                                                                          "end_token": 773,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'comp'",
                                                                          "start_token": 775,
                                                                          "end_token": 775,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `",
                                                                      "start_token": 777,
                                                                      "end_token": 779,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 777,
                                                                          "end_token": 777,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n                  <ng-template #projection><ng-content></ng-content></ng-template>\n                  <div #container></div>\n                `",
                                                                          "start_token": 779,
                                                                          "end_token": 779,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 781,
                                                                      "end_token": 783,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 781,
                                                                          "end_token": 781,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 783,
                                                                          "end_token": 783,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Comp",
                                                          "start_token": 788,
                                                          "end_token": 788,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;",
                                                          "start_token": 790,
                                                          "end_token": 806,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('container', {read: ViewContainerRef})",
                                                              "start_token": 790,
                                                              "end_token": 799,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('container', {read: ViewContainerRef})",
                                                                  "start_token": 790,
                                                                  "end_token": 799,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 790,
                                                                      "end_token": 790,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'container'",
                                                                      "start_token": 792,
                                                                      "end_token": 792,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: ViewContainerRef}",
                                                                      "start_token": 794,
                                                                      "end_token": 798,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: ViewContainerRef",
                                                                          "start_token": 795,
                                                                          "end_token": 797,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 795,
                                                                              "end_token": 795,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "ViewContainerRef",
                                                                              "start_token": 797,
                                                                              "end_token": 797,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "container",
                                                              "start_token": 800,
                                                              "end_token": 800,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewContainerRef",
                                                              "start_token": 802,
                                                              "end_token": 802,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 802,
                                                                  "end_token": 802,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 804,
                                                              "end_token": 805,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 804,
                                                                  "end_token": 804,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('projection', {read: TemplateRef}) projection: TemplateRef<any> = null!;",
                                                          "start_token": 807,
                                                          "end_token": 826,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('projection', {read: TemplateRef})",
                                                              "start_token": 807,
                                                              "end_token": 816,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('projection', {read: TemplateRef})",
                                                                  "start_token": 807,
                                                                  "end_token": 816,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 807,
                                                                      "end_token": 807,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'projection'",
                                                                      "start_token": 809,
                                                                      "end_token": 809,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: TemplateRef}",
                                                                      "start_token": 811,
                                                                      "end_token": 815,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: TemplateRef",
                                                                          "start_token": 812,
                                                                          "end_token": 814,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 812,
                                                                              "end_token": 812,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TemplateRef",
                                                                              "start_token": 814,
                                                                              "end_token": 814,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "projection",
                                                              "start_token": 817,
                                                              "end_token": 817,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<any>",
                                                              "start_token": 819,
                                                              "end_token": 822,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 819,
                                                                  "end_token": 819,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 821,
                                                                  "end_token": 821,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 824,
                                                              "end_token": 825,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 824,
                                                                  "end_token": 824,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view0: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 827,
                                                          "end_token": 836,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view0",
                                                              "start_token": 827,
                                                              "end_token": 827,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 829,
                                                              "end_token": 832,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 829,
                                                                  "end_token": 829,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 831,
                                                                  "end_token": 831,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 834,
                                                              "end_token": 835,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 834,
                                                                  "end_token": 834,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view1: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 837,
                                                          "end_token": 846,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view1",
                                                              "start_token": 837,
                                                              "end_token": 837,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 839,
                                                              "end_token": 842,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 839,
                                                                  "end_token": 839,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 841,
                                                                  "end_token": 841,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 844,
                                                              "end_token": 845,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 844,
                                                                  "end_token": 844,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view2: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 847,
                                                          "end_token": 856,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view2",
                                                              "start_token": 847,
                                                              "end_token": 847,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 849,
                                                              "end_token": 852,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 849,
                                                                  "end_token": 849,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 851,
                                                                  "end_token": 851,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 854,
                                                              "end_token": 855,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 854,
                                                                  "end_token": 854,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view3: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 857,
                                                          "end_token": 866,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view3",
                                                              "start_token": 857,
                                                              "end_token": 857,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 859,
                                                              "end_token": 862,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 859,
                                                                  "end_token": 859,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 861,
                                                                  "end_token": 861,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 864,
                                                              "end_token": 865,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 864,
                                                                  "end_token": 864,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }",
                                                          "start_token": 867,
                                                          "end_token": 945,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "ngAfterViewInit",
                                                              "start_token": 867,
                                                              "end_token": 867,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.projection);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.projection);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);\n        }",
                                                              "start_token": 870,
                                                              "end_token": 945,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view1 = this.container.createEmbeddedView(this.projection);",
                                                                  "start_token": 872,
                                                                  "end_token": 886,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view1 = this.container.createEmbeddedView(this.projection)",
                                                                      "start_token": 872,
                                                                      "end_token": 885,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view1",
                                                                          "start_token": 872,
                                                                          "end_token": 874,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 872,
                                                                              "end_token": 872,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 874,
                                                                              "end_token": 874,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 875,
                                                                          "end_token": 875,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.projection)",
                                                                          "start_token": 876,
                                                                          "end_token": 885,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 876,
                                                                              "end_token": 880,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 876,
                                                                                  "end_token": 878,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 876,
                                                                                      "end_token": 876,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 878,
                                                                                      "end_token": 878,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 880,
                                                                                  "end_token": 880,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.projection",
                                                                              "start_token": 882,
                                                                              "end_token": 884,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 882,
                                                                                  "end_token": 882,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "projection",
                                                                                  "start_token": 884,
                                                                                  "end_token": 884,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view0 = this.container.createEmbeddedView(this.projection, {}, 0);",
                                                                  "start_token": 888,
                                                                  "end_token": 907,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view0 = this.container.createEmbeddedView(this.projection, {}, 0)",
                                                                      "start_token": 888,
                                                                      "end_token": 906,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view0",
                                                                          "start_token": 888,
                                                                          "end_token": 890,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 888,
                                                                              "end_token": 888,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 890,
                                                                              "end_token": 890,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 891,
                                                                          "end_token": 891,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.projection, {}, 0)",
                                                                          "start_token": 892,
                                                                          "end_token": 906,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 892,
                                                                              "end_token": 896,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 892,
                                                                                  "end_token": 894,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 892,
                                                                                      "end_token": 892,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 894,
                                                                                      "end_token": 894,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 896,
                                                                                  "end_token": 896,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.projection",
                                                                              "start_token": 898,
                                                                              "end_token": 900,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 898,
                                                                                  "end_token": 898,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "projection",
                                                                                  "start_token": 900,
                                                                                  "end_token": 900,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{}",
                                                                              "start_token": 902,
                                                                              "end_token": 903,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "0",
                                                                              "start_token": 905,
                                                                              "end_token": 905,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view3 = this.container.createEmbeddedView(this.projection);",
                                                                  "start_token": 909,
                                                                  "end_token": 923,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view3 = this.container.createEmbeddedView(this.projection)",
                                                                      "start_token": 909,
                                                                      "end_token": 922,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view3",
                                                                          "start_token": 909,
                                                                          "end_token": 911,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 909,
                                                                              "end_token": 909,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 911,
                                                                              "end_token": 911,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 912,
                                                                          "end_token": 912,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.projection)",
                                                                          "start_token": 913,
                                                                          "end_token": 922,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 913,
                                                                              "end_token": 917,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 913,
                                                                                  "end_token": 915,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 913,
                                                                                      "end_token": 913,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 915,
                                                                                      "end_token": 915,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 917,
                                                                                  "end_token": 917,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.projection",
                                                                              "start_token": 919,
                                                                              "end_token": 921,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 919,
                                                                                  "end_token": 919,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "projection",
                                                                                  "start_token": 921,
                                                                                  "end_token": 921,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view2 = this.container.createEmbeddedView(this.projection, {}, 2);",
                                                                  "start_token": 925,
                                                                  "end_token": 944,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view2 = this.container.createEmbeddedView(this.projection, {}, 2)",
                                                                      "start_token": 925,
                                                                      "end_token": 943,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view2",
                                                                          "start_token": 925,
                                                                          "end_token": 927,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 925,
                                                                              "end_token": 925,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 927,
                                                                              "end_token": 927,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 928,
                                                                          "end_token": 928,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.projection, {}, 2)",
                                                                          "start_token": 929,
                                                                          "end_token": 943,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 929,
                                                                              "end_token": 933,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 929,
                                                                                  "end_token": 931,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 929,
                                                                                      "end_token": 929,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 931,
                                                                                      "end_token": 931,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 933,
                                                                                  "end_token": 933,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.projection",
                                                                              "start_token": 935,
                                                                              "end_token": 937,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 935,
                                                                                  "end_token": 935,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "projection",
                                                                                  "start_token": 937,
                                                                                  "end_token": 937,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{}",
                                                                              "start_token": 939,
                                                                              "end_token": 940,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "2",
                                                                              "start_token": 942,
                                                                              "end_token": 942,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })\n      class App {}",
                                                      "start_token": 947,
                                                      "end_token": 963,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })",
                                                          "start_token": 947,
                                                          "end_token": 959,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      })",
                                                              "start_token": 947,
                                                              "end_token": 959,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 947,
                                                                  "end_token": 947,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `\n          <comp>test</comp>\n        `,\n        standalone: false,\n      }",
                                                                  "start_token": 949,
                                                                  "end_token": 958,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n          <comp>test</comp>\n        `",
                                                                      "start_token": 950,
                                                                      "end_token": 952,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 950,
                                                                          "end_token": 950,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n          <comp>test</comp>\n        `",
                                                                          "start_token": 952,
                                                                          "end_token": 952,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 954,
                                                                      "end_token": 956,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 954,
                                                                          "end_token": 954,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 956,
                                                                          "end_token": 956,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "App",
                                                          "start_token": 961,
                                                          "end_token": 961,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      });",
                                                      "start_token": 964,
                                                      "end_token": 979,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [App, Comp],\n      })",
                                                          "start_token": 964,
                                                          "end_token": 978,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 964,
                                                              "end_token": 966,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 964,
                                                                  "end_token": 964,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 966,
                                                                  "end_token": 966,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [App, Comp],\n      }",
                                                              "start_token": 968,
                                                              "end_token": 977,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [App, Comp]",
                                                                  "start_token": 969,
                                                                  "end_token": 975,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 969,
                                                                      "end_token": 969,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[App, Comp]",
                                                                      "start_token": 971,
                                                                      "end_token": 975,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "App",
                                                                          "start_token": 972,
                                                                          "end_token": 972,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "Comp",
                                                                          "start_token": 974,
                                                                          "end_token": 974,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(App);",
                                                      "start_token": 980,
                                                      "end_token": 989,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(App)",
                                                          "start_token": 980,
                                                          "end_token": 988,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(App)",
                                                              "start_token": 981,
                                                              "end_token": 988,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 981,
                                                                  "end_token": 981,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(App)",
                                                                  "start_token": 983,
                                                                  "end_token": 988,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 983,
                                                                      "end_token": 985,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 983,
                                                                          "end_token": 983,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 985,
                                                                          "end_token": 985,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "App",
                                                                      "start_token": 987,
                                                                      "end_token": 987,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 990,
                                                      "end_token": 995,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 990,
                                                          "end_token": 994,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 990,
                                                              "end_token": 992,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 990,
                                                                  "end_token": 990,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 992,
                                                                  "end_token": 992,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp);",
                                                      "start_token": 996,
                                                      "end_token": 1019,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp)",
                                                          "start_token": 996,
                                                          "end_token": 1018,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "comp = fixture.debugElement.query(By.directive(Comp)).injector.get(Comp)",
                                                              "start_token": 997,
                                                              "end_token": 1018,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "comp",
                                                                  "start_token": 997,
                                                                  "end_token": 997,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "fixture.debugElement.query(By.directive(Comp)).injector.get(Comp)",
                                                                  "start_token": 999,
                                                                  "end_token": 1018,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.debugElement.query(By.directive(Comp)).injector.get",
                                                                      "start_token": 999,
                                                                      "end_token": 1015,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.debugElement.query(By.directive(Comp)).injector",
                                                                          "start_token": 999,
                                                                          "end_token": 1013,
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "fixture.debugElement.query(By.directive(Comp))",
                                                                              "start_token": 999,
                                                                              "end_token": 1011,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.debugElement.query",
                                                                                  "start_token": 999,
                                                                                  "end_token": 1003,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.debugElement",
                                                                                      "start_token": 999,
                                                                                      "end_token": 1001,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "fixture",
                                                                                          "start_token": 999,
                                                                                          "end_token": 999,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "debugElement",
                                                                                          "start_token": 1001,
                                                                                          "end_token": 1001,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "query",
                                                                                      "start_token": 1003,
                                                                                      "end_token": 1003,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "By.directive(Comp)",
                                                                                  "start_token": 1005,
                                                                                  "end_token": 1010,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "By.directive",
                                                                                      "start_token": 1005,
                                                                                      "end_token": 1007,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "By",
                                                                                          "start_token": 1005,
                                                                                          "end_token": 1005,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "directive",
                                                                                          "start_token": 1007,
                                                                                          "end_token": 1007,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "Comp",
                                                                                      "start_token": 1009,
                                                                                      "end_token": 1009,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "injector",
                                                                              "start_token": 1013,
                                                                              "end_token": 1013,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "get",
                                                                          "start_token": 1015,
                                                                          "end_token": 1015,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "Comp",
                                                                      "start_token": 1017,
                                                                      "end_token": 1017,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(comp.container.indexOf(comp.view0)).toBe(0);",
                                                      "start_token": 1020,
                                                      "end_token": 1038,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(comp.container.indexOf(comp.view0)).toBe(0)",
                                                          "start_token": 1020,
                                                          "end_token": 1037,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(comp.container.indexOf(comp.view0)).toBe",
                                                              "start_token": 1020,
                                                              "end_token": 1034,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(comp.container.indexOf(comp.view0))",
                                                                  "start_token": 1020,
                                                                  "end_token": 1032,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1020,
                                                                      "end_token": 1020,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "comp.container.indexOf(comp.view0)",
                                                                      "start_token": 1022,
                                                                      "end_token": 1031,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.container.indexOf",
                                                                          "start_token": 1022,
                                                                          "end_token": 1026,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "comp.container",
                                                                              "start_token": 1022,
                                                                              "end_token": 1024,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "comp",
                                                                                  "start_token": 1022,
                                                                                  "end_token": 1022,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1024,
                                                                                  "end_token": 1024,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1026,
                                                                              "end_token": 1026,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.view0",
                                                                          "start_token": 1028,
                                                                          "end_token": 1030,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "comp",
                                                                              "start_token": 1028,
                                                                              "end_token": 1028,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 1030,
                                                                              "end_token": 1030,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1034,
                                                                  "end_token": 1034,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "0",
                                                              "start_token": 1036,
                                                              "end_token": 1036,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(comp.container.indexOf(comp.view1)).toBe(1);",
                                                      "start_token": 1039,
                                                      "end_token": 1057,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(comp.container.indexOf(comp.view1)).toBe(1)",
                                                          "start_token": 1039,
                                                          "end_token": 1056,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(comp.container.indexOf(comp.view1)).toBe",
                                                              "start_token": 1039,
                                                              "end_token": 1053,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(comp.container.indexOf(comp.view1))",
                                                                  "start_token": 1039,
                                                                  "end_token": 1051,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1039,
                                                                      "end_token": 1039,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "comp.container.indexOf(comp.view1)",
                                                                      "start_token": 1041,
                                                                      "end_token": 1050,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.container.indexOf",
                                                                          "start_token": 1041,
                                                                          "end_token": 1045,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "comp.container",
                                                                              "start_token": 1041,
                                                                              "end_token": 1043,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "comp",
                                                                                  "start_token": 1041,
                                                                                  "end_token": 1041,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1043,
                                                                                  "end_token": 1043,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1045,
                                                                              "end_token": 1045,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.view1",
                                                                          "start_token": 1047,
                                                                          "end_token": 1049,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "comp",
                                                                              "start_token": 1047,
                                                                              "end_token": 1047,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 1049,
                                                                              "end_token": 1049,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1053,
                                                                  "end_token": 1053,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "1",
                                                              "start_token": 1055,
                                                              "end_token": 1055,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(comp.container.indexOf(comp.view2)).toBe(2);",
                                                      "start_token": 1058,
                                                      "end_token": 1076,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(comp.container.indexOf(comp.view2)).toBe(2)",
                                                          "start_token": 1058,
                                                          "end_token": 1075,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(comp.container.indexOf(comp.view2)).toBe",
                                                              "start_token": 1058,
                                                              "end_token": 1072,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(comp.container.indexOf(comp.view2))",
                                                                  "start_token": 1058,
                                                                  "end_token": 1070,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1058,
                                                                      "end_token": 1058,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "comp.container.indexOf(comp.view2)",
                                                                      "start_token": 1060,
                                                                      "end_token": 1069,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.container.indexOf",
                                                                          "start_token": 1060,
                                                                          "end_token": 1064,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "comp.container",
                                                                              "start_token": 1060,
                                                                              "end_token": 1062,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "comp",
                                                                                  "start_token": 1060,
                                                                                  "end_token": 1060,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1062,
                                                                                  "end_token": 1062,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1064,
                                                                              "end_token": 1064,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.view2",
                                                                          "start_token": 1066,
                                                                          "end_token": 1068,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "comp",
                                                                              "start_token": 1066,
                                                                              "end_token": 1066,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 1068,
                                                                              "end_token": 1068,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1072,
                                                                  "end_token": 1072,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "2",
                                                              "start_token": 1074,
                                                              "end_token": 1074,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(comp.container.indexOf(comp.view3)).toBe(3);",
                                                      "start_token": 1077,
                                                      "end_token": 1095,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(comp.container.indexOf(comp.view3)).toBe(3)",
                                                          "start_token": 1077,
                                                          "end_token": 1094,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(comp.container.indexOf(comp.view3)).toBe",
                                                              "start_token": 1077,
                                                              "end_token": 1091,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(comp.container.indexOf(comp.view3))",
                                                                  "start_token": 1077,
                                                                  "end_token": 1089,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1077,
                                                                      "end_token": 1077,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "comp.container.indexOf(comp.view3)",
                                                                      "start_token": 1079,
                                                                      "end_token": 1088,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.container.indexOf",
                                                                          "start_token": 1079,
                                                                          "end_token": 1083,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "comp.container",
                                                                              "start_token": 1079,
                                                                              "end_token": 1081,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "comp",
                                                                                  "start_token": 1079,
                                                                                  "end_token": 1079,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1081,
                                                                                  "end_token": 1081,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1083,
                                                                              "end_token": 1083,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "comp.view3",
                                                                          "start_token": 1085,
                                                                          "end_token": 1087,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "comp",
                                                                              "start_token": 1085,
                                                                              "end_token": 1085,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 1087,
                                                                              "end_token": 1087,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1091,
                                                                  "end_token": 1091,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "3",
                                                              "start_token": 1093,
                                                              "end_token": 1093,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toBe('test');",
                                                      "start_token": 1098,
                                                      "end_token": 1111,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toBe('test')",
                                                          "start_token": 1098,
                                                          "end_token": 1110,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                              "start_token": 1098,
                                                              "end_token": 1107,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 1098,
                                                                  "end_token": 1105,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1098,
                                                                      "end_token": 1098,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 1100,
                                                                      "end_token": 1104,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 1100,
                                                                          "end_token": 1102,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 1100,
                                                                              "end_token": 1100,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 1102,
                                                                              "end_token": 1102,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 1104,
                                                                          "end_token": 1104,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1107,
                                                                  "end_token": 1107,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'test'",
                                                              "start_token": 1109,
                                                              "end_token": 1109,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  });",
                      "start_token": 1118,
                      "end_token": 1481,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('of another container like ngIf', () => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  })",
                          "start_token": 1118,
                          "end_token": 1480,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 1118,
                              "end_token": 1118,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'of another container like ngIf'",
                              "start_token": 1120,
                              "end_token": 1120,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  }",
                              "start_token": 1122,
                              "end_token": 1479,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 1124,
                                  "end_token": 1124,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });\n  }",
                                  "start_token": 1125,
                                  "end_token": 1479,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    });",
                                      "start_token": 1126,
                                      "end_token": 1478,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should insert into an empty container, at the front, in the middle, and at the end', () => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    })",
                                          "start_token": 1126,
                                          "end_token": 1477,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 1126,
                                              "end_token": 1126,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should insert into an empty container, at the front, in the middle, and at the end'",
                                              "start_token": 1128,
                                              "end_token": 1128,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    }",
                                              "start_token": 1130,
                                              "end_token": 1476,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 1132,
                                                  "end_token": 1132,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(App);\n      fixture.detectChanges();\n      const app = fixture.componentInstance;\n      expect(app.container.indexOf(app.view0)).toBe(0);\n      expect(app.container.indexOf(app.view1)).toBe(1);\n      expect(app.container.indexOf(app.view2)).toBe(2);\n      expect(app.container.indexOf(app.view3)).toBe(3);\n      expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);\n    }",
                                                  "start_token": 1133,
                                                  "end_token": 1476,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;\n        @ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;\n        view0: EmbeddedViewRef<any> = null!;\n        view1: EmbeddedViewRef<any> = null!;\n        view2: EmbeddedViewRef<any> = null!;\n        view3: EmbeddedViewRef<any> = null!;\n        constructor(public changeDetectorRef: ChangeDetectorRef) {}\n        ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }\n      }",
                                                      "start_token": 1134,
                                                      "end_token": 1332,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })",
                                                          "start_token": 1134,
                                                          "end_token": 1146,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      })",
                                                              "start_token": 1134,
                                                              "end_token": 1146,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 1134,
                                                                  "end_token": 1134,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `,\n        standalone: false,\n      }",
                                                                  "start_token": 1136,
                                                                  "end_token": 1145,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `",
                                                                      "start_token": 1137,
                                                                      "end_token": 1139,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 1137,
                                                                          "end_token": 1137,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n                  <ng-template #subContainer><div class=\"dynamic\" *ngIf=\"true\">test</div></ng-template>\n                  <div #container></div>\n                `",
                                                                          "start_token": 1139,
                                                                          "end_token": 1139,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 1141,
                                                                      "end_token": 1143,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 1141,
                                                                          "end_token": 1141,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 1143,
                                                                          "end_token": 1143,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "App",
                                                          "start_token": 1148,
                                                          "end_token": 1148,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef = null!;",
                                                          "start_token": 1150,
                                                          "end_token": 1166,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('container', {read: ViewContainerRef})",
                                                              "start_token": 1150,
                                                              "end_token": 1159,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('container', {read: ViewContainerRef})",
                                                                  "start_token": 1150,
                                                                  "end_token": 1159,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 1150,
                                                                      "end_token": 1150,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'container'",
                                                                      "start_token": 1152,
                                                                      "end_token": 1152,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: ViewContainerRef}",
                                                                      "start_token": 1154,
                                                                      "end_token": 1158,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: ViewContainerRef",
                                                                          "start_token": 1155,
                                                                          "end_token": 1157,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 1155,
                                                                              "end_token": 1155,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "ViewContainerRef",
                                                                              "start_token": 1157,
                                                                              "end_token": 1157,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "container",
                                                              "start_token": 1160,
                                                              "end_token": 1160,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewContainerRef",
                                                              "start_token": 1162,
                                                              "end_token": 1162,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 1162,
                                                                  "end_token": 1162,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 1164,
                                                              "end_token": 1165,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 1164,
                                                                  "end_token": 1164,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('subContainer', {read: TemplateRef}) subContainer: TemplateRef<any> = null!;",
                                                          "start_token": 1167,
                                                          "end_token": 1186,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('subContainer', {read: TemplateRef})",
                                                              "start_token": 1167,
                                                              "end_token": 1176,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('subContainer', {read: TemplateRef})",
                                                                  "start_token": 1167,
                                                                  "end_token": 1176,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 1167,
                                                                      "end_token": 1167,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'subContainer'",
                                                                      "start_token": 1169,
                                                                      "end_token": 1169,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: TemplateRef}",
                                                                      "start_token": 1171,
                                                                      "end_token": 1175,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: TemplateRef",
                                                                          "start_token": 1172,
                                                                          "end_token": 1174,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 1172,
                                                                              "end_token": 1172,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TemplateRef",
                                                                              "start_token": 1174,
                                                                              "end_token": 1174,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "subContainer",
                                                              "start_token": 1177,
                                                              "end_token": 1177,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<any>",
                                                              "start_token": 1179,
                                                              "end_token": 1182,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 1179,
                                                                  "end_token": 1179,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 1181,
                                                                  "end_token": 1181,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 1184,
                                                              "end_token": 1185,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 1184,
                                                                  "end_token": 1184,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view0: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 1187,
                                                          "end_token": 1196,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view0",
                                                              "start_token": 1187,
                                                              "end_token": 1187,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 1189,
                                                              "end_token": 1192,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 1189,
                                                                  "end_token": 1189,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 1191,
                                                                  "end_token": 1191,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 1194,
                                                              "end_token": 1195,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 1194,
                                                                  "end_token": 1194,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view1: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 1197,
                                                          "end_token": 1206,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view1",
                                                              "start_token": 1197,
                                                              "end_token": 1197,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 1199,
                                                              "end_token": 1202,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 1199,
                                                                  "end_token": 1199,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 1201,
                                                                  "end_token": 1201,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 1204,
                                                              "end_token": 1205,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 1204,
                                                                  "end_token": 1204,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view2: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 1207,
                                                          "end_token": 1216,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view2",
                                                              "start_token": 1207,
                                                              "end_token": 1207,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 1209,
                                                              "end_token": 1212,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 1209,
                                                                  "end_token": 1209,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 1211,
                                                                  "end_token": 1211,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 1214,
                                                              "end_token": 1215,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 1214,
                                                                  "end_token": 1214,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "view3: EmbeddedViewRef<any> = null!;",
                                                          "start_token": 1217,
                                                          "end_token": 1226,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "view3",
                                                              "start_token": 1217,
                                                              "end_token": 1217,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "EmbeddedViewRef<any>",
                                                              "start_token": 1219,
                                                              "end_token": 1222,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "EmbeddedViewRef",
                                                                  "start_token": 1219,
                                                                  "end_token": 1219,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 1221,
                                                                  "end_token": 1221,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "NonNullExpression",
                                                              "label": "null!",
                                                              "start_token": 1224,
                                                              "end_token": 1225,
                                                              "children": [
                                                                {
                                                                  "type": "NullKeyword",
                                                                  "label": "null",
                                                                  "start_token": 1224,
                                                                  "end_token": 1224,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor(public changeDetectorRef: ChangeDetectorRef) {}",
                                                          "start_token": 1227,
                                                          "end_token": 1235,
                                                          "children": [
                                                            {
                                                              "type": "Parameter",
                                                              "label": "public changeDetectorRef: ChangeDetectorRef",
                                                              "start_token": 1229,
                                                              "end_token": 1232,
                                                              "children": [
                                                                {
                                                                  "type": "PublicKeyword",
                                                                  "label": "public",
                                                                  "start_token": 1229,
                                                                  "end_token": 1229,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "changeDetectorRef",
                                                                  "start_token": 1230,
                                                                  "end_token": 1230,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "ChangeDetectorRef",
                                                                  "start_token": 1232,
                                                                  "end_token": 1232,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ChangeDetectorRef",
                                                                      "start_token": 1232,
                                                                      "end_token": 1232,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{}",
                                                              "start_token": 1234,
                                                              "end_token": 1235,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "ngAfterViewInit() {\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }",
                                                          "start_token": 1236,
                                                          "end_token": 1331,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "ngAfterViewInit",
                                                              "start_token": 1236,
                                                              "end_token": 1236,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          // insert at the front\n          this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the front again\n          this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);\n          // insert at the end\n          this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // insert in the middle\n          this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);\n          // We need to run change detection here to avoid\n          // ExpressionChangedAfterItHasBeenCheckedError because of the value getting passed to ngIf\n          // in the template.\n          this.changeDetectorRef.detectChanges();\n        }",
                                                              "start_token": 1239,
                                                              "end_token": 1331,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0);",
                                                                  "start_token": 1241,
                                                                  "end_token": 1259,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view1 = this.container.createEmbeddedView(this.subContainer, null, 0)",
                                                                      "start_token": 1241,
                                                                      "end_token": 1258,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view1",
                                                                          "start_token": 1241,
                                                                          "end_token": 1243,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 1241,
                                                                              "end_token": 1241,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 1243,
                                                                              "end_token": 1243,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 1244,
                                                                          "end_token": 1244,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.subContainer, null, 0)",
                                                                          "start_token": 1245,
                                                                          "end_token": 1258,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 1245,
                                                                              "end_token": 1249,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 1245,
                                                                                  "end_token": 1247,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 1245,
                                                                                      "end_token": 1245,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 1247,
                                                                                      "end_token": 1247,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 1249,
                                                                                  "end_token": 1249,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.subContainer",
                                                                              "start_token": 1251,
                                                                              "end_token": 1253,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 1251,
                                                                                  "end_token": 1251,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "subContainer",
                                                                                  "start_token": 1253,
                                                                                  "end_token": 1253,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "NullKeyword",
                                                                              "label": "null",
                                                                              "start_token": 1255,
                                                                              "end_token": 1255,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "0",
                                                                              "start_token": 1257,
                                                                              "end_token": 1257,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0);",
                                                                  "start_token": 1261,
                                                                  "end_token": 1279,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view0 = this.container.createEmbeddedView(this.subContainer, null, 0)",
                                                                      "start_token": 1261,
                                                                      "end_token": 1278,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view0",
                                                                          "start_token": 1261,
                                                                          "end_token": 1263,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 1261,
                                                                              "end_token": 1261,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 1263,
                                                                              "end_token": 1263,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 1264,
                                                                          "end_token": 1264,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.subContainer, null, 0)",
                                                                          "start_token": 1265,
                                                                          "end_token": 1278,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 1265,
                                                                              "end_token": 1269,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 1265,
                                                                                  "end_token": 1267,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 1265,
                                                                                      "end_token": 1265,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 1267,
                                                                                      "end_token": 1267,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 1269,
                                                                                  "end_token": 1269,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.subContainer",
                                                                              "start_token": 1271,
                                                                              "end_token": 1273,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 1271,
                                                                                  "end_token": 1271,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "subContainer",
                                                                                  "start_token": 1273,
                                                                                  "end_token": 1273,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "NullKeyword",
                                                                              "label": "null",
                                                                              "start_token": 1275,
                                                                              "end_token": 1275,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "0",
                                                                              "start_token": 1277,
                                                                              "end_token": 1277,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2);",
                                                                  "start_token": 1281,
                                                                  "end_token": 1299,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view3 = this.container.createEmbeddedView(this.subContainer, null, 2)",
                                                                      "start_token": 1281,
                                                                      "end_token": 1298,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view3",
                                                                          "start_token": 1281,
                                                                          "end_token": 1283,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 1281,
                                                                              "end_token": 1281,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 1283,
                                                                              "end_token": 1283,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 1284,
                                                                          "end_token": 1284,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.subContainer, null, 2)",
                                                                          "start_token": 1285,
                                                                          "end_token": 1298,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 1285,
                                                                              "end_token": 1289,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 1285,
                                                                                  "end_token": 1287,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 1285,
                                                                                      "end_token": 1285,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 1287,
                                                                                      "end_token": 1287,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 1289,
                                                                                  "end_token": 1289,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.subContainer",
                                                                              "start_token": 1291,
                                                                              "end_token": 1293,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 1291,
                                                                                  "end_token": 1291,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "subContainer",
                                                                                  "start_token": 1293,
                                                                                  "end_token": 1293,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "NullKeyword",
                                                                              "label": "null",
                                                                              "start_token": 1295,
                                                                              "end_token": 1295,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "2",
                                                                              "start_token": 1297,
                                                                              "end_token": 1297,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2);",
                                                                  "start_token": 1301,
                                                                  "end_token": 1319,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this.view2 = this.container.createEmbeddedView(this.subContainer, null, 2)",
                                                                      "start_token": 1301,
                                                                      "end_token": 1318,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.view2",
                                                                          "start_token": 1301,
                                                                          "end_token": 1303,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 1301,
                                                                              "end_token": 1301,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 1303,
                                                                              "end_token": 1303,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 1304,
                                                                          "end_token": 1304,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "this.container.createEmbeddedView(this.subContainer, null, 2)",
                                                                          "start_token": 1305,
                                                                          "end_token": 1318,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.container.createEmbeddedView",
                                                                              "start_token": 1305,
                                                                              "end_token": 1309,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.container",
                                                                                  "start_token": 1305,
                                                                                  "end_token": 1307,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "ThisKeyword",
                                                                                      "label": "this",
                                                                                      "start_token": 1305,
                                                                                      "end_token": 1305,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "container",
                                                                                      "start_token": 1307,
                                                                                      "end_token": 1307,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createEmbeddedView",
                                                                                  "start_token": 1309,
                                                                                  "end_token": 1309,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.subContainer",
                                                                              "start_token": 1311,
                                                                              "end_token": 1313,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 1311,
                                                                                  "end_token": 1311,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "subContainer",
                                                                                  "start_token": 1313,
                                                                                  "end_token": 1313,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "NullKeyword",
                                                                              "label": "null",
                                                                              "start_token": 1315,
                                                                              "end_token": 1315,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstLiteralToken",
                                                                              "label": "2",
                                                                              "start_token": 1317,
                                                                              "end_token": 1317,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.changeDetectorRef.detectChanges();",
                                                                  "start_token": 1323,
                                                                  "end_token": 1330,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this.changeDetectorRef.detectChanges()",
                                                                      "start_token": 1323,
                                                                      "end_token": 1329,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.changeDetectorRef.detectChanges",
                                                                          "start_token": 1323,
                                                                          "end_token": 1327,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.changeDetectorRef",
                                                                              "start_token": 1323,
                                                                              "end_token": 1325,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 1323,
                                                                                  "end_token": 1323,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "changeDetectorRef",
                                                                                  "start_token": 1325,
                                                                                  "end_token": 1325,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "detectChanges",
                                                                              "start_token": 1327,
                                                                              "end_token": 1327,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      });",
                                                      "start_token": 1333,
                                                      "end_token": 1352,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [App],\n        imports: [CommonModule],\n      })",
                                                          "start_token": 1333,
                                                          "end_token": 1351,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 1333,
                                                              "end_token": 1335,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 1333,
                                                                  "end_token": 1333,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 1335,
                                                                  "end_token": 1335,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [App],\n        imports: [CommonModule],\n      }",
                                                              "start_token": 1337,
                                                              "end_token": 1350,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [App]",
                                                                  "start_token": 1338,
                                                                  "end_token": 1342,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 1338,
                                                                      "end_token": 1338,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[App]",
                                                                      "start_token": 1340,
                                                                      "end_token": 1342,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "App",
                                                                          "start_token": 1341,
                                                                          "end_token": 1341,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "imports: [CommonModule]",
                                                                  "start_token": 1344,
                                                                  "end_token": 1348,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "imports",
                                                                      "start_token": 1344,
                                                                      "end_token": 1344,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[CommonModule]",
                                                                      "start_token": 1346,
                                                                      "end_token": 1348,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "CommonModule",
                                                                          "start_token": 1347,
                                                                          "end_token": 1347,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(App);",
                                                      "start_token": 1353,
                                                      "end_token": 1362,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(App)",
                                                          "start_token": 1353,
                                                          "end_token": 1361,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(App)",
                                                              "start_token": 1354,
                                                              "end_token": 1361,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 1354,
                                                                  "end_token": 1354,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(App)",
                                                                  "start_token": 1356,
                                                                  "end_token": 1361,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 1356,
                                                                      "end_token": 1358,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 1356,
                                                                          "end_token": 1356,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 1358,
                                                                          "end_token": 1358,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "App",
                                                                      "start_token": 1360,
                                                                      "end_token": 1360,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 1363,
                                                      "end_token": 1368,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 1363,
                                                          "end_token": 1367,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 1363,
                                                              "end_token": 1365,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 1363,
                                                                  "end_token": 1363,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 1365,
                                                                  "end_token": 1365,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const app = fixture.componentInstance;",
                                                      "start_token": 1369,
                                                      "end_token": 1375,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const app = fixture.componentInstance",
                                                          "start_token": 1369,
                                                          "end_token": 1374,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "app = fixture.componentInstance",
                                                              "start_token": 1370,
                                                              "end_token": 1374,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "app",
                                                                  "start_token": 1370,
                                                                  "end_token": 1370,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 1372,
                                                                  "end_token": 1374,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 1372,
                                                                      "end_token": 1372,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 1374,
                                                                      "end_token": 1374,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view0)).toBe(0);",
                                                      "start_token": 1376,
                                                      "end_token": 1394,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view0)).toBe(0)",
                                                          "start_token": 1376,
                                                          "end_token": 1393,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view0)).toBe",
                                                              "start_token": 1376,
                                                              "end_token": 1390,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view0))",
                                                                  "start_token": 1376,
                                                                  "end_token": 1388,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1376,
                                                                      "end_token": 1376,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view0)",
                                                                      "start_token": 1378,
                                                                      "end_token": 1387,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 1378,
                                                                          "end_token": 1382,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 1378,
                                                                              "end_token": 1380,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 1378,
                                                                                  "end_token": 1378,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1380,
                                                                                  "end_token": 1380,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1382,
                                                                              "end_token": 1382,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view0",
                                                                          "start_token": 1384,
                                                                          "end_token": 1386,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 1384,
                                                                              "end_token": 1384,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view0",
                                                                              "start_token": 1386,
                                                                              "end_token": 1386,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1390,
                                                                  "end_token": 1390,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "0",
                                                              "start_token": 1392,
                                                              "end_token": 1392,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view1)).toBe(1);",
                                                      "start_token": 1395,
                                                      "end_token": 1413,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view1)).toBe(1)",
                                                          "start_token": 1395,
                                                          "end_token": 1412,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view1)).toBe",
                                                              "start_token": 1395,
                                                              "end_token": 1409,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view1))",
                                                                  "start_token": 1395,
                                                                  "end_token": 1407,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1395,
                                                                      "end_token": 1395,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view1)",
                                                                      "start_token": 1397,
                                                                      "end_token": 1406,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 1397,
                                                                          "end_token": 1401,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 1397,
                                                                              "end_token": 1399,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 1397,
                                                                                  "end_token": 1397,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1399,
                                                                                  "end_token": 1399,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1401,
                                                                              "end_token": 1401,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view1",
                                                                          "start_token": 1403,
                                                                          "end_token": 1405,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 1403,
                                                                              "end_token": 1403,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view1",
                                                                              "start_token": 1405,
                                                                              "end_token": 1405,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1409,
                                                                  "end_token": 1409,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "1",
                                                              "start_token": 1411,
                                                              "end_token": 1411,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view2)).toBe(2);",
                                                      "start_token": 1414,
                                                      "end_token": 1432,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view2)).toBe(2)",
                                                          "start_token": 1414,
                                                          "end_token": 1431,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view2)).toBe",
                                                              "start_token": 1414,
                                                              "end_token": 1428,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view2))",
                                                                  "start_token": 1414,
                                                                  "end_token": 1426,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1414,
                                                                      "end_token": 1414,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view2)",
                                                                      "start_token": 1416,
                                                                      "end_token": 1425,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 1416,
                                                                          "end_token": 1420,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 1416,
                                                                              "end_token": 1418,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 1416,
                                                                                  "end_token": 1416,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1418,
                                                                                  "end_token": 1418,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1420,
                                                                              "end_token": 1420,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view2",
                                                                          "start_token": 1422,
                                                                          "end_token": 1424,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 1422,
                                                                              "end_token": 1422,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view2",
                                                                              "start_token": 1424,
                                                                              "end_token": 1424,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1428,
                                                                  "end_token": 1428,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "2",
                                                              "start_token": 1430,
                                                              "end_token": 1430,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(app.container.indexOf(app.view3)).toBe(3);",
                                                      "start_token": 1433,
                                                      "end_token": 1451,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(app.container.indexOf(app.view3)).toBe(3)",
                                                          "start_token": 1433,
                                                          "end_token": 1450,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(app.container.indexOf(app.view3)).toBe",
                                                              "start_token": 1433,
                                                              "end_token": 1447,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(app.container.indexOf(app.view3))",
                                                                  "start_token": 1433,
                                                                  "end_token": 1445,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1433,
                                                                      "end_token": 1433,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "app.container.indexOf(app.view3)",
                                                                      "start_token": 1435,
                                                                      "end_token": 1444,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.container.indexOf",
                                                                          "start_token": 1435,
                                                                          "end_token": 1439,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "app.container",
                                                                              "start_token": 1435,
                                                                              "end_token": 1437,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "app",
                                                                                  "start_token": 1435,
                                                                                  "end_token": 1435,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "container",
                                                                                  "start_token": 1437,
                                                                                  "end_token": 1437,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "indexOf",
                                                                              "start_token": 1439,
                                                                              "end_token": 1439,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "app.view3",
                                                                          "start_token": 1441,
                                                                          "end_token": 1443,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "app",
                                                                              "start_token": 1441,
                                                                              "end_token": 1441,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "view3",
                                                                              "start_token": 1443,
                                                                              "end_token": 1443,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1447,
                                                                  "end_token": 1447,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "3",
                                                              "start_token": 1449,
                                                              "end_token": 1449,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4);",
                                                      "start_token": 1452,
                                                      "end_token": 1475,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe(4)",
                                                          "start_token": 1452,
                                                          "end_token": 1474,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length).toBe",
                                                              "start_token": 1452,
                                                              "end_token": 1471,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.debugElement.queryAll(By.css('div.dynamic')).length)",
                                                                  "start_token": 1452,
                                                                  "end_token": 1469,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 1452,
                                                                      "end_token": 1452,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.debugElement.queryAll(By.css('div.dynamic')).length",
                                                                      "start_token": 1454,
                                                                      "end_token": 1468,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.debugElement.queryAll(By.css('div.dynamic'))",
                                                                          "start_token": 1454,
                                                                          "end_token": 1466,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.debugElement.queryAll",
                                                                              "start_token": 1454,
                                                                              "end_token": 1458,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.debugElement",
                                                                                  "start_token": 1454,
                                                                                  "end_token": 1456,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fixture",
                                                                                      "start_token": 1454,
                                                                                      "end_token": 1454,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "debugElement",
                                                                                      "start_token": 1456,
                                                                                      "end_token": 1456,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "queryAll",
                                                                                  "start_token": 1458,
                                                                                  "end_token": 1458,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "By.css('div.dynamic')",
                                                                              "start_token": 1460,
                                                                              "end_token": 1465,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "By.css",
                                                                                  "start_token": 1460,
                                                                                  "end_token": 1462,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "By",
                                                                                      "start_token": 1460,
                                                                                      "end_token": 1460,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "css",
                                                                                      "start_token": 1462,
                                                                                      "end_token": 1462,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "'div.dynamic'",
                                                                                  "start_token": 1464,
                                                                                  "end_token": 1464,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "length",
                                                                          "start_token": 1468,
                                                                          "end_token": 1468,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 1471,
                                                                  "end_token": 1471,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "4",
                                                              "start_token": 1473,
                                                              "end_token": 1473,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  });",
                      "start_token": 1482,
                      "end_token": 2807,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('before another view', () => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  })",
                          "start_token": 1482,
                          "end_token": 2806,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 1482,
                              "end_token": 1482,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'before another view'",
                              "start_token": 1484,
                              "end_token": 1484,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  }",
                              "start_token": 1486,
                              "end_token": 2805,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 1488,
                                  "end_token": 1488,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    @Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }\n    describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });\n    describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n    describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });\n  }",
                                  "start_token": 1489,
                                  "end_token": 2805,
                                  "children": [
                                    {
                                      "type": "ClassDeclaration",
                                      "label": "@Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })\n    class ViewInsertingDir {\n      constructor(private _vcRef: ViewContainerRef) {}\n      insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }\n    }",
                                      "start_token": 1490,
                                      "end_token": 1560,
                                      "children": [
                                        {
                                          "type": "Decorator",
                                          "label": "@Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })",
                                          "start_token": 1490,
                                          "end_token": 1506,
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Directive({\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    })",
                                              "start_token": 1490,
                                              "end_token": 1506,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Directive",
                                                  "start_token": 1490,
                                                  "end_token": 1490,
                                                  "children": []
                                                },
                                                {
                                                  "type": "ObjectLiteralExpression",
                                                  "label": "{\n      selector: '[viewInserting]',\n      exportAs: 'vi',\n      standalone: false,\n    }",
                                                  "start_token": 1492,
                                                  "end_token": 1505,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAssignment",
                                                      "label": "selector: '[viewInserting]'",
                                                      "start_token": 1493,
                                                      "end_token": 1495,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "selector",
                                                          "start_token": 1493,
                                                          "end_token": 1493,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'[viewInserting]'",
                                                          "start_token": 1495,
                                                          "end_token": 1495,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAssignment",
                                                      "label": "exportAs: 'vi'",
                                                      "start_token": 1497,
                                                      "end_token": 1499,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "exportAs",
                                                          "start_token": 1497,
                                                          "end_token": 1497,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'vi'",
                                                          "start_token": 1499,
                                                          "end_token": 1499,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAssignment",
                                                      "label": "standalone: false",
                                                      "start_token": 1501,
                                                      "end_token": 1503,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "standalone",
                                                          "start_token": 1501,
                                                          "end_token": 1501,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FalseKeyword",
                                                          "label": "false",
                                                          "start_token": 1503,
                                                          "end_token": 1503,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ViewInsertingDir",
                                          "start_token": 1508,
                                          "end_token": 1508,
                                          "children": []
                                        },
                                        {
                                          "type": "Constructor",
                                          "label": "constructor(private _vcRef: ViewContainerRef) {}",
                                          "start_token": 1510,
                                          "end_token": 1518,
                                          "children": [
                                            {
                                              "type": "Parameter",
                                              "label": "private _vcRef: ViewContainerRef",
                                              "start_token": 1512,
                                              "end_token": 1515,
                                              "children": [
                                                {
                                                  "type": "PrivateKeyword",
                                                  "label": "private",
                                                  "start_token": 1512,
                                                  "end_token": 1512,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "_vcRef",
                                                  "start_token": 1513,
                                                  "end_token": 1513,
                                                  "children": []
                                                },
                                                {
                                                  "type": "TypeReference",
                                                  "label": "ViewContainerRef",
                                                  "start_token": 1515,
                                                  "end_token": 1515,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "ViewContainerRef",
                                                      "start_token": 1515,
                                                      "end_token": 1515,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{}",
                                              "start_token": 1517,
                                              "end_token": 1518,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MethodDeclaration",
                                          "label": "insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }",
                                          "start_token": 1519,
                                          "end_token": 1559,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "insert",
                                              "start_token": 1519,
                                              "end_token": 1519,
                                              "children": []
                                            },
                                            {
                                              "type": "Parameter",
                                              "label": "beforeView: ViewRef",
                                              "start_token": 1521,
                                              "end_token": 1523,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "beforeView",
                                                  "start_token": 1521,
                                                  "end_token": 1521,
                                                  "children": []
                                                },
                                                {
                                                  "type": "TypeReference",
                                                  "label": "ViewRef",
                                                  "start_token": 1523,
                                                  "end_token": 1523,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "ViewRef",
                                                      "start_token": 1523,
                                                      "end_token": 1523,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Parameter",
                                              "label": "insertTpl: TemplateRef<{}>",
                                              "start_token": 1525,
                                              "end_token": 1531,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "insertTpl",
                                                  "start_token": 1525,
                                                  "end_token": 1525,
                                                  "children": []
                                                },
                                                {
                                                  "type": "TypeReference",
                                                  "label": "TemplateRef<{}>",
                                                  "start_token": 1527,
                                                  "end_token": 1531,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "TemplateRef",
                                                      "start_token": 1527,
                                                      "end_token": 1527,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TypeLiteral",
                                                      "label": "{}",
                                                      "start_token": 1529,
                                                      "end_token": 1530,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n        this._vcRef.insert(beforeView, 0);\n        this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n      }",
                                              "start_token": 1533,
                                              "end_token": 1559,
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "this._vcRef.insert(beforeView, 0);",
                                                  "start_token": 1534,
                                                  "end_token": 1544,
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this._vcRef.insert(beforeView, 0)",
                                                      "start_token": 1534,
                                                      "end_token": 1543,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this._vcRef.insert",
                                                          "start_token": 1534,
                                                          "end_token": 1538,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this._vcRef",
                                                              "start_token": 1534,
                                                              "end_token": 1536,
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "start_token": 1534,
                                                                  "end_token": 1534,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_vcRef",
                                                                  "start_token": 1536,
                                                                  "end_token": 1536,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insert",
                                                              "start_token": 1538,
                                                              "end_token": 1538,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "beforeView",
                                                          "start_token": 1540,
                                                          "end_token": 1540,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "start_token": 1542,
                                                          "end_token": 1542,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "this._vcRef.createEmbeddedView(insertTpl, {}, 0);",
                                                  "start_token": 1545,
                                                  "end_token": 1558,
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this._vcRef.createEmbeddedView(insertTpl, {}, 0)",
                                                      "start_token": 1545,
                                                      "end_token": 1557,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this._vcRef.createEmbeddedView",
                                                          "start_token": 1545,
                                                          "end_token": 1549,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this._vcRef",
                                                              "start_token": 1545,
                                                              "end_token": 1547,
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "start_token": 1545,
                                                                  "end_token": 1545,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_vcRef",
                                                                  "start_token": 1547,
                                                                  "end_token": 1547,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "createEmbeddedView",
                                                              "start_token": 1549,
                                                              "end_token": 1549,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "insertTpl",
                                                          "start_token": 1551,
                                                          "end_token": 1551,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "ObjectLiteralExpression",
                                                          "label": "{}",
                                                          "start_token": 1553,
                                                          "end_token": 1554,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "start_token": 1556,
                                                          "end_token": 1556,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    });",
                                      "start_token": 1561,
                                      "end_token": 2184,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "describe('before embedded view', () => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    })",
                                          "start_token": 1561,
                                          "end_token": 2183,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "describe",
                                              "start_token": 1561,
                                              "end_token": 1561,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'before embedded view'",
                                              "start_token": 1563,
                                              "end_token": 1563,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    }",
                                              "start_token": 1565,
                                              "end_token": 2182,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 1567,
                                                  "end_token": 1567,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });\n      function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }\n      it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });\n      it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });\n      it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });\n      it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });\n      it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });\n    }",
                                                  "start_token": 1568,
                                                  "end_token": 2182,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        minutes = 10;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }",
                                                      "start_token": 1569,
                                                      "end_token": 1684,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })",
                                                          "start_token": 1569,
                                                          "end_token": 1585,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })",
                                                              "start_token": 1569,
                                                              "end_token": 1585,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 1569,
                                                                  "end_token": 1569,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      }",
                                                                  "start_token": 1571,
                                                                  "end_token": 1584,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'test-cmpt'",
                                                                      "start_token": 1572,
                                                                      "end_token": 1574,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 1572,
                                                                          "end_token": 1572,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'test-cmpt'",
                                                                          "start_token": 1574,
                                                                          "end_token": 1574,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: ''",
                                                                      "start_token": 1576,
                                                                      "end_token": 1578,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 1576,
                                                                          "end_token": 1576,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "''",
                                                                          "start_token": 1578,
                                                                          "end_token": 1578,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 1580,
                                                                      "end_token": 1582,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 1580,
                                                                          "end_token": 1580,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 1582,
                                                                          "end_token": 1582,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 1587,
                                                          "end_token": 1587,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;",
                                                          "start_token": 1589,
                                                          "end_token": 1607,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('before', {static: true})",
                                                              "start_token": 1589,
                                                              "end_token": 1598,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('before', {static: true})",
                                                                  "start_token": 1589,
                                                                  "end_token": 1598,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 1589,
                                                                      "end_token": 1589,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'before'",
                                                                      "start_token": 1591,
                                                                      "end_token": 1591,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 1593,
                                                                      "end_token": 1597,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 1594,
                                                                          "end_token": 1596,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 1594,
                                                                              "end_token": 1594,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 1596,
                                                                              "end_token": 1596,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "beforeTpl",
                                                              "start_token": 1599,
                                                              "end_token": 1599,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 1600,
                                                              "end_token": 1600,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<{}>",
                                                              "start_token": 1602,
                                                              "end_token": 1606,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 1602,
                                                                  "end_token": 1602,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeLiteral",
                                                                  "label": "{}",
                                                                  "start_token": 1604,
                                                                  "end_token": 1605,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;",
                                                          "start_token": 1608,
                                                          "end_token": 1626,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('insert', {static: true})",
                                                              "start_token": 1608,
                                                              "end_token": 1617,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('insert', {static: true})",
                                                                  "start_token": 1608,
                                                                  "end_token": 1617,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 1608,
                                                                      "end_token": 1608,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'insert'",
                                                                      "start_token": 1610,
                                                                      "end_token": 1610,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 1612,
                                                                      "end_token": 1616,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 1613,
                                                                          "end_token": 1615,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 1613,
                                                                              "end_token": 1613,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 1615,
                                                                              "end_token": 1615,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insertTpl",
                                                              "start_token": 1618,
                                                              "end_token": 1618,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 1619,
                                                              "end_token": 1619,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<{}>",
                                                              "start_token": 1621,
                                                              "end_token": 1625,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 1621,
                                                                  "end_token": 1621,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeLiteral",
                                                                  "label": "{}",
                                                                  "start_token": 1623,
                                                                  "end_token": 1624,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;",
                                                          "start_token": 1627,
                                                          "end_token": 1641,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('vi', {static: true})",
                                                              "start_token": 1627,
                                                              "end_token": 1636,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('vi', {static: true})",
                                                                  "start_token": 1627,
                                                                  "end_token": 1636,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 1627,
                                                                      "end_token": 1627,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'vi'",
                                                                      "start_token": 1629,
                                                                      "end_token": 1629,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 1631,
                                                                      "end_token": 1635,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 1632,
                                                                          "end_token": 1634,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 1632,
                                                                              "end_token": 1632,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 1634,
                                                                              "end_token": 1634,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "viewInsertingDir",
                                                              "start_token": 1637,
                                                              "end_token": 1637,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 1638,
                                                              "end_token": 1638,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewInsertingDir",
                                                              "start_token": 1640,
                                                              "end_token": 1640,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewInsertingDir",
                                                                  "start_token": 1640,
                                                                  "end_token": 1640,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "minutes = 10;",
                                                          "start_token": 1642,
                                                          "end_token": 1645,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "minutes",
                                                              "start_token": 1642,
                                                              "end_token": 1642,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "10",
                                                              "start_token": 1644,
                                                              "end_token": 1644,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }",
                                                          "start_token": 1646,
                                                          "end_token": 1683,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insert",
                                                              "start_token": 1646,
                                                              "end_token": 1646,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }",
                                                              "start_token": 1649,
                                                              "end_token": 1683,
                                                              "children": [
                                                                {
                                                                  "type": "FirstStatement",
                                                                  "label": "const beforeView = this.beforeTpl.createEmbeddedView({});",
                                                                  "start_token": 1650,
                                                                  "end_token": 1662,
                                                                  "children": [
                                                                    {
                                                                      "type": "VariableDeclarationList",
                                                                      "label": "const beforeView = this.beforeTpl.createEmbeddedView({})",
                                                                      "start_token": 1650,
                                                                      "end_token": 1661,
                                                                      "children": [
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "label": "beforeView = this.beforeTpl.createEmbeddedView({})",
                                                                          "start_token": 1651,
                                                                          "end_token": 1661,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "beforeView",
                                                                              "start_token": 1651,
                                                                              "end_token": 1651,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "this.beforeTpl.createEmbeddedView({})",
                                                                              "start_token": 1653,
                                                                              "end_token": 1661,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.beforeTpl.createEmbeddedView",
                                                                                  "start_token": 1653,
                                                                                  "end_token": 1657,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "this.beforeTpl",
                                                                                      "start_token": 1653,
                                                                                      "end_token": 1655,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "ThisKeyword",
                                                                                          "label": "this",
                                                                                          "start_token": 1653,
                                                                                          "end_token": 1653,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "beforeTpl",
                                                                                          "start_token": 1655,
                                                                                          "end_token": 1655,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "createEmbeddedView",
                                                                                      "start_token": 1657,
                                                                                      "end_token": 1657,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "ObjectLiteralExpression",
                                                                                  "label": "{}",
                                                                                  "start_token": 1659,
                                                                                  "end_token": 1660,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "beforeView.detectChanges();",
                                                                  "start_token": 1664,
                                                                  "end_token": 1669,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "beforeView.detectChanges()",
                                                                      "start_token": 1664,
                                                                      "end_token": 1668,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "beforeView.detectChanges",
                                                                          "start_token": 1664,
                                                                          "end_token": 1666,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "beforeView",
                                                                              "start_token": 1664,
                                                                              "end_token": 1664,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "detectChanges",
                                                                              "start_token": 1666,
                                                                              "end_token": 1666,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.viewInsertingDir.insert(beforeView, this.insertTpl);",
                                                                  "start_token": 1670,
                                                                  "end_token": 1682,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this.viewInsertingDir.insert(beforeView, this.insertTpl)",
                                                                      "start_token": 1670,
                                                                      "end_token": 1681,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.viewInsertingDir.insert",
                                                                          "start_token": 1670,
                                                                          "end_token": 1674,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.viewInsertingDir",
                                                                              "start_token": 1670,
                                                                              "end_token": 1672,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 1670,
                                                                                  "end_token": 1670,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "viewInsertingDir",
                                                                                  "start_token": 1672,
                                                                                  "end_token": 1672,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insert",
                                                                              "start_token": 1674,
                                                                              "end_token": 1674,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "beforeView",
                                                                          "start_token": 1676,
                                                                          "end_token": 1676,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.insertTpl",
                                                                          "start_token": 1678,
                                                                          "end_token": 1680,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 1678,
                                                                              "end_token": 1678,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insertTpl",
                                                                              "start_token": 1680,
                                                                              "end_token": 1680,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      });",
                                                      "start_token": 1685,
                                                      "end_token": 1715,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      })",
                                                          "start_token": 1685,
                                                          "end_token": 1714,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "beforeEach",
                                                              "start_token": 1685,
                                                              "end_token": 1685,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      }",
                                                              "start_token": 1687,
                                                              "end_token": 1713,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1689,
                                                                  "end_token": 1689,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });\n      }",
                                                                  "start_token": 1690,
                                                                  "end_token": 1713,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        });",
                                                                      "start_token": 1691,
                                                                      "end_token": 1712,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        })",
                                                                          "start_token": 1691,
                                                                          "end_token": 1711,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.configureTestingModule",
                                                                              "start_token": 1691,
                                                                              "end_token": 1693,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 1691,
                                                                                  "end_token": 1691,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "configureTestingModule",
                                                                                  "start_token": 1693,
                                                                                  "end_token": 1693,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{\n          declarations: [TestCmpt, ViewInsertingDir],\n          imports: [CommonModule],\n        }",
                                                                              "start_token": 1695,
                                                                              "end_token": 1710,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "declarations: [TestCmpt, ViewInsertingDir]",
                                                                                  "start_token": 1696,
                                                                                  "end_token": 1702,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "declarations",
                                                                                      "start_token": 1696,
                                                                                      "end_token": 1696,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[TestCmpt, ViewInsertingDir]",
                                                                                      "start_token": 1698,
                                                                                      "end_token": 1702,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestCmpt",
                                                                                          "start_token": 1699,
                                                                                          "end_token": 1699,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "ViewInsertingDir",
                                                                                          "start_token": 1701,
                                                                                          "end_token": 1701,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "imports: [CommonModule]",
                                                                                  "start_token": 1704,
                                                                                  "end_token": 1708,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "imports",
                                                                                      "start_token": 1704,
                                                                                      "end_token": 1704,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[CommonModule]",
                                                                                      "start_token": 1706,
                                                                                      "end_token": 1708,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "CommonModule",
                                                                                          "start_token": 1707,
                                                                                          "end_token": 1707,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FunctionDeclaration",
                                                      "label": "function createAndInsertViews(beforeTpl: string): any {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }",
                                                      "start_token": 1716,
                                                      "end_token": 1771,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "createAndInsertViews",
                                                          "start_token": 1717,
                                                          "end_token": 1717,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Parameter",
                                                          "label": "beforeTpl: string",
                                                          "start_token": 1719,
                                                          "end_token": 1721,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "beforeTpl",
                                                              "start_token": 1719,
                                                              "end_token": 1719,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringKeyword",
                                                              "label": "string",
                                                              "start_token": 1721,
                                                              "end_token": 1721,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "AnyKeyword",
                                                          "label": "any",
                                                          "start_token": 1724,
                                                          "end_token": 1724,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        return fixture.nativeElement;\n      }",
                                                          "start_token": 1725,
                                                          "end_token": 1771,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        );",
                                                              "start_token": 1726,
                                                              "end_token": 1735,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.overrideTemplate(\n          TestCmpt,\n          `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        )",
                                                                  "start_token": 1726,
                                                                  "end_token": 1734,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.overrideTemplate",
                                                                      "start_token": 1726,
                                                                      "end_token": 1728,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 1726,
                                                                          "end_token": 1726,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "overrideTemplate",
                                                                          "start_token": 1728,
                                                                          "end_token": 1728,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "TestCmpt",
                                                                      "start_token": 1730,
                                                                      "end_token": 1730,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "TemplateExpression",
                                                                      "label": "`\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `",
                                                                      "start_token": 1732,
                                                                      "end_token": 1732,
                                                                      "children": [
                                                                        {
                                                                          "type": "TemplateHead",
                                                                          "label": "`\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before>${",
                                                                          "start_token": 1732,
                                                                          "end_token": 1732,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "TemplateSpan",
                                                                          "label": "beforeTpl}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `",
                                                                          "start_token": 1732,
                                                                          "end_token": 1732,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "beforeTpl",
                                                                              "start_token": 1732,
                                                                              "end_token": 1732,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "LastTemplateToken",
                                                                              "label": "}</ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `",
                                                                              "start_token": 1732,
                                                                              "end_token": 1732,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstStatement",
                                                              "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                              "start_token": 1736,
                                                              "end_token": 1745,
                                                              "children": [
                                                                {
                                                                  "type": "VariableDeclarationList",
                                                                  "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                                  "start_token": 1736,
                                                                  "end_token": 1744,
                                                                  "children": [
                                                                    {
                                                                      "type": "VariableDeclaration",
                                                                      "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                                      "start_token": 1737,
                                                                      "end_token": 1744,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "fixture",
                                                                          "start_token": 1737,
                                                                          "end_token": 1737,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.createComponent(TestCmpt)",
                                                                          "start_token": 1739,
                                                                          "end_token": 1744,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.createComponent",
                                                                              "start_token": 1739,
                                                                              "end_token": 1741,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 1739,
                                                                                  "end_token": 1739,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "createComponent",
                                                                                  "start_token": 1741,
                                                                                  "end_token": 1741,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TestCmpt",
                                                                              "start_token": 1743,
                                                                              "end_token": 1743,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "fixture.detectChanges();",
                                                              "start_token": 1746,
                                                              "end_token": 1751,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "fixture.detectChanges()",
                                                                  "start_token": 1746,
                                                                  "end_token": 1750,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.detectChanges",
                                                                      "start_token": 1746,
                                                                      "end_token": 1748,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "fixture",
                                                                          "start_token": 1746,
                                                                          "end_token": 1746,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "detectChanges",
                                                                          "start_token": 1748,
                                                                          "end_token": 1748,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "fixture.componentInstance.insert();",
                                                              "start_token": 1752,
                                                              "end_token": 1759,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "fixture.componentInstance.insert()",
                                                                  "start_token": 1752,
                                                                  "end_token": 1758,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.componentInstance.insert",
                                                                      "start_token": 1752,
                                                                      "end_token": 1756,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.componentInstance",
                                                                          "start_token": 1752,
                                                                          "end_token": 1754,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 1752,
                                                                              "end_token": 1752,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "componentInstance",
                                                                              "start_token": 1754,
                                                                              "end_token": 1754,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "insert",
                                                                          "start_token": 1756,
                                                                          "end_token": 1756,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "fixture.detectChanges();",
                                                              "start_token": 1760,
                                                              "end_token": 1765,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "fixture.detectChanges()",
                                                                  "start_token": 1760,
                                                                  "end_token": 1764,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.detectChanges",
                                                                      "start_token": 1760,
                                                                      "end_token": 1762,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "fixture",
                                                                          "start_token": 1760,
                                                                          "end_token": 1760,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "detectChanges",
                                                                          "start_token": 1762,
                                                                          "end_token": 1762,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "label": "return fixture.nativeElement;",
                                                              "start_token": 1766,
                                                              "end_token": 1770,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.nativeElement",
                                                                  "start_token": 1767,
                                                                  "end_token": 1769,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 1767,
                                                                      "end_token": 1767,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "nativeElement",
                                                                      "start_token": 1769,
                                                                      "end_token": 1769,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      });",
                                                      "start_token": 1772,
                                                      "end_token": 1797,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with the text node as the first root node', () => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      })",
                                                          "start_token": 1772,
                                                          "end_token": 1796,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1772,
                                                              "end_token": 1772,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with the text node as the first root node'",
                                                              "start_token": 1774,
                                                              "end_token": 1774,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      }",
                                                              "start_token": 1776,
                                                              "end_token": 1795,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1778,
                                                                  "end_token": 1778,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(createAndInsertViews('|before').textContent).toBe('insert|before');\n      }",
                                                                  "start_token": 1779,
                                                                  "end_token": 1795,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(createAndInsertViews('|before').textContent).toBe('insert|before');",
                                                                      "start_token": 1780,
                                                                      "end_token": 1794,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(createAndInsertViews('|before').textContent).toBe('insert|before')",
                                                                          "start_token": 1780,
                                                                          "end_token": 1793,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(createAndInsertViews('|before').textContent).toBe",
                                                                              "start_token": 1780,
                                                                              "end_token": 1790,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(createAndInsertViews('|before').textContent)",
                                                                                  "start_token": 1780,
                                                                                  "end_token": 1788,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1780,
                                                                                      "end_token": 1780,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews('|before').textContent",
                                                                                      "start_token": 1782,
                                                                                      "end_token": 1787,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews('|before')",
                                                                                          "start_token": 1782,
                                                                                          "end_token": 1785,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1782,
                                                                                              "end_token": 1782,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "StringLiteral",
                                                                                              "label": "'|before'",
                                                                                              "start_token": 1784,
                                                                                              "end_token": 1784,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1787,
                                                                                          "end_token": 1787,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1790,
                                                                                  "end_token": 1790,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1792,
                                                                              "end_token": 1792,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      });",
                                                      "start_token": 1798,
                                                      "end_token": 1823,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with the element as the first root node', () => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      })",
                                                          "start_token": 1798,
                                                          "end_token": 1822,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1798,
                                                              "end_token": 1798,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with the element as the first root node'",
                                                              "start_token": 1800,
                                                              "end_token": 1800,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      }",
                                                              "start_token": 1802,
                                                              "end_token": 1821,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1804,
                                                                  "end_token": 1804,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');\n      }",
                                                                  "start_token": 1805,
                                                                  "end_token": 1821,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before');",
                                                                      "start_token": 1806,
                                                                      "end_token": 1820,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(createAndInsertViews('<span>|before</span>').textContent).toBe('insert|before')",
                                                                          "start_token": 1806,
                                                                          "end_token": 1819,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(createAndInsertViews('<span>|before</span>').textContent).toBe",
                                                                              "start_token": 1806,
                                                                              "end_token": 1816,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(createAndInsertViews('<span>|before</span>').textContent)",
                                                                                  "start_token": 1806,
                                                                                  "end_token": 1814,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1806,
                                                                                      "end_token": 1806,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews('<span>|before</span>').textContent",
                                                                                      "start_token": 1808,
                                                                                      "end_token": 1813,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews('<span>|before</span>')",
                                                                                          "start_token": 1808,
                                                                                          "end_token": 1811,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1808,
                                                                                              "end_token": 1808,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "StringLiteral",
                                                                                              "label": "'<span>|before</span>'",
                                                                                              "start_token": 1810,
                                                                                              "end_token": 1810,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1813,
                                                                                          "end_token": 1813,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1816,
                                                                                  "end_token": 1816,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1818,
                                                                              "end_token": 1818,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      });",
                                                      "start_token": 1824,
                                                      "end_token": 1850,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with the ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      })",
                                                          "start_token": 1824,
                                                          "end_token": 1849,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1824,
                                                              "end_token": 1824,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with the ng-container as the first root node'",
                                                              "start_token": 1826,
                                                              "end_token": 1826,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      }",
                                                              "start_token": 1828,
                                                              "end_token": 1848,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1830,
                                                                  "end_token": 1830,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');\n      }",
                                                                  "start_token": 1831,
                                                                  "end_token": 1848,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before');",
                                                                      "start_token": 1832,
                                                                      "end_token": 1847,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe('insert|before')",
                                                                          "start_token": 1832,
                                                                          "end_token": 1846,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        ).toBe",
                                                                              "start_token": 1832,
                                                                              "end_token": 1843,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent,\n        )",
                                                                                  "start_token": 1832,
                                                                                  "end_token": 1841,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1832,
                                                                                      "end_token": 1832,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `).textContent",
                                                                                      "start_token": 1834,
                                                                                      "end_token": 1839,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `)",
                                                                                          "start_token": 1834,
                                                                                          "end_token": 1837,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1834,
                                                                                              "end_token": 1834,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`\n          <ng-container>\n            <ng-container>|before</ng-container>\n          </ng-container>\n        `",
                                                                                              "start_token": 1836,
                                                                                              "end_token": 1836,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1839,
                                                                                          "end_token": 1839,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1843,
                                                                                  "end_token": 1843,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1845,
                                                                              "end_token": 1845,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });",
                                                      "start_token": 1851,
                                                      "end_token": 1877,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with the empty ng-container as the first root node', () => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      })",
                                                          "start_token": 1851,
                                                          "end_token": 1876,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1851,
                                                              "end_token": 1851,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with the empty ng-container as the first root node'",
                                                              "start_token": 1853,
                                                              "end_token": 1853,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      }",
                                                              "start_token": 1855,
                                                              "end_token": 1875,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1857,
                                                                  "end_token": 1857,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );\n      }",
                                                                  "start_token": 1858,
                                                                  "end_token": 1875,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        );",
                                                                      "start_token": 1859,
                                                                      "end_token": 1874,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe(\n          'insert|before',\n        )",
                                                                          "start_token": 1859,
                                                                          "end_token": 1873,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent).toBe",
                                                                              "start_token": 1859,
                                                                              "end_token": 1869,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(createAndInsertViews(`<ng-container></ng-container>|before`).textContent)",
                                                                                  "start_token": 1859,
                                                                                  "end_token": 1867,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1859,
                                                                                      "end_token": 1859,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`<ng-container></ng-container>|before`).textContent",
                                                                                      "start_token": 1861,
                                                                                      "end_token": 1866,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`<ng-container></ng-container>|before`)",
                                                                                          "start_token": 1861,
                                                                                          "end_token": 1864,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1861,
                                                                                              "end_token": 1861,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`<ng-container></ng-container>|before`",
                                                                                              "start_token": 1863,
                                                                                              "end_token": 1863,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1866,
                                                                                          "end_token": 1866,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1869,
                                                                                  "end_token": 1869,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1871,
                                                                              "end_token": 1871,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      });",
                                                      "start_token": 1878,
                                                      "end_token": 1905,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with ICU container inside a ng-container as the first root node', () => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      })",
                                                          "start_token": 1878,
                                                          "end_token": 1904,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1878,
                                                              "end_token": 1878,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with ICU container inside a ng-container as the first root node'",
                                                              "start_token": 1880,
                                                              "end_token": 1880,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      }",
                                                              "start_token": 1882,
                                                              "end_token": 1903,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1884,
                                                                  "end_token": 1884,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');\n      }",
                                                                  "start_token": 1885,
                                                                  "end_token": 1903,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before');",
                                                                      "start_token": 1886,
                                                                      "end_token": 1902,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe('insert|before')",
                                                                          "start_token": 1886,
                                                                          "end_token": 1901,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        ).toBe",
                                                                              "start_token": 1886,
                                                                              "end_token": 1898,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent,\n        )",
                                                                                  "start_token": 1886,
                                                                                  "end_token": 1896,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1886,
                                                                                      "end_token": 1886,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          ).textContent",
                                                                                      "start_token": 1888,
                                                                                      "end_token": 1894,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(\n            `<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`,\n          )",
                                                                                          "start_token": 1888,
                                                                                          "end_token": 1892,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1888,
                                                                                              "end_token": 1888,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`<ng-container i18n>{minutes, plural, =0 {just now} =1 {one minute ago} other {|before}}</ng-container>`",
                                                                                              "start_token": 1890,
                                                                                              "end_token": 1890,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1894,
                                                                                          "end_token": 1894,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1898,
                                                                                  "end_token": 1898,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1900,
                                                                              "end_token": 1900,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      });",
                                                      "start_token": 1906,
                                                      "end_token": 1932,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with a container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      })",
                                                          "start_token": 1906,
                                                          "end_token": 1931,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1906,
                                                              "end_token": 1906,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with a container as the first root node'",
                                                              "start_token": 1908,
                                                              "end_token": 1908,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      }",
                                                              "start_token": 1910,
                                                              "end_token": 1930,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1912,
                                                                  "end_token": 1912,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');\n      }",
                                                                  "start_token": 1913,
                                                                  "end_token": 1930,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before');",
                                                                      "start_token": 1914,
                                                                      "end_token": 1929,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe('insert|before')",
                                                                          "start_token": 1914,
                                                                          "end_token": 1928,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        ).toBe",
                                                                              "start_token": 1914,
                                                                              "end_token": 1925,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent,\n        )",
                                                                                  "start_token": 1914,
                                                                                  "end_token": 1923,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1914,
                                                                                      "end_token": 1914,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`).textContent",
                                                                                      "start_token": 1916,
                                                                                      "end_token": 1921,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`<ng-template [ngIf]=\"true\">|before</ng-template>`)",
                                                                                          "start_token": 1916,
                                                                                          "end_token": 1919,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1916,
                                                                                              "end_token": 1916,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`<ng-template [ngIf]=\"true\">|before</ng-template>`",
                                                                                              "start_token": 1918,
                                                                                              "end_token": 1918,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1921,
                                                                                          "end_token": 1921,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1925,
                                                                                  "end_token": 1925,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1927,
                                                                              "end_token": 1927,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      });",
                                                      "start_token": 1933,
                                                      "end_token": 1959,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with an empty container as the first root node', () => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      })",
                                                          "start_token": 1933,
                                                          "end_token": 1958,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1933,
                                                              "end_token": 1933,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with an empty container as the first root node'",
                                                              "start_token": 1935,
                                                              "end_token": 1935,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      }",
                                                              "start_token": 1937,
                                                              "end_token": 1957,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1939,
                                                                  "end_token": 1939,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');\n      }",
                                                                  "start_token": 1940,
                                                                  "end_token": 1957,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before');",
                                                                      "start_token": 1941,
                                                                      "end_token": 1956,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe('insert|before')",
                                                                          "start_token": 1941,
                                                                          "end_token": 1955,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        ).toBe",
                                                                              "start_token": 1941,
                                                                              "end_token": 1952,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent,\n        )",
                                                                                  "start_token": 1941,
                                                                                  "end_token": 1950,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1941,
                                                                                      "end_token": 1941,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`).textContent",
                                                                                      "start_token": 1943,
                                                                                      "end_token": 1948,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`<ng-template [ngIf]=\"true\"></ng-template>|before`)",
                                                                                          "start_token": 1943,
                                                                                          "end_token": 1946,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1943,
                                                                                              "end_token": 1943,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`<ng-template [ngIf]=\"true\"></ng-template>|before`",
                                                                                              "start_token": 1945,
                                                                                              "end_token": 1945,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1948,
                                                                                          "end_token": 1948,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1952,
                                                                                  "end_token": 1952,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 1954,
                                                                              "end_token": 1954,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });",
                                                      "start_token": 1960,
                                                      "end_token": 1986,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with a ng-container where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      })",
                                                          "start_token": 1960,
                                                          "end_token": 1985,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1960,
                                                              "end_token": 1960,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with a ng-container where ViewContainerRef is injected'",
                                                              "start_token": 1962,
                                                              "end_token": 1962,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      }",
                                                              "start_token": 1964,
                                                              "end_token": 1984,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1966,
                                                                  "end_token": 1966,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      }",
                                                                  "start_token": 1967,
                                                                  "end_token": 1984,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');",
                                                                      "start_token": 1968,
                                                                      "end_token": 1983,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after')",
                                                                          "start_token": 1968,
                                                                          "end_token": 1982,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe",
                                                                              "start_token": 1968,
                                                                              "end_token": 1979,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        )",
                                                                                  "start_token": 1968,
                                                                                  "end_token": 1977,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1968,
                                                                                      "end_token": 1968,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `).textContent",
                                                                                      "start_token": 1970,
                                                                                      "end_token": 1975,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `)",
                                                                                          "start_token": 1970,
                                                                                          "end_token": 1973,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1970,
                                                                                              "end_token": 1970,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`\n          <ng-container [ngTemplateOutlet]=\"after\">|before</ng-container>\n          <ng-template #after>|after</ng-template>\n        `",
                                                                                              "start_token": 1972,
                                                                                              "end_token": 1972,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 1975,
                                                                                          "end_token": 1975,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 1979,
                                                                                  "end_token": 1979,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before|after'",
                                                                              "start_token": 1981,
                                                                              "end_token": 1981,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      });",
                                                      "start_token": 1987,
                                                      "end_token": 2013,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with an element where ViewContainerRef is injected', () => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      })",
                                                          "start_token": 1987,
                                                          "end_token": 2012,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 1987,
                                                              "end_token": 1987,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with an element where ViewContainerRef is injected'",
                                                              "start_token": 1989,
                                                              "end_token": 1989,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      }",
                                                              "start_token": 1991,
                                                              "end_token": 2011,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 1993,
                                                                  "end_token": 1993,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');\n      }",
                                                                  "start_token": 1994,
                                                                  "end_token": 2011,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after');",
                                                                      "start_token": 1995,
                                                                      "end_token": 2010,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe('insert|before|after')",
                                                                          "start_token": 1995,
                                                                          "end_token": 2009,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        ).toBe",
                                                                              "start_token": 1995,
                                                                              "end_token": 2006,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent,\n        )",
                                                                                  "start_token": 1995,
                                                                                  "end_token": 2004,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 1995,
                                                                                      "end_token": 1995,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `).textContent",
                                                                                      "start_token": 1997,
                                                                                      "end_token": 2002,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `)",
                                                                                          "start_token": 1997,
                                                                                          "end_token": 2000,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 1997,
                                                                                              "end_token": 1997,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`\n          <div [ngTemplateOutlet]=\"after\">|before</div>\n          <ng-template #after>|after</ng-template>\n        `",
                                                                                              "start_token": 1999,
                                                                                              "end_token": 1999,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2002,
                                                                                          "end_token": 2002,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2006,
                                                                                  "end_token": 2006,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before|after'",
                                                                              "start_token": 2008,
                                                                              "end_token": 2008,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      });",
                                                      "start_token": 2014,
                                                      "end_token": 2040,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with an empty projection as the first root node', () => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      })",
                                                          "start_token": 2014,
                                                          "end_token": 2039,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 2014,
                                                              "end_token": 2014,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with an empty projection as the first root node'",
                                                              "start_token": 2016,
                                                              "end_token": 2016,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      }",
                                                              "start_token": 2018,
                                                              "end_token": 2038,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2020,
                                                                  "end_token": 2020,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );\n      }",
                                                                  "start_token": 2021,
                                                                  "end_token": 2038,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        );",
                                                                      "start_token": 2022,
                                                                      "end_token": 2037,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe(\n          'insert|before',\n        )",
                                                                          "start_token": 2022,
                                                                          "end_token": 2036,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent).toBe",
                                                                              "start_token": 2022,
                                                                              "end_token": 2032,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(createAndInsertViews(`<ng-content></ng-content>|before`).textContent)",
                                                                                  "start_token": 2022,
                                                                                  "end_token": 2030,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2022,
                                                                                      "end_token": 2022,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`<ng-content></ng-content>|before`).textContent",
                                                                                      "start_token": 2024,
                                                                                      "end_token": 2029,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`<ng-content></ng-content>|before`)",
                                                                                          "start_token": 2024,
                                                                                          "end_token": 2027,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 2024,
                                                                                              "end_token": 2024,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`<ng-content></ng-content>|before`",
                                                                                              "start_token": 2026,
                                                                                              "end_token": 2026,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2029,
                                                                                          "end_token": 2029,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2032,
                                                                                  "end_token": 2032,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 2034,
                                                                              "end_token": 2034,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      });",
                                                      "start_token": 2041,
                                                      "end_token": 2067,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with complex node structure', () => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      })",
                                                          "start_token": 2041,
                                                          "end_token": 2066,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 2041,
                                                              "end_token": 2041,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with complex node structure'",
                                                              "start_token": 2043,
                                                              "end_token": 2043,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      }",
                                                              "start_token": 2045,
                                                              "end_token": 2065,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2047,
                                                                  "end_token": 2047,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');\n      }",
                                                                  "start_token": 2048,
                                                                  "end_token": 2065,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before');",
                                                                      "start_token": 2049,
                                                                      "end_token": 2064,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe('insert|before')",
                                                                          "start_token": 2049,
                                                                          "end_token": 2063,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        ).toBe",
                                                                              "start_token": 2049,
                                                                              "end_token": 2060,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(\n          createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent,\n        )",
                                                                                  "start_token": 2049,
                                                                                  "end_token": 2058,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2049,
                                                                                      "end_token": 2049,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `).textContent",
                                                                                      "start_token": 2051,
                                                                                      "end_token": 2056,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "label": "createAndInsertViews(`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `)",
                                                                                          "start_token": 2051,
                                                                                          "end_token": 2054,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "createAndInsertViews",
                                                                                              "start_token": 2051,
                                                                                              "end_token": 2051,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FirstTemplateToken",
                                                                                              "label": "`\n          <ng-template [ngIf]=\"true\">\n            <ng-container>\n              <ng-container>\n                <ng-template [ngIf]=\"true\">|before</ng-template>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        `",
                                                                                              "start_token": 2053,
                                                                                              "end_token": 2053,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2056,
                                                                                          "end_token": 2056,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2060,
                                                                                  "end_token": 2060,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 2062,
                                                                              "end_token": 2062,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      });",
                                                      "start_token": 2068,
                                                      "end_token": 2181,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a ng-container with a ViewContainerRef on it', () => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      })",
                                                          "start_token": 2068,
                                                          "end_token": 2180,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 2068,
                                                              "end_token": 2068,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a ng-container with a ViewContainerRef on it'",
                                                              "start_token": 2070,
                                                              "end_token": 2070,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      }",
                                                              "start_token": 2072,
                                                              "end_token": 2179,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2074,
                                                                  "end_token": 2074,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        @Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }\n        TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });\n        const fixture = TestBed.createComponent(AppComponent);\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|test|end');\n        fixture.componentInstance.insertTpl = true;\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('start|testtest|end');\n      }",
                                                                  "start_token": 2075,
                                                                  "end_token": 2179,
                                                                  "children": [
                                                                    {
                                                                      "type": "ClassDeclaration",
                                                                      "label": "@Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })\n        class AppComponent {\n          insertTpl = false;\n        }",
                                                                      "start_token": 2076,
                                                                      "end_token": 2100,
                                                                      "children": [
                                                                        {
                                                                          "type": "Decorator",
                                                                          "label": "@Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })",
                                                                          "start_token": 2076,
                                                                          "end_token": 2092,
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "Component({\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        })",
                                                                              "start_token": 2076,
                                                                              "end_token": 2092,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "Component",
                                                                                  "start_token": 2076,
                                                                                  "end_token": 2076,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "ObjectLiteralExpression",
                                                                                  "label": "{\n          selector: 'app-root',\n          template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `,\n          standalone: false,\n        }",
                                                                                  "start_token": 2078,
                                                                                  "end_token": 2091,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAssignment",
                                                                                      "label": "selector: 'app-root'",
                                                                                      "start_token": 2079,
                                                                                      "end_token": 2081,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "selector",
                                                                                          "start_token": 2079,
                                                                                          "end_token": 2079,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "StringLiteral",
                                                                                          "label": "'app-root'",
                                                                                          "start_token": 2081,
                                                                                          "end_token": 2081,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAssignment",
                                                                                      "label": "template: `\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `",
                                                                                      "start_token": 2083,
                                                                                      "end_token": 2085,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "template",
                                                                                          "start_token": 2083,
                                                                                          "end_token": 2083,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "FirstTemplateToken",
                                                                                          "label": "`\n            <div>start|</div>\n            <ng-container [ngTemplateOutlet]=\"insertTpl ? tpl : null\"></ng-container>\n            <ng-container [ngTemplateOutlet]=\"tpl\"></ng-container>\n            <div>|end</div>\n            <ng-template #tpl>test</ng-template>\n          `",
                                                                                          "start_token": 2085,
                                                                                          "end_token": 2085,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAssignment",
                                                                                      "label": "standalone: false",
                                                                                      "start_token": 2087,
                                                                                      "end_token": 2089,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "standalone",
                                                                                          "start_token": 2087,
                                                                                          "end_token": 2087,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "FalseKeyword",
                                                                                          "label": "false",
                                                                                          "start_token": 2089,
                                                                                          "end_token": 2089,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "AppComponent",
                                                                          "start_token": 2094,
                                                                          "end_token": 2094,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "PropertyDeclaration",
                                                                          "label": "insertTpl = false;",
                                                                          "start_token": 2096,
                                                                          "end_token": 2099,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insertTpl",
                                                                              "start_token": 2096,
                                                                              "end_token": 2096,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FalseKeyword",
                                                                              "label": "false",
                                                                              "start_token": 2098,
                                                                              "end_token": 2098,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        });",
                                                                      "start_token": 2101,
                                                                      "end_token": 2120,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.configureTestingModule({\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        })",
                                                                          "start_token": 2101,
                                                                          "end_token": 2119,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.configureTestingModule",
                                                                              "start_token": 2101,
                                                                              "end_token": 2103,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 2101,
                                                                                  "end_token": 2101,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "configureTestingModule",
                                                                                  "start_token": 2103,
                                                                                  "end_token": 2103,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{\n          declarations: [AppComponent],\n          imports: [CommonModule],\n        }",
                                                                              "start_token": 2105,
                                                                              "end_token": 2118,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "declarations: [AppComponent]",
                                                                                  "start_token": 2106,
                                                                                  "end_token": 2110,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "declarations",
                                                                                      "start_token": 2106,
                                                                                      "end_token": 2106,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[AppComponent]",
                                                                                      "start_token": 2108,
                                                                                      "end_token": 2110,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "AppComponent",
                                                                                          "start_token": 2109,
                                                                                          "end_token": 2109,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "imports: [CommonModule]",
                                                                                  "start_token": 2112,
                                                                                  "end_token": 2116,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "imports",
                                                                                      "start_token": 2112,
                                                                                      "end_token": 2112,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[CommonModule]",
                                                                                      "start_token": 2114,
                                                                                      "end_token": 2116,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "CommonModule",
                                                                                          "start_token": 2115,
                                                                                          "end_token": 2115,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstStatement",
                                                                      "label": "const fixture = TestBed.createComponent(AppComponent);",
                                                                      "start_token": 2121,
                                                                      "end_token": 2130,
                                                                      "children": [
                                                                        {
                                                                          "type": "VariableDeclarationList",
                                                                          "label": "const fixture = TestBed.createComponent(AppComponent)",
                                                                          "start_token": 2121,
                                                                          "end_token": 2129,
                                                                          "children": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "label": "fixture = TestBed.createComponent(AppComponent)",
                                                                              "start_token": 2122,
                                                                              "end_token": 2129,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2122,
                                                                                  "end_token": 2122,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(AppComponent)",
                                                                                  "start_token": 2124,
                                                                                  "end_token": 2129,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 2124,
                                                                                      "end_token": 2126,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 2124,
                                                                                          "end_token": 2124,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 2126,
                                                                                          "end_token": 2126,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "AppComponent",
                                                                                      "start_token": 2128,
                                                                                      "end_token": 2128,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2131,
                                                                      "end_token": 2136,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2131,
                                                                          "end_token": 2135,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2131,
                                                                              "end_token": 2133,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2131,
                                                                                  "end_token": 2131,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2133,
                                                                                  "end_token": 2133,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(fixture.nativeElement.textContent).toBe('start|test|end');",
                                                                      "start_token": 2137,
                                                                      "end_token": 2150,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(fixture.nativeElement.textContent).toBe('start|test|end')",
                                                                          "start_token": 2137,
                                                                          "end_token": 2149,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                                              "start_token": 2137,
                                                                              "end_token": 2146,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                                  "start_token": 2137,
                                                                                  "end_token": 2144,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2137,
                                                                                      "end_token": 2137,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.nativeElement.textContent",
                                                                                      "start_token": 2139,
                                                                                      "end_token": 2143,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "fixture.nativeElement",
                                                                                          "start_token": 2139,
                                                                                          "end_token": 2141,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "fixture",
                                                                                              "start_token": 2139,
                                                                                              "end_token": 2139,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "nativeElement",
                                                                                              "start_token": 2141,
                                                                                              "end_token": 2141,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2143,
                                                                                          "end_token": 2143,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2146,
                                                                                  "end_token": 2146,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'start|test|end'",
                                                                              "start_token": 2148,
                                                                              "end_token": 2148,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.componentInstance.insertTpl = true;",
                                                                      "start_token": 2151,
                                                                      "end_token": 2158,
                                                                      "children": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "label": "fixture.componentInstance.insertTpl = true",
                                                                          "start_token": 2151,
                                                                          "end_token": 2157,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.componentInstance.insertTpl",
                                                                              "start_token": 2151,
                                                                              "end_token": 2155,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.componentInstance",
                                                                                  "start_token": 2151,
                                                                                  "end_token": 2153,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fixture",
                                                                                      "start_token": 2151,
                                                                                      "end_token": 2151,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "componentInstance",
                                                                                      "start_token": 2153,
                                                                                      "end_token": 2153,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "insertTpl",
                                                                                  "start_token": 2155,
                                                                                  "end_token": 2155,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "FirstAssignment",
                                                                              "label": "=",
                                                                              "start_token": 2156,
                                                                              "end_token": 2156,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 2157,
                                                                              "end_token": 2157,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2159,
                                                                      "end_token": 2164,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2159,
                                                                          "end_token": 2163,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2159,
                                                                              "end_token": 2161,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2159,
                                                                                  "end_token": 2159,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2161,
                                                                                  "end_token": 2161,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(fixture.nativeElement.textContent).toBe('start|testtest|end');",
                                                                      "start_token": 2165,
                                                                      "end_token": 2178,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(fixture.nativeElement.textContent).toBe('start|testtest|end')",
                                                                          "start_token": 2165,
                                                                          "end_token": 2177,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                                              "start_token": 2165,
                                                                              "end_token": 2174,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                                  "start_token": 2165,
                                                                                  "end_token": 2172,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2165,
                                                                                      "end_token": 2165,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.nativeElement.textContent",
                                                                                      "start_token": 2167,
                                                                                      "end_token": 2171,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "fixture.nativeElement",
                                                                                          "start_token": 2167,
                                                                                          "end_token": 2169,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "fixture",
                                                                                              "start_token": 2167,
                                                                                              "end_token": 2167,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "nativeElement",
                                                                                              "start_token": 2169,
                                                                                              "end_token": 2169,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2171,
                                                                                          "end_token": 2171,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2174,
                                                                                  "end_token": 2174,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'start|testtest|end'",
                                                                              "start_token": 2176,
                                                                              "end_token": 2176,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });",
                                      "start_token": 2185,
                                      "end_token": 2509,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "describe('before embedded view with projection', () => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    })",
                                          "start_token": 2185,
                                          "end_token": 2508,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "describe",
                                              "start_token": 2185,
                                              "end_token": 2185,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'before embedded view with projection'",
                                              "start_token": 2187,
                                              "end_token": 2187,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    }",
                                              "start_token": 2189,
                                              "end_token": 2507,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 2191,
                                                  "end_token": 2191,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }\n      @Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }\n      beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });\n      it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n      it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    }",
                                                  "start_token": 2192,
                                                  "end_token": 2507,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })\n      class WithContentCmpt {\n        @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n        @ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;\n        @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n        insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }\n      }",
                                                      "start_token": 2193,
                                                      "end_token": 2304,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })",
                                                          "start_token": 2193,
                                                          "end_token": 2209,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      })",
                                                              "start_token": 2193,
                                                              "end_token": 2209,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 2193,
                                                                  "end_token": 2193,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'with-content',\n        template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `,\n        standalone: false,\n      }",
                                                                  "start_token": 2195,
                                                                  "end_token": 2208,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'with-content'",
                                                                      "start_token": 2196,
                                                                      "end_token": 2198,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2196,
                                                                          "end_token": 2196,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'with-content'",
                                                                          "start_token": 2198,
                                                                          "end_token": 2198,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `",
                                                                      "start_token": 2200,
                                                                      "end_token": 2202,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 2200,
                                                                          "end_token": 2200,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n          <ng-template #insert>insert</ng-template>\n          <ng-template #before><ng-content></ng-content></ng-template>\n          <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n        `",
                                                                          "start_token": 2202,
                                                                          "end_token": 2202,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2204,
                                                                      "end_token": 2206,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2204,
                                                                          "end_token": 2204,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2206,
                                                                          "end_token": 2206,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "WithContentCmpt",
                                                          "start_token": 2211,
                                                          "end_token": 2211,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;",
                                                          "start_token": 2213,
                                                          "end_token": 2231,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('insert', {static: true})",
                                                              "start_token": 2213,
                                                              "end_token": 2222,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('insert', {static: true})",
                                                                  "start_token": 2213,
                                                                  "end_token": 2222,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 2213,
                                                                      "end_token": 2213,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'insert'",
                                                                      "start_token": 2215,
                                                                      "end_token": 2215,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 2217,
                                                                      "end_token": 2221,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 2218,
                                                                          "end_token": 2220,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 2218,
                                                                              "end_token": 2218,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 2220,
                                                                              "end_token": 2220,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insertTpl",
                                                              "start_token": 2223,
                                                              "end_token": 2223,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 2224,
                                                              "end_token": 2224,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<{}>",
                                                              "start_token": 2226,
                                                              "end_token": 2230,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 2226,
                                                                  "end_token": 2226,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeLiteral",
                                                                  "label": "{}",
                                                                  "start_token": 2228,
                                                                  "end_token": 2229,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('before', {static: true}) beforeTpl!: TemplateRef<{}>;",
                                                          "start_token": 2232,
                                                          "end_token": 2250,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('before', {static: true})",
                                                              "start_token": 2232,
                                                              "end_token": 2241,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('before', {static: true})",
                                                                  "start_token": 2232,
                                                                  "end_token": 2241,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 2232,
                                                                      "end_token": 2232,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'before'",
                                                                      "start_token": 2234,
                                                                      "end_token": 2234,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 2236,
                                                                      "end_token": 2240,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 2237,
                                                                          "end_token": 2239,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 2237,
                                                                              "end_token": 2237,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 2239,
                                                                              "end_token": 2239,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "beforeTpl",
                                                              "start_token": 2242,
                                                              "end_token": 2242,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 2243,
                                                              "end_token": 2243,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<{}>",
                                                              "start_token": 2245,
                                                              "end_token": 2249,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 2245,
                                                                  "end_token": 2245,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeLiteral",
                                                                  "label": "{}",
                                                                  "start_token": 2247,
                                                                  "end_token": 2248,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;",
                                                          "start_token": 2251,
                                                          "end_token": 2265,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('vi', {static: true})",
                                                              "start_token": 2251,
                                                              "end_token": 2260,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('vi', {static: true})",
                                                                  "start_token": 2251,
                                                                  "end_token": 2260,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 2251,
                                                                      "end_token": 2251,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'vi'",
                                                                      "start_token": 2253,
                                                                      "end_token": 2253,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 2255,
                                                                      "end_token": 2259,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 2256,
                                                                          "end_token": 2258,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 2256,
                                                                              "end_token": 2256,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 2258,
                                                                              "end_token": 2258,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "viewInsertingDir",
                                                              "start_token": 2261,
                                                              "end_token": 2261,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 2262,
                                                              "end_token": 2262,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewInsertingDir",
                                                              "start_token": 2264,
                                                              "end_token": 2264,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewInsertingDir",
                                                                  "start_token": 2264,
                                                                  "end_token": 2264,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "insert() {\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }",
                                                          "start_token": 2266,
                                                          "end_token": 2303,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insert",
                                                              "start_token": 2266,
                                                              "end_token": 2266,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          const beforeView = this.beforeTpl.createEmbeddedView({});\n          // change-detect the \"before view\" to create all child views\n          beforeView.detectChanges();\n          this.viewInsertingDir.insert(beforeView, this.insertTpl);\n        }",
                                                              "start_token": 2269,
                                                              "end_token": 2303,
                                                              "children": [
                                                                {
                                                                  "type": "FirstStatement",
                                                                  "label": "const beforeView = this.beforeTpl.createEmbeddedView({});",
                                                                  "start_token": 2270,
                                                                  "end_token": 2282,
                                                                  "children": [
                                                                    {
                                                                      "type": "VariableDeclarationList",
                                                                      "label": "const beforeView = this.beforeTpl.createEmbeddedView({})",
                                                                      "start_token": 2270,
                                                                      "end_token": 2281,
                                                                      "children": [
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "label": "beforeView = this.beforeTpl.createEmbeddedView({})",
                                                                          "start_token": 2271,
                                                                          "end_token": 2281,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "beforeView",
                                                                              "start_token": 2271,
                                                                              "end_token": 2271,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "this.beforeTpl.createEmbeddedView({})",
                                                                              "start_token": 2273,
                                                                              "end_token": 2281,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "this.beforeTpl.createEmbeddedView",
                                                                                  "start_token": 2273,
                                                                                  "end_token": 2277,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "this.beforeTpl",
                                                                                      "start_token": 2273,
                                                                                      "end_token": 2275,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "ThisKeyword",
                                                                                          "label": "this",
                                                                                          "start_token": 2273,
                                                                                          "end_token": 2273,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "beforeTpl",
                                                                                          "start_token": 2275,
                                                                                          "end_token": 2275,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "createEmbeddedView",
                                                                                      "start_token": 2277,
                                                                                      "end_token": 2277,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "ObjectLiteralExpression",
                                                                                  "label": "{}",
                                                                                  "start_token": 2279,
                                                                                  "end_token": 2280,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "beforeView.detectChanges();",
                                                                  "start_token": 2284,
                                                                  "end_token": 2289,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "beforeView.detectChanges()",
                                                                      "start_token": 2284,
                                                                      "end_token": 2288,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "beforeView.detectChanges",
                                                                          "start_token": 2284,
                                                                          "end_token": 2286,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "beforeView",
                                                                              "start_token": 2284,
                                                                              "end_token": 2284,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "detectChanges",
                                                                              "start_token": 2286,
                                                                              "end_token": 2286,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.viewInsertingDir.insert(beforeView, this.insertTpl);",
                                                                  "start_token": 2290,
                                                                  "end_token": 2302,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this.viewInsertingDir.insert(beforeView, this.insertTpl)",
                                                                      "start_token": 2290,
                                                                      "end_token": 2301,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.viewInsertingDir.insert",
                                                                          "start_token": 2290,
                                                                          "end_token": 2294,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.viewInsertingDir",
                                                                              "start_token": 2290,
                                                                              "end_token": 2292,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 2290,
                                                                                  "end_token": 2290,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "viewInsertingDir",
                                                                                  "start_token": 2292,
                                                                                  "end_token": 2292,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insert",
                                                                              "start_token": 2294,
                                                                              "end_token": 2294,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "beforeView",
                                                                          "start_token": 2296,
                                                                          "end_token": 2296,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.insertTpl",
                                                                          "start_token": 2298,
                                                                          "end_token": 2300,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 2298,
                                                                              "end_token": 2298,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insertTpl",
                                                                              "start_token": 2300,
                                                                              "end_token": 2300,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;\n      }",
                                                      "start_token": 2305,
                                                      "end_token": 2340,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })",
                                                          "start_token": 2305,
                                                          "end_token": 2321,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      })",
                                                              "start_token": 2305,
                                                              "end_token": 2321,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 2305,
                                                                  "end_token": 2305,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'test-cmpt',\n        template: '',\n        standalone: false,\n      }",
                                                                  "start_token": 2307,
                                                                  "end_token": 2320,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'test-cmpt'",
                                                                      "start_token": 2308,
                                                                      "end_token": 2310,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2308,
                                                                          "end_token": 2308,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'test-cmpt'",
                                                                          "start_token": 2310,
                                                                          "end_token": 2310,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: ''",
                                                                      "start_token": 2312,
                                                                      "end_token": 2314,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 2312,
                                                                          "end_token": 2312,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "''",
                                                                          "start_token": 2314,
                                                                          "end_token": 2314,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2316,
                                                                      "end_token": 2318,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2316,
                                                                          "end_token": 2316,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2318,
                                                                          "end_token": 2318,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 2323,
                                                          "end_token": 2323,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('wc', {static: true}) withContentCmpt!: WithContentCmpt;",
                                                          "start_token": 2325,
                                                          "end_token": 2339,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('wc', {static: true})",
                                                              "start_token": 2325,
                                                              "end_token": 2334,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('wc', {static: true})",
                                                                  "start_token": 2325,
                                                                  "end_token": 2334,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 2325,
                                                                      "end_token": 2325,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'wc'",
                                                                      "start_token": 2327,
                                                                      "end_token": 2327,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 2329,
                                                                      "end_token": 2333,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 2330,
                                                                          "end_token": 2332,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 2330,
                                                                              "end_token": 2330,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 2332,
                                                                              "end_token": 2332,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "withContentCmpt",
                                                              "start_token": 2335,
                                                              "end_token": 2335,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 2336,
                                                              "end_token": 2336,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "WithContentCmpt",
                                                              "start_token": 2338,
                                                              "end_token": 2338,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "WithContentCmpt",
                                                                  "start_token": 2338,
                                                                  "end_token": 2338,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      });",
                                                      "start_token": 2341,
                                                      "end_token": 2373,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "beforeEach(() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      })",
                                                          "start_token": 2341,
                                                          "end_token": 2372,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "beforeEach",
                                                              "start_token": 2341,
                                                              "end_token": 2341,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      }",
                                                              "start_token": 2343,
                                                              "end_token": 2371,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2345,
                                                                  "end_token": 2345,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });\n      }",
                                                                  "start_token": 2346,
                                                                  "end_token": 2371,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        });",
                                                                      "start_token": 2347,
                                                                      "end_token": 2370,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.configureTestingModule({\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        })",
                                                                          "start_token": 2347,
                                                                          "end_token": 2369,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.configureTestingModule",
                                                                              "start_token": 2347,
                                                                              "end_token": 2349,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 2347,
                                                                                  "end_token": 2347,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "configureTestingModule",
                                                                                  "start_token": 2349,
                                                                                  "end_token": 2349,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{\n          declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt],\n          imports: [CommonModule],\n        }",
                                                                              "start_token": 2351,
                                                                              "end_token": 2368,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "declarations: [ViewInsertingDir, WithContentCmpt, TestCmpt]",
                                                                                  "start_token": 2352,
                                                                                  "end_token": 2360,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "declarations",
                                                                                      "start_token": 2352,
                                                                                      "end_token": 2352,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[ViewInsertingDir, WithContentCmpt, TestCmpt]",
                                                                                      "start_token": 2354,
                                                                                      "end_token": 2360,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "ViewInsertingDir",
                                                                                          "start_token": 2355,
                                                                                          "end_token": 2355,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "WithContentCmpt",
                                                                                          "start_token": 2357,
                                                                                          "end_token": 2357,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestCmpt",
                                                                                          "start_token": 2359,
                                                                                          "end_token": 2359,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "imports: [CommonModule]",
                                                                                  "start_token": 2362,
                                                                                  "end_token": 2366,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "imports",
                                                                                      "start_token": 2362,
                                                                                      "end_token": 2362,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[CommonModule]",
                                                                                      "start_token": 2364,
                                                                                      "end_token": 2366,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "CommonModule",
                                                                                          "start_token": 2365,
                                                                                          "end_token": 2365,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });",
                                                      "start_token": 2374,
                                                      "end_token": 2439,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with projected text nodes', () => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      })",
                                                          "start_token": 2374,
                                                          "end_token": 2438,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 2374,
                                                              "end_token": 2374,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with projected text nodes'",
                                                              "start_token": 2376,
                                                              "end_token": 2376,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      }",
                                                              "start_token": 2378,
                                                              "end_token": 2437,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2380,
                                                                  "end_token": 2380,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      }",
                                                                  "start_token": 2381,
                                                                  "end_token": 2437,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`);",
                                                                      "start_token": 2382,
                                                                      "end_token": 2390,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.overrideTemplate(TestCmpt, `<with-content #wc>|before</with-content>`)",
                                                                          "start_token": 2382,
                                                                          "end_token": 2389,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.overrideTemplate",
                                                                              "start_token": 2382,
                                                                              "end_token": 2384,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 2382,
                                                                                  "end_token": 2382,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "overrideTemplate",
                                                                                  "start_token": 2384,
                                                                                  "end_token": 2384,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TestCmpt",
                                                                              "start_token": 2386,
                                                                              "end_token": 2386,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstTemplateToken",
                                                                              "label": "`<with-content #wc>|before</with-content>`",
                                                                              "start_token": 2388,
                                                                              "end_token": 2388,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstStatement",
                                                                      "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                                      "start_token": 2391,
                                                                      "end_token": 2400,
                                                                      "children": [
                                                                        {
                                                                          "type": "VariableDeclarationList",
                                                                          "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                                          "start_token": 2391,
                                                                          "end_token": 2399,
                                                                          "children": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                                              "start_token": 2392,
                                                                              "end_token": 2399,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2392,
                                                                                  "end_token": 2392,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 2394,
                                                                                  "end_token": 2399,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 2394,
                                                                                      "end_token": 2396,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 2394,
                                                                                          "end_token": 2394,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 2396,
                                                                                          "end_token": 2396,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 2398,
                                                                                      "end_token": 2398,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2401,
                                                                      "end_token": 2406,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2401,
                                                                          "end_token": 2405,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2401,
                                                                              "end_token": 2403,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2401,
                                                                                  "end_token": 2401,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2403,
                                                                                  "end_token": 2403,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.componentInstance.withContentCmpt.insert();",
                                                                      "start_token": 2407,
                                                                      "end_token": 2416,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.componentInstance.withContentCmpt.insert()",
                                                                          "start_token": 2407,
                                                                          "end_token": 2415,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.componentInstance.withContentCmpt.insert",
                                                                              "start_token": 2407,
                                                                              "end_token": 2413,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.componentInstance.withContentCmpt",
                                                                                  "start_token": 2407,
                                                                                  "end_token": 2411,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.componentInstance",
                                                                                      "start_token": 2407,
                                                                                      "end_token": 2409,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "fixture",
                                                                                          "start_token": 2407,
                                                                                          "end_token": 2407,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "componentInstance",
                                                                                          "start_token": 2409,
                                                                                          "end_token": 2409,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "withContentCmpt",
                                                                                      "start_token": 2411,
                                                                                      "end_token": 2411,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "insert",
                                                                                  "start_token": 2413,
                                                                                  "end_token": 2413,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2417,
                                                                      "end_token": 2422,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2417,
                                                                          "end_token": 2421,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2417,
                                                                              "end_token": 2419,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2417,
                                                                                  "end_token": 2417,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2419,
                                                                                  "end_token": 2419,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(fixture.nativeElement.textContent).toBe('insert|before');",
                                                                      "start_token": 2423,
                                                                      "end_token": 2436,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(fixture.nativeElement.textContent).toBe('insert|before')",
                                                                          "start_token": 2423,
                                                                          "end_token": 2435,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                                              "start_token": 2423,
                                                                              "end_token": 2432,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                                  "start_token": 2423,
                                                                                  "end_token": 2430,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2423,
                                                                                      "end_token": 2423,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.nativeElement.textContent",
                                                                                      "start_token": 2425,
                                                                                      "end_token": 2429,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "fixture.nativeElement",
                                                                                          "start_token": 2425,
                                                                                          "end_token": 2427,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "fixture",
                                                                                              "start_token": 2425,
                                                                                              "end_token": 2425,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "nativeElement",
                                                                                              "start_token": 2427,
                                                                                              "end_token": 2427,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2429,
                                                                                          "end_token": 2429,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2432,
                                                                                  "end_token": 2432,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 2434,
                                                                              "end_token": 2434,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });",
                                                      "start_token": 2440,
                                                      "end_token": 2506,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert before a view with projected container', () => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      })",
                                                          "start_token": 2440,
                                                          "end_token": 2505,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 2440,
                                                              "end_token": 2440,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert before a view with projected container'",
                                                              "start_token": 2442,
                                                              "end_token": 2442,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      }",
                                                              "start_token": 2444,
                                                              "end_token": 2504,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2446,
                                                                  "end_token": 2446,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.withContentCmpt.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      }",
                                                                  "start_token": 2447,
                                                                  "end_token": 2504,
                                                                  "children": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        );",
                                                                      "start_token": 2448,
                                                                      "end_token": 2457,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.overrideTemplate(\n          TestCmpt,\n          `<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`,\n        )",
                                                                          "start_token": 2448,
                                                                          "end_token": 2456,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.overrideTemplate",
                                                                              "start_token": 2448,
                                                                              "end_token": 2450,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 2448,
                                                                                  "end_token": 2448,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "overrideTemplate",
                                                                                  "start_token": 2450,
                                                                                  "end_token": 2450,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TestCmpt",
                                                                              "start_token": 2452,
                                                                              "end_token": 2452,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "FirstTemplateToken",
                                                                              "label": "`<with-content #wc><ng-template [ngIf]=\"true\">|before</ng-template></with-content>`",
                                                                              "start_token": 2454,
                                                                              "end_token": 2454,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstStatement",
                                                                      "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                                      "start_token": 2458,
                                                                      "end_token": 2467,
                                                                      "children": [
                                                                        {
                                                                          "type": "VariableDeclarationList",
                                                                          "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                                          "start_token": 2458,
                                                                          "end_token": 2466,
                                                                          "children": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                                              "start_token": 2459,
                                                                              "end_token": 2466,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2459,
                                                                                  "end_token": 2459,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 2461,
                                                                                  "end_token": 2466,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 2461,
                                                                                      "end_token": 2463,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 2461,
                                                                                          "end_token": 2461,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 2463,
                                                                                          "end_token": 2463,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 2465,
                                                                                      "end_token": 2465,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2468,
                                                                      "end_token": 2473,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2468,
                                                                          "end_token": 2472,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2468,
                                                                              "end_token": 2470,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2468,
                                                                                  "end_token": 2468,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2470,
                                                                                  "end_token": 2470,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.componentInstance.withContentCmpt.insert();",
                                                                      "start_token": 2474,
                                                                      "end_token": 2483,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.componentInstance.withContentCmpt.insert()",
                                                                          "start_token": 2474,
                                                                          "end_token": 2482,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.componentInstance.withContentCmpt.insert",
                                                                              "start_token": 2474,
                                                                              "end_token": 2480,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.componentInstance.withContentCmpt",
                                                                                  "start_token": 2474,
                                                                                  "end_token": 2478,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.componentInstance",
                                                                                      "start_token": 2474,
                                                                                      "end_token": 2476,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "fixture",
                                                                                          "start_token": 2474,
                                                                                          "end_token": 2474,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "componentInstance",
                                                                                          "start_token": 2476,
                                                                                          "end_token": 2476,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "withContentCmpt",
                                                                                      "start_token": 2478,
                                                                                      "end_token": 2478,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "insert",
                                                                                  "start_token": 2480,
                                                                                  "end_token": 2480,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2484,
                                                                      "end_token": 2489,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2484,
                                                                          "end_token": 2488,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2484,
                                                                              "end_token": 2486,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2484,
                                                                                  "end_token": 2484,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2486,
                                                                                  "end_token": 2486,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(fixture.nativeElement.textContent).toBe('insert|before');",
                                                                      "start_token": 2490,
                                                                      "end_token": 2503,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(fixture.nativeElement.textContent).toBe('insert|before')",
                                                                          "start_token": 2490,
                                                                          "end_token": 2502,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                                              "start_token": 2490,
                                                                              "end_token": 2499,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                                  "start_token": 2490,
                                                                                  "end_token": 2497,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2490,
                                                                                      "end_token": 2490,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.nativeElement.textContent",
                                                                                      "start_token": 2492,
                                                                                      "end_token": 2496,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "fixture.nativeElement",
                                                                                          "start_token": 2492,
                                                                                          "end_token": 2494,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "fixture",
                                                                                              "start_token": 2492,
                                                                                              "end_token": 2492,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "nativeElement",
                                                                                              "start_token": 2494,
                                                                                              "end_token": 2494,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2496,
                                                                                          "end_token": 2496,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2499,
                                                                                  "end_token": 2499,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 2501,
                                                                              "end_token": 2501,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    });",
                                      "start_token": 2510,
                                      "end_token": 2804,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "describe('before component view', () => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    })",
                                          "start_token": 2510,
                                          "end_token": 2803,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "describe",
                                              "start_token": 2510,
                                              "end_token": 2510,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'before component view'",
                                              "start_token": 2512,
                                              "end_token": 2512,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    }",
                                              "start_token": 2514,
                                              "end_token": 2802,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 2516,
                                                  "end_token": 2516,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });\n    }",
                                                  "start_token": 2517,
                                                  "end_token": 2802,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })\n      class ViewInsertingDir {\n        constructor(private _vcRef: ViewContainerRef) {}\n        insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }\n      }",
                                                      "start_token": 2518,
                                                      "end_token": 2588,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })",
                                                          "start_token": 2518,
                                                          "end_token": 2534,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      })",
                                                              "start_token": 2518,
                                                              "end_token": 2534,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 2518,
                                                                  "end_token": 2518,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[viewInserting]',\n        exportAs: 'vi',\n        standalone: false,\n      }",
                                                                  "start_token": 2520,
                                                                  "end_token": 2533,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[viewInserting]'",
                                                                      "start_token": 2521,
                                                                      "end_token": 2523,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2521,
                                                                          "end_token": 2521,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[viewInserting]'",
                                                                          "start_token": 2523,
                                                                          "end_token": 2523,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "exportAs: 'vi'",
                                                                      "start_token": 2525,
                                                                      "end_token": 2527,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "exportAs",
                                                                          "start_token": 2525,
                                                                          "end_token": 2525,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'vi'",
                                                                          "start_token": 2527,
                                                                          "end_token": 2527,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2529,
                                                                      "end_token": 2531,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2529,
                                                                          "end_token": 2529,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2531,
                                                                          "end_token": 2531,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "ViewInsertingDir",
                                                          "start_token": 2536,
                                                          "end_token": 2536,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor(private _vcRef: ViewContainerRef) {}",
                                                          "start_token": 2538,
                                                          "end_token": 2546,
                                                          "children": [
                                                            {
                                                              "type": "Parameter",
                                                              "label": "private _vcRef: ViewContainerRef",
                                                              "start_token": 2540,
                                                              "end_token": 2543,
                                                              "children": [
                                                                {
                                                                  "type": "PrivateKeyword",
                                                                  "label": "private",
                                                                  "start_token": 2540,
                                                                  "end_token": 2540,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_vcRef",
                                                                  "start_token": 2541,
                                                                  "end_token": 2541,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 2543,
                                                                  "end_token": 2543,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewContainerRef",
                                                                      "start_token": 2543,
                                                                      "end_token": 2543,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{}",
                                                              "start_token": 2545,
                                                              "end_token": 2546,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "insert(beforeView: ViewRef, insertTpl: TemplateRef<{}>) {\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }",
                                                          "start_token": 2547,
                                                          "end_token": 2587,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insert",
                                                              "start_token": 2547,
                                                              "end_token": 2547,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Parameter",
                                                              "label": "beforeView: ViewRef",
                                                              "start_token": 2549,
                                                              "end_token": 2551,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "beforeView",
                                                                  "start_token": 2549,
                                                                  "end_token": 2549,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "ViewRef",
                                                                  "start_token": 2551,
                                                                  "end_token": 2551,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewRef",
                                                                      "start_token": 2551,
                                                                      "end_token": 2551,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Parameter",
                                                              "label": "insertTpl: TemplateRef<{}>",
                                                              "start_token": 2553,
                                                              "end_token": 2559,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "insertTpl",
                                                                  "start_token": 2553,
                                                                  "end_token": 2553,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "TemplateRef<{}>",
                                                                  "start_token": 2555,
                                                                  "end_token": 2559,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "TemplateRef",
                                                                      "start_token": 2555,
                                                                      "end_token": 2555,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "TypeLiteral",
                                                                      "label": "{}",
                                                                      "start_token": 2557,
                                                                      "end_token": 2558,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          this._vcRef.insert(beforeView, 0);\n          this._vcRef.createEmbeddedView(insertTpl, {}, 0);\n        }",
                                                              "start_token": 2561,
                                                              "end_token": 2587,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this._vcRef.insert(beforeView, 0);",
                                                                  "start_token": 2562,
                                                                  "end_token": 2572,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this._vcRef.insert(beforeView, 0)",
                                                                      "start_token": 2562,
                                                                      "end_token": 2571,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this._vcRef.insert",
                                                                          "start_token": 2562,
                                                                          "end_token": 2566,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this._vcRef",
                                                                              "start_token": 2562,
                                                                              "end_token": 2564,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 2562,
                                                                                  "end_token": 2562,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "_vcRef",
                                                                                  "start_token": 2564,
                                                                                  "end_token": 2564,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insert",
                                                                              "start_token": 2566,
                                                                              "end_token": 2566,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "beforeView",
                                                                          "start_token": 2568,
                                                                          "end_token": 2568,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstLiteralToken",
                                                                          "label": "0",
                                                                          "start_token": 2570,
                                                                          "end_token": 2570,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this._vcRef.createEmbeddedView(insertTpl, {}, 0);",
                                                                  "start_token": 2573,
                                                                  "end_token": 2586,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this._vcRef.createEmbeddedView(insertTpl, {}, 0)",
                                                                      "start_token": 2573,
                                                                      "end_token": 2585,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this._vcRef.createEmbeddedView",
                                                                          "start_token": 2573,
                                                                          "end_token": 2577,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this._vcRef",
                                                                              "start_token": 2573,
                                                                              "end_token": 2575,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 2573,
                                                                                  "end_token": 2573,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "_vcRef",
                                                                                  "start_token": 2575,
                                                                                  "end_token": 2575,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "createEmbeddedView",
                                                                              "start_token": 2577,
                                                                              "end_token": 2577,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "insertTpl",
                                                                          "start_token": 2579,
                                                                          "end_token": 2579,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "ObjectLiteralExpression",
                                                                          "label": "{}",
                                                                          "start_token": 2581,
                                                                          "end_token": 2582,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstLiteralToken",
                                                                          "label": "0",
                                                                          "start_token": 2584,
                                                                          "end_token": 2584,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })\n      class DynamicComponent {}",
                                                      "start_token": 2589,
                                                      "end_token": 2609,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })",
                                                          "start_token": 2589,
                                                          "end_token": 2605,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      })",
                                                              "start_token": 2589,
                                                              "end_token": 2605,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 2589,
                                                                  "end_token": 2589,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'dynamic-cmpt',\n        template: '|before',\n        standalone: false,\n      }",
                                                                  "start_token": 2591,
                                                                  "end_token": 2604,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'dynamic-cmpt'",
                                                                      "start_token": 2592,
                                                                      "end_token": 2594,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2592,
                                                                          "end_token": 2592,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'dynamic-cmpt'",
                                                                          "start_token": 2594,
                                                                          "end_token": 2594,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: '|before'",
                                                                      "start_token": 2596,
                                                                      "end_token": 2598,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 2596,
                                                                          "end_token": 2596,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'|before'",
                                                                          "start_token": 2598,
                                                                          "end_token": 2598,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2600,
                                                                      "end_token": 2602,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2600,
                                                                          "end_token": 2600,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2602,
                                                                          "end_token": 2602,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DynamicComponent",
                                                          "start_token": 2607,
                                                          "end_token": 2607,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      });",
                                                      "start_token": 2610,
                                                      "end_token": 2801,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "it('should insert in front a dynamic component view', () => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      })",
                                                          "start_token": 2610,
                                                          "end_token": 2800,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "it",
                                                              "start_token": 2610,
                                                              "end_token": 2610,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'should insert in front a dynamic component view'",
                                                              "start_token": 2612,
                                                              "end_token": 2612,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrowFunction",
                                                              "label": "() => {\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      }",
                                                              "start_token": 2614,
                                                              "end_token": 2799,
                                                              "children": [
                                                                {
                                                                  "type": "EqualsGreaterThanToken",
                                                                  "label": "=>",
                                                                  "start_token": 2616,
                                                                  "end_token": 2616,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Block",
                                                                  "label": "{\n        @Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }\n        TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });\n        const fixture = TestBed.createComponent(TestCmpt);\n        fixture.detectChanges();\n        fixture.componentInstance.insert();\n        fixture.detectChanges();\n        expect(fixture.nativeElement.textContent).toBe('insert|before');\n      }",
                                                                  "start_token": 2617,
                                                                  "end_token": 2799,
                                                                  "children": [
                                                                    {
                                                                      "type": "ClassDeclaration",
                                                                      "label": "@Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })\n        class TestCmpt {\n          @ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;\n          @ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;\n          constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}\n          insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }\n        }",
                                                                      "start_token": 2618,
                                                                      "end_token": 2736,
                                                                      "children": [
                                                                        {
                                                                          "type": "Decorator",
                                                                          "label": "@Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })",
                                                                          "start_token": 2618,
                                                                          "end_token": 2634,
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "Component({\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        })",
                                                                              "start_token": 2618,
                                                                              "end_token": 2634,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "Component",
                                                                                  "start_token": 2618,
                                                                                  "end_token": 2618,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "ObjectLiteralExpression",
                                                                                  "label": "{\n          selector: 'test-cmpt',\n          template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `,\n          standalone: false,\n        }",
                                                                                  "start_token": 2620,
                                                                                  "end_token": 2633,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAssignment",
                                                                                      "label": "selector: 'test-cmpt'",
                                                                                      "start_token": 2621,
                                                                                      "end_token": 2623,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "selector",
                                                                                          "start_token": 2621,
                                                                                          "end_token": 2621,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "StringLiteral",
                                                                                          "label": "'test-cmpt'",
                                                                                          "start_token": 2623,
                                                                                          "end_token": 2623,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAssignment",
                                                                                      "label": "template: `\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `",
                                                                                      "start_token": 2625,
                                                                                      "end_token": 2627,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "template",
                                                                                          "start_token": 2625,
                                                                                          "end_token": 2625,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "FirstTemplateToken",
                                                                                          "label": "`\n                <ng-template #insert>insert</ng-template>\n                <div><ng-template #vi=\"vi\" viewInserting></ng-template></div>\n              `",
                                                                                          "start_token": 2627,
                                                                                          "end_token": 2627,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAssignment",
                                                                                      "label": "standalone: false",
                                                                                      "start_token": 2629,
                                                                                      "end_token": 2631,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "standalone",
                                                                                          "start_token": 2629,
                                                                                          "end_token": 2629,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "FalseKeyword",
                                                                                          "label": "false",
                                                                                          "start_token": 2631,
                                                                                          "end_token": 2631,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 2636,
                                                                          "end_token": 2636,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "PropertyDeclaration",
                                                                          "label": "@ViewChild('insert', {static: true}) insertTpl!: TemplateRef<{}>;",
                                                                          "start_token": 2638,
                                                                          "end_token": 2656,
                                                                          "children": [
                                                                            {
                                                                              "type": "Decorator",
                                                                              "label": "@ViewChild('insert', {static: true})",
                                                                              "start_token": 2638,
                                                                              "end_token": 2647,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "ViewChild('insert', {static: true})",
                                                                                  "start_token": 2638,
                                                                                  "end_token": 2647,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "ViewChild",
                                                                                      "start_token": 2638,
                                                                                      "end_token": 2638,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "StringLiteral",
                                                                                      "label": "'insert'",
                                                                                      "start_token": 2640,
                                                                                      "end_token": 2640,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ObjectLiteralExpression",
                                                                                      "label": "{static: true}",
                                                                                      "start_token": 2642,
                                                                                      "end_token": 2646,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAssignment",
                                                                                          "label": "static: true",
                                                                                          "start_token": 2643,
                                                                                          "end_token": 2645,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "static",
                                                                                              "start_token": 2643,
                                                                                              "end_token": 2643,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "TrueKeyword",
                                                                                              "label": "true",
                                                                                              "start_token": 2645,
                                                                                              "end_token": 2645,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insertTpl",
                                                                              "start_token": 2648,
                                                                              "end_token": 2648,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "ExclamationToken",
                                                                              "label": "!",
                                                                              "start_token": 2649,
                                                                              "end_token": 2649,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TypeReference",
                                                                              "label": "TemplateRef<{}>",
                                                                              "start_token": 2651,
                                                                              "end_token": 2655,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TemplateRef",
                                                                                  "start_token": 2651,
                                                                                  "end_token": 2651,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "TypeLiteral",
                                                                                  "label": "{}",
                                                                                  "start_token": 2653,
                                                                                  "end_token": 2654,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyDeclaration",
                                                                          "label": "@ViewChild('vi', {static: true}) viewInsertingDir!: ViewInsertingDir;",
                                                                          "start_token": 2657,
                                                                          "end_token": 2671,
                                                                          "children": [
                                                                            {
                                                                              "type": "Decorator",
                                                                              "label": "@ViewChild('vi', {static: true})",
                                                                              "start_token": 2657,
                                                                              "end_token": 2666,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "ViewChild('vi', {static: true})",
                                                                                  "start_token": 2657,
                                                                                  "end_token": 2666,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "ViewChild",
                                                                                      "start_token": 2657,
                                                                                      "end_token": 2657,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "StringLiteral",
                                                                                      "label": "'vi'",
                                                                                      "start_token": 2659,
                                                                                      "end_token": 2659,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ObjectLiteralExpression",
                                                                                      "label": "{static: true}",
                                                                                      "start_token": 2661,
                                                                                      "end_token": 2665,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAssignment",
                                                                                          "label": "static: true",
                                                                                          "start_token": 2662,
                                                                                          "end_token": 2664,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "static",
                                                                                              "start_token": 2662,
                                                                                              "end_token": 2662,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "TrueKeyword",
                                                                                              "label": "true",
                                                                                              "start_token": 2664,
                                                                                              "end_token": 2664,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "viewInsertingDir",
                                                                              "start_token": 2667,
                                                                              "end_token": 2667,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "ExclamationToken",
                                                                              "label": "!",
                                                                              "start_token": 2668,
                                                                              "end_token": 2668,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TypeReference",
                                                                              "label": "ViewInsertingDir",
                                                                              "start_token": 2670,
                                                                              "end_token": 2670,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "ViewInsertingDir",
                                                                                  "start_token": 2670,
                                                                                  "end_token": 2670,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Constructor",
                                                                          "label": "constructor(\n            private _vcr: ViewContainerRef,\n            private _injector: Injector,\n          ) {}",
                                                                          "start_token": 2672,
                                                                          "end_token": 2686,
                                                                          "children": [
                                                                            {
                                                                              "type": "Parameter",
                                                                              "label": "private _vcr: ViewContainerRef",
                                                                              "start_token": 2674,
                                                                              "end_token": 2677,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PrivateKeyword",
                                                                                  "label": "private",
                                                                                  "start_token": 2674,
                                                                                  "end_token": 2674,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "_vcr",
                                                                                  "start_token": 2675,
                                                                                  "end_token": 2675,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "TypeReference",
                                                                                  "label": "ViewContainerRef",
                                                                                  "start_token": 2677,
                                                                                  "end_token": 2677,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "ViewContainerRef",
                                                                                      "start_token": 2677,
                                                                                      "end_token": 2677,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Parameter",
                                                                              "label": "private _injector: Injector",
                                                                              "start_token": 2679,
                                                                              "end_token": 2682,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PrivateKeyword",
                                                                                  "label": "private",
                                                                                  "start_token": 2679,
                                                                                  "end_token": 2679,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "_injector",
                                                                                  "start_token": 2680,
                                                                                  "end_token": 2680,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "TypeReference",
                                                                                  "label": "Injector",
                                                                                  "start_token": 2682,
                                                                                  "end_token": 2682,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "Injector",
                                                                                      "start_token": 2682,
                                                                                      "end_token": 2682,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Block",
                                                                              "label": "{}",
                                                                              "start_token": 2685,
                                                                              "end_token": 2686,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "MethodDeclaration",
                                                                          "label": "insert() {\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }",
                                                                          "start_token": 2687,
                                                                          "end_token": 2735,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "insert",
                                                                              "start_token": 2687,
                                                                              "end_token": 2687,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Block",
                                                                              "label": "{\n            // create a dynamic component view to act as an \"insert before\" view\n            const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;\n            // change-detect the \"before view\" to create all child views\n            beforeView.detectChanges();\n            this.viewInsertingDir.insert(beforeView, this.insertTpl);\n          }",
                                                                              "start_token": 2690,
                                                                              "end_token": 2735,
                                                                              "children": [
                                                                                {
                                                                                  "type": "FirstStatement",
                                                                                  "label": "const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView;",
                                                                                  "start_token": 2692,
                                                                                  "end_token": 2714,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "VariableDeclarationList",
                                                                                      "label": "const beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView",
                                                                                      "start_token": 2692,
                                                                                      "end_token": 2713,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "VariableDeclaration",
                                                                                          "label": "beforeView = this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView",
                                                                                          "start_token": 2693,
                                                                                          "end_token": 2713,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "beforeView",
                                                                                              "start_token": 2693,
                                                                                              "end_token": 2693,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "PropertyAccessExpression",
                                                                                              "label": "this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            }).hostView",
                                                                                              "start_token": 2695,
                                                                                              "end_token": 2713,
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "CallExpression",
                                                                                                  "label": "this._vcr.createComponent(DynamicComponent, {\n              injector: this._injector,\n            })",
                                                                                                  "start_token": 2695,
                                                                                                  "end_token": 2711,
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "type": "PropertyAccessExpression",
                                                                                                      "label": "this._vcr.createComponent",
                                                                                                      "start_token": 2695,
                                                                                                      "end_token": 2699,
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "type": "PropertyAccessExpression",
                                                                                                          "label": "this._vcr",
                                                                                                          "start_token": 2695,
                                                                                                          "end_token": 2697,
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "type": "ThisKeyword",
                                                                                                              "label": "this",
                                                                                                              "start_token": 2695,
                                                                                                              "end_token": 2695,
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "Identifier",
                                                                                                              "label": "_vcr",
                                                                                                              "start_token": 2697,
                                                                                                              "end_token": 2697,
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "label": "createComponent",
                                                                                                          "start_token": 2699,
                                                                                                          "end_token": 2699,
                                                                                                          "children": []
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "Identifier",
                                                                                                      "label": "DynamicComponent",
                                                                                                      "start_token": 2701,
                                                                                                      "end_token": 2701,
                                                                                                      "children": []
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "ObjectLiteralExpression",
                                                                                                      "label": "{\n              injector: this._injector,\n            }",
                                                                                                      "start_token": 2703,
                                                                                                      "end_token": 2710,
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "type": "PropertyAssignment",
                                                                                                          "label": "injector: this._injector",
                                                                                                          "start_token": 2704,
                                                                                                          "end_token": 2708,
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "type": "Identifier",
                                                                                                              "label": "injector",
                                                                                                              "start_token": 2704,
                                                                                                              "end_token": 2704,
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "PropertyAccessExpression",
                                                                                                              "label": "this._injector",
                                                                                                              "start_token": 2706,
                                                                                                              "end_token": 2708,
                                                                                                              "children": [
                                                                                                                {
                                                                                                                  "type": "ThisKeyword",
                                                                                                                  "label": "this",
                                                                                                                  "start_token": 2706,
                                                                                                                  "end_token": 2706,
                                                                                                                  "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "Identifier",
                                                                                                                  "label": "_injector",
                                                                                                                  "start_token": 2708,
                                                                                                                  "end_token": 2708,
                                                                                                                  "children": []
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "label": "hostView",
                                                                                                  "start_token": 2713,
                                                                                                  "end_token": 2713,
                                                                                                  "children": []
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "label": "beforeView.detectChanges();",
                                                                                  "start_token": 2716,
                                                                                  "end_token": 2721,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "label": "beforeView.detectChanges()",
                                                                                      "start_token": 2716,
                                                                                      "end_token": 2720,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "beforeView.detectChanges",
                                                                                          "start_token": 2716,
                                                                                          "end_token": 2718,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "beforeView",
                                                                                              "start_token": 2716,
                                                                                              "end_token": 2716,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "detectChanges",
                                                                                              "start_token": 2718,
                                                                                              "end_token": 2718,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "label": "this.viewInsertingDir.insert(beforeView, this.insertTpl);",
                                                                                  "start_token": 2722,
                                                                                  "end_token": 2734,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "label": "this.viewInsertingDir.insert(beforeView, this.insertTpl)",
                                                                                      "start_token": 2722,
                                                                                      "end_token": 2733,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "this.viewInsertingDir.insert",
                                                                                          "start_token": 2722,
                                                                                          "end_token": 2726,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "PropertyAccessExpression",
                                                                                              "label": "this.viewInsertingDir",
                                                                                              "start_token": 2722,
                                                                                              "end_token": 2724,
                                                                                              "children": [
                                                                                                {
                                                                                                  "type": "ThisKeyword",
                                                                                                  "label": "this",
                                                                                                  "start_token": 2722,
                                                                                                  "end_token": 2722,
                                                                                                  "children": []
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "label": "viewInsertingDir",
                                                                                                  "start_token": 2724,
                                                                                                  "end_token": 2724,
                                                                                                  "children": []
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "insert",
                                                                                              "start_token": 2726,
                                                                                              "end_token": 2726,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "beforeView",
                                                                                          "start_token": 2728,
                                                                                          "end_token": 2728,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "this.insertTpl",
                                                                                          "start_token": 2730,
                                                                                          "end_token": 2732,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "ThisKeyword",
                                                                                              "label": "this",
                                                                                              "start_token": 2730,
                                                                                              "end_token": 2730,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "insertTpl",
                                                                                              "start_token": 2732,
                                                                                              "end_token": 2732,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        });",
                                                                      "start_token": 2737,
                                                                      "end_token": 2754,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "TestBed.configureTestingModule({\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        })",
                                                                          "start_token": 2737,
                                                                          "end_token": 2753,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "TestBed.configureTestingModule",
                                                                              "start_token": 2737,
                                                                              "end_token": 2739,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TestBed",
                                                                                  "start_token": 2737,
                                                                                  "end_token": 2737,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "configureTestingModule",
                                                                                  "start_token": 2739,
                                                                                  "end_token": 2739,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "ObjectLiteralExpression",
                                                                              "label": "{\n          declarations: [TestCmpt, ViewInsertingDir, DynamicComponent],\n        }",
                                                                              "start_token": 2741,
                                                                              "end_token": 2752,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAssignment",
                                                                                  "label": "declarations: [TestCmpt, ViewInsertingDir, DynamicComponent]",
                                                                                  "start_token": 2742,
                                                                                  "end_token": 2750,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "declarations",
                                                                                      "start_token": 2742,
                                                                                      "end_token": 2742,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayLiteralExpression",
                                                                                      "label": "[TestCmpt, ViewInsertingDir, DynamicComponent]",
                                                                                      "start_token": 2744,
                                                                                      "end_token": 2750,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestCmpt",
                                                                                          "start_token": 2745,
                                                                                          "end_token": 2745,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "ViewInsertingDir",
                                                                                          "start_token": 2747,
                                                                                          "end_token": 2747,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "DynamicComponent",
                                                                                          "start_token": 2749,
                                                                                          "end_token": 2749,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstStatement",
                                                                      "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                                      "start_token": 2755,
                                                                      "end_token": 2764,
                                                                      "children": [
                                                                        {
                                                                          "type": "VariableDeclarationList",
                                                                          "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                                          "start_token": 2755,
                                                                          "end_token": 2763,
                                                                          "children": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                                              "start_token": 2756,
                                                                              "end_token": 2763,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2756,
                                                                                  "end_token": 2756,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 2758,
                                                                                  "end_token": 2763,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 2758,
                                                                                      "end_token": 2760,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 2758,
                                                                                          "end_token": 2758,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 2760,
                                                                                          "end_token": 2760,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 2762,
                                                                                      "end_token": 2762,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2765,
                                                                      "end_token": 2770,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2765,
                                                                          "end_token": 2769,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2765,
                                                                              "end_token": 2767,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2765,
                                                                                  "end_token": 2765,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2767,
                                                                                  "end_token": 2767,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.componentInstance.insert();",
                                                                      "start_token": 2771,
                                                                      "end_token": 2778,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.componentInstance.insert()",
                                                                          "start_token": 2771,
                                                                          "end_token": 2777,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.componentInstance.insert",
                                                                              "start_token": 2771,
                                                                              "end_token": 2775,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.componentInstance",
                                                                                  "start_token": 2771,
                                                                                  "end_token": 2773,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fixture",
                                                                                      "start_token": 2771,
                                                                                      "end_token": 2771,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "componentInstance",
                                                                                      "start_token": 2773,
                                                                                      "end_token": 2773,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "insert",
                                                                                  "start_token": 2775,
                                                                                  "end_token": 2775,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "fixture.detectChanges();",
                                                                      "start_token": 2779,
                                                                      "end_token": 2784,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "fixture.detectChanges()",
                                                                          "start_token": 2779,
                                                                          "end_token": 2783,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.detectChanges",
                                                                              "start_token": 2779,
                                                                              "end_token": 2781,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "fixture",
                                                                                  "start_token": 2779,
                                                                                  "end_token": 2779,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "detectChanges",
                                                                                  "start_token": 2781,
                                                                                  "end_token": 2781,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "label": "expect(fixture.nativeElement.textContent).toBe('insert|before');",
                                                                      "start_token": 2785,
                                                                      "end_token": 2798,
                                                                      "children": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "label": "expect(fixture.nativeElement.textContent).toBe('insert|before')",
                                                                          "start_token": 2785,
                                                                          "end_token": 2797,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                                              "start_token": 2785,
                                                                              "end_token": 2794,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                                  "start_token": 2785,
                                                                                  "end_token": 2792,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "expect",
                                                                                      "start_token": 2785,
                                                                                      "end_token": 2785,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.nativeElement.textContent",
                                                                                      "start_token": 2787,
                                                                                      "end_token": 2791,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "fixture.nativeElement",
                                                                                          "start_token": 2787,
                                                                                          "end_token": 2789,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "fixture",
                                                                                              "start_token": 2787,
                                                                                              "end_token": 2787,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "nativeElement",
                                                                                              "start_token": 2789,
                                                                                              "end_token": 2789,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "textContent",
                                                                                          "start_token": 2791,
                                                                                          "end_token": 2791,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "toBe",
                                                                                  "start_token": 2794,
                                                                                  "end_token": 2794,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "StringLiteral",
                                                                              "label": "'insert|before'",
                                                                              "start_token": 2796,
                                                                              "end_token": 2796,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  });",
                      "start_token": 2808,
                      "end_token": 3273,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('non-regression', () => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  })",
                          "start_token": 2808,
                          "end_token": 3272,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 2808,
                              "end_token": 2808,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'non-regression'",
                              "start_token": 2810,
                              "end_token": 2810,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  }",
                              "start_token": 2812,
                              "end_token": 3271,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 2814,
                                  "end_token": 2814,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    // https://github.com/angular/angular/issues/31971\n    it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });\n    // https://github.com/angular/angular/issues/33679\n    it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });\n    it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });\n  }",
                                  "start_token": 2815,
                                  "end_token": 3271,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    });",
                                      "start_token": 2817,
                                      "end_token": 2976,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should insert component views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    })",
                                          "start_token": 2817,
                                          "end_token": 2975,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 2817,
                                              "end_token": 2817,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should insert component views into ViewContainerRef injected by querying <ng-container>'",
                                              "start_token": 2819,
                                              "end_token": 2819,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    }",
                                              "start_token": 2821,
                                              "end_token": 2974,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 2823,
                                                  "end_token": 2823,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}\n      @Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start||end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');\n    }",
                                                  "start_token": 2824,
                                                  "end_token": 2974,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })\n      class DynamicComponent {}",
                                                      "start_token": 2825,
                                                      "end_token": 2845,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })",
                                                          "start_token": 2825,
                                                          "end_token": 2841,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      })",
                                                              "start_token": 2825,
                                                              "end_token": 2841,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 2825,
                                                                  "end_token": 2825,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'dynamic-cmpt',\n        template: 'dynamic',\n        standalone: false,\n      }",
                                                                  "start_token": 2827,
                                                                  "end_token": 2840,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'dynamic-cmpt'",
                                                                      "start_token": 2828,
                                                                      "end_token": 2830,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2828,
                                                                          "end_token": 2828,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'dynamic-cmpt'",
                                                                          "start_token": 2830,
                                                                          "end_token": 2830,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: 'dynamic'",
                                                                      "start_token": 2832,
                                                                      "end_token": 2834,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 2832,
                                                                          "end_token": 2832,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'dynamic'",
                                                                          "start_token": 2834,
                                                                          "end_token": 2834,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2836,
                                                                      "end_token": 2838,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2836,
                                                                          "end_token": 2836,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2838,
                                                                          "end_token": 2838,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DynamicComponent",
                                                          "start_token": 2843,
                                                          "end_token": 2843,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        click() {\n          this.vcr.createComponent(DynamicComponent);\n        }\n      }",
                                                      "start_token": 2846,
                                                      "end_token": 2899,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })",
                                                          "start_token": 2846,
                                                          "end_token": 2862,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })",
                                                              "start_token": 2846,
                                                              "end_token": 2862,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 2846,
                                                                  "end_token": 2846,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'app-root',\n        template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      }",
                                                                  "start_token": 2848,
                                                                  "end_token": 2861,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'app-root'",
                                                                      "start_token": 2849,
                                                                      "end_token": 2851,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2849,
                                                                          "end_token": 2849,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'app-root'",
                                                                          "start_token": 2851,
                                                                          "end_token": 2851,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `",
                                                                      "start_token": 2853,
                                                                      "end_token": 2855,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 2853,
                                                                          "end_token": 2853,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n            <div>start|</div>\n            <ng-container #container></ng-container>\n            <div>|end</div>\n            <div (click)=\"click()\" >|click</div>\n        `",
                                                                          "start_token": 2855,
                                                                          "end_token": 2855,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2857,
                                                                      "end_token": 2859,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2857,
                                                                          "end_token": 2857,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2859,
                                                                          "end_token": 2859,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "AppComponent",
                                                          "start_token": 2864,
                                                          "end_token": 2864,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;",
                                                          "start_token": 2866,
                                                          "end_token": 2884,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('container', {read: ViewContainerRef, static: true})",
                                                              "start_token": 2866,
                                                              "end_token": 2879,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('container', {read: ViewContainerRef, static: true})",
                                                                  "start_token": 2866,
                                                                  "end_token": 2879,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 2866,
                                                                      "end_token": 2866,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'container'",
                                                                      "start_token": 2868,
                                                                      "end_token": 2868,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: ViewContainerRef, static: true}",
                                                                      "start_token": 2870,
                                                                      "end_token": 2878,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: ViewContainerRef",
                                                                          "start_token": 2871,
                                                                          "end_token": 2873,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 2871,
                                                                              "end_token": 2871,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "ViewContainerRef",
                                                                              "start_token": 2873,
                                                                              "end_token": 2873,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 2875,
                                                                          "end_token": 2877,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 2875,
                                                                              "end_token": 2875,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 2877,
                                                                              "end_token": 2877,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "vcr",
                                                              "start_token": 2880,
                                                              "end_token": 2880,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 2881,
                                                              "end_token": 2881,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewContainerRef",
                                                              "start_token": 2883,
                                                              "end_token": 2883,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 2883,
                                                                  "end_token": 2883,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "click() {\n          this.vcr.createComponent(DynamicComponent);\n        }",
                                                          "start_token": 2885,
                                                          "end_token": 2898,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "click",
                                                              "start_token": 2885,
                                                              "end_token": 2885,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          this.vcr.createComponent(DynamicComponent);\n        }",
                                                              "start_token": 2888,
                                                              "end_token": 2898,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.vcr.createComponent(DynamicComponent);",
                                                                  "start_token": 2889,
                                                                  "end_token": 2897,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this.vcr.createComponent(DynamicComponent)",
                                                                      "start_token": 2889,
                                                                      "end_token": 2896,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.vcr.createComponent",
                                                                          "start_token": 2889,
                                                                          "end_token": 2893,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.vcr",
                                                                              "start_token": 2889,
                                                                              "end_token": 2891,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 2889,
                                                                                  "end_token": 2889,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "vcr",
                                                                                  "start_token": 2891,
                                                                                  "end_token": 2891,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "createComponent",
                                                                              "start_token": 2893,
                                                                              "end_token": 2893,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "DynamicComponent",
                                                                          "start_token": 2895,
                                                                          "end_token": 2895,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      });",
                                                      "start_token": 2900,
                                                      "end_token": 2915,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [AppComponent, DynamicComponent],\n      })",
                                                          "start_token": 2900,
                                                          "end_token": 2914,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 2900,
                                                              "end_token": 2902,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 2900,
                                                                  "end_token": 2900,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 2902,
                                                                  "end_token": 2902,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [AppComponent, DynamicComponent],\n      }",
                                                              "start_token": 2904,
                                                              "end_token": 2913,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [AppComponent, DynamicComponent]",
                                                                  "start_token": 2905,
                                                                  "end_token": 2911,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 2905,
                                                                      "end_token": 2905,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[AppComponent, DynamicComponent]",
                                                                      "start_token": 2907,
                                                                      "end_token": 2911,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "AppComponent",
                                                                          "start_token": 2908,
                                                                          "end_token": 2908,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "DynamicComponent",
                                                                          "start_token": 2910,
                                                                          "end_token": 2910,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(AppComponent);",
                                                      "start_token": 2916,
                                                      "end_token": 2925,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(AppComponent)",
                                                          "start_token": 2916,
                                                          "end_token": 2924,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(AppComponent)",
                                                              "start_token": 2917,
                                                              "end_token": 2924,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 2917,
                                                                  "end_token": 2917,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(AppComponent)",
                                                                  "start_token": 2919,
                                                                  "end_token": 2924,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 2919,
                                                                      "end_token": 2921,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 2919,
                                                                          "end_token": 2919,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 2921,
                                                                          "end_token": 2921,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "AppComponent",
                                                                      "start_token": 2923,
                                                                      "end_token": 2923,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 2926,
                                                      "end_token": 2931,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 2926,
                                                          "end_token": 2930,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 2926,
                                                              "end_token": 2928,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 2926,
                                                                  "end_token": 2926,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 2928,
                                                                  "end_token": 2928,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toBe('start||end|click');",
                                                      "start_token": 2932,
                                                      "end_token": 2945,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toBe('start||end|click')",
                                                          "start_token": 2932,
                                                          "end_token": 2944,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                              "start_token": 2932,
                                                              "end_token": 2941,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 2932,
                                                                  "end_token": 2939,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 2932,
                                                                      "end_token": 2932,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 2934,
                                                                      "end_token": 2938,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 2934,
                                                                          "end_token": 2936,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 2934,
                                                                              "end_token": 2934,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 2936,
                                                                              "end_token": 2936,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 2938,
                                                                          "end_token": 2938,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 2941,
                                                                  "end_token": 2941,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'start||end|click'",
                                                              "start_token": 2943,
                                                              "end_token": 2943,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.componentInstance.click();",
                                                      "start_token": 2946,
                                                      "end_token": 2953,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.componentInstance.click()",
                                                          "start_token": 2946,
                                                          "end_token": 2952,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.componentInstance.click",
                                                              "start_token": 2946,
                                                              "end_token": 2950,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 2946,
                                                                  "end_token": 2948,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 2946,
                                                                      "end_token": 2946,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 2948,
                                                                      "end_token": 2948,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "click",
                                                                  "start_token": 2950,
                                                                  "end_token": 2950,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 2954,
                                                      "end_token": 2959,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 2954,
                                                          "end_token": 2958,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 2954,
                                                              "end_token": 2956,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 2954,
                                                                  "end_token": 2954,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 2956,
                                                                  "end_token": 2956,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click');",
                                                      "start_token": 2960,
                                                      "end_token": 2973,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toBe('start|dynamic|end|click')",
                                                          "start_token": 2960,
                                                          "end_token": 2972,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                              "start_token": 2960,
                                                              "end_token": 2969,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 2960,
                                                                  "end_token": 2967,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 2960,
                                                                      "end_token": 2960,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 2962,
                                                                      "end_token": 2966,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 2962,
                                                                          "end_token": 2964,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 2962,
                                                                              "end_token": 2962,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 2964,
                                                                              "end_token": 2964,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 2966,
                                                                          "end_token": 2966,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 2969,
                                                                  "end_token": 2969,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'start|dynamic|end|click'",
                                                              "start_token": 2971,
                                                              "end_token": 2971,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    });",
                                      "start_token": 2978,
                                      "end_token": 3142,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should insert embedded views into ViewContainerRef injected by querying <ng-container>', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    })",
                                          "start_token": 2978,
                                          "end_token": 3141,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 2978,
                                              "end_token": 2978,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should insert embedded views into ViewContainerRef injected by querying <ng-container>'",
                                              "start_token": 2980,
                                              "end_token": 2980,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    }",
                                              "start_token": 2982,
                                              "end_token": 3140,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 2984,
                                                  "end_token": 2984,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start||container end|click');\n      fixture.componentInstance.click();\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');\n    }",
                                                  "start_token": 2985,
                                                  "end_token": 3140,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        @ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;\n        @ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;\n        click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }\n      }",
                                                      "start_token": 2986,
                                                      "end_token": 3067,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })",
                                                          "start_token": 2986,
                                                          "end_token": 3002,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      })",
                                                              "start_token": 2986,
                                                              "end_token": 3002,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 2986,
                                                                  "end_token": 2986,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'app-root',\n        template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `,\n        standalone: false,\n      }",
                                                                  "start_token": 2988,
                                                                  "end_token": 3001,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'app-root'",
                                                                      "start_token": 2989,
                                                                      "end_token": 2991,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 2989,
                                                                          "end_token": 2989,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'app-root'",
                                                                          "start_token": 2991,
                                                                          "end_token": 2991,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `",
                                                                      "start_token": 2993,
                                                                      "end_token": 2995,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 2993,
                                                                          "end_token": 2993,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n        <div>container start|</div>\n        <ng-container #container></ng-container>\n        <div>|container end</div>\n        <ng-template #template >test</ng-template>\n        <div (click)=\"click()\" >|click</div>\n        `",
                                                                          "start_token": 2995,
                                                                          "end_token": 2995,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 2997,
                                                                      "end_token": 2999,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 2997,
                                                                          "end_token": 2997,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 2999,
                                                                          "end_token": 2999,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "AppComponent",
                                                          "start_token": 3004,
                                                          "end_token": 3004,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('container', {read: ViewContainerRef, static: true}) vcr!: ViewContainerRef;",
                                                          "start_token": 3006,
                                                          "end_token": 3024,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('container', {read: ViewContainerRef, static: true})",
                                                              "start_token": 3006,
                                                              "end_token": 3019,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('container', {read: ViewContainerRef, static: true})",
                                                                  "start_token": 3006,
                                                                  "end_token": 3019,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 3006,
                                                                      "end_token": 3006,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'container'",
                                                                      "start_token": 3008,
                                                                      "end_token": 3008,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: ViewContainerRef, static: true}",
                                                                      "start_token": 3010,
                                                                      "end_token": 3018,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: ViewContainerRef",
                                                                          "start_token": 3011,
                                                                          "end_token": 3013,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 3011,
                                                                              "end_token": 3011,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "ViewContainerRef",
                                                                              "start_token": 3013,
                                                                              "end_token": 3013,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 3015,
                                                                          "end_token": 3017,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 3015,
                                                                              "end_token": 3015,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 3017,
                                                                              "end_token": 3017,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "vcr",
                                                              "start_token": 3020,
                                                              "end_token": 3020,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 3021,
                                                              "end_token": 3021,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "ViewContainerRef",
                                                              "start_token": 3023,
                                                              "end_token": 3023,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 3023,
                                                                  "end_token": 3023,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('template', {read: TemplateRef, static: true}) template!: TemplateRef<any>;",
                                                          "start_token": 3025,
                                                          "end_token": 3046,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('template', {read: TemplateRef, static: true})",
                                                              "start_token": 3025,
                                                              "end_token": 3038,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('template', {read: TemplateRef, static: true})",
                                                                  "start_token": 3025,
                                                                  "end_token": 3038,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 3025,
                                                                      "end_token": 3025,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'template'",
                                                                      "start_token": 3027,
                                                                      "end_token": 3027,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{read: TemplateRef, static: true}",
                                                                      "start_token": 3029,
                                                                      "end_token": 3037,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "read: TemplateRef",
                                                                          "start_token": 3030,
                                                                          "end_token": 3032,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "read",
                                                                              "start_token": 3030,
                                                                              "end_token": 3030,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "TemplateRef",
                                                                              "start_token": 3032,
                                                                              "end_token": 3032,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 3034,
                                                                          "end_token": 3036,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 3034,
                                                                              "end_token": 3034,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 3036,
                                                                              "end_token": 3036,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "template",
                                                              "start_token": 3039,
                                                              "end_token": 3039,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 3040,
                                                              "end_token": 3040,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<any>",
                                                              "start_token": 3042,
                                                              "end_token": 3045,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 3042,
                                                                  "end_token": 3042,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "AnyKeyword",
                                                                  "label": "any",
                                                                  "start_token": 3044,
                                                                  "end_token": 3044,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "click() {\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }",
                                                          "start_token": 3047,
                                                          "end_token": 3066,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "click",
                                                              "start_token": 3047,
                                                              "end_token": 3047,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          this.vcr.createEmbeddedView(this.template, undefined, 0);\n        }",
                                                              "start_token": 3050,
                                                              "end_token": 3066,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this.vcr.createEmbeddedView(this.template, undefined, 0);",
                                                                  "start_token": 3051,
                                                                  "end_token": 3065,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this.vcr.createEmbeddedView(this.template, undefined, 0)",
                                                                      "start_token": 3051,
                                                                      "end_token": 3064,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.vcr.createEmbeddedView",
                                                                          "start_token": 3051,
                                                                          "end_token": 3055,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.vcr",
                                                                              "start_token": 3051,
                                                                              "end_token": 3053,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 3051,
                                                                                  "end_token": 3051,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "vcr",
                                                                                  "start_token": 3053,
                                                                                  "end_token": 3053,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "createEmbeddedView",
                                                                              "start_token": 3055,
                                                                              "end_token": 3055,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.template",
                                                                          "start_token": 3057,
                                                                          "end_token": 3059,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 3057,
                                                                              "end_token": 3057,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "template",
                                                                              "start_token": 3059,
                                                                              "end_token": 3059,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "undefined",
                                                                          "start_token": 3061,
                                                                          "end_token": 3061,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstLiteralToken",
                                                                          "label": "0",
                                                                          "start_token": 3063,
                                                                          "end_token": 3063,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      });",
                                                      "start_token": 3068,
                                                      "end_token": 3081,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [AppComponent],\n      })",
                                                          "start_token": 3068,
                                                          "end_token": 3080,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3068,
                                                              "end_token": 3070,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3068,
                                                                  "end_token": 3068,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3070,
                                                                  "end_token": 3070,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [AppComponent],\n      }",
                                                              "start_token": 3072,
                                                              "end_token": 3079,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [AppComponent]",
                                                                  "start_token": 3073,
                                                                  "end_token": 3077,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3073,
                                                                      "end_token": 3073,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[AppComponent]",
                                                                      "start_token": 3075,
                                                                      "end_token": 3077,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "AppComponent",
                                                                          "start_token": 3076,
                                                                          "end_token": 3076,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(AppComponent);",
                                                      "start_token": 3082,
                                                      "end_token": 3091,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(AppComponent)",
                                                          "start_token": 3082,
                                                          "end_token": 3090,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(AppComponent)",
                                                              "start_token": 3083,
                                                              "end_token": 3090,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3083,
                                                                  "end_token": 3083,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(AppComponent)",
                                                                  "start_token": 3085,
                                                                  "end_token": 3090,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 3085,
                                                                      "end_token": 3087,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 3085,
                                                                          "end_token": 3085,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 3087,
                                                                          "end_token": 3087,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "AppComponent",
                                                                      "start_token": 3089,
                                                                      "end_token": 3089,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 3092,
                                                      "end_token": 3097,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 3092,
                                                          "end_token": 3096,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 3092,
                                                              "end_token": 3094,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3092,
                                                                  "end_token": 3092,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 3094,
                                                                  "end_token": 3094,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toBe('container start||container end|click');",
                                                      "start_token": 3098,
                                                      "end_token": 3111,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toBe('container start||container end|click')",
                                                          "start_token": 3098,
                                                          "end_token": 3110,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                              "start_token": 3098,
                                                              "end_token": 3107,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 3098,
                                                                  "end_token": 3105,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3098,
                                                                      "end_token": 3098,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 3100,
                                                                      "end_token": 3104,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 3100,
                                                                          "end_token": 3102,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 3100,
                                                                              "end_token": 3100,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 3102,
                                                                              "end_token": 3102,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 3104,
                                                                          "end_token": 3104,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 3107,
                                                                  "end_token": 3107,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'container start||container end|click'",
                                                              "start_token": 3109,
                                                              "end_token": 3109,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.componentInstance.click();",
                                                      "start_token": 3112,
                                                      "end_token": 3119,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.componentInstance.click()",
                                                          "start_token": 3112,
                                                          "end_token": 3118,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.componentInstance.click",
                                                              "start_token": 3112,
                                                              "end_token": 3116,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 3112,
                                                                  "end_token": 3114,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 3112,
                                                                      "end_token": 3112,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 3114,
                                                                      "end_token": 3114,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "click",
                                                                  "start_token": 3116,
                                                                  "end_token": 3116,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 3120,
                                                      "end_token": 3125,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 3120,
                                                          "end_token": 3124,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 3120,
                                                              "end_token": 3122,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3120,
                                                                  "end_token": 3120,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 3122,
                                                                  "end_token": 3122,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click');",
                                                      "start_token": 3126,
                                                      "end_token": 3139,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toBe('container start|test|container end|click')",
                                                          "start_token": 3126,
                                                          "end_token": 3138,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toBe",
                                                              "start_token": 3126,
                                                              "end_token": 3135,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 3126,
                                                                  "end_token": 3133,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3126,
                                                                      "end_token": 3126,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 3128,
                                                                      "end_token": 3132,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 3128,
                                                                          "end_token": 3130,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 3128,
                                                                              "end_token": 3128,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 3130,
                                                                              "end_token": 3130,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 3132,
                                                                          "end_token": 3132,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBe",
                                                                  "start_token": 3135,
                                                                  "end_token": 3135,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'container start|test|container end|click'",
                                                              "start_token": 3137,
                                                              "end_token": 3137,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    });",
                                      "start_token": 3143,
                                      "end_token": 3270,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should properly insert before views in a ViewContainerRef injected on ng-container', () => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    })",
                                          "start_token": 3143,
                                          "end_token": 3269,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3143,
                                              "end_token": 3143,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should properly insert before views in a ViewContainerRef injected on ng-container'",
                                              "start_token": 3145,
                                              "end_token": 3145,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    }",
                                              "start_token": 3147,
                                              "end_token": 3268,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3149,
                                                  "end_token": 3149,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }\n      TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });\n      const fixture = TestBed.createComponent(AppComponent);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('1');\n      fixture.componentInstance.items = [2, 1];\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent.trim()).toContain('2  1');\n    }",
                                                  "start_token": 3150,
                                                  "end_token": 3268,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })\n      class AppComponent {\n        items = [1];\n      }",
                                                      "start_token": 3151,
                                                      "end_token": 3177,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })",
                                                          "start_token": 3151,
                                                          "end_token": 3167,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      })",
                                                              "start_token": 3151,
                                                              "end_token": 3167,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3151,
                                                                  "end_token": 3151,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'app-root',\n        template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `,\n        standalone: false,\n      }",
                                                                  "start_token": 3153,
                                                                  "end_token": 3166,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'app-root'",
                                                                      "start_token": 3154,
                                                                      "end_token": 3156,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3154,
                                                                          "end_token": 3154,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'app-root'",
                                                                          "start_token": 3156,
                                                                          "end_token": 3156,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `",
                                                                      "start_token": 3158,
                                                                      "end_token": 3160,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3158,
                                                                          "end_token": 3158,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n          <ng-template #parameterListItem let-parameter=\"parameter\">\n            {{parameter}}\n          </ng-template>\n          <ng-container *ngFor=\"let parameter of items;\"\n            [ngTemplateOutlet]=\"parameterListItem\"\n            [ngTemplateOutletContext]=\"{parameter:parameter}\">\n          </ng-container>\n        `",
                                                                          "start_token": 3160,
                                                                          "end_token": 3160,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3162,
                                                                      "end_token": 3164,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3162,
                                                                          "end_token": 3162,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3164,
                                                                          "end_token": 3164,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "AppComponent",
                                                          "start_token": 3169,
                                                          "end_token": 3169,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "items = [1];",
                                                          "start_token": 3171,
                                                          "end_token": 3176,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "items",
                                                              "start_token": 3171,
                                                              "end_token": 3171,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrayLiteralExpression",
                                                              "label": "[1]",
                                                              "start_token": 3173,
                                                              "end_token": 3175,
                                                              "children": [
                                                                {
                                                                  "type": "FirstLiteralToken",
                                                                  "label": "1",
                                                                  "start_token": 3174,
                                                                  "end_token": 3174,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      });",
                                                      "start_token": 3178,
                                                      "end_token": 3197,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      })",
                                                          "start_token": 3178,
                                                          "end_token": 3196,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3178,
                                                              "end_token": 3180,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3178,
                                                                  "end_token": 3178,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3180,
                                                                  "end_token": 3180,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [AppComponent],\n        imports: [CommonModule],\n      }",
                                                              "start_token": 3182,
                                                              "end_token": 3195,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [AppComponent]",
                                                                  "start_token": 3183,
                                                                  "end_token": 3187,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3183,
                                                                      "end_token": 3183,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[AppComponent]",
                                                                      "start_token": 3185,
                                                                      "end_token": 3187,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "AppComponent",
                                                                          "start_token": 3186,
                                                                          "end_token": 3186,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "imports: [CommonModule]",
                                                                  "start_token": 3189,
                                                                  "end_token": 3193,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "imports",
                                                                      "start_token": 3189,
                                                                      "end_token": 3189,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[CommonModule]",
                                                                      "start_token": 3191,
                                                                      "end_token": 3193,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "CommonModule",
                                                                          "start_token": 3192,
                                                                          "end_token": 3192,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(AppComponent);",
                                                      "start_token": 3198,
                                                      "end_token": 3207,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(AppComponent)",
                                                          "start_token": 3198,
                                                          "end_token": 3206,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(AppComponent)",
                                                              "start_token": 3199,
                                                              "end_token": 3206,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3199,
                                                                  "end_token": 3199,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(AppComponent)",
                                                                  "start_token": 3201,
                                                                  "end_token": 3206,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 3201,
                                                                      "end_token": 3203,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 3201,
                                                                          "end_token": 3201,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 3203,
                                                                          "end_token": 3203,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "AppComponent",
                                                                      "start_token": 3205,
                                                                      "end_token": 3205,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 3208,
                                                      "end_token": 3213,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 3208,
                                                          "end_token": 3212,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 3208,
                                                              "end_token": 3210,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3208,
                                                                  "end_token": 3208,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 3210,
                                                                  "end_token": 3210,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent.trim()).toContain('1');",
                                                      "start_token": 3214,
                                                      "end_token": 3231,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent.trim()).toContain('1')",
                                                          "start_token": 3214,
                                                          "end_token": 3230,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent.trim()).toContain",
                                                              "start_token": 3214,
                                                              "end_token": 3227,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent.trim())",
                                                                  "start_token": 3214,
                                                                  "end_token": 3225,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3214,
                                                                      "end_token": 3214,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "fixture.nativeElement.textContent.trim()",
                                                                      "start_token": 3216,
                                                                      "end_token": 3224,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement.textContent.trim",
                                                                          "start_token": 3216,
                                                                          "end_token": 3222,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.nativeElement.textContent",
                                                                              "start_token": 3216,
                                                                              "end_token": 3220,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.nativeElement",
                                                                                  "start_token": 3216,
                                                                                  "end_token": 3218,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fixture",
                                                                                      "start_token": 3216,
                                                                                      "end_token": 3216,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "nativeElement",
                                                                                      "start_token": 3218,
                                                                                      "end_token": 3218,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "textContent",
                                                                                  "start_token": 3220,
                                                                                  "end_token": 3220,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "trim",
                                                                              "start_token": 3222,
                                                                              "end_token": 3222,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 3227,
                                                                  "end_token": 3227,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'1'",
                                                              "start_token": 3229,
                                                              "end_token": 3229,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.componentInstance.items = [2, 1];",
                                                      "start_token": 3232,
                                                      "end_token": 3243,
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "fixture.componentInstance.items = [2, 1]",
                                                          "start_token": 3232,
                                                          "end_token": 3242,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.componentInstance.items",
                                                              "start_token": 3232,
                                                              "end_token": 3236,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 3232,
                                                                  "end_token": 3234,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 3232,
                                                                      "end_token": 3232,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 3234,
                                                                      "end_token": 3234,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "items",
                                                                  "start_token": 3236,
                                                                  "end_token": 3236,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstAssignment",
                                                              "label": "=",
                                                              "start_token": 3237,
                                                              "end_token": 3237,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ArrayLiteralExpression",
                                                              "label": "[2, 1]",
                                                              "start_token": 3238,
                                                              "end_token": 3242,
                                                              "children": [
                                                                {
                                                                  "type": "FirstLiteralToken",
                                                                  "label": "2",
                                                                  "start_token": 3239,
                                                                  "end_token": 3239,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "FirstLiteralToken",
                                                                  "label": "1",
                                                                  "start_token": 3241,
                                                                  "end_token": 3241,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 3244,
                                                      "end_token": 3249,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 3244,
                                                          "end_token": 3248,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 3244,
                                                              "end_token": 3246,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3244,
                                                                  "end_token": 3244,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 3246,
                                                                  "end_token": 3246,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent.trim()).toContain('2  1');",
                                                      "start_token": 3250,
                                                      "end_token": 3267,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent.trim()).toContain('2  1')",
                                                          "start_token": 3250,
                                                          "end_token": 3266,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent.trim()).toContain",
                                                              "start_token": 3250,
                                                              "end_token": 3263,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent.trim())",
                                                                  "start_token": 3250,
                                                                  "end_token": 3261,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3250,
                                                                      "end_token": 3250,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "fixture.nativeElement.textContent.trim()",
                                                                      "start_token": 3252,
                                                                      "end_token": 3260,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement.textContent.trim",
                                                                          "start_token": 3252,
                                                                          "end_token": 3258,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "fixture.nativeElement.textContent",
                                                                              "start_token": 3252,
                                                                              "end_token": 3256,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.nativeElement",
                                                                                  "start_token": 3252,
                                                                                  "end_token": 3254,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fixture",
                                                                                      "start_token": 3252,
                                                                                      "end_token": 3252,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "nativeElement",
                                                                                      "start_token": 3254,
                                                                                      "end_token": 3254,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "textContent",
                                                                                  "start_token": 3256,
                                                                                  "end_token": 3256,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "trim",
                                                                              "start_token": 3258,
                                                                              "end_token": 3258,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 3263,
                                                                  "end_token": 3263,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'2  1'",
                                                              "start_token": 3265,
                                                              "end_token": 3265,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  });",
                      "start_token": 3274,
                      "end_token": 4474,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "describe('create mode error handling', () => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  })",
                          "start_token": 3274,
                          "end_token": 4473,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "describe",
                              "start_token": 3274,
                              "end_token": 3274,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'create mode error handling'",
                              "start_token": 3276,
                              "end_token": 3276,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  }",
                              "start_token": 3278,
                              "end_token": 4472,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 3280,
                                  "end_token": 3280,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });\n    it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });\n    it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });\n    it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });\n    it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });\n    it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });\n    it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });\n    it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });\n  }",
                                  "start_token": 3281,
                                  "end_token": 4472,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    });",
                                      "start_token": 3282,
                                      "end_token": 3396,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should consistently report errors raised a directive constructor', () => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    })",
                                          "start_token": 3282,
                                          "end_token": 3395,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3282,
                                              "end_token": 3282,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should consistently report errors raised a directive constructor'",
                                              "start_token": 3284,
                                              "end_token": 3284,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    }",
                                              "start_token": 3286,
                                              "end_token": 3394,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3288,
                                                  "end_token": 3288,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }\n      @Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n    }",
                                                  "start_token": 3289,
                                                  "end_token": 3394,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })\n      class FailInConstructorAlways {\n        constructor() {\n          throw new Error('Error in a constructor');\n        }\n      }",
                                                      "start_token": 3290,
                                                      "end_token": 3318,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })",
                                                          "start_token": 3290,
                                                          "end_token": 3302,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      })",
                                                              "start_token": 3290,
                                                              "end_token": 3302,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 3290,
                                                                  "end_token": 3290,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[failInConstructorAlways]',\n        standalone: false,\n      }",
                                                                  "start_token": 3292,
                                                                  "end_token": 3301,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[failInConstructorAlways]'",
                                                                      "start_token": 3293,
                                                                      "end_token": 3295,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3293,
                                                                          "end_token": 3293,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[failInConstructorAlways]'",
                                                                          "start_token": 3295,
                                                                          "end_token": 3295,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3297,
                                                                      "end_token": 3299,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3297,
                                                                          "end_token": 3297,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3299,
                                                                          "end_token": 3299,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "FailInConstructorAlways",
                                                          "start_token": 3304,
                                                          "end_token": 3304,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor() {\n          throw new Error('Error in a constructor');\n        }",
                                                          "start_token": 3306,
                                                          "end_token": 3317,
                                                          "children": [
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          throw new Error('Error in a constructor');\n        }",
                                                              "start_token": 3309,
                                                              "end_token": 3317,
                                                              "children": [
                                                                {
                                                                  "type": "ThrowStatement",
                                                                  "label": "throw new Error('Error in a constructor');",
                                                                  "start_token": 3310,
                                                                  "end_token": 3316,
                                                                  "children": [
                                                                    {
                                                                      "type": "NewExpression",
                                                                      "label": "new Error('Error in a constructor')",
                                                                      "start_token": 3311,
                                                                      "end_token": 3315,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "Error",
                                                                          "start_token": 3312,
                                                                          "end_token": 3312,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'Error in a constructor'",
                                                                          "start_token": 3314,
                                                                          "end_token": 3314,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}",
                                                      "start_token": 3319,
                                                      "end_token": 3335,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })",
                                                          "start_token": 3319,
                                                          "end_token": 3331,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      })",
                                                              "start_token": 3319,
                                                              "end_token": 3331,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3319,
                                                                  "end_token": 3319,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<div failInConstructorAlways></div>`,\n        standalone: false,\n      }",
                                                                  "start_token": 3321,
                                                                  "end_token": 3330,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<div failInConstructorAlways></div>`",
                                                                      "start_token": 3322,
                                                                      "end_token": 3324,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3322,
                                                                          "end_token": 3322,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<div failInConstructorAlways></div>`",
                                                                          "start_token": 3324,
                                                                          "end_token": 3324,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3326,
                                                                      "end_token": 3328,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3326,
                                                                          "end_token": 3326,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3328,
                                                                          "end_token": 3328,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 3333,
                                                          "end_token": 3333,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      });",
                                                      "start_token": 3336,
                                                      "end_token": 3351,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorAlways],\n      })",
                                                          "start_token": 3336,
                                                          "end_token": 3350,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3336,
                                                              "end_token": 3338,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3336,
                                                                  "end_token": 3336,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3338,
                                                                  "end_token": 3338,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [TestCmpt, FailInConstructorAlways],\n      }",
                                                              "start_token": 3340,
                                                              "end_token": 3349,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [TestCmpt, FailInConstructorAlways]",
                                                                  "start_token": 3341,
                                                                  "end_token": 3347,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3341,
                                                                      "end_token": 3341,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[TestCmpt, FailInConstructorAlways]",
                                                                      "start_token": 3343,
                                                                      "end_token": 3347,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 3344,
                                                                          "end_token": 3344,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "FailInConstructorAlways",
                                                                          "start_token": 3346,
                                                                          "end_token": 3346,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');",
                                                      "start_token": 3352,
                                                      "end_token": 3372,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor')",
                                                          "start_token": 3352,
                                                          "end_token": 3371,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3352,
                                                              "end_token": 3368,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3352,
                                                                  "end_token": 3366,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3352,
                                                                      "end_token": 3352,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3354,
                                                                      "end_token": 3365,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3356,
                                                                          "end_token": 3356,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3357,
                                                                          "end_token": 3365,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3358,
                                                                              "end_token": 3364,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3358,
                                                                                  "end_token": 3363,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3358,
                                                                                      "end_token": 3360,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3358,
                                                                                          "end_token": 3358,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3360,
                                                                                          "end_token": 3360,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3362,
                                                                                      "end_token": 3362,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3368,
                                                                  "end_token": 3368,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in a constructor'",
                                                              "start_token": 3370,
                                                              "end_token": 3370,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');",
                                                      "start_token": 3373,
                                                      "end_token": 3393,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor')",
                                                          "start_token": 3373,
                                                          "end_token": 3392,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3373,
                                                              "end_token": 3389,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3373,
                                                                  "end_token": 3387,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3373,
                                                                      "end_token": 3373,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3375,
                                                                      "end_token": 3386,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3377,
                                                                          "end_token": 3377,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3378,
                                                                          "end_token": 3386,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3379,
                                                                              "end_token": 3385,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3379,
                                                                                  "end_token": 3384,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3379,
                                                                                      "end_token": 3381,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3379,
                                                                                          "end_token": 3379,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3381,
                                                                                          "end_token": 3381,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3383,
                                                                                      "end_token": 3383,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3389,
                                                                  "end_token": 3389,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in a constructor'",
                                                              "start_token": 3391,
                                                              "end_token": 3391,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    });",
                                      "start_token": 3397,
                                      "end_token": 3529,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should render even if a directive constructor throws in the first create pass', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    })",
                                          "start_token": 3397,
                                          "end_token": 3528,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3397,
                                              "end_token": 3397,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should render even if a directive constructor throws in the first create pass'",
                                              "start_token": 3399,
                                              "end_token": 3399,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    }",
                                              "start_token": 3401,
                                              "end_token": 3527,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3403,
                                                  "end_token": 3403,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.nativeElement.textContent).toContain('OK');\n    }",
                                                  "start_token": 3404,
                                                  "end_token": 3527,
                                                  "children": [
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "let firstRun = true;",
                                                      "start_token": 3405,
                                                      "end_token": 3409,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "let firstRun = true",
                                                          "start_token": 3405,
                                                          "end_token": 3408,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "firstRun = true",
                                                              "start_token": 3406,
                                                              "end_token": 3408,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "firstRun",
                                                                  "start_token": 3406,
                                                                  "end_token": 3406,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TrueKeyword",
                                                                  "label": "true",
                                                                  "start_token": 3408,
                                                                  "end_token": 3408,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }",
                                                      "start_token": 3410,
                                                      "end_token": 3448,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })",
                                                          "start_token": 3410,
                                                          "end_token": 3422,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })",
                                                              "start_token": 3410,
                                                              "end_token": 3422,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 3410,
                                                                  "end_token": 3410,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      }",
                                                                  "start_token": 3412,
                                                                  "end_token": 3421,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[failInConstructorOnce]'",
                                                                      "start_token": 3413,
                                                                      "end_token": 3415,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3413,
                                                                          "end_token": 3413,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[failInConstructorOnce]'",
                                                                          "start_token": 3415,
                                                                          "end_token": 3415,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3417,
                                                                      "end_token": 3419,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3417,
                                                                          "end_token": 3417,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3419,
                                                                          "end_token": 3419,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "FailInConstructorOnce",
                                                          "start_token": 3424,
                                                          "end_token": 3424,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }",
                                                          "start_token": 3426,
                                                          "end_token": 3447,
                                                          "children": [
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }",
                                                              "start_token": 3429,
                                                              "end_token": 3447,
                                                              "children": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "label": "if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }",
                                                                  "start_token": 3430,
                                                                  "end_token": 3446,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "firstRun",
                                                                      "start_token": 3432,
                                                                      "end_token": 3432,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Block",
                                                                      "label": "{\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }",
                                                                      "start_token": 3434,
                                                                      "end_token": 3446,
                                                                      "children": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "firstRun = false;",
                                                                          "start_token": 3435,
                                                                          "end_token": 3438,
                                                                          "children": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "label": "firstRun = false",
                                                                              "start_token": 3435,
                                                                              "end_token": 3437,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "firstRun",
                                                                                  "start_token": 3435,
                                                                                  "end_token": 3435,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "FirstAssignment",
                                                                                  "label": "=",
                                                                                  "start_token": 3436,
                                                                                  "end_token": 3436,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "FalseKeyword",
                                                                                  "label": "false",
                                                                                  "start_token": 3437,
                                                                                  "end_token": 3437,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "label": "throw new Error('Error in a constructor');",
                                                                          "start_token": 3439,
                                                                          "end_token": 3445,
                                                                          "children": [
                                                                            {
                                                                              "type": "NewExpression",
                                                                              "label": "new Error('Error in a constructor')",
                                                                              "start_token": 3440,
                                                                              "end_token": 3444,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "Error",
                                                                                  "start_token": 3441,
                                                                                  "end_token": 3441,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "'Error in a constructor'",
                                                                                  "start_token": 3443,
                                                                                  "end_token": 3443,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })\n      class TestCmpt {}",
                                                      "start_token": 3449,
                                                      "end_token": 3465,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })",
                                                          "start_token": 3449,
                                                          "end_token": 3461,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      })",
                                                              "start_token": 3449,
                                                              "end_token": 3461,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3449,
                                                                  "end_token": 3449,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<div failInConstructorOnce>OK</div>`,\n        standalone: false,\n      }",
                                                                  "start_token": 3451,
                                                                  "end_token": 3460,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<div failInConstructorOnce>OK</div>`",
                                                                      "start_token": 3452,
                                                                      "end_token": 3454,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3452,
                                                                          "end_token": 3452,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<div failInConstructorOnce>OK</div>`",
                                                                          "start_token": 3454,
                                                                          "end_token": 3454,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3456,
                                                                      "end_token": 3458,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3456,
                                                                          "end_token": 3456,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3458,
                                                                          "end_token": 3458,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 3463,
                                                          "end_token": 3463,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });",
                                                      "start_token": 3466,
                                                      "end_token": 3481,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      })",
                                                          "start_token": 3466,
                                                          "end_token": 3480,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3466,
                                                              "end_token": 3468,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3466,
                                                                  "end_token": 3466,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3468,
                                                                  "end_token": 3468,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [TestCmpt, FailInConstructorOnce],\n      }",
                                                              "start_token": 3470,
                                                              "end_token": 3479,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [TestCmpt, FailInConstructorOnce]",
                                                                  "start_token": 3471,
                                                                  "end_token": 3477,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3471,
                                                                      "end_token": 3471,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[TestCmpt, FailInConstructorOnce]",
                                                                      "start_token": 3473,
                                                                      "end_token": 3477,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 3474,
                                                                          "end_token": 3474,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "FailInConstructorOnce",
                                                                          "start_token": 3476,
                                                                          "end_token": 3476,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');",
                                                      "start_token": 3482,
                                                      "end_token": 3502,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor')",
                                                          "start_token": 3482,
                                                          "end_token": 3501,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3482,
                                                              "end_token": 3498,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3482,
                                                                  "end_token": 3496,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3482,
                                                                      "end_token": 3482,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3484,
                                                                      "end_token": 3495,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3486,
                                                                          "end_token": 3486,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3487,
                                                                          "end_token": 3495,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3488,
                                                                              "end_token": 3494,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3488,
                                                                                  "end_token": 3493,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3488,
                                                                                      "end_token": 3490,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3488,
                                                                                          "end_token": 3488,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3490,
                                                                                          "end_token": 3490,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3492,
                                                                                      "end_token": 3492,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3498,
                                                                  "end_token": 3498,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in a constructor'",
                                                              "start_token": 3500,
                                                              "end_token": 3500,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                      "start_token": 3503,
                                                      "end_token": 3512,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                          "start_token": 3503,
                                                          "end_token": 3511,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                              "start_token": 3504,
                                                              "end_token": 3511,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3504,
                                                                  "end_token": 3504,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                  "start_token": 3506,
                                                                  "end_token": 3511,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 3506,
                                                                      "end_token": 3508,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 3506,
                                                                          "end_token": 3506,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 3508,
                                                                          "end_token": 3508,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "TestCmpt",
                                                                      "start_token": 3510,
                                                                      "end_token": 3510,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toContain('OK');",
                                                      "start_token": 3513,
                                                      "end_token": 3526,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toContain('OK')",
                                                          "start_token": 3513,
                                                          "end_token": 3525,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toContain",
                                                              "start_token": 3513,
                                                              "end_token": 3522,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 3513,
                                                                  "end_token": 3520,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3513,
                                                                      "end_token": 3513,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 3515,
                                                                      "end_token": 3519,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 3515,
                                                                          "end_token": 3517,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 3515,
                                                                              "end_token": 3515,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 3517,
                                                                              "end_token": 3517,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 3519,
                                                                          "end_token": 3519,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 3522,
                                                                  "end_token": 3522,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'OK'",
                                                              "start_token": 3524,
                                                              "end_token": 3524,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    });",
                                      "start_token": 3530,
                                      "end_token": 3651,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should consistently report errors raised a directive input setter', () => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    })",
                                          "start_token": 3530,
                                          "end_token": 3650,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3530,
                                              "end_token": 3530,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should consistently report errors raised a directive input setter'",
                                              "start_token": 3532,
                                              "end_token": 3532,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    }",
                                              "start_token": 3534,
                                              "end_token": 3649,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3536,
                                                  "end_token": 3536,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }\n      @Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');\n    }",
                                                  "start_token": 3537,
                                                  "end_token": 3649,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })\n      class FailInInputAlways {\n        @Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }\n      }",
                                                      "start_token": 3538,
                                                      "end_token": 3573,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })",
                                                          "start_token": 3538,
                                                          "end_token": 3550,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[failInInputAlways]',\n        standalone: false,\n      })",
                                                              "start_token": 3538,
                                                              "end_token": 3550,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 3538,
                                                                  "end_token": 3538,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[failInInputAlways]',\n        standalone: false,\n      }",
                                                                  "start_token": 3540,
                                                                  "end_token": 3549,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[failInInputAlways]'",
                                                                      "start_token": 3541,
                                                                      "end_token": 3543,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3541,
                                                                          "end_token": 3541,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[failInInputAlways]'",
                                                                          "start_token": 3543,
                                                                          "end_token": 3543,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3545,
                                                                      "end_token": 3547,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3545,
                                                                          "end_token": 3545,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3547,
                                                                          "end_token": 3547,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "FailInInputAlways",
                                                          "start_token": 3552,
                                                          "end_token": 3552,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "SetAccessor",
                                                          "label": "@Input()\n        set failInInputAlways(_: string) {\n          throw new Error('Error in an input');\n        }",
                                                          "start_token": 3554,
                                                          "end_token": 3572,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@Input()",
                                                              "start_token": 3554,
                                                              "end_token": 3556,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "Input()",
                                                                  "start_token": 3554,
                                                                  "end_token": 3556,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "Input",
                                                                      "start_token": 3554,
                                                                      "end_token": 3554,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "failInInputAlways",
                                                              "start_token": 3558,
                                                              "end_token": 3558,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Parameter",
                                                              "label": "_: string",
                                                              "start_token": 3560,
                                                              "end_token": 3562,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_",
                                                                  "start_token": 3560,
                                                                  "end_token": 3560,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringKeyword",
                                                                  "label": "string",
                                                                  "start_token": 3562,
                                                                  "end_token": 3562,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          throw new Error('Error in an input');\n        }",
                                                              "start_token": 3564,
                                                              "end_token": 3572,
                                                              "children": [
                                                                {
                                                                  "type": "ThrowStatement",
                                                                  "label": "throw new Error('Error in an input');",
                                                                  "start_token": 3565,
                                                                  "end_token": 3571,
                                                                  "children": [
                                                                    {
                                                                      "type": "NewExpression",
                                                                      "label": "new Error('Error in an input')",
                                                                      "start_token": 3566,
                                                                      "end_token": 3570,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "Error",
                                                                          "start_token": 3567,
                                                                          "end_token": 3567,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'Error in an input'",
                                                                          "start_token": 3569,
                                                                          "end_token": 3569,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })\n      class TestCmpt {}",
                                                      "start_token": 3574,
                                                      "end_token": 3590,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })",
                                                          "start_token": 3574,
                                                          "end_token": 3586,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      })",
                                                              "start_token": 3574,
                                                              "end_token": 3586,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3574,
                                                                  "end_token": 3574,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<div failInInputAlways=\"static\"></div>`,\n        standalone: false,\n      }",
                                                                  "start_token": 3576,
                                                                  "end_token": 3585,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<div failInInputAlways=\"static\"></div>`",
                                                                      "start_token": 3577,
                                                                      "end_token": 3579,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3577,
                                                                          "end_token": 3577,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<div failInInputAlways=\"static\"></div>`",
                                                                          "start_token": 3579,
                                                                          "end_token": 3579,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3581,
                                                                      "end_token": 3583,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3581,
                                                                          "end_token": 3581,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3583,
                                                                          "end_token": 3583,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 3588,
                                                          "end_token": 3588,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      });",
                                                      "start_token": 3591,
                                                      "end_token": 3606,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInInputAlways],\n      })",
                                                          "start_token": 3591,
                                                          "end_token": 3605,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3591,
                                                              "end_token": 3593,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3591,
                                                                  "end_token": 3591,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3593,
                                                                  "end_token": 3593,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [TestCmpt, FailInInputAlways],\n      }",
                                                              "start_token": 3595,
                                                              "end_token": 3604,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [TestCmpt, FailInInputAlways]",
                                                                  "start_token": 3596,
                                                                  "end_token": 3602,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3596,
                                                                      "end_token": 3596,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[TestCmpt, FailInInputAlways]",
                                                                      "start_token": 3598,
                                                                      "end_token": 3602,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 3599,
                                                                          "end_token": 3599,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "FailInInputAlways",
                                                                          "start_token": 3601,
                                                                          "end_token": 3601,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');",
                                                      "start_token": 3607,
                                                      "end_token": 3627,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input')",
                                                          "start_token": 3607,
                                                          "end_token": 3626,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3607,
                                                              "end_token": 3623,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3607,
                                                                  "end_token": 3621,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3607,
                                                                      "end_token": 3607,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3609,
                                                                      "end_token": 3620,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3611,
                                                                          "end_token": 3611,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3612,
                                                                          "end_token": 3620,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3613,
                                                                              "end_token": 3619,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3613,
                                                                                  "end_token": 3618,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3613,
                                                                                      "end_token": 3615,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3613,
                                                                                          "end_token": 3613,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3615,
                                                                                          "end_token": 3615,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3617,
                                                                                      "end_token": 3617,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3623,
                                                                  "end_token": 3623,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in an input'",
                                                              "start_token": 3625,
                                                              "end_token": 3625,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input');",
                                                      "start_token": 3628,
                                                      "end_token": 3648,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in an input')",
                                                          "start_token": 3628,
                                                          "end_token": 3647,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3628,
                                                              "end_token": 3644,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3628,
                                                                  "end_token": 3642,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3628,
                                                                      "end_token": 3628,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3630,
                                                                      "end_token": 3641,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3632,
                                                                          "end_token": 3632,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3633,
                                                                          "end_token": 3641,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3634,
                                                                              "end_token": 3640,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3634,
                                                                                  "end_token": 3639,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3634,
                                                                                      "end_token": 3636,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3634,
                                                                                          "end_token": 3634,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3636,
                                                                                          "end_token": 3636,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3638,
                                                                                      "end_token": 3638,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3644,
                                                                  "end_token": 3644,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in an input'",
                                                              "start_token": 3646,
                                                              "end_token": 3646,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    });",
                                      "start_token": 3652,
                                      "end_token": 3780,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should consistently report errors raised a static query setter', () => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    })",
                                          "start_token": 3652,
                                          "end_token": 3779,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3652,
                                              "end_token": 3652,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should consistently report errors raised a static query setter'",
                                              "start_token": 3654,
                                              "end_token": 3654,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    }",
                                              "start_token": 3656,
                                              "end_token": 3778,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3658,
                                                  "end_token": 3658,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n    }",
                                                  "start_token": 3659,
                                                  "end_token": 3778,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}",
                                                      "start_token": 3660,
                                                      "end_token": 3676,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })",
                                                          "start_token": 3660,
                                                          "end_token": 3672,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })",
                                                              "start_token": 3660,
                                                              "end_token": 3672,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 3660,
                                                                  "end_token": 3660,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[someDir]',\n        standalone: false,\n      }",
                                                                  "start_token": 3662,
                                                                  "end_token": 3671,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[someDir]'",
                                                                      "start_token": 3663,
                                                                      "end_token": 3665,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3663,
                                                                          "end_token": 3663,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[someDir]'",
                                                                          "start_token": 3665,
                                                                          "end_token": 3665,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3667,
                                                                      "end_token": 3669,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3667,
                                                                          "end_token": 3667,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3669,
                                                                          "end_token": 3669,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "SomeDirective",
                                                          "start_token": 3674,
                                                          "end_token": 3674,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }\n      }",
                                                      "start_token": 3677,
                                                      "end_token": 3719,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })",
                                                          "start_token": 3677,
                                                          "end_token": 3689,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })",
                                                              "start_token": 3677,
                                                              "end_token": 3689,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3677,
                                                                  "end_token": 3677,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<div someDir></div>`,\n        standalone: false,\n      }",
                                                                  "start_token": 3679,
                                                                  "end_token": 3688,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<div someDir></div>`",
                                                                      "start_token": 3680,
                                                                      "end_token": 3682,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3680,
                                                                          "end_token": 3680,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<div someDir></div>`",
                                                                          "start_token": 3682,
                                                                          "end_token": 3682,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3684,
                                                                      "end_token": 3686,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3684,
                                                                          "end_token": 3684,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3686,
                                                                          "end_token": 3686,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 3691,
                                                          "end_token": 3691,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "SetAccessor",
                                                          "label": "@ViewChild(SomeDirective, {static: true})\n        set directive(_: SomeDirective) {\n          throw new Error('Error in static query setter');\n        }",
                                                          "start_token": 3693,
                                                          "end_token": 3718,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild(SomeDirective, {static: true})",
                                                              "start_token": 3693,
                                                              "end_token": 3702,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild(SomeDirective, {static: true})",
                                                                  "start_token": 3693,
                                                                  "end_token": 3702,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 3693,
                                                                      "end_token": 3693,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "SomeDirective",
                                                                      "start_token": 3695,
                                                                      "end_token": 3695,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 3697,
                                                                      "end_token": 3701,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 3698,
                                                                          "end_token": 3700,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 3698,
                                                                              "end_token": 3698,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 3700,
                                                                              "end_token": 3700,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "directive",
                                                              "start_token": 3704,
                                                              "end_token": 3704,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Parameter",
                                                              "label": "_: SomeDirective",
                                                              "start_token": 3706,
                                                              "end_token": 3708,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_",
                                                                  "start_token": 3706,
                                                                  "end_token": 3706,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "SomeDirective",
                                                                  "start_token": 3708,
                                                                  "end_token": 3708,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "SomeDirective",
                                                                      "start_token": 3708,
                                                                      "end_token": 3708,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          throw new Error('Error in static query setter');\n        }",
                                                              "start_token": 3710,
                                                              "end_token": 3718,
                                                              "children": [
                                                                {
                                                                  "type": "ThrowStatement",
                                                                  "label": "throw new Error('Error in static query setter');",
                                                                  "start_token": 3711,
                                                                  "end_token": 3717,
                                                                  "children": [
                                                                    {
                                                                      "type": "NewExpression",
                                                                      "label": "new Error('Error in static query setter')",
                                                                      "start_token": 3712,
                                                                      "end_token": 3716,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "Error",
                                                                          "start_token": 3713,
                                                                          "end_token": 3713,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'Error in static query setter'",
                                                                          "start_token": 3715,
                                                                          "end_token": 3715,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });",
                                                      "start_token": 3720,
                                                      "end_token": 3735,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      })",
                                                          "start_token": 3720,
                                                          "end_token": 3734,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3720,
                                                              "end_token": 3722,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3720,
                                                                  "end_token": 3720,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3722,
                                                                  "end_token": 3722,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [TestCmpt, SomeDirective],\n      }",
                                                              "start_token": 3724,
                                                              "end_token": 3733,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [TestCmpt, SomeDirective]",
                                                                  "start_token": 3725,
                                                                  "end_token": 3731,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3725,
                                                                      "end_token": 3725,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[TestCmpt, SomeDirective]",
                                                                      "start_token": 3727,
                                                                      "end_token": 3731,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 3728,
                                                                          "end_token": 3728,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "SomeDirective",
                                                                          "start_token": 3730,
                                                                          "end_token": 3730,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');",
                                                      "start_token": 3736,
                                                      "end_token": 3756,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter')",
                                                          "start_token": 3736,
                                                          "end_token": 3755,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3736,
                                                              "end_token": 3752,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3736,
                                                                  "end_token": 3750,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3736,
                                                                      "end_token": 3736,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3738,
                                                                      "end_token": 3749,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3740,
                                                                          "end_token": 3740,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3741,
                                                                          "end_token": 3749,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3742,
                                                                              "end_token": 3748,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3742,
                                                                                  "end_token": 3747,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3742,
                                                                                      "end_token": 3744,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3742,
                                                                                          "end_token": 3742,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3744,
                                                                                          "end_token": 3744,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3746,
                                                                                      "end_token": 3746,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3752,
                                                                  "end_token": 3752,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in static query setter'",
                                                              "start_token": 3754,
                                                              "end_token": 3754,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');",
                                                      "start_token": 3757,
                                                      "end_token": 3777,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter')",
                                                          "start_token": 3757,
                                                          "end_token": 3776,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3757,
                                                              "end_token": 3773,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3757,
                                                                  "end_token": 3771,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3757,
                                                                      "end_token": 3757,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3759,
                                                                      "end_token": 3770,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3761,
                                                                          "end_token": 3761,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3762,
                                                                          "end_token": 3770,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3763,
                                                                              "end_token": 3769,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3763,
                                                                                  "end_token": 3768,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3763,
                                                                                      "end_token": 3765,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3763,
                                                                                          "end_token": 3763,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3765,
                                                                                          "end_token": 3765,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3767,
                                                                                      "end_token": 3767,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3773,
                                                                  "end_token": 3773,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in static query setter'",
                                                              "start_token": 3775,
                                                              "end_token": 3775,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    });",
                                      "start_token": 3781,
                                      "end_token": 3951,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should match a static query, even if its setter throws in the first create pass', () => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    })",
                                          "start_token": 3781,
                                          "end_token": 3950,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3781,
                                              "end_token": 3781,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should match a static query, even if its setter throws in the first create pass'",
                                              "start_token": 3783,
                                              "end_token": 3783,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    }",
                                              "start_token": 3785,
                                              "end_token": 3949,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3787,
                                                  "end_token": 3787,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      let hasThrown = false;\n      @Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}\n      @Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');\n      const fixture = TestBed.createComponent(TestCmpt);\n      expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);\n    }",
                                                  "start_token": 3788,
                                                  "end_token": 3949,
                                                  "children": [
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "let hasThrown = false;",
                                                      "start_token": 3789,
                                                      "end_token": 3793,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "let hasThrown = false",
                                                          "start_token": 3789,
                                                          "end_token": 3792,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "hasThrown = false",
                                                              "start_token": 3790,
                                                              "end_token": 3792,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hasThrown",
                                                                  "start_token": 3790,
                                                                  "end_token": 3790,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "FalseKeyword",
                                                                  "label": "false",
                                                                  "start_token": 3792,
                                                                  "end_token": 3792,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })\n      class SomeDirective {}",
                                                      "start_token": 3794,
                                                      "end_token": 3810,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })",
                                                          "start_token": 3794,
                                                          "end_token": 3806,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[someDir]',\n        standalone: false,\n      })",
                                                              "start_token": 3794,
                                                              "end_token": 3806,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 3794,
                                                                  "end_token": 3794,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[someDir]',\n        standalone: false,\n      }",
                                                                  "start_token": 3796,
                                                                  "end_token": 3805,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[someDir]'",
                                                                      "start_token": 3797,
                                                                      "end_token": 3799,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3797,
                                                                          "end_token": 3797,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[someDir]'",
                                                                          "start_token": 3799,
                                                                          "end_token": 3799,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3801,
                                                                      "end_token": 3803,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3801,
                                                                          "end_token": 3801,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3803,
                                                                          "end_token": 3803,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "SomeDirective",
                                                          "start_token": 3808,
                                                          "end_token": 3808,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        @ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }\n        set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }\n        private _directive!: SomeDirective;\n      }",
                                                      "start_token": 3811,
                                                      "end_token": 3887,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })",
                                                          "start_token": 3811,
                                                          "end_token": 3823,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<div someDir></div>`,\n        standalone: false,\n      })",
                                                              "start_token": 3811,
                                                              "end_token": 3823,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3811,
                                                                  "end_token": 3811,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<div someDir></div>`,\n        standalone: false,\n      }",
                                                                  "start_token": 3813,
                                                                  "end_token": 3822,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<div someDir></div>`",
                                                                      "start_token": 3814,
                                                                      "end_token": 3816,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3814,
                                                                          "end_token": 3814,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<div someDir></div>`",
                                                                          "start_token": 3816,
                                                                          "end_token": 3816,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3818,
                                                                      "end_token": 3820,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3818,
                                                                          "end_token": 3818,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3820,
                                                                          "end_token": 3820,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 3825,
                                                          "end_token": 3825,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "GetAccessor",
                                                          "label": "@ViewChild(SomeDirective, {static: true})\n        get directive() {\n          return this._directive;\n        }",
                                                          "start_token": 3827,
                                                          "end_token": 3847,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild(SomeDirective, {static: true})",
                                                              "start_token": 3827,
                                                              "end_token": 3836,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild(SomeDirective, {static: true})",
                                                                  "start_token": 3827,
                                                                  "end_token": 3836,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 3827,
                                                                      "end_token": 3827,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "SomeDirective",
                                                                      "start_token": 3829,
                                                                      "end_token": 3829,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ObjectLiteralExpression",
                                                                      "label": "{static: true}",
                                                                      "start_token": 3831,
                                                                      "end_token": 3835,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAssignment",
                                                                          "label": "static: true",
                                                                          "start_token": 3832,
                                                                          "end_token": 3834,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "static",
                                                                              "start_token": 3832,
                                                                              "end_token": 3832,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "TrueKeyword",
                                                                              "label": "true",
                                                                              "start_token": 3834,
                                                                              "end_token": 3834,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "directive",
                                                              "start_token": 3838,
                                                              "end_token": 3838,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          return this._directive;\n        }",
                                                              "start_token": 3841,
                                                              "end_token": 3847,
                                                              "children": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "label": "return this._directive;",
                                                                  "start_token": 3842,
                                                                  "end_token": 3846,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "this._directive",
                                                                      "start_token": 3843,
                                                                      "end_token": 3845,
                                                                      "children": [
                                                                        {
                                                                          "type": "ThisKeyword",
                                                                          "label": "this",
                                                                          "start_token": 3843,
                                                                          "end_token": 3843,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "_directive",
                                                                          "start_token": 3845,
                                                                          "end_token": 3845,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SetAccessor",
                                                          "label": "set directive(directiveInstance: SomeDirective) {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }",
                                                          "start_token": 3848,
                                                          "end_token": 3880,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "directive",
                                                              "start_token": 3849,
                                                              "end_token": 3849,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Parameter",
                                                              "label": "directiveInstance: SomeDirective",
                                                              "start_token": 3851,
                                                              "end_token": 3853,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "directiveInstance",
                                                                  "start_token": 3851,
                                                                  "end_token": 3851,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "SomeDirective",
                                                                  "start_token": 3853,
                                                                  "end_token": 3853,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "SomeDirective",
                                                                      "start_token": 3853,
                                                                      "end_token": 3853,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }\n          this._directive = directiveInstance;\n        }",
                                                              "start_token": 3855,
                                                              "end_token": 3880,
                                                              "children": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "label": "if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }",
                                                                  "start_token": 3856,
                                                                  "end_token": 3873,
                                                                  "children": [
                                                                    {
                                                                      "type": "PrefixUnaryExpression",
                                                                      "label": "!hasThrown",
                                                                      "start_token": 3858,
                                                                      "end_token": 3859,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "hasThrown",
                                                                          "start_token": 3859,
                                                                          "end_token": 3859,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Block",
                                                                      "label": "{\n            hasThrown = true;\n            throw new Error('Error in static query setter');\n          }",
                                                                      "start_token": 3861,
                                                                      "end_token": 3873,
                                                                      "children": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "hasThrown = true;",
                                                                          "start_token": 3862,
                                                                          "end_token": 3865,
                                                                          "children": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "label": "hasThrown = true",
                                                                              "start_token": 3862,
                                                                              "end_token": 3864,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "hasThrown",
                                                                                  "start_token": 3862,
                                                                                  "end_token": 3862,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "FirstAssignment",
                                                                                  "label": "=",
                                                                                  "start_token": 3863,
                                                                                  "end_token": 3863,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "TrueKeyword",
                                                                                  "label": "true",
                                                                                  "start_token": 3864,
                                                                                  "end_token": 3864,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "label": "throw new Error('Error in static query setter');",
                                                                          "start_token": 3866,
                                                                          "end_token": 3872,
                                                                          "children": [
                                                                            {
                                                                              "type": "NewExpression",
                                                                              "label": "new Error('Error in static query setter')",
                                                                              "start_token": 3867,
                                                                              "end_token": 3871,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "Error",
                                                                                  "start_token": 3868,
                                                                                  "end_token": 3868,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "'Error in static query setter'",
                                                                                  "start_token": 3870,
                                                                                  "end_token": 3870,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this._directive = directiveInstance;",
                                                                  "start_token": 3874,
                                                                  "end_token": 3879,
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "this._directive = directiveInstance",
                                                                      "start_token": 3874,
                                                                      "end_token": 3878,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this._directive",
                                                                          "start_token": 3874,
                                                                          "end_token": 3876,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 3874,
                                                                              "end_token": 3874,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "_directive",
                                                                              "start_token": 3876,
                                                                              "end_token": 3876,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FirstAssignment",
                                                                          "label": "=",
                                                                          "start_token": 3877,
                                                                          "end_token": 3877,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "directiveInstance",
                                                                          "start_token": 3878,
                                                                          "end_token": 3878,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "private _directive!: SomeDirective;",
                                                          "start_token": 3881,
                                                          "end_token": 3886,
                                                          "children": [
                                                            {
                                                              "type": "PrivateKeyword",
                                                              "label": "private",
                                                              "start_token": 3881,
                                                              "end_token": 3881,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "_directive",
                                                              "start_token": 3882,
                                                              "end_token": 3882,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 3883,
                                                              "end_token": 3883,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "SomeDirective",
                                                              "start_token": 3885,
                                                              "end_token": 3885,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "SomeDirective",
                                                                  "start_token": 3885,
                                                                  "end_token": 3885,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      });",
                                                      "start_token": 3888,
                                                      "end_token": 3903,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, SomeDirective],\n      })",
                                                          "start_token": 3888,
                                                          "end_token": 3902,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 3888,
                                                              "end_token": 3890,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 3888,
                                                                  "end_token": 3888,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 3890,
                                                                  "end_token": 3890,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [TestCmpt, SomeDirective],\n      }",
                                                              "start_token": 3892,
                                                              "end_token": 3901,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [TestCmpt, SomeDirective]",
                                                                  "start_token": 3893,
                                                                  "end_token": 3899,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 3893,
                                                                      "end_token": 3893,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[TestCmpt, SomeDirective]",
                                                                      "start_token": 3895,
                                                                      "end_token": 3899,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 3896,
                                                                          "end_token": 3896,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "SomeDirective",
                                                                          "start_token": 3898,
                                                                          "end_token": 3898,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter');",
                                                      "start_token": 3904,
                                                      "end_token": 3924,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in static query setter')",
                                                          "start_token": 3904,
                                                          "end_token": 3923,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 3904,
                                                              "end_token": 3920,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 3904,
                                                                  "end_token": 3918,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3904,
                                                                      "end_token": 3904,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 3906,
                                                                      "end_token": 3917,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 3908,
                                                                          "end_token": 3908,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 3909,
                                                                          "end_token": 3917,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 3910,
                                                                              "end_token": 3916,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 3910,
                                                                                  "end_token": 3915,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 3910,
                                                                                      "end_token": 3912,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 3910,
                                                                                          "end_token": 3910,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 3912,
                                                                                          "end_token": 3912,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 3914,
                                                                                      "end_token": 3914,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 3920,
                                                                  "end_token": 3920,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in static query setter'",
                                                              "start_token": 3922,
                                                              "end_token": 3922,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                      "start_token": 3925,
                                                      "end_token": 3934,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                          "start_token": 3925,
                                                          "end_token": 3933,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                              "start_token": 3926,
                                                              "end_token": 3933,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 3926,
                                                                  "end_token": 3926,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                  "start_token": 3928,
                                                                  "end_token": 3933,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 3928,
                                                                      "end_token": 3930,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 3928,
                                                                          "end_token": 3928,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 3930,
                                                                          "end_token": 3930,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "TestCmpt",
                                                                      "start_token": 3932,
                                                                      "end_token": 3932,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective);",
                                                      "start_token": 3935,
                                                      "end_token": 3948,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.componentInstance.directive).toBeInstanceOf(SomeDirective)",
                                                          "start_token": 3935,
                                                          "end_token": 3947,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.componentInstance.directive).toBeInstanceOf",
                                                              "start_token": 3935,
                                                              "end_token": 3944,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.componentInstance.directive)",
                                                                  "start_token": 3935,
                                                                  "end_token": 3942,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 3935,
                                                                      "end_token": 3935,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.componentInstance.directive",
                                                                      "start_token": 3937,
                                                                      "end_token": 3941,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.componentInstance",
                                                                          "start_token": 3937,
                                                                          "end_token": 3939,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 3937,
                                                                              "end_token": 3937,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "componentInstance",
                                                                              "start_token": 3939,
                                                                              "end_token": 3939,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "directive",
                                                                          "start_token": 3941,
                                                                          "end_token": 3941,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toBeInstanceOf",
                                                                  "start_token": 3944,
                                                                  "end_token": 3944,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "SomeDirective",
                                                              "start_token": 3946,
                                                              "end_token": 3946,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    });",
                                      "start_token": 3952,
                                      "end_token": 4089,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should render a recursive component if it throws during the first creation pass', () => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    })",
                                          "start_token": 3952,
                                          "end_token": 4088,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 3952,
                                              "end_token": 3952,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should render a recursive component if it throws during the first creation pass'",
                                              "start_token": 3954,
                                              "end_token": 3954,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    }",
                                              "start_token": 3956,
                                              "end_token": 4087,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 3958,
                                                  "end_token": 3958,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      let hasThrown = false;\n      @Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}\n      TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });\n      expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(App);\n      expect(fixture.nativeElement.textContent).toContain('OKOKOK');\n    }",
                                                  "start_token": 3959,
                                                  "end_token": 4087,
                                                  "children": [
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "let hasThrown = false;",
                                                      "start_token": 3960,
                                                      "end_token": 3964,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "let hasThrown = false",
                                                          "start_token": 3960,
                                                          "end_token": 3963,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "hasThrown = false",
                                                              "start_token": 3961,
                                                              "end_token": 3963,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hasThrown",
                                                                  "start_token": 3961,
                                                                  "end_token": 3961,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "FalseKeyword",
                                                                  "label": "false",
                                                                  "start_token": 3963,
                                                                  "end_token": 3963,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })\n      class TestCmpt {\n        constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }",
                                                      "start_token": 3965,
                                                      "end_token": 4008,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })",
                                                          "start_token": 3965,
                                                          "end_token": 3981,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      })",
                                                              "start_token": 3965,
                                                              "end_token": 3981,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 3965,
                                                                  "end_token": 3965,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'test',\n        template: `<ng-content></ng-content>OK`,\n        standalone: false,\n      }",
                                                                  "start_token": 3967,
                                                                  "end_token": 3980,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'test'",
                                                                      "start_token": 3968,
                                                                      "end_token": 3970,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 3968,
                                                                          "end_token": 3968,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'test'",
                                                                          "start_token": 3970,
                                                                          "end_token": 3970,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<ng-content></ng-content>OK`",
                                                                      "start_token": 3972,
                                                                      "end_token": 3974,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 3972,
                                                                          "end_token": 3972,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<ng-content></ng-content>OK`",
                                                                          "start_token": 3974,
                                                                          "end_token": 3974,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 3976,
                                                                      "end_token": 3978,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 3976,
                                                                          "end_token": 3976,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 3978,
                                                                          "end_token": 3978,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 3983,
                                                          "end_token": 3983,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor() {\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }",
                                                          "start_token": 3985,
                                                          "end_token": 4007,
                                                          "children": [
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }\n        }",
                                                              "start_token": 3988,
                                                              "end_token": 4007,
                                                              "children": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "label": "if (!hasThrown) {\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }",
                                                                  "start_token": 3989,
                                                                  "end_token": 4006,
                                                                  "children": [
                                                                    {
                                                                      "type": "PrefixUnaryExpression",
                                                                      "label": "!hasThrown",
                                                                      "start_token": 3991,
                                                                      "end_token": 3992,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "hasThrown",
                                                                          "start_token": 3992,
                                                                          "end_token": 3992,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Block",
                                                                      "label": "{\n            hasThrown = true;\n            throw new Error('Error in a constructor');\n          }",
                                                                      "start_token": 3994,
                                                                      "end_token": 4006,
                                                                      "children": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "hasThrown = true;",
                                                                          "start_token": 3995,
                                                                          "end_token": 3998,
                                                                          "children": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "label": "hasThrown = true",
                                                                              "start_token": 3995,
                                                                              "end_token": 3997,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "hasThrown",
                                                                                  "start_token": 3995,
                                                                                  "end_token": 3995,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "FirstAssignment",
                                                                                  "label": "=",
                                                                                  "start_token": 3996,
                                                                                  "end_token": 3996,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "TrueKeyword",
                                                                                  "label": "true",
                                                                                  "start_token": 3997,
                                                                                  "end_token": 3997,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "label": "throw new Error('Error in a constructor');",
                                                                          "start_token": 3999,
                                                                          "end_token": 4005,
                                                                          "children": [
                                                                            {
                                                                              "type": "NewExpression",
                                                                              "label": "new Error('Error in a constructor')",
                                                                              "start_token": 4000,
                                                                              "end_token": 4004,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "Error",
                                                                                  "start_token": 4001,
                                                                                  "end_token": 4001,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "'Error in a constructor'",
                                                                                  "start_token": 4003,
                                                                                  "end_token": 4003,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })\n      class App {}",
                                                      "start_token": 4009,
                                                      "end_token": 4025,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })",
                                                          "start_token": 4009,
                                                          "end_token": 4021,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      })",
                                                              "start_token": 4009,
                                                              "end_token": 4021,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 4009,
                                                                  "end_token": 4009,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<test><test><test></test></test></test>`,\n        standalone: false,\n      }",
                                                                  "start_token": 4011,
                                                                  "end_token": 4020,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<test><test><test></test></test></test>`",
                                                                      "start_token": 4012,
                                                                      "end_token": 4014,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 4012,
                                                                          "end_token": 4012,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<test><test><test></test></test></test>`",
                                                                          "start_token": 4014,
                                                                          "end_token": 4014,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 4016,
                                                                      "end_token": 4018,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 4016,
                                                                          "end_token": 4016,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 4018,
                                                                          "end_token": 4018,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "App",
                                                          "start_token": 4023,
                                                          "end_token": 4023,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      });",
                                                      "start_token": 4026,
                                                      "end_token": 4041,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [App, TestCmpt],\n      })",
                                                          "start_token": 4026,
                                                          "end_token": 4040,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 4026,
                                                              "end_token": 4028,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 4026,
                                                                  "end_token": 4026,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 4028,
                                                                  "end_token": 4028,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [App, TestCmpt],\n      }",
                                                              "start_token": 4030,
                                                              "end_token": 4039,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [App, TestCmpt]",
                                                                  "start_token": 4031,
                                                                  "end_token": 4037,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 4031,
                                                                      "end_token": 4031,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[App, TestCmpt]",
                                                                      "start_token": 4033,
                                                                      "end_token": 4037,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "App",
                                                                          "start_token": 4034,
                                                                          "end_token": 4034,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 4036,
                                                                          "end_token": 4036,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor');",
                                                      "start_token": 4042,
                                                      "end_token": 4062,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError('Error in a constructor')",
                                                          "start_token": 4042,
                                                          "end_token": 4061,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(App);\n      }).toThrowError",
                                                              "start_token": 4042,
                                                              "end_token": 4058,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(App);\n      })",
                                                                  "start_token": 4042,
                                                                  "end_token": 4056,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4042,
                                                                      "end_token": 4042,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(App);\n      }",
                                                                      "start_token": 4044,
                                                                      "end_token": 4055,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 4046,
                                                                          "end_token": 4046,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(App);\n      }",
                                                                          "start_token": 4047,
                                                                          "end_token": 4055,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(App);",
                                                                              "start_token": 4048,
                                                                              "end_token": 4054,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(App)",
                                                                                  "start_token": 4048,
                                                                                  "end_token": 4053,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 4048,
                                                                                      "end_token": 4050,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 4048,
                                                                                          "end_token": 4048,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 4050,
                                                                                          "end_token": 4050,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "App",
                                                                                      "start_token": 4052,
                                                                                      "end_token": 4052,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 4058,
                                                                  "end_token": 4058,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in a constructor'",
                                                              "start_token": 4060,
                                                              "end_token": 4060,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(App);",
                                                      "start_token": 4063,
                                                      "end_token": 4072,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(App)",
                                                          "start_token": 4063,
                                                          "end_token": 4071,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(App)",
                                                              "start_token": 4064,
                                                              "end_token": 4071,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4064,
                                                                  "end_token": 4064,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(App)",
                                                                  "start_token": 4066,
                                                                  "end_token": 4071,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 4066,
                                                                      "end_token": 4068,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 4066,
                                                                          "end_token": 4066,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 4068,
                                                                          "end_token": 4068,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "App",
                                                                      "start_token": 4070,
                                                                      "end_token": 4070,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toContain('OKOKOK');",
                                                      "start_token": 4073,
                                                      "end_token": 4086,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toContain('OKOKOK')",
                                                          "start_token": 4073,
                                                          "end_token": 4085,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toContain",
                                                              "start_token": 4073,
                                                              "end_token": 4082,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 4073,
                                                                  "end_token": 4080,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4073,
                                                                      "end_token": 4073,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 4075,
                                                                      "end_token": 4079,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 4075,
                                                                          "end_token": 4077,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 4075,
                                                                              "end_token": 4075,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 4077,
                                                                              "end_token": 4077,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 4079,
                                                                          "end_token": 4079,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 4082,
                                                                  "end_token": 4082,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'OKOKOK'",
                                                              "start_token": 4084,
                                                              "end_token": 4084,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    });",
                                      "start_token": 4090,
                                      "end_token": 4288,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should continue detecting changes if a directive throws in its constructor', () => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    })",
                                          "start_token": 4090,
                                          "end_token": 4287,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 4090,
                                              "end_token": 4090,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should continue detecting changes if a directive throws in its constructor'",
                                              "start_token": 4092,
                                              "end_token": 4092,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    }",
                                              "start_token": 4094,
                                              "end_token": 4286,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 4096,
                                                  "end_token": 4096,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      let firstRun = true;\n      @Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }\n      @Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }\n      TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });\n      expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');\n      const fixture = TestBed.createComponent(TestCmpt);\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('0');\n      fixture.componentInstance.value = 1;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('1');\n      fixture.componentInstance.value = 2;\n      fixture.detectChanges();\n      expect(fixture.nativeElement.textContent).toContain('2');\n    }",
                                                  "start_token": 4097,
                                                  "end_token": 4286,
                                                  "children": [
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "let firstRun = true;",
                                                      "start_token": 4098,
                                                      "end_token": 4102,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "let firstRun = true",
                                                          "start_token": 4098,
                                                          "end_token": 4101,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "firstRun = true",
                                                              "start_token": 4099,
                                                              "end_token": 4101,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "firstRun",
                                                                  "start_token": 4099,
                                                                  "end_token": 4099,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TrueKeyword",
                                                                  "label": "true",
                                                                  "start_token": 4101,
                                                                  "end_token": 4101,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })\n      class FailInConstructorOnce {\n        constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }\n      }",
                                                      "start_token": 4103,
                                                      "end_token": 4141,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })",
                                                          "start_token": 4103,
                                                          "end_token": 4115,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      })",
                                                              "start_token": 4103,
                                                              "end_token": 4115,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 4103,
                                                                  "end_token": 4103,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: '[failInConstructorOnce]',\n        standalone: false,\n      }",
                                                                  "start_token": 4105,
                                                                  "end_token": 4114,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: '[failInConstructorOnce]'",
                                                                      "start_token": 4106,
                                                                      "end_token": 4108,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 4106,
                                                                          "end_token": 4106,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'[failInConstructorOnce]'",
                                                                          "start_token": 4108,
                                                                          "end_token": 4108,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 4110,
                                                                      "end_token": 4112,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 4110,
                                                                          "end_token": 4110,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 4112,
                                                                          "end_token": 4112,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "FailInConstructorOnce",
                                                          "start_token": 4117,
                                                          "end_token": 4117,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor() {\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }",
                                                          "start_token": 4119,
                                                          "end_token": 4140,
                                                          "children": [
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }\n        }",
                                                              "start_token": 4122,
                                                              "end_token": 4140,
                                                              "children": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "label": "if (firstRun) {\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }",
                                                                  "start_token": 4123,
                                                                  "end_token": 4139,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "firstRun",
                                                                      "start_token": 4125,
                                                                      "end_token": 4125,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Block",
                                                                      "label": "{\n            firstRun = false;\n            throw new Error('Error in a constructor');\n          }",
                                                                      "start_token": 4127,
                                                                      "end_token": 4139,
                                                                      "children": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "firstRun = false;",
                                                                          "start_token": 4128,
                                                                          "end_token": 4131,
                                                                          "children": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "label": "firstRun = false",
                                                                              "start_token": 4128,
                                                                              "end_token": 4130,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "firstRun",
                                                                                  "start_token": 4128,
                                                                                  "end_token": 4128,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "FirstAssignment",
                                                                                  "label": "=",
                                                                                  "start_token": 4129,
                                                                                  "end_token": 4129,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "FalseKeyword",
                                                                                  "label": "false",
                                                                                  "start_token": 4130,
                                                                                  "end_token": 4130,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "label": "throw new Error('Error in a constructor');",
                                                                          "start_token": 4132,
                                                                          "end_token": 4138,
                                                                          "children": [
                                                                            {
                                                                              "type": "NewExpression",
                                                                              "label": "new Error('Error in a constructor')",
                                                                              "start_token": 4133,
                                                                              "end_token": 4137,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "Error",
                                                                                  "start_token": 4134,
                                                                                  "end_token": 4134,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "'Error in a constructor'",
                                                                                  "start_token": 4136,
                                                                                  "end_token": 4136,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })\n      class TestCmpt {\n        value = 0;\n      }",
                                                      "start_token": 4142,
                                                      "end_token": 4162,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })",
                                                          "start_token": 4142,
                                                          "end_token": 4154,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      })",
                                                              "start_token": 4142,
                                                              "end_token": 4154,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 4142,
                                                                  "end_token": 4142,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `<div failInConstructorOnce>{{value}}</div>`,\n        standalone: false,\n      }",
                                                                  "start_token": 4144,
                                                                  "end_token": 4153,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `<div failInConstructorOnce>{{value}}</div>`",
                                                                      "start_token": 4145,
                                                                      "end_token": 4147,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 4145,
                                                                          "end_token": 4145,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`<div failInConstructorOnce>{{value}}</div>`",
                                                                          "start_token": 4147,
                                                                          "end_token": 4147,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 4149,
                                                                      "end_token": 4151,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 4149,
                                                                          "end_token": 4149,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 4151,
                                                                          "end_token": 4151,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TestCmpt",
                                                          "start_token": 4156,
                                                          "end_token": 4156,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "value = 0;",
                                                          "start_token": 4158,
                                                          "end_token": 4161,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "value",
                                                              "start_token": 4158,
                                                              "end_token": 4158,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "0",
                                                              "start_token": 4160,
                                                              "end_token": 4160,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      });",
                                                      "start_token": 4163,
                                                      "end_token": 4178,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({\n        declarations: [TestCmpt, FailInConstructorOnce],\n      })",
                                                          "start_token": 4163,
                                                          "end_token": 4177,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 4163,
                                                              "end_token": 4165,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 4163,
                                                                  "end_token": 4163,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 4165,
                                                                  "end_token": 4165,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{\n        declarations: [TestCmpt, FailInConstructorOnce],\n      }",
                                                              "start_token": 4167,
                                                              "end_token": 4176,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [TestCmpt, FailInConstructorOnce]",
                                                                  "start_token": 4168,
                                                                  "end_token": 4174,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 4168,
                                                                      "end_token": 4168,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[TestCmpt, FailInConstructorOnce]",
                                                                      "start_token": 4170,
                                                                      "end_token": 4174,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestCmpt",
                                                                          "start_token": 4171,
                                                                          "end_token": 4171,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "FailInConstructorOnce",
                                                                          "start_token": 4173,
                                                                          "end_token": 4173,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor');",
                                                      "start_token": 4179,
                                                      "end_token": 4199,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError('Error in a constructor')",
                                                          "start_token": 4179,
                                                          "end_token": 4198,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      }).toThrowError",
                                                              "start_token": 4179,
                                                              "end_token": 4195,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(() => {\n        TestBed.createComponent(TestCmpt);\n      })",
                                                                  "start_token": 4179,
                                                                  "end_token": 4193,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4179,
                                                                      "end_token": 4179,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "() => {\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                      "start_token": 4181,
                                                                      "end_token": 4192,
                                                                      "children": [
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 4183,
                                                                          "end_token": 4183,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n        TestBed.createComponent(TestCmpt);\n      }",
                                                                          "start_token": 4184,
                                                                          "end_token": 4192,
                                                                          "children": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "label": "TestBed.createComponent(TestCmpt);",
                                                                              "start_token": 4185,
                                                                              "end_token": 4191,
                                                                              "children": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                                  "start_token": 4185,
                                                                                  "end_token": 4190,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "TestBed.createComponent",
                                                                                      "start_token": 4185,
                                                                                      "end_token": 4187,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TestBed",
                                                                                          "start_token": 4185,
                                                                                          "end_token": 4185,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "createComponent",
                                                                                          "start_token": 4187,
                                                                                          "end_token": 4187,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "TestCmpt",
                                                                                      "start_token": 4189,
                                                                                      "end_token": 4189,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 4195,
                                                                  "end_token": 4195,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'Error in a constructor'",
                                                              "start_token": 4197,
                                                              "end_token": 4197,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(TestCmpt);",
                                                      "start_token": 4200,
                                                      "end_token": 4209,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(TestCmpt)",
                                                          "start_token": 4200,
                                                          "end_token": 4208,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(TestCmpt)",
                                                              "start_token": 4201,
                                                              "end_token": 4208,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4201,
                                                                  "end_token": 4201,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(TestCmpt)",
                                                                  "start_token": 4203,
                                                                  "end_token": 4208,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 4203,
                                                                      "end_token": 4205,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 4203,
                                                                          "end_token": 4203,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 4205,
                                                                          "end_token": 4205,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "TestCmpt",
                                                                      "start_token": 4207,
                                                                      "end_token": 4207,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 4210,
                                                      "end_token": 4215,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 4210,
                                                          "end_token": 4214,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 4210,
                                                              "end_token": 4212,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4210,
                                                                  "end_token": 4210,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 4212,
                                                                  "end_token": 4212,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toContain('0');",
                                                      "start_token": 4216,
                                                      "end_token": 4229,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toContain('0')",
                                                          "start_token": 4216,
                                                          "end_token": 4228,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toContain",
                                                              "start_token": 4216,
                                                              "end_token": 4225,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 4216,
                                                                  "end_token": 4223,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4216,
                                                                      "end_token": 4216,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 4218,
                                                                      "end_token": 4222,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 4218,
                                                                          "end_token": 4220,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 4218,
                                                                              "end_token": 4218,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 4220,
                                                                              "end_token": 4220,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 4222,
                                                                          "end_token": 4222,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 4225,
                                                                  "end_token": 4225,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'0'",
                                                              "start_token": 4227,
                                                              "end_token": 4227,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.componentInstance.value = 1;",
                                                      "start_token": 4230,
                                                      "end_token": 4237,
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "fixture.componentInstance.value = 1",
                                                          "start_token": 4230,
                                                          "end_token": 4236,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.componentInstance.value",
                                                              "start_token": 4230,
                                                              "end_token": 4234,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 4230,
                                                                  "end_token": 4232,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 4230,
                                                                      "end_token": 4230,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 4232,
                                                                      "end_token": 4232,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "value",
                                                                  "start_token": 4234,
                                                                  "end_token": 4234,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstAssignment",
                                                              "label": "=",
                                                              "start_token": 4235,
                                                              "end_token": 4235,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "1",
                                                              "start_token": 4236,
                                                              "end_token": 4236,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 4238,
                                                      "end_token": 4243,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 4238,
                                                          "end_token": 4242,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 4238,
                                                              "end_token": 4240,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4238,
                                                                  "end_token": 4238,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 4240,
                                                                  "end_token": 4240,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toContain('1');",
                                                      "start_token": 4244,
                                                      "end_token": 4257,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toContain('1')",
                                                          "start_token": 4244,
                                                          "end_token": 4256,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toContain",
                                                              "start_token": 4244,
                                                              "end_token": 4253,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 4244,
                                                                  "end_token": 4251,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4244,
                                                                      "end_token": 4244,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 4246,
                                                                      "end_token": 4250,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 4246,
                                                                          "end_token": 4248,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 4246,
                                                                              "end_token": 4246,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 4248,
                                                                              "end_token": 4248,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 4250,
                                                                          "end_token": 4250,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 4253,
                                                                  "end_token": 4253,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'1'",
                                                              "start_token": 4255,
                                                              "end_token": 4255,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.componentInstance.value = 2;",
                                                      "start_token": 4258,
                                                      "end_token": 4265,
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "fixture.componentInstance.value = 2",
                                                          "start_token": 4258,
                                                          "end_token": 4264,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.componentInstance.value",
                                                              "start_token": 4258,
                                                              "end_token": 4262,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "fixture.componentInstance",
                                                                  "start_token": 4258,
                                                                  "end_token": 4260,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "fixture",
                                                                      "start_token": 4258,
                                                                      "end_token": 4258,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "componentInstance",
                                                                      "start_token": 4260,
                                                                      "end_token": 4260,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "value",
                                                                  "start_token": 4262,
                                                                  "end_token": 4262,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "FirstAssignment",
                                                              "label": "=",
                                                              "start_token": 4263,
                                                              "end_token": 4263,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "2",
                                                              "start_token": 4264,
                                                              "end_token": 4264,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 4266,
                                                      "end_token": 4271,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 4266,
                                                          "end_token": 4270,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 4266,
                                                              "end_token": 4268,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4266,
                                                                  "end_token": 4266,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 4268,
                                                                  "end_token": 4268,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(fixture.nativeElement.textContent).toContain('2');",
                                                      "start_token": 4272,
                                                      "end_token": 4285,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(fixture.nativeElement.textContent).toContain('2')",
                                                          "start_token": 4272,
                                                          "end_token": 4284,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(fixture.nativeElement.textContent).toContain",
                                                              "start_token": 4272,
                                                              "end_token": 4281,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(fixture.nativeElement.textContent)",
                                                                  "start_token": 4272,
                                                                  "end_token": 4279,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4272,
                                                                      "end_token": 4272,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fixture.nativeElement.textContent",
                                                                      "start_token": 4274,
                                                                      "end_token": 4278,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "fixture.nativeElement",
                                                                          "start_token": 4274,
                                                                          "end_token": 4276,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "fixture",
                                                                              "start_token": 4274,
                                                                              "end_token": 4274,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "nativeElement",
                                                                              "start_token": 4276,
                                                                              "end_token": 4276,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "textContent",
                                                                          "start_token": 4278,
                                                                          "end_token": 4278,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toContain",
                                                                  "start_token": 4281,
                                                                  "end_token": 4281,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'2'",
                                                              "start_token": 4283,
                                                              "end_token": 4283,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    });",
                                      "start_token": 4289,
                                      "end_token": 4471,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "it('should consistently report errors raised by createEmbeddedView', () => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    })",
                                          "start_token": 4289,
                                          "end_token": 4470,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "it",
                                              "start_token": 4289,
                                              "end_token": 4289,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'should consistently report errors raised by createEmbeddedView'",
                                              "start_token": 4291,
                                              "end_token": 4291,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrowFunction",
                                              "label": "() => {\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    }",
                                              "start_token": 4293,
                                              "end_token": 4469,
                                              "children": [
                                                {
                                                  "type": "EqualsGreaterThanToken",
                                                  "label": "=>",
                                                  "start_token": 4295,
                                                  "end_token": 4295,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n      // Intentionally hasn't been added to `providers` so that it throws a DI error.\n      @Injectable()\n      class DoesNotExist {}\n      @Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }\n      @Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }\n      TestBed.configureTestingModule({declarations: [App, Dir]});\n      const fixture = TestBed.createComponent(App);\n      const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };\n      fixture.detectChanges();\n      // We try to render the same template twice to ensure that we get consistent error messages.\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n      expect(tryRender).toThrowError(/No provider for DoesNotExist/);\n    }",
                                                  "start_token": 4296,
                                                  "end_token": 4469,
                                                  "children": [
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Injectable()\n      class DoesNotExist {}",
                                                      "start_token": 4298,
                                                      "end_token": 4304,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Injectable()",
                                                          "start_token": 4298,
                                                          "end_token": 4300,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Injectable()",
                                                              "start_token": 4298,
                                                              "end_token": 4300,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Injectable",
                                                                  "start_token": 4298,
                                                                  "end_token": 4298,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DoesNotExist",
                                                          "start_token": 4302,
                                                          "end_token": 4302,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Directive({\n        selector: 'dir',\n        standalone: false,\n      })\n      class Dir {\n        constructor(willCauseError: DoesNotExist) {}\n      }",
                                                      "start_token": 4305,
                                                      "end_token": 4329,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Directive({\n        selector: 'dir',\n        standalone: false,\n      })",
                                                          "start_token": 4305,
                                                          "end_token": 4317,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Directive({\n        selector: 'dir',\n        standalone: false,\n      })",
                                                              "start_token": 4305,
                                                              "end_token": 4317,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Directive",
                                                                  "start_token": 4305,
                                                                  "end_token": 4305,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        selector: 'dir',\n        standalone: false,\n      }",
                                                                  "start_token": 4307,
                                                                  "end_token": 4316,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "selector: 'dir'",
                                                                      "start_token": 4308,
                                                                      "end_token": 4310,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "selector",
                                                                          "start_token": 4308,
                                                                          "end_token": 4308,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "'dir'",
                                                                          "start_token": 4310,
                                                                          "end_token": 4310,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 4312,
                                                                      "end_token": 4314,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 4312,
                                                                          "end_token": 4312,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 4314,
                                                                          "end_token": 4314,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Dir",
                                                          "start_token": 4319,
                                                          "end_token": 4319,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor(willCauseError: DoesNotExist) {}",
                                                          "start_token": 4321,
                                                          "end_token": 4328,
                                                          "children": [
                                                            {
                                                              "type": "Parameter",
                                                              "label": "willCauseError: DoesNotExist",
                                                              "start_token": 4323,
                                                              "end_token": 4325,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "willCauseError",
                                                                  "start_token": 4323,
                                                                  "end_token": 4323,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "DoesNotExist",
                                                                  "start_token": 4325,
                                                                  "end_token": 4325,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "DoesNotExist",
                                                                      "start_token": 4325,
                                                                      "end_token": 4325,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{}",
                                                              "start_token": 4327,
                                                              "end_token": 4328,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ClassDeclaration",
                                                      "label": "@Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })\n      class App {\n        @ViewChild('broken') template!: TemplateRef<unknown>;\n        constructor(private _viewContainerRef: ViewContainerRef) {}\n        insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }\n      }",
                                                      "start_token": 4330,
                                                      "end_token": 4383,
                                                      "children": [
                                                        {
                                                          "type": "Decorator",
                                                          "label": "@Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })",
                                                          "start_token": 4330,
                                                          "end_token": 4342,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Component({\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      })",
                                                              "start_token": 4330,
                                                              "end_token": 4342,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Component",
                                                                  "start_token": 4330,
                                                                  "end_token": 4330,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ObjectLiteralExpression",
                                                                  "label": "{\n        template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `,\n        standalone: false,\n      }",
                                                                  "start_token": 4332,
                                                                  "end_token": 4341,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "template: `\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `",
                                                                      "start_token": 4333,
                                                                      "end_token": 4335,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "template",
                                                                          "start_token": 4333,
                                                                          "end_token": 4333,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FirstTemplateToken",
                                                                          "label": "`\n          <ng-template #broken>\n            <dir></dir>\n          </ng-template>\n        `",
                                                                          "start_token": 4335,
                                                                          "end_token": 4335,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PropertyAssignment",
                                                                      "label": "standalone: false",
                                                                      "start_token": 4337,
                                                                      "end_token": 4339,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "standalone",
                                                                          "start_token": 4337,
                                                                          "end_token": 4337,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "FalseKeyword",
                                                                          "label": "false",
                                                                          "start_token": 4339,
                                                                          "end_token": 4339,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "App",
                                                          "start_token": 4344,
                                                          "end_token": 4344,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyDeclaration",
                                                          "label": "@ViewChild('broken') template!: TemplateRef<unknown>;",
                                                          "start_token": 4346,
                                                          "end_token": 4357,
                                                          "children": [
                                                            {
                                                              "type": "Decorator",
                                                              "label": "@ViewChild('broken')",
                                                              "start_token": 4346,
                                                              "end_token": 4349,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "ViewChild('broken')",
                                                                  "start_token": 4346,
                                                                  "end_token": 4349,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewChild",
                                                                      "start_token": 4346,
                                                                      "end_token": 4346,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'broken'",
                                                                      "start_token": 4348,
                                                                      "end_token": 4348,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "template",
                                                              "start_token": 4350,
                                                              "end_token": 4350,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ExclamationToken",
                                                              "label": "!",
                                                              "start_token": 4351,
                                                              "end_token": 4351,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "TemplateRef<unknown>",
                                                              "start_token": 4353,
                                                              "end_token": 4356,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TemplateRef",
                                                                  "start_token": 4353,
                                                                  "end_token": 4353,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "UnknownKeyword",
                                                                  "label": "unknown",
                                                                  "start_token": 4355,
                                                                  "end_token": 4355,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Constructor",
                                                          "label": "constructor(private _viewContainerRef: ViewContainerRef) {}",
                                                          "start_token": 4358,
                                                          "end_token": 4366,
                                                          "children": [
                                                            {
                                                              "type": "Parameter",
                                                              "label": "private _viewContainerRef: ViewContainerRef",
                                                              "start_token": 4360,
                                                              "end_token": 4363,
                                                              "children": [
                                                                {
                                                                  "type": "PrivateKeyword",
                                                                  "label": "private",
                                                                  "start_token": 4360,
                                                                  "end_token": 4360,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "_viewContainerRef",
                                                                  "start_token": 4361,
                                                                  "end_token": 4361,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TypeReference",
                                                                  "label": "ViewContainerRef",
                                                                  "start_token": 4363,
                                                                  "end_token": 4363,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "ViewContainerRef",
                                                                      "start_token": 4363,
                                                                      "end_token": 4363,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{}",
                                                              "start_token": 4365,
                                                              "end_token": 4366,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MethodDeclaration",
                                                          "label": "insertTemplate() {\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }",
                                                          "start_token": 4367,
                                                          "end_token": 4382,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "insertTemplate",
                                                              "start_token": 4367,
                                                              "end_token": 4367,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n          this._viewContainerRef.createEmbeddedView(this.template);\n        }",
                                                              "start_token": 4370,
                                                              "end_token": 4382,
                                                              "children": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "label": "this._viewContainerRef.createEmbeddedView(this.template);",
                                                                  "start_token": 4371,
                                                                  "end_token": 4381,
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "this._viewContainerRef.createEmbeddedView(this.template)",
                                                                      "start_token": 4371,
                                                                      "end_token": 4380,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this._viewContainerRef.createEmbeddedView",
                                                                          "start_token": 4371,
                                                                          "end_token": 4375,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this._viewContainerRef",
                                                                              "start_token": 4371,
                                                                              "end_token": 4373,
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "start_token": 4371,
                                                                                  "end_token": 4371,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "_viewContainerRef",
                                                                                  "start_token": 4373,
                                                                                  "end_token": 4373,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "createEmbeddedView",
                                                                              "start_token": 4375,
                                                                              "end_token": 4375,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "this.template",
                                                                          "start_token": 4377,
                                                                          "end_token": 4379,
                                                                          "children": [
                                                                            {
                                                                              "type": "ThisKeyword",
                                                                              "label": "this",
                                                                              "start_token": 4377,
                                                                              "end_token": 4377,
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "template",
                                                                              "start_token": 4379,
                                                                              "end_token": 4379,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "TestBed.configureTestingModule({declarations: [App, Dir]});",
                                                      "start_token": 4384,
                                                      "end_token": 4398,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "TestBed.configureTestingModule({declarations: [App, Dir]})",
                                                          "start_token": 4384,
                                                          "end_token": 4397,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "TestBed.configureTestingModule",
                                                              "start_token": 4384,
                                                              "end_token": 4386,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TestBed",
                                                                  "start_token": 4384,
                                                                  "end_token": 4384,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "configureTestingModule",
                                                                  "start_token": 4386,
                                                                  "end_token": 4386,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ObjectLiteralExpression",
                                                              "label": "{declarations: [App, Dir]}",
                                                              "start_token": 4388,
                                                              "end_token": 4396,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAssignment",
                                                                  "label": "declarations: [App, Dir]",
                                                                  "start_token": 4389,
                                                                  "end_token": 4395,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "declarations",
                                                                      "start_token": 4389,
                                                                      "end_token": 4389,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "ArrayLiteralExpression",
                                                                      "label": "[App, Dir]",
                                                                      "start_token": 4391,
                                                                      "end_token": 4395,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "App",
                                                                          "start_token": 4392,
                                                                          "end_token": 4392,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "Dir",
                                                                          "start_token": 4394,
                                                                          "end_token": 4394,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const fixture = TestBed.createComponent(App);",
                                                      "start_token": 4399,
                                                      "end_token": 4408,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const fixture = TestBed.createComponent(App)",
                                                          "start_token": 4399,
                                                          "end_token": 4407,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "fixture = TestBed.createComponent(App)",
                                                              "start_token": 4400,
                                                              "end_token": 4407,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4400,
                                                                  "end_token": 4400,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "TestBed.createComponent(App)",
                                                                  "start_token": 4402,
                                                                  "end_token": 4407,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "TestBed.createComponent",
                                                                      "start_token": 4402,
                                                                      "end_token": 4404,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "TestBed",
                                                                          "start_token": 4402,
                                                                          "end_token": 4402,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createComponent",
                                                                          "start_token": 4404,
                                                                          "end_token": 4404,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "App",
                                                                      "start_token": 4406,
                                                                      "end_token": 4406,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstStatement",
                                                      "label": "const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      };",
                                                      "start_token": 4409,
                                                      "end_token": 4431,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclarationList",
                                                          "label": "const tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      }",
                                                          "start_token": 4409,
                                                          "end_token": 4430,
                                                          "children": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "label": "tryRender = () => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      }",
                                                              "start_token": 4410,
                                                              "end_token": 4430,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "tryRender",
                                                                  "start_token": 4410,
                                                                  "end_token": 4410,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "ArrowFunction",
                                                                  "label": "() => {\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      }",
                                                                  "start_token": 4412,
                                                                  "end_token": 4430,
                                                                  "children": [
                                                                    {
                                                                      "type": "EqualsGreaterThanToken",
                                                                      "label": "=>",
                                                                      "start_token": 4414,
                                                                      "end_token": 4414,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Block",
                                                                      "label": "{\n        fixture.componentInstance.insertTemplate();\n        fixture.detectChanges();\n      }",
                                                                      "start_token": 4415,
                                                                      "end_token": 4430,
                                                                      "children": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "fixture.componentInstance.insertTemplate();",
                                                                          "start_token": 4416,
                                                                          "end_token": 4423,
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "fixture.componentInstance.insertTemplate()",
                                                                              "start_token": 4416,
                                                                              "end_token": 4422,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.componentInstance.insertTemplate",
                                                                                  "start_token": 4416,
                                                                                  "end_token": 4420,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "fixture.componentInstance",
                                                                                      "start_token": 4416,
                                                                                      "end_token": 4418,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "fixture",
                                                                                          "start_token": 4416,
                                                                                          "end_token": 4416,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "componentInstance",
                                                                                          "start_token": 4418,
                                                                                          "end_token": 4418,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "insertTemplate",
                                                                                      "start_token": 4420,
                                                                                      "end_token": 4420,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "fixture.detectChanges();",
                                                                          "start_token": 4424,
                                                                          "end_token": 4429,
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "fixture.detectChanges()",
                                                                              "start_token": 4424,
                                                                              "end_token": 4428,
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "fixture.detectChanges",
                                                                                  "start_token": 4424,
                                                                                  "end_token": 4426,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fixture",
                                                                                      "start_token": 4424,
                                                                                      "end_token": 4424,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "detectChanges",
                                                                                      "start_token": 4426,
                                                                                      "end_token": 4426,
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "fixture.detectChanges();",
                                                      "start_token": 4432,
                                                      "end_token": 4437,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "fixture.detectChanges()",
                                                          "start_token": 4432,
                                                          "end_token": 4436,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "fixture.detectChanges",
                                                              "start_token": 4432,
                                                              "end_token": 4434,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "fixture",
                                                                  "start_token": 4432,
                                                                  "end_token": 4432,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "detectChanges",
                                                                  "start_token": 4434,
                                                                  "end_token": 4434,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(tryRender).toThrowError(/No provider for DoesNotExist/);",
                                                      "start_token": 4439,
                                                      "end_token": 4453,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(tryRender).toThrowError(/No provider for DoesNotExist/)",
                                                          "start_token": 4439,
                                                          "end_token": 4452,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(tryRender).toThrowError",
                                                              "start_token": 4439,
                                                              "end_token": 4444,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(tryRender)",
                                                                  "start_token": 4439,
                                                                  "end_token": 4442,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4439,
                                                                      "end_token": 4439,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "tryRender",
                                                                      "start_token": 4441,
                                                                      "end_token": 4441,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 4444,
                                                                  "end_token": 4444,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "RegularExpressionLiteral",
                                                              "label": "/No provider for DoesNotExist/",
                                                              "start_token": 4446,
                                                              "end_token": 4451,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "expect(tryRender).toThrowError(/No provider for DoesNotExist/);",
                                                      "start_token": 4454,
                                                      "end_token": 4468,
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "expect(tryRender).toThrowError(/No provider for DoesNotExist/)",
                                                          "start_token": 4454,
                                                          "end_token": 4467,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "expect(tryRender).toThrowError",
                                                              "start_token": 4454,
                                                              "end_token": 4459,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "expect(tryRender)",
                                                                  "start_token": 4454,
                                                                  "end_token": 4457,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "expect",
                                                                      "start_token": 4454,
                                                                      "end_token": 4454,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "tryRender",
                                                                      "start_token": 4456,
                                                                      "end_token": 4456,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toThrowError",
                                                                  "start_token": 4459,
                                                                  "end_token": 4459,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "RegularExpressionLiteral",
                                                              "label": "/No provider for DoesNotExist/",
                                                              "start_token": 4461,
                                                              "end_token": 4466,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}