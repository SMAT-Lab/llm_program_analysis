{
  "type": "SourceFile",
  "label": "import { without } from 'lodash';\nimport { FormattedLine, Span, JSONLogs, TIMESTAMP_LENGTH } from './types';\nimport {\n  formatCaller,\n  formatKeyValuePair,\n  formatLevel,\n  formatMessage,\n  formatStackTrace,\n  formatTime,\n} from './formatters';\nfunction removeKnownKeys(keys: string[]) {\n  return without(keys, 'time', 'level', 'caller', 'message', 'stack_trace');\n}\nexport function formatJSONLine(\n  rawText: string,\n  withTimestamps?: boolean\n): FormattedLine[] {\n  const spans: Span[] = [];\n  const lines: FormattedLine[] = [];\n  let line = '';\n  const text = withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText;\n  const json: JSONLogs = JSON.parse(text);\n  const { time, level, caller, message, stack_trace: stackTrace } = json;\n  const keys = removeKnownKeys(Object.keys(json));\n  if (withTimestamps) {\n    const timestamp = rawText.substring(0, TIMESTAMP_LENGTH);\n    spans.push({ text: timestamp });\n    line += `${timestamp} `;\n  }\n  line += formatTime(time, spans, line);\n  line += formatLevel(level, spans, line);\n  line += formatCaller(caller, spans, line);\n  line += formatMessage(message, spans, line, !!keys.length);\n  keys.forEach((key, idx) => {\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  });\n  lines.push({ line, spans });\n  formatStackTrace(stackTrace, lines);\n  return lines;\n}",
  "start_token": 0,
  "end_token": 312,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { without } from 'lodash';",
      "start_token": 0,
      "end_token": 6,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ without }",
          "start_token": 1,
          "end_token": 3,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ without }",
              "start_token": 1,
              "end_token": 3,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "without",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "without",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'lodash'",
          "start_token": 5,
          "end_token": 5,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { FormattedLine, Span, JSONLogs, TIMESTAMP_LENGTH } from './types';",
      "start_token": 7,
      "end_token": 19,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ FormattedLine, Span, JSONLogs, TIMESTAMP_LENGTH }",
          "start_token": 8,
          "end_token": 16,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ FormattedLine, Span, JSONLogs, TIMESTAMP_LENGTH }",
              "start_token": 8,
              "end_token": 16,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "FormattedLine",
                  "start_token": 9,
                  "end_token": 9,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FormattedLine",
                      "start_token": 9,
                      "end_token": 9,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "Span",
                  "start_token": 11,
                  "end_token": 11,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Span",
                      "start_token": 11,
                      "end_token": 11,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "JSONLogs",
                  "start_token": 13,
                  "end_token": 13,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "JSONLogs",
                      "start_token": 13,
                      "end_token": 13,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "TIMESTAMP_LENGTH",
                  "start_token": 15,
                  "end_token": 15,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TIMESTAMP_LENGTH",
                      "start_token": 15,
                      "end_token": 15,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./types'",
          "start_token": 18,
          "end_token": 18,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {\n  formatCaller,\n  formatKeyValuePair,\n  formatLevel,\n  formatMessage,\n  formatStackTrace,\n  formatTime,\n} from './formatters';",
      "start_token": 20,
      "end_token": 37,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  formatCaller,\n  formatKeyValuePair,\n  formatLevel,\n  formatMessage,\n  formatStackTrace,\n  formatTime,\n}",
          "start_token": 21,
          "end_token": 34,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  formatCaller,\n  formatKeyValuePair,\n  formatLevel,\n  formatMessage,\n  formatStackTrace,\n  formatTime,\n}",
              "start_token": 21,
              "end_token": 34,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "formatCaller",
                  "start_token": 22,
                  "end_token": 22,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatCaller",
                      "start_token": 22,
                      "end_token": 22,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "formatKeyValuePair",
                  "start_token": 24,
                  "end_token": 24,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatKeyValuePair",
                      "start_token": 24,
                      "end_token": 24,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "formatLevel",
                  "start_token": 26,
                  "end_token": 26,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatLevel",
                      "start_token": 26,
                      "end_token": 26,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "formatMessage",
                  "start_token": 28,
                  "end_token": 28,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatMessage",
                      "start_token": 28,
                      "end_token": 28,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "formatStackTrace",
                  "start_token": 30,
                  "end_token": 30,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatStackTrace",
                      "start_token": 30,
                      "end_token": 30,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "formatTime",
                  "start_token": 32,
                  "end_token": 32,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatTime",
                      "start_token": 32,
                      "end_token": 32,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./formatters'",
          "start_token": 36,
          "end_token": 36,
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function removeKnownKeys(keys: string[]) {\n  return without(keys, 'time', 'level', 'caller', 'message', 'stack_trace');\n}",
      "start_token": 38,
      "end_token": 64,
      "children": [
        {
          "type": "Identifier",
          "label": "removeKnownKeys",
          "start_token": 39,
          "end_token": 39,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "keys: string[]",
          "start_token": 41,
          "end_token": 45,
          "children": [
            {
              "type": "Identifier",
              "label": "keys",
              "start_token": 41,
              "end_token": 41,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "string[]",
              "start_token": 43,
              "end_token": 45,
              "children": [
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 43,
                  "end_token": 43,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  return without(keys, 'time', 'level', 'caller', 'message', 'stack_trace');\n}",
          "start_token": 47,
          "end_token": 64,
          "children": [
            {
              "type": "ReturnStatement",
              "label": "return without(keys, 'time', 'level', 'caller', 'message', 'stack_trace');",
              "start_token": 48,
              "end_token": 63,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "without(keys, 'time', 'level', 'caller', 'message', 'stack_trace')",
                  "start_token": 49,
                  "end_token": 62,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "without",
                      "start_token": 49,
                      "end_token": 49,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "keys",
                      "start_token": 51,
                      "end_token": 51,
                      "children": []
                    },
                    {
                      "type": "StringLiteral",
                      "label": "'time'",
                      "start_token": 53,
                      "end_token": 53,
                      "children": []
                    },
                    {
                      "type": "StringLiteral",
                      "label": "'level'",
                      "start_token": 55,
                      "end_token": 55,
                      "children": []
                    },
                    {
                      "type": "StringLiteral",
                      "label": "'caller'",
                      "start_token": 57,
                      "end_token": 57,
                      "children": []
                    },
                    {
                      "type": "StringLiteral",
                      "label": "'message'",
                      "start_token": 59,
                      "end_token": 59,
                      "children": []
                    },
                    {
                      "type": "StringLiteral",
                      "label": "'stack_trace'",
                      "start_token": 61,
                      "end_token": 61,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export function formatJSONLine(\n  rawText: string,\n  withTimestamps?: boolean\n): FormattedLine[] {\n  const spans: Span[] = [];\n  const lines: FormattedLine[] = [];\n  let line = '';\n  const text = withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText;\n  const json: JSONLogs = JSON.parse(text);\n  const { time, level, caller, message, stack_trace: stackTrace } = json;\n  const keys = removeKnownKeys(Object.keys(json));\n  if (withTimestamps) {\n    const timestamp = rawText.substring(0, TIMESTAMP_LENGTH);\n    spans.push({ text: timestamp });\n    line += `${timestamp} `;\n  }\n  line += formatTime(time, spans, line);\n  line += formatLevel(level, spans, line);\n  line += formatCaller(caller, spans, line);\n  line += formatMessage(message, spans, line, !!keys.length);\n  keys.forEach((key, idx) => {\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  });\n  lines.push({ line, spans });\n  formatStackTrace(stackTrace, lines);\n  return lines;\n}",
      "start_token": 65,
      "end_token": 312,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 65,
          "end_token": 65,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "formatJSONLine",
          "start_token": 67,
          "end_token": 67,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "rawText: string",
          "start_token": 69,
          "end_token": 71,
          "children": [
            {
              "type": "Identifier",
              "label": "rawText",
              "start_token": 69,
              "end_token": 69,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 71,
              "end_token": 71,
              "children": []
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "withTimestamps?: boolean",
          "start_token": 73,
          "end_token": 76,
          "children": [
            {
              "type": "Identifier",
              "label": "withTimestamps",
              "start_token": 73,
              "end_token": 73,
              "children": []
            },
            {
              "type": "QuestionToken",
              "label": "?",
              "start_token": 74,
              "end_token": 74,
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "start_token": 76,
              "end_token": 76,
              "children": []
            }
          ]
        },
        {
          "type": "ArrayType",
          "label": "FormattedLine[]",
          "start_token": 79,
          "end_token": 81,
          "children": [
            {
              "type": "TypeReference",
              "label": "FormattedLine",
              "start_token": 79,
              "end_token": 79,
              "children": [
                {
                  "type": "Identifier",
                  "label": "FormattedLine",
                  "start_token": 79,
                  "end_token": 79,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  const spans: Span[] = [];\n  const lines: FormattedLine[] = [];\n  let line = '';\n  const text = withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText;\n  const json: JSONLogs = JSON.parse(text);\n  const { time, level, caller, message, stack_trace: stackTrace } = json;\n  const keys = removeKnownKeys(Object.keys(json));\n  if (withTimestamps) {\n    const timestamp = rawText.substring(0, TIMESTAMP_LENGTH);\n    spans.push({ text: timestamp });\n    line += `${timestamp} `;\n  }\n  line += formatTime(time, spans, line);\n  line += formatLevel(level, spans, line);\n  line += formatCaller(caller, spans, line);\n  line += formatMessage(message, spans, line, !!keys.length);\n  keys.forEach((key, idx) => {\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  });\n  lines.push({ line, spans });\n  formatStackTrace(stackTrace, lines);\n  return lines;\n}",
          "start_token": 82,
          "end_token": 312,
          "children": [
            {
              "type": "FirstStatement",
              "label": "const spans: Span[] = [];",
              "start_token": 83,
              "end_token": 92,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const spans: Span[] = []",
                  "start_token": 83,
                  "end_token": 91,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "spans: Span[] = []",
                      "start_token": 84,
                      "end_token": 91,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "spans",
                          "start_token": 84,
                          "end_token": 84,
                          "children": []
                        },
                        {
                          "type": "ArrayType",
                          "label": "Span[]",
                          "start_token": 86,
                          "end_token": 88,
                          "children": [
                            {
                              "type": "TypeReference",
                              "label": "Span",
                              "start_token": 86,
                              "end_token": 86,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Span",
                                  "start_token": 86,
                                  "end_token": 86,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[]",
                          "start_token": 90,
                          "end_token": 91,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const lines: FormattedLine[] = [];",
              "start_token": 93,
              "end_token": 102,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const lines: FormattedLine[] = []",
                  "start_token": 93,
                  "end_token": 101,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "lines: FormattedLine[] = []",
                      "start_token": 94,
                      "end_token": 101,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "lines",
                          "start_token": 94,
                          "end_token": 94,
                          "children": []
                        },
                        {
                          "type": "ArrayType",
                          "label": "FormattedLine[]",
                          "start_token": 96,
                          "end_token": 98,
                          "children": [
                            {
                              "type": "TypeReference",
                              "label": "FormattedLine",
                              "start_token": 96,
                              "end_token": 96,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "FormattedLine",
                                  "start_token": 96,
                                  "end_token": 96,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[]",
                          "start_token": 100,
                          "end_token": 101,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let line = '';",
              "start_token": 103,
              "end_token": 107,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let line = ''",
                  "start_token": 103,
                  "end_token": 106,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "line = ''",
                      "start_token": 104,
                      "end_token": 106,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "line",
                          "start_token": 104,
                          "end_token": 104,
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "''",
                          "start_token": 106,
                          "end_token": 106,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const text = withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText;",
              "start_token": 108,
              "end_token": 121,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const text = withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText",
                  "start_token": 108,
                  "end_token": 120,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "text = withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText",
                      "start_token": 109,
                      "end_token": 120,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "text",
                          "start_token": 109,
                          "end_token": 109,
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "withTimestamps ? rawText.substring(TIMESTAMP_LENGTH) : rawText",
                          "start_token": 111,
                          "end_token": 120,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "withTimestamps",
                              "start_token": 111,
                              "end_token": 111,
                              "children": []
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "start_token": 112,
                              "end_token": 112,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "rawText.substring(TIMESTAMP_LENGTH)",
                              "start_token": 113,
                              "end_token": 118,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rawText.substring",
                                  "start_token": 113,
                                  "end_token": 115,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rawText",
                                      "start_token": 113,
                                      "end_token": 113,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "substring",
                                      "start_token": 115,
                                      "end_token": 115,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TIMESTAMP_LENGTH",
                                  "start_token": 117,
                                  "end_token": 117,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "start_token": 119,
                              "end_token": 119,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "rawText",
                              "start_token": 120,
                              "end_token": 120,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const json: JSONLogs = JSON.parse(text);",
              "start_token": 122,
              "end_token": 133,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const json: JSONLogs = JSON.parse(text)",
                  "start_token": 122,
                  "end_token": 132,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "json: JSONLogs = JSON.parse(text)",
                      "start_token": 123,
                      "end_token": 132,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "json",
                          "start_token": 123,
                          "end_token": 123,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "JSONLogs",
                          "start_token": 125,
                          "end_token": 125,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "JSONLogs",
                              "start_token": 125,
                              "end_token": 125,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CallExpression",
                          "label": "JSON.parse(text)",
                          "start_token": 127,
                          "end_token": 132,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "JSON.parse",
                              "start_token": 127,
                              "end_token": 129,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "JSON",
                                  "start_token": 127,
                                  "end_token": 127,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "parse",
                                  "start_token": 129,
                                  "end_token": 129,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "text",
                              "start_token": 131,
                              "end_token": 131,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const { time, level, caller, message, stack_trace: stackTrace } = json;",
              "start_token": 134,
              "end_token": 150,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const { time, level, caller, message, stack_trace: stackTrace } = json",
                  "start_token": 134,
                  "end_token": 149,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "{ time, level, caller, message, stack_trace: stackTrace } = json",
                      "start_token": 135,
                      "end_token": 149,
                      "children": [
                        {
                          "type": "ObjectBindingPattern",
                          "label": "{ time, level, caller, message, stack_trace: stackTrace }",
                          "start_token": 135,
                          "end_token": 147,
                          "children": [
                            {
                              "type": "BindingElement",
                              "label": "time",
                              "start_token": 136,
                              "end_token": 136,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "time",
                                  "start_token": 136,
                                  "end_token": 136,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BindingElement",
                              "label": "level",
                              "start_token": 138,
                              "end_token": 138,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "level",
                                  "start_token": 138,
                                  "end_token": 138,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BindingElement",
                              "label": "caller",
                              "start_token": 140,
                              "end_token": 140,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "caller",
                                  "start_token": 140,
                                  "end_token": 140,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BindingElement",
                              "label": "message",
                              "start_token": 142,
                              "end_token": 142,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "message",
                                  "start_token": 142,
                                  "end_token": 142,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BindingElement",
                              "label": "stack_trace: stackTrace",
                              "start_token": 144,
                              "end_token": 146,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "stack_trace",
                                  "start_token": 144,
                                  "end_token": 144,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "stackTrace",
                                  "start_token": 146,
                                  "end_token": 146,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "json",
                          "start_token": 149,
                          "end_token": 149,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const keys = removeKnownKeys(Object.keys(json));",
              "start_token": 151,
              "end_token": 163,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const keys = removeKnownKeys(Object.keys(json))",
                  "start_token": 151,
                  "end_token": 162,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "keys = removeKnownKeys(Object.keys(json))",
                      "start_token": 152,
                      "end_token": 162,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "keys",
                          "start_token": 152,
                          "end_token": 152,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "removeKnownKeys(Object.keys(json))",
                          "start_token": 154,
                          "end_token": 162,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "removeKnownKeys",
                              "start_token": 154,
                              "end_token": 154,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Object.keys(json)",
                              "start_token": 156,
                              "end_token": 161,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Object.keys",
                                  "start_token": 156,
                                  "end_token": 158,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Object",
                                      "start_token": 156,
                                      "end_token": 156,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "keys",
                                      "start_token": 158,
                                      "end_token": 158,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "json",
                                  "start_token": 160,
                                  "end_token": 160,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (withTimestamps) {\n    const timestamp = rawText.substring(0, TIMESTAMP_LENGTH);\n    spans.push({ text: timestamp });\n    line += `${timestamp} `;\n  }",
              "start_token": 164,
              "end_token": 197,
              "children": [
                {
                  "type": "Identifier",
                  "label": "withTimestamps",
                  "start_token": 166,
                  "end_token": 166,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    const timestamp = rawText.substring(0, TIMESTAMP_LENGTH);\n    spans.push({ text: timestamp });\n    line += `${timestamp} `;\n  }",
                  "start_token": 168,
                  "end_token": 197,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "const timestamp = rawText.substring(0, TIMESTAMP_LENGTH);",
                      "start_token": 169,
                      "end_token": 180,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const timestamp = rawText.substring(0, TIMESTAMP_LENGTH)",
                          "start_token": 169,
                          "end_token": 179,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "timestamp = rawText.substring(0, TIMESTAMP_LENGTH)",
                              "start_token": 170,
                              "end_token": 179,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "timestamp",
                                  "start_token": 170,
                                  "end_token": 170,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "rawText.substring(0, TIMESTAMP_LENGTH)",
                                  "start_token": 172,
                                  "end_token": 179,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rawText.substring",
                                      "start_token": 172,
                                      "end_token": 174,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rawText",
                                          "start_token": 172,
                                          "end_token": 172,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "substring",
                                          "start_token": 174,
                                          "end_token": 174,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 176,
                                      "end_token": 176,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TIMESTAMP_LENGTH",
                                      "start_token": 178,
                                      "end_token": 178,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "spans.push({ text: timestamp });",
                      "start_token": 181,
                      "end_token": 191,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "spans.push({ text: timestamp })",
                          "start_token": 181,
                          "end_token": 190,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "spans.push",
                              "start_token": 181,
                              "end_token": 183,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "spans",
                                  "start_token": 181,
                                  "end_token": 181,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "push",
                                  "start_token": 183,
                                  "end_token": 183,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{ text: timestamp }",
                              "start_token": 185,
                              "end_token": 189,
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "text: timestamp",
                                  "start_token": 186,
                                  "end_token": 188,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "text",
                                      "start_token": 186,
                                      "end_token": 186,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "timestamp",
                                      "start_token": 188,
                                      "end_token": 188,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "line += `${timestamp} `;",
                      "start_token": 192,
                      "end_token": 196,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "line += `${timestamp} `",
                          "start_token": 192,
                          "end_token": 195,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "line",
                              "start_token": 192,
                              "end_token": 192,
                              "children": []
                            },
                            {
                              "type": "FirstCompoundAssignment",
                              "label": "+=",
                              "start_token": 193,
                              "end_token": 194,
                              "children": []
                            },
                            {
                              "type": "TemplateExpression",
                              "label": "`${timestamp} `",
                              "start_token": 195,
                              "end_token": 195,
                              "children": [
                                {
                                  "type": "TemplateHead",
                                  "label": "`${",
                                  "start_token": 195,
                                  "end_token": 195,
                                  "children": []
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "timestamp} `",
                                  "start_token": 195,
                                  "end_token": 195,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "timestamp",
                                      "start_token": 195,
                                      "end_token": 195,
                                      "children": []
                                    },
                                    {
                                      "type": "LastTemplateToken",
                                      "label": "} `",
                                      "start_token": 195,
                                      "end_token": 195,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "line += formatTime(time, spans, line);",
              "start_token": 198,
              "end_token": 209,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "line += formatTime(time, spans, line)",
                  "start_token": 198,
                  "end_token": 208,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "line",
                      "start_token": 198,
                      "end_token": 198,
                      "children": []
                    },
                    {
                      "type": "FirstCompoundAssignment",
                      "label": "+=",
                      "start_token": 199,
                      "end_token": 200,
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "formatTime(time, spans, line)",
                      "start_token": 201,
                      "end_token": 208,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "formatTime",
                          "start_token": 201,
                          "end_token": 201,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "time",
                          "start_token": 203,
                          "end_token": 203,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "spans",
                          "start_token": 205,
                          "end_token": 205,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "line",
                          "start_token": 207,
                          "end_token": 207,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "line += formatLevel(level, spans, line);",
              "start_token": 210,
              "end_token": 221,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "line += formatLevel(level, spans, line)",
                  "start_token": 210,
                  "end_token": 220,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "line",
                      "start_token": 210,
                      "end_token": 210,
                      "children": []
                    },
                    {
                      "type": "FirstCompoundAssignment",
                      "label": "+=",
                      "start_token": 211,
                      "end_token": 212,
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "formatLevel(level, spans, line)",
                      "start_token": 213,
                      "end_token": 220,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "formatLevel",
                          "start_token": 213,
                          "end_token": 213,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "level",
                          "start_token": 215,
                          "end_token": 215,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "spans",
                          "start_token": 217,
                          "end_token": 217,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "line",
                          "start_token": 219,
                          "end_token": 219,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "line += formatCaller(caller, spans, line);",
              "start_token": 222,
              "end_token": 233,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "line += formatCaller(caller, spans, line)",
                  "start_token": 222,
                  "end_token": 232,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "line",
                      "start_token": 222,
                      "end_token": 222,
                      "children": []
                    },
                    {
                      "type": "FirstCompoundAssignment",
                      "label": "+=",
                      "start_token": 223,
                      "end_token": 224,
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "formatCaller(caller, spans, line)",
                      "start_token": 225,
                      "end_token": 232,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "formatCaller",
                          "start_token": 225,
                          "end_token": 225,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "caller",
                          "start_token": 227,
                          "end_token": 227,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "spans",
                          "start_token": 229,
                          "end_token": 229,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "line",
                          "start_token": 231,
                          "end_token": 231,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "line += formatMessage(message, spans, line, !!keys.length);",
              "start_token": 234,
              "end_token": 251,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "line += formatMessage(message, spans, line, !!keys.length)",
                  "start_token": 234,
                  "end_token": 250,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "line",
                      "start_token": 234,
                      "end_token": 234,
                      "children": []
                    },
                    {
                      "type": "FirstCompoundAssignment",
                      "label": "+=",
                      "start_token": 235,
                      "end_token": 236,
                      "children": []
                    },
                    {
                      "type": "CallExpression",
                      "label": "formatMessage(message, spans, line, !!keys.length)",
                      "start_token": 237,
                      "end_token": 250,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "formatMessage",
                          "start_token": 237,
                          "end_token": 237,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "message",
                          "start_token": 239,
                          "end_token": 239,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "spans",
                          "start_token": 241,
                          "end_token": 241,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "line",
                          "start_token": 243,
                          "end_token": 243,
                          "children": []
                        },
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "!!keys.length",
                          "start_token": 245,
                          "end_token": 249,
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!keys.length",
                              "start_token": 246,
                              "end_token": 249,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "keys.length",
                                  "start_token": 247,
                                  "end_token": 249,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "keys",
                                      "start_token": 247,
                                      "end_token": 247,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "start_token": 249,
                                      "end_token": 249,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "keys.forEach((key, idx) => {\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  });",
              "start_token": 252,
              "end_token": 290,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "keys.forEach((key, idx) => {\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  })",
                  "start_token": 252,
                  "end_token": 289,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "keys.forEach",
                      "start_token": 252,
                      "end_token": 254,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "keys",
                          "start_token": 252,
                          "end_token": 252,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "forEach",
                          "start_token": 254,
                          "end_token": 254,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ArrowFunction",
                      "label": "(key, idx) => {\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  }",
                      "start_token": 256,
                      "end_token": 288,
                      "children": [
                        {
                          "type": "Parameter",
                          "label": "key",
                          "start_token": 257,
                          "end_token": 257,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "key",
                              "start_token": 257,
                              "end_token": 257,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Parameter",
                          "label": "idx",
                          "start_token": 259,
                          "end_token": 259,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "idx",
                              "start_token": 259,
                              "end_token": 259,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsGreaterThanToken",
                          "label": "=>",
                          "start_token": 261,
                          "end_token": 261,
                          "children": []
                        },
                        {
                          "type": "Block",
                          "label": "{\n    line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );\n  }",
                          "start_token": 262,
                          "end_token": 288,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    );",
                              "start_token": 263,
                              "end_token": 287,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "line += formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    )",
                                  "start_token": 263,
                                  "end_token": 286,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "line",
                                      "start_token": 263,
                                      "end_token": 263,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstCompoundAssignment",
                                      "label": "+=",
                                      "start_token": 264,
                                      "end_token": 265,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "formatKeyValuePair(\n      key,\n      json[key],\n      spans,\n      line,\n      idx === keys.length - 1\n    )",
                                      "start_token": 266,
                                      "end_token": 286,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "formatKeyValuePair",
                                          "start_token": 266,
                                          "end_token": 266,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "key",
                                          "start_token": 268,
                                          "end_token": 268,
                                          "children": []
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "json[key]",
                                          "start_token": 270,
                                          "end_token": 273,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "json",
                                              "start_token": 270,
                                              "end_token": 270,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "key",
                                              "start_token": 272,
                                              "end_token": 272,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "spans",
                                          "start_token": 275,
                                          "end_token": 275,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "line",
                                          "start_token": 277,
                                          "end_token": 277,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "idx === keys.length - 1",
                                          "start_token": 279,
                                          "end_token": 285,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "idx",
                                              "start_token": 279,
                                              "end_token": 279,
                                              "children": []
                                            },
                                            {
                                              "type": "EqualsEqualsEqualsToken",
                                              "label": "===",
                                              "start_token": 280,
                                              "end_token": 280,
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "keys.length - 1",
                                              "start_token": 281,
                                              "end_token": 285,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "keys.length",
                                                  "start_token": 281,
                                                  "end_token": 283,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "keys",
                                                      "start_token": 281,
                                                      "end_token": 281,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "length",
                                                      "start_token": 283,
                                                      "end_token": 283,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "start_token": 284,
                                                  "end_token": 284,
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "start_token": 285,
                                                  "end_token": 285,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "lines.push({ line, spans });",
              "start_token": 291,
              "end_token": 301,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "lines.push({ line, spans })",
                  "start_token": 291,
                  "end_token": 300,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "lines.push",
                      "start_token": 291,
                      "end_token": 293,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "lines",
                          "start_token": 291,
                          "end_token": 291,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "push",
                          "start_token": 293,
                          "end_token": 293,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ObjectLiteralExpression",
                      "label": "{ line, spans }",
                      "start_token": 295,
                      "end_token": 299,
                      "children": [
                        {
                          "type": "ShorthandPropertyAssignment",
                          "label": "line",
                          "start_token": 296,
                          "end_token": 296,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "line",
                              "start_token": 296,
                              "end_token": 296,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ShorthandPropertyAssignment",
                          "label": "spans",
                          "start_token": 298,
                          "end_token": 298,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "spans",
                              "start_token": 298,
                              "end_token": 298,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "formatStackTrace(stackTrace, lines);",
              "start_token": 302,
              "end_token": 308,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "formatStackTrace(stackTrace, lines)",
                  "start_token": 302,
                  "end_token": 307,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "formatStackTrace",
                      "start_token": 302,
                      "end_token": 302,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "stackTrace",
                      "start_token": 304,
                      "end_token": 304,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "lines",
                      "start_token": 306,
                      "end_token": 306,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return lines;",
              "start_token": 309,
              "end_token": 311,
              "children": [
                {
                  "type": "Identifier",
                  "label": "lines",
                  "start_token": 310,
                  "end_token": 310,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}