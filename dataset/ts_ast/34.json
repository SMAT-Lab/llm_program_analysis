{
  "type": "SourceFile",
  "label": "type CallbackType = Function;\n\nexport class Broadcast {\n  private callBackArray: Map<string, CallbackType[]> = new Map<string, CallbackType[]>();\n\n  constructor() {\n  }\n\n  public on(event: string, callback: CallbackType): void {\n    if (this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined) {\n      this.callBackArray.set(event, []);\n    }\n    this.callBackArray.get(event).push(callback);\n  }\n\n  public off(event: string | null, callback: CallbackType | null): void {\n    if (event == null) {\n      this.callBackArray.clear();\n    }\n\n    const cbs: CallbackType[] = this.callBackArray.get(event);\n    if (!Boolean<Function[]>(cbs).valueOf()) {\n      return;\n    }\n    if (callback == null) {\n      this.callBackArray.set(event, null);\n    }\n    let cb;\n    let l = cbs.length;\n    for (let i = 0; i < l; i++) {\n      cb = cbs[i];\n      if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  public emit(event: string, args: Object[]): void {\n    let _self = this;\n    if (!Boolean<Function[]>(this.callBackArray.get(event)).valueOf()) {\n      return;\n    }\n\n    let cbs: CallbackType[] = [];\n    for (let i = 0; i < this.callBackArray.get(event).length; i++) {\n      cbs.push(this.callBackArray.get(event)[i])\n    }\n\n    if (cbs != null) {\n      let l = cbs.length;\n      for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }\n  }\n\n  public release(): void {\n    this.callBackArray.forEach((array: Object[]): void => {\n      array.length = 0;\n    });\n    this.callBackArray.clear();\n  }\n}\n",
  "children": [
    {
      "type": "TypeAliasDeclaration",
      "label": "type CallbackType = Function;",
      "children": [
        {
          "type": "Identifier",
          "label": "CallbackType",
          "children": []
        },
        {
          "type": "TypeReference",
          "label": "Function",
          "children": [
            {
              "type": "Identifier",
              "label": "Function",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class Broadcast {\n  private callBackArray: Map<string, CallbackType[]> = new Map<string, CallbackType[]>();\n\n  constructor() {\n  }\n\n  public on(event: string, callback: CallbackType): void {\n    if (this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined) {\n      this.callBackArray.set(event, []);\n    }\n    this.callBackArray.get(event).push(callback);\n  }\n\n  public off(event: string | null, callback: CallbackType | null): void {\n    if (event == null) {\n      this.callBackArray.clear();\n    }\n\n    const cbs: CallbackType[] = this.callBackArray.get(event);\n    if (!Boolean<Function[]>(cbs).valueOf()) {\n      return;\n    }\n    if (callback == null) {\n      this.callBackArray.set(event, null);\n    }\n    let cb;\n    let l = cbs.length;\n    for (let i = 0; i < l; i++) {\n      cb = cbs[i];\n      if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  public emit(event: string, args: Object[]): void {\n    let _self = this;\n    if (!Boolean<Function[]>(this.callBackArray.get(event)).valueOf()) {\n      return;\n    }\n\n    let cbs: CallbackType[] = [];\n    for (let i = 0; i < this.callBackArray.get(event).length; i++) {\n      cbs.push(this.callBackArray.get(event)[i])\n    }\n\n    if (cbs != null) {\n      let l = cbs.length;\n      for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }\n  }\n\n  public release(): void {\n    this.callBackArray.forEach((array: Object[]): void => {\n      array.length = 0;\n    });\n    this.callBackArray.clear();\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "Broadcast",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "private callBackArray: Map<string, CallbackType[]> = new Map<string, CallbackType[]>();",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "callBackArray",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Map<string, CallbackType[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Map",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "CallbackType[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "CallbackType",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "CallbackType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "NewExpression",
              "label": "new Map<string, CallbackType[]>()",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Map",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "CallbackType[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "CallbackType",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "CallbackType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor() {\n  }",
          "children": [
            {
              "type": "Block",
              "label": "{\n  }",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "public on(event: string, callback: CallbackType): void {\n    if (this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined) {\n      this.callBackArray.set(event, []);\n    }\n    this.callBackArray.get(event).push(callback);\n  }",
          "children": [
            {
              "type": "PublicKeyword",
              "label": "public",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "on",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "event: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "event",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "callback: CallbackType",
              "children": [
                {
                  "type": "Identifier",
                  "label": "callback",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "CallbackType",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "CallbackType",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined) {\n      this.callBackArray.set(event, []);\n    }\n    this.callBackArray.get(event).push(callback);\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined) {\n      this.callBackArray.set(event, []);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.callBackArray.get(event) === null",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.get(event)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.get",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.callBackArray.get(event) === undefined",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.get(event)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.get",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.callBackArray.set(event, []);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.callBackArray.set(event, []);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.set(event, [])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.set",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "set",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.callBackArray.get(event).push(callback);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.callBackArray.get(event).push(callback)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.callBackArray.get(event).push",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.get(event)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.get",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "push",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "callback",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "public off(event: string | null, callback: CallbackType | null): void {\n    if (event == null) {\n      this.callBackArray.clear();\n    }\n\n    const cbs: CallbackType[] = this.callBackArray.get(event);\n    if (!Boolean<Function[]>(cbs).valueOf()) {\n      return;\n    }\n    if (callback == null) {\n      this.callBackArray.set(event, null);\n    }\n    let cb;\n    let l = cbs.length;\n    for (let i = 0; i < l; i++) {\n      cb = cbs[i];\n      if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n  }",
          "children": [
            {
              "type": "PublicKeyword",
              "label": "public",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "off",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "event: string | null",
              "children": [
                {
                  "type": "Identifier",
                  "label": "event",
                  "children": []
                },
                {
                  "type": "UnionType",
                  "label": "string | null",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    },
                    {
                      "type": "LiteralType",
                      "label": "null",
                      "children": [
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "callback: CallbackType | null",
              "children": [
                {
                  "type": "Identifier",
                  "label": "callback",
                  "children": []
                },
                {
                  "type": "UnionType",
                  "label": "CallbackType | null",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "CallbackType",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "CallbackType",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "LiteralType",
                      "label": "null",
                      "children": [
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (event == null) {\n      this.callBackArray.clear();\n    }\n\n    const cbs: CallbackType[] = this.callBackArray.get(event);\n    if (!Boolean<Function[]>(cbs).valueOf()) {\n      return;\n    }\n    if (callback == null) {\n      this.callBackArray.set(event, null);\n    }\n    let cb;\n    let l = cbs.length;\n    for (let i = 0; i < l; i++) {\n      cb = cbs[i];\n      if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (event == null) {\n      this.callBackArray.clear();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "event == null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "event",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.callBackArray.clear();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.callBackArray.clear();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.clear()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.clear",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "clear",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const cbs: CallbackType[] = this.callBackArray.get(event);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const cbs: CallbackType[] = this.callBackArray.get(event)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "cbs: CallbackType[] = this.callBackArray.get(event)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cbs",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "CallbackType[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "CallbackType",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "CallbackType",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.get(event)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.get",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!Boolean<Function[]>(cbs).valueOf()) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!Boolean<Function[]>(cbs).valueOf()",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Boolean<Function[]>(cbs).valueOf()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Boolean<Function[]>(cbs).valueOf",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Boolean<Function[]>(cbs)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Boolean",
                                      "children": []
                                    },
                                    {
                                      "type": "ArrayType",
                                      "label": "Function[]",
                                      "children": [
                                        {
                                          "type": "TypeReference",
                                          "label": "Function",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Function",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "cbs",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "valueOf",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (callback == null) {\n      this.callBackArray.set(event, null);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "callback == null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "callback",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.callBackArray.set(event, null);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.callBackArray.set(event, null);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.set(event, null)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.set",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "set",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let cb;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let cb",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "cb",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cb",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let l = cbs.length;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let l = cbs.length",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "l = cbs.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "l",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "cbs.length",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "cbs",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0; i < l; i++) {\n      cb = cbs[i];\n      if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < l",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "l",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      cb = cbs[i];\n      if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "cb = cbs[i];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "cb = cbs[i]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "cb",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "cbs[i]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "cbs",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (cb === callback || cb.fn === callback) {\n        cbs.splice(i, 1);\n        break;\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "cb === callback || cb.fn === callback",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "cb === callback",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "cb",
                                      "children": []
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "callback",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "cb.fn === callback",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "cb.fn",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "cb",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fn",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "callback",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        cbs.splice(i, 1);\n        break;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "cbs.splice(i, 1);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "cbs.splice(i, 1)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "cbs.splice",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "cbs",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "splice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BreakStatement",
                                  "label": "break;",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "public emit(event: string, args: Object[]): void {\n    let _self = this;\n    if (!Boolean<Function[]>(this.callBackArray.get(event)).valueOf()) {\n      return;\n    }\n\n    let cbs: CallbackType[] = [];\n    for (let i = 0; i < this.callBackArray.get(event).length; i++) {\n      cbs.push(this.callBackArray.get(event)[i])\n    }\n\n    if (cbs != null) {\n      let l = cbs.length;\n      for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }\n  }",
          "children": [
            {
              "type": "PublicKeyword",
              "label": "public",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "emit",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "event: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "event",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "args: Object[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "args",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "Object[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "Object",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Object",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let _self = this;\n    if (!Boolean<Function[]>(this.callBackArray.get(event)).valueOf()) {\n      return;\n    }\n\n    let cbs: CallbackType[] = [];\n    for (let i = 0; i < this.callBackArray.get(event).length; i++) {\n      cbs.push(this.callBackArray.get(event)[i])\n    }\n\n    if (cbs != null) {\n      let l = cbs.length;\n      for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let _self = this;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let _self = this",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "_self = this",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "_self",
                              "children": []
                            },
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!Boolean<Function[]>(this.callBackArray.get(event)).valueOf()) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!Boolean<Function[]>(this.callBackArray.get(event)).valueOf()",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Boolean<Function[]>(this.callBackArray.get(event)).valueOf()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Boolean<Function[]>(this.callBackArray.get(event)).valueOf",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Boolean<Function[]>(this.callBackArray.get(event))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Boolean",
                                      "children": []
                                    },
                                    {
                                      "type": "ArrayType",
                                      "label": "Function[]",
                                      "children": [
                                        {
                                          "type": "TypeReference",
                                          "label": "Function",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Function",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.callBackArray.get(event)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.callBackArray.get",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.callBackArray",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "callBackArray",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "event",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "valueOf",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let cbs: CallbackType[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let cbs: CallbackType[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "cbs: CallbackType[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cbs",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "CallbackType[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "CallbackType",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "CallbackType",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0; i < this.callBackArray.get(event).length; i++) {\n      cbs.push(this.callBackArray.get(event)[i])\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < this.callBackArray.get(event).length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.callBackArray.get(event).length",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.callBackArray.get(event)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.callBackArray.get",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.callBackArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callBackArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      cbs.push(this.callBackArray.get(event)[i])\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "cbs.push(this.callBackArray.get(event)[i])",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "cbs.push(this.callBackArray.get(event)[i])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "cbs.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "cbs",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "this.callBackArray.get(event)[i]",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.callBackArray.get(event)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.callBackArray.get",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.callBackArray",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "callBackArray",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "event",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (cbs != null) {\n      let l = cbs.length;\n      for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "cbs != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "cbs",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let l = cbs.length;\n      for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let l = cbs.length;",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let l = cbs.length",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "l = cbs.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "cbs.length",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "cbs",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0; i < l; i++) {\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < l",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "l",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }\n      }",
                              "children": [
                                {
                                  "type": "TryStatement",
                                  "label": "try {\n          cbs[i].apply(_self, args);\n        } catch (e) {\n          new Error(e);\n        }",
                                  "children": [
                                    {
                                      "type": "Block",
                                      "label": "{\n          cbs[i].apply(_self, args);\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "cbs[i].apply(_self, args);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "cbs[i].apply(_self, args)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "cbs[i].apply",
                                                  "children": [
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "cbs[i]",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "cbs",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "apply",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "_self",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "args",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CatchClause",
                                      "label": "catch (e) {\n          new Error(e);\n        }",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "e",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "e",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          new Error(e);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "new Error(e);",
                                              "children": [
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new Error(e)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Error",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "e",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "public release(): void {\n    this.callBackArray.forEach((array: Object[]): void => {\n      array.length = 0;\n    });\n    this.callBackArray.clear();\n  }",
          "children": [
            {
              "type": "PublicKeyword",
              "label": "public",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "release",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.callBackArray.forEach((array: Object[]): void => {\n      array.length = 0;\n    });\n    this.callBackArray.clear();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.callBackArray.forEach((array: Object[]): void => {\n      array.length = 0;\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.callBackArray.forEach((array: Object[]): void => {\n      array.length = 0;\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.callBackArray.forEach",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.callBackArray",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "callBackArray",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "forEach",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(array: Object[]): void => {\n      array.length = 0;\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "array: Object[]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "array",
                                  "children": []
                                },
                                {
                                  "type": "ArrayType",
                                  "label": "Object[]",
                                  "children": [
                                    {
                                      "type": "TypeReference",
                                      "label": "Object",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Object",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      array.length = 0;\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "array.length = 0;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "array.length = 0",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "array.length",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "array",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "length",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.callBackArray.clear();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.callBackArray.clear()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.callBackArray.clear",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.callBackArray",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "callBackArray",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "clear",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}