{
  "type": "SourceFile",
  "label": "import { ConfigPlugin, withProjectBuildGradle } from '@expo/config-plugins';\nimport fs from 'fs';\nimport path from 'path';\nimport semver from 'semver';\n// Because regexp //g is stateful, to use it multiple times, we should create a new one.\nfunction createAgpRegExp() {\n  return /^(\\s*classpath[(\\s][\"']com\\.android\\.tools\\.build:gradle:)(\\d+\\.\\d+\\.\\d+)([\"'][)\\s]\\s*)$/gm;\n}\nexport async function shouldUpdateAgpVersionAsync(projectRoot: string, targetVersion: string) {\n  const gradlePath = path.join(projectRoot, 'android', 'build.gradle');\n  const content = await fs.promises.readFile(gradlePath, 'utf-8');\n  const matchResult = createAgpRegExp().exec(content);\n  if (!matchResult) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }\n  const version = matchResult[2];\n  if (!version) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }\n  return semver.lt(toSemVer(version), toSemVer(targetVersion));\n}\nexport const withAndroidGradlePluginVersion: ConfigPlugin<{ androidAgpVersion: string }> = (\n  config,\n  prop\n) => {\n  return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });\n};\nfunction toSemVer(version: string): semver.SemVer {\n  return semver.coerce(version) ?? new semver.SemVer('0.0.0');\n}",
  "start_token": 0,
  "end_token": 101,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { ConfigPlugin, withProjectBuildGradle } from '@expo/config-plugins';",
      "start_token": 0,
      "end_token": 8,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ConfigPlugin, withProjectBuildGradle }",
          "start_token": 1,
          "end_token": 5,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ConfigPlugin, withProjectBuildGradle }",
              "start_token": 1,
              "end_token": 5,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ConfigPlugin",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ConfigPlugin",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "withProjectBuildGradle",
                  "start_token": 4,
                  "end_token": 4,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "withProjectBuildGradle",
                      "start_token": 4,
                      "end_token": 4,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@expo/config-plugins'",
          "start_token": 7,
          "end_token": 7,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import fs from 'fs';",
      "start_token": 9,
      "end_token": 13,
      "children": [
        {
          "type": "ImportClause",
          "label": "fs",
          "start_token": 10,
          "end_token": 10,
          "children": [
            {
              "type": "Identifier",
              "label": "fs",
              "start_token": 10,
              "end_token": 10,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'fs'",
          "start_token": 12,
          "end_token": 12,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import path from 'path';",
      "start_token": 14,
      "end_token": 18,
      "children": [
        {
          "type": "ImportClause",
          "label": "path",
          "start_token": 15,
          "end_token": 15,
          "children": [
            {
              "type": "Identifier",
              "label": "path",
              "start_token": 15,
              "end_token": 15,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'path'",
          "start_token": 17,
          "end_token": 17,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import semver from 'semver';",
      "start_token": 19,
      "end_token": 23,
      "children": [
        {
          "type": "ImportClause",
          "label": "semver",
          "start_token": 20,
          "end_token": 20,
          "children": [
            {
              "type": "Identifier",
              "label": "semver",
              "start_token": 20,
              "end_token": 20,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'semver'",
          "start_token": 22,
          "end_token": 22,
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function createAgpRegExp() {\n  return /^(\\s*classpath[(\\s][\"']com\\.android\\.tools\\.build:gradle:)(\\d+\\.\\d+\\.\\d+)([\"'][)\\s]\\s*)$/gm;\n}",
      "start_token": 25,
      "end_token": 43,
      "children": [
        {
          "type": "Identifier",
          "label": "createAgpRegExp",
          "start_token": 26,
          "end_token": 26,
          "children": []
        },
        {
          "type": "Block",
          "label": "{\n  return /^(\\s*classpath[(\\s][\"']com\\.android\\.tools\\.build:gradle:)(\\d+\\.\\d+\\.\\d+)([\"'][)\\s]\\s*)$/gm;\n}",
          "start_token": 29,
          "end_token": 43,
          "children": [
            {
              "type": "ReturnStatement",
              "label": "return /^(\\s*classpath[(\\s][\"']com\\.android\\.tools\\.build:gradle:)(\\d+\\.\\d+\\.\\d+)([\"'][)\\s]\\s*)$/gm;",
              "start_token": 30,
              "end_token": 43,
              "children": [
                {
                  "type": "RegularExpressionLiteral",
                  "label": "/^(\\s*classpath[(\\s][\"']com\\.android\\.tools\\.build:gradle:)(\\d+\\.\\d+\\.\\d+)([\"'][)\\s]\\s*)$/gm",
                  "start_token": 31,
                  "end_token": 43,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export async function shouldUpdateAgpVersionAsync(projectRoot: string, targetVersion: string) {\n  const gradlePath = path.join(projectRoot, 'android', 'build.gradle');\n  const content = await fs.promises.readFile(gradlePath, 'utf-8');\n  const matchResult = createAgpRegExp().exec(content);\n  if (!matchResult) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }\n  const version = matchResult[2];\n  if (!version) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }\n  return semver.lt(toSemVer(version), toSemVer(targetVersion));\n}",
      "start_token": 43,
      "end_token": 81,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 43,
          "end_token": 43,
          "children": []
        },
        {
          "type": "AsyncKeyword",
          "label": "async",
          "start_token": 43,
          "end_token": 43,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "shouldUpdateAgpVersionAsync",
          "start_token": 43,
          "end_token": 43,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "projectRoot: string",
          "start_token": 43,
          "end_token": 43,
          "children": [
            {
              "type": "Identifier",
              "label": "projectRoot",
              "start_token": 43,
              "end_token": 43,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 43,
              "end_token": 43,
              "children": []
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "targetVersion: string",
          "start_token": 43,
          "end_token": 43,
          "children": [
            {
              "type": "Identifier",
              "label": "targetVersion",
              "start_token": 43,
              "end_token": 43,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 43,
              "end_token": 43,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  const gradlePath = path.join(projectRoot, 'android', 'build.gradle');\n  const content = await fs.promises.readFile(gradlePath, 'utf-8');\n  const matchResult = createAgpRegExp().exec(content);\n  if (!matchResult) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }\n  const version = matchResult[2];\n  if (!version) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }\n  return semver.lt(toSemVer(version), toSemVer(targetVersion));\n}",
          "start_token": 43,
          "end_token": 81,
          "children": [
            {
              "type": "FirstStatement",
              "label": "const gradlePath = path.join(projectRoot, 'android', 'build.gradle');",
              "start_token": 43,
              "end_token": 49,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const gradlePath = path.join(projectRoot, 'android', 'build.gradle')",
                  "start_token": 43,
                  "end_token": 49,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "gradlePath = path.join(projectRoot, 'android', 'build.gradle')",
                      "start_token": 43,
                      "end_token": 49,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "gradlePath",
                          "start_token": 43,
                          "end_token": 43,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "path.join(projectRoot, 'android', 'build.gradle')",
                          "start_token": 43,
                          "end_token": 49,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "path.join",
                              "start_token": 43,
                              "end_token": 43,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "path",
                                  "start_token": 43,
                                  "end_token": 43,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "join",
                                  "start_token": 43,
                                  "end_token": 43,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "projectRoot",
                              "start_token": 43,
                              "end_token": 43,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'android'",
                              "start_token": 43,
                              "end_token": 45,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'build.gradle'",
                              "start_token": 45,
                              "end_token": 49,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const content = await fs.promises.readFile(gradlePath, 'utf-8');",
              "start_token": 49,
              "end_token": 53,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const content = await fs.promises.readFile(gradlePath, 'utf-8')",
                  "start_token": 49,
                  "end_token": 53,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "content = await fs.promises.readFile(gradlePath, 'utf-8')",
                      "start_token": 49,
                      "end_token": 53,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "content",
                          "start_token": 49,
                          "end_token": 49,
                          "children": []
                        },
                        {
                          "type": "AwaitExpression",
                          "label": "await fs.promises.readFile(gradlePath, 'utf-8')",
                          "start_token": 49,
                          "end_token": 53,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "fs.promises.readFile(gradlePath, 'utf-8')",
                              "start_token": 49,
                              "end_token": 53,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "fs.promises.readFile",
                                  "start_token": 49,
                                  "end_token": 49,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fs.promises",
                                      "start_token": 49,
                                      "end_token": 49,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fs",
                                          "start_token": 49,
                                          "end_token": 49,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "promises",
                                          "start_token": 49,
                                          "end_token": 49,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "readFile",
                                      "start_token": 49,
                                      "end_token": 49,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "gradlePath",
                                  "start_token": 49,
                                  "end_token": 49,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'utf-8'",
                                  "start_token": 49,
                                  "end_token": 53,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const matchResult = createAgpRegExp().exec(content);",
              "start_token": 53,
              "end_token": 53,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const matchResult = createAgpRegExp().exec(content)",
                  "start_token": 53,
                  "end_token": 53,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "matchResult = createAgpRegExp().exec(content)",
                      "start_token": 53,
                      "end_token": 53,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "matchResult",
                          "start_token": 53,
                          "end_token": 53,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "createAgpRegExp().exec(content)",
                          "start_token": 53,
                          "end_token": 53,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "createAgpRegExp().exec",
                              "start_token": 53,
                              "end_token": 53,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "createAgpRegExp()",
                                  "start_token": 53,
                                  "end_token": 53,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "createAgpRegExp",
                                      "start_token": 53,
                                      "end_token": 53,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "exec",
                                  "start_token": 53,
                                  "end_token": 53,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "content",
                              "start_token": 53,
                              "end_token": 53,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (!matchResult) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }",
              "start_token": 53,
              "end_token": 67,
              "children": [
                {
                  "type": "PrefixUnaryExpression",
                  "label": "!matchResult",
                  "start_token": 53,
                  "end_token": 53,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "matchResult",
                      "start_token": 53,
                      "end_token": 53,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }",
                  "start_token": 53,
                  "end_token": 67,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );",
                      "start_token": 53,
                      "end_token": 67,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    )",
                          "start_token": 53,
                          "end_token": 67,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "console.warn",
                              "start_token": 53,
                              "end_token": 53,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "console",
                                  "start_token": 53,
                                  "end_token": 53,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "warn",
                                  "start_token": 53,
                                  "end_token": 53,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'",
                              "start_token": 53,
                              "end_token": 67,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return false;",
                      "start_token": 67,
                      "end_token": 67,
                      "children": [
                        {
                          "type": "FalseKeyword",
                          "label": "false",
                          "start_token": 67,
                          "end_token": 67,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const version = matchResult[2];",
              "start_token": 67,
              "end_token": 67,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const version = matchResult[2]",
                  "start_token": 67,
                  "end_token": 67,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "version = matchResult[2]",
                      "start_token": 67,
                      "end_token": 67,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "version",
                          "start_token": 67,
                          "end_token": 67,
                          "children": []
                        },
                        {
                          "type": "ElementAccessExpression",
                          "label": "matchResult[2]",
                          "start_token": 67,
                          "end_token": 67,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "matchResult",
                              "start_token": 67,
                              "end_token": 67,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "2",
                              "start_token": 67,
                              "end_token": 67,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (!version) {\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }",
              "start_token": 67,
              "end_token": 81,
              "children": [
                {
                  "type": "PrefixUnaryExpression",
                  "label": "!version",
                  "start_token": 67,
                  "end_token": 67,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "version",
                      "start_token": 67,
                      "end_token": 67,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );\n    return false;\n  }",
                  "start_token": 67,
                  "end_token": 81,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    );",
                      "start_token": 67,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "console.warn(\n      'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'\n    )",
                          "start_token": 67,
                          "end_token": 81,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "console.warn",
                              "start_token": 67,
                              "end_token": 67,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "console",
                                  "start_token": 67,
                                  "end_token": 67,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "warn",
                                  "start_token": 67,
                                  "end_token": 67,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'Unrecognized `android/build.gradle` content, will skip the process to update AGP version.'",
                              "start_token": 67,
                              "end_token": 81,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return false;",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "FalseKeyword",
                          "label": "false",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return semver.lt(toSemVer(version), toSemVer(targetVersion));",
              "start_token": 81,
              "end_token": 81,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "semver.lt(toSemVer(version), toSemVer(targetVersion))",
                  "start_token": 81,
                  "end_token": 81,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "semver.lt",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "semver",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "lt",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "label": "toSemVer(version)",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "toSemVer",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "version",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "label": "toSemVer(targetVersion)",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "toSemVer",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "targetVersion",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "export const withAndroidGradlePluginVersion: ConfigPlugin<{ androidAgpVersion: string }> = (\n  config,\n  prop\n) => {\n  return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });\n};",
      "start_token": 81,
      "end_token": 95,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 81,
          "end_token": 81,
          "children": []
        },
        {
          "type": "VariableDeclarationList",
          "label": "const withAndroidGradlePluginVersion: ConfigPlugin<{ androidAgpVersion: string }> = (\n  config,\n  prop\n) => {\n  return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });\n}",
          "start_token": 81,
          "end_token": 95,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "withAndroidGradlePluginVersion: ConfigPlugin<{ androidAgpVersion: string }> = (\n  config,\n  prop\n) => {\n  return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });\n}",
              "start_token": 81,
              "end_token": 95,
              "children": [
                {
                  "type": "Identifier",
                  "label": "withAndroidGradlePluginVersion",
                  "start_token": 81,
                  "end_token": 81,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ConfigPlugin<{ androidAgpVersion: string }>",
                  "start_token": 81,
                  "end_token": 81,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ConfigPlugin",
                      "start_token": 81,
                      "end_token": 81,
                      "children": []
                    },
                    {
                      "type": "TypeLiteral",
                      "label": "{ androidAgpVersion: string }",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "PropertySignature",
                          "label": "androidAgpVersion: string",
                          "start_token": 81,
                          "end_token": 81,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "androidAgpVersion",
                              "start_token": 81,
                              "end_token": 81,
                              "children": []
                            },
                            {
                              "type": "StringKeyword",
                              "label": "string",
                              "start_token": 81,
                              "end_token": 81,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ArrowFunction",
                  "label": "(\n  config,\n  prop\n) => {\n  return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });\n}",
                  "start_token": 81,
                  "end_token": 95,
                  "children": [
                    {
                      "type": "Parameter",
                      "label": "config",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "config",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Parameter",
                      "label": "prop",
                      "start_token": 81,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "prop",
                          "start_token": 81,
                          "end_token": 81,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "EqualsGreaterThanToken",
                      "label": "=>",
                      "start_token": 81,
                      "end_token": 81,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n  return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });\n}",
                      "start_token": 81,
                      "end_token": 95,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  });",
                          "start_token": 81,
                          "end_token": 95,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "withProjectBuildGradle(config, (config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  })",
                              "start_token": 81,
                              "end_token": 95,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "withProjectBuildGradle",
                                  "start_token": 81,
                                  "end_token": 81,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "config",
                                  "start_token": 81,
                                  "end_token": 81,
                                  "children": []
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(config) => {\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  }",
                                  "start_token": 81,
                                  "end_token": 95,
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "config",
                                      "start_token": 81,
                                      "end_token": 81,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "config",
                                          "start_token": 81,
                                          "end_token": 81,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "start_token": 81,
                                      "end_token": 81,
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n    if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }\n    const matchResult = createAgpRegExp().exec(config.modResults.contents);\n    if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }\n    return config;\n  }",
                                      "start_token": 81,
                                      "end_token": 95,
                                      "children": [
                                        {
                                          "type": "IfStatement",
                                          "label": "if (config.modResults.language !== 'groovy') {\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }",
                                          "start_token": 81,
                                          "end_token": 95,
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "config.modResults.language !== 'groovy'",
                                              "start_token": 81,
                                              "end_token": 83,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "config.modResults.language",
                                                  "start_token": 81,
                                                  "end_token": 81,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "config.modResults",
                                                      "start_token": 81,
                                                      "end_token": 81,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "config",
                                                          "start_token": 81,
                                                          "end_token": 81,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "modResults",
                                                          "start_token": 81,
                                                          "end_token": 81,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "language",
                                                      "start_token": 81,
                                                      "end_token": 81,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExclamationEqualsEqualsToken",
                                                  "label": "!==",
                                                  "start_token": 81,
                                                  "end_token": 81,
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'groovy'",
                                                  "start_token": 81,
                                                  "end_token": 83,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n      throw new Error('Cannot setup kotlin because the build.gradle is not groovy');\n    }",
                                              "start_token": 83,
                                              "end_token": 95,
                                              "children": [
                                                {
                                                  "type": "ThrowStatement",
                                                  "label": "throw new Error('Cannot setup kotlin because the build.gradle is not groovy');",
                                                  "start_token": 83,
                                                  "end_token": 95,
                                                  "children": [
                                                    {
                                                      "type": "NewExpression",
                                                      "label": "new Error('Cannot setup kotlin because the build.gradle is not groovy')",
                                                      "start_token": 83,
                                                      "end_token": 95,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Error",
                                                          "start_token": 83,
                                                          "end_token": 83,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'Cannot setup kotlin because the build.gradle is not groovy'",
                                                          "start_token": 83,
                                                          "end_token": 95,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstStatement",
                                          "label": "const matchResult = createAgpRegExp().exec(config.modResults.contents);",
                                          "start_token": 95,
                                          "end_token": 95,
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "const matchResult = createAgpRegExp().exec(config.modResults.contents)",
                                              "start_token": 95,
                                              "end_token": 95,
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "matchResult = createAgpRegExp().exec(config.modResults.contents)",
                                                  "start_token": 95,
                                                  "end_token": 95,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "matchResult",
                                                      "start_token": 95,
                                                      "end_token": 95,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "createAgpRegExp().exec(config.modResults.contents)",
                                                      "start_token": 95,
                                                      "end_token": 95,
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "createAgpRegExp().exec",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "createAgpRegExp()",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "createAgpRegExp",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "exec",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "config.modResults.contents",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "config.modResults",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "config",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "modResults",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "contents",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "label": "if (matchResult) {\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }",
                                          "start_token": 95,
                                          "end_token": 95,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "matchResult",
                                              "start_token": 95,
                                              "end_token": 95,
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n      const version = matchResult[2];\n      if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }\n    }",
                                              "start_token": 95,
                                              "end_token": 95,
                                              "children": [
                                                {
                                                  "type": "FirstStatement",
                                                  "label": "const version = matchResult[2];",
                                                  "start_token": 95,
                                                  "end_token": 95,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclarationList",
                                                      "label": "const version = matchResult[2]",
                                                      "start_token": 95,
                                                      "end_token": 95,
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "label": "version = matchResult[2]",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "version",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "ElementAccessExpression",
                                                              "label": "matchResult[2]",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "matchResult",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "FirstLiteralToken",
                                                                  "label": "2",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "label": "if (version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))) {\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }",
                                                  "start_token": 95,
                                                  "end_token": 95,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "version && semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))",
                                                      "start_token": 95,
                                                      "end_token": 95,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "version",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "AmpersandAmpersandToken",
                                                          "label": "&&",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "semver.lt(toSemVer(version), toSemVer(prop.androidAgpVersion))",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "semver.lt",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "semver",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "lt",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "toSemVer(version)",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toSemVer",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "version",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "toSemVer(prop.androidAgpVersion)",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toSemVer",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "prop.androidAgpVersion",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "prop",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "androidAgpVersion",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Block",
                                                      "label": "{\n        config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );\n      }",
                                                      "start_token": 95,
                                                      "end_token": 95,
                                                      "children": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "label": "config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        );",
                                                          "start_token": 95,
                                                          "end_token": 95,
                                                          "children": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "label": "config.modResults.contents = config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        )",
                                                              "start_token": 95,
                                                              "end_token": 95,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "config.modResults.contents",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "config.modResults",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "config",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "modResults",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "contents",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "FirstAssignment",
                                                                  "label": "=",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "config.modResults.contents.replace(\n          createAgpRegExp(),\n          (match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }\n        )",
                                                                  "start_token": 95,
                                                                  "end_token": 95,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "config.modResults.contents.replace",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "config.modResults.contents",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": [
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "config.modResults",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "config",
                                                                                  "start_token": 95,
                                                                                  "end_token": 95,
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "modResults",
                                                                                  "start_token": 95,
                                                                                  "end_token": 95,
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "contents",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "replace",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "createAgpRegExp()",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "createAgpRegExp",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "ArrowFunction",
                                                                      "label": "(match, prefix, versionPart, suffix) => {\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }",
                                                                      "start_token": 95,
                                                                      "end_token": 95,
                                                                      "children": [
                                                                        {
                                                                          "type": "Parameter",
                                                                          "label": "match",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "match",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Parameter",
                                                                          "label": "prefix",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "prefix",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Parameter",
                                                                          "label": "versionPart",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "versionPart",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "Parameter",
                                                                          "label": "suffix",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "suffix",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "EqualsGreaterThanToken",
                                                                          "label": "=>",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Block",
                                                                          "label": "{\n            return `${prefix}${prop.androidAgpVersion}${suffix}`;\n          }",
                                                                          "start_token": 95,
                                                                          "end_token": 95,
                                                                          "children": [
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "label": "return `${prefix}${prop.androidAgpVersion}${suffix}`;",
                                                                              "start_token": 95,
                                                                              "end_token": 95,
                                                                              "children": [
                                                                                {
                                                                                  "type": "TemplateExpression",
                                                                                  "label": "`${prefix}${prop.androidAgpVersion}${suffix}`",
                                                                                  "start_token": 95,
                                                                                  "end_token": 95,
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "TemplateHead",
                                                                                      "label": "`${",
                                                                                      "start_token": 95,
                                                                                      "end_token": 95,
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "TemplateSpan",
                                                                                      "label": "prefix}${",
                                                                                      "start_token": 95,
                                                                                      "end_token": 95,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "prefix",
                                                                                          "start_token": 95,
                                                                                          "end_token": 95,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "TemplateMiddle",
                                                                                          "label": "}${",
                                                                                          "start_token": 95,
                                                                                          "end_token": 95,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "TemplateSpan",
                                                                                      "label": "prop.androidAgpVersion}${",
                                                                                      "start_token": 95,
                                                                                      "end_token": 95,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "prop.androidAgpVersion",
                                                                                          "start_token": 95,
                                                                                          "end_token": 95,
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "prop",
                                                                                              "start_token": 95,
                                                                                              "end_token": 95,
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "androidAgpVersion",
                                                                                              "start_token": 95,
                                                                                              "end_token": 95,
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "TemplateMiddle",
                                                                                          "label": "}${",
                                                                                          "start_token": 95,
                                                                                          "end_token": 95,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "TemplateSpan",
                                                                                      "label": "suffix}`",
                                                                                      "start_token": 95,
                                                                                      "end_token": 95,
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "suffix",
                                                                                          "start_token": 95,
                                                                                          "end_token": 95,
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "LastTemplateToken",
                                                                                          "label": "}`",
                                                                                          "start_token": 95,
                                                                                          "end_token": 95,
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "label": "return config;",
                                          "start_token": 95,
                                          "end_token": 95,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "config",
                                              "start_token": 95,
                                              "end_token": 95,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function toSemVer(version: string): semver.SemVer {\n  return semver.coerce(version) ?? new semver.SemVer('0.0.0');\n}",
      "start_token": 95,
      "end_token": 101,
      "children": [
        {
          "type": "Identifier",
          "label": "toSemVer",
          "start_token": 95,
          "end_token": 95,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "version: string",
          "start_token": 95,
          "end_token": 95,
          "children": [
            {
              "type": "Identifier",
              "label": "version",
              "start_token": 95,
              "end_token": 95,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 95,
              "end_token": 95,
              "children": []
            }
          ]
        },
        {
          "type": "TypeReference",
          "label": "semver.SemVer",
          "start_token": 95,
          "end_token": 95,
          "children": [
            {
              "type": "FirstNode",
              "label": "semver.SemVer",
              "start_token": 95,
              "end_token": 95,
              "children": [
                {
                  "type": "Identifier",
                  "label": "semver",
                  "start_token": 95,
                  "end_token": 95,
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "SemVer",
                  "start_token": 95,
                  "end_token": 95,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  return semver.coerce(version) ?? new semver.SemVer('0.0.0');\n}",
          "start_token": 95,
          "end_token": 101,
          "children": [
            {
              "type": "ReturnStatement",
              "label": "return semver.coerce(version) ?? new semver.SemVer('0.0.0');",
              "start_token": 95,
              "end_token": 100,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "semver.coerce(version) ?? new semver.SemVer('0.0.0')",
                  "start_token": 95,
                  "end_token": 99,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "semver.coerce(version)",
                      "start_token": 95,
                      "end_token": 95,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "semver.coerce",
                          "start_token": 95,
                          "end_token": 95,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "semver",
                              "start_token": 95,
                              "end_token": 95,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "coerce",
                              "start_token": 95,
                              "end_token": 95,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "version",
                          "start_token": 95,
                          "end_token": 95,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "QuestionQuestionToken",
                      "label": "??",
                      "start_token": 95,
                      "end_token": 95,
                      "children": []
                    },
                    {
                      "type": "NewExpression",
                      "label": "new semver.SemVer('0.0.0')",
                      "start_token": 95,
                      "end_token": 99,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "semver.SemVer",
                          "start_token": 95,
                          "end_token": 95,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "semver",
                              "start_token": 95,
                              "end_token": 95,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "SemVer",
                              "start_token": 95,
                              "end_token": 95,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'0.0.0'",
                          "start_token": 95,
                          "end_token": 98,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}