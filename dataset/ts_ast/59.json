{
  "type": "SourceFile",
  "label": "import { Log } from '../utils/Log';\nimport { ViewType } from '../models/ViewType';\nimport { userFileModel } from './UserFileModel';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { selectManager } from '../common/SelectManager';\nimport photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport { screenManager } from '../common/ScreenManager';\n\nconst TAG = 'UserFileDataItem';\nconst STATUS_UNDEFINED = -1;\nconst STATUS_FALSE = 0;\nconst STATUS_TRUE = 1;\n\nexport interface DateAdded {\n  dateAdded: number;\n  viewType: ViewType;\n}\n\nexport class UserFileDataItem implements DateAdded {\n  viewType: ViewType = ViewType.ITEM;\n  readonly hashIndex: number;\n  index: number;\n  dateAdded: number = 0;\n  dateModified: number;\n  dateTaken: number;\n  status: number = MediaConstants.UNDEFINED;\n  isSelect: boolean = false;\n  uri: string;\n  orientation: number;\n  duration: number;\n  size: number;\n  width: number; // width changed by orientation\n  height: number; // height changed by orientation\n  imgWidth: number; // may be smaller than width, as width is too large\n  imgHeight: number; // may be smaller than height, as height is too large\n  path: string = '';\n  title: string;\n  displayName: string;\n  mediaType: photoAccessHelper.PhotoType;\n  favouriteStatus: number = STATUS_UNDEFINED;\n  canRotate: number = STATUS_UNDEFINED;\n  selections: string = '';\n  selectionArgs: string[] = [];\n  deviceId: string = '';\n  fileAsset: photoAccessHelper.PhotoAsset = undefined;\n  defaultThumbnail: PixelMap = undefined;\n  thumbnailArray: Map<string, PixelMap> = new Map<string, PixelMap>();\n\n  constructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }\n\n  getHashCode(): string {\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }\n\n  async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }\n\n  isLoad(): boolean {\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }\n\n  async load(isForce: boolean): Promise<void> {\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }\n\n  async update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }\n\n  async getThumbnail(width: number, height: number): Promise<PixelMap> {\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }\n\n  getAlt(): Resource {\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }\n\n  setSelect(isSelect: boolean): void {\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }\n\n  async onDelete(): Promise<boolean> {\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  async addToAlbum(albumUri:string): Promise<boolean> {\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  isDeleted(): boolean {\n    return this.status === MediaConstants.TRASHED;\n  }\n\n  async isFavor(): Promise<boolean> {\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }\n\n  async setFavor(): Promise<boolean> {\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async setName(name: string): Promise<void> {\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ViewType } from '../models/ViewType';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ViewType }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ViewType }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ViewType",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ViewType",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../models/ViewType'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { userFileModel } from './UserFileModel';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ userFileModel }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ userFileModel }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "userFileModel",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFileModel",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./UserFileModel'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { selectManager } from '../common/SelectManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ selectManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ selectManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "selectManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "selectManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/SelectManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "photoAccessHelper",
          "children": [
            {
              "type": "Identifier",
              "label": "photoAccessHelper",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.photoAccessHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from '../common/ScreenManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'UserFileDataItem';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'UserFileDataItem'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'UserFileDataItem'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'UserFileDataItem'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const STATUS_UNDEFINED = -1;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const STATUS_UNDEFINED = -1",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "STATUS_UNDEFINED = -1",
              "children": [
                {
                  "type": "Identifier",
                  "label": "STATUS_UNDEFINED",
                  "children": []
                },
                {
                  "type": "PrefixUnaryExpression",
                  "label": "-1",
                  "children": [
                    {
                      "type": "FirstLiteralToken",
                      "label": "1",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const STATUS_FALSE = 0;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const STATUS_FALSE = 0",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "STATUS_FALSE = 0",
              "children": [
                {
                  "type": "Identifier",
                  "label": "STATUS_FALSE",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const STATUS_TRUE = 1;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const STATUS_TRUE = 1",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "STATUS_TRUE = 1",
              "children": [
                {
                  "type": "Identifier",
                  "label": "STATUS_TRUE",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "1",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "InterfaceDeclaration",
      "label": "export interface DateAdded {\n  dateAdded: number;\n  viewType: ViewType;\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "DateAdded",
          "children": []
        },
        {
          "type": "PropertySignature",
          "label": "dateAdded: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "dateAdded",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertySignature",
          "label": "viewType: ViewType;",
          "children": [
            {
              "type": "Identifier",
              "label": "viewType",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "ViewType",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ViewType",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class UserFileDataItem implements DateAdded {\n  viewType: ViewType = ViewType.ITEM;\n  readonly hashIndex: number;\n  index: number;\n  dateAdded: number = 0;\n  dateModified: number;\n  dateTaken: number;\n  status: number = MediaConstants.UNDEFINED;\n  isSelect: boolean = false;\n  uri: string;\n  orientation: number;\n  duration: number;\n  size: number;\n  width: number; // width changed by orientation\n  height: number; // height changed by orientation\n  imgWidth: number; // may be smaller than width, as width is too large\n  imgHeight: number; // may be smaller than height, as height is too large\n  path: string = '';\n  title: string;\n  displayName: string;\n  mediaType: photoAccessHelper.PhotoType;\n  favouriteStatus: number = STATUS_UNDEFINED;\n  canRotate: number = STATUS_UNDEFINED;\n  selections: string = '';\n  selectionArgs: string[] = [];\n  deviceId: string = '';\n  fileAsset: photoAccessHelper.PhotoAsset = undefined;\n  defaultThumbnail: PixelMap = undefined;\n  thumbnailArray: Map<string, PixelMap> = new Map<string, PixelMap>();\n\n  constructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }\n\n  getHashCode(): string {\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }\n\n  async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }\n\n  isLoad(): boolean {\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }\n\n  async load(isForce: boolean): Promise<void> {\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }\n\n  async update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }\n\n  async getThumbnail(width: number, height: number): Promise<PixelMap> {\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }\n\n  getAlt(): Resource {\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }\n\n  setSelect(isSelect: boolean): void {\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }\n\n  async onDelete(): Promise<boolean> {\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  async addToAlbum(albumUri:string): Promise<boolean> {\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  isDeleted(): boolean {\n    return this.status === MediaConstants.TRASHED;\n  }\n\n  async isFavor(): Promise<boolean> {\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }\n\n  async setFavor(): Promise<boolean> {\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async setName(name: string): Promise<void> {\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "UserFileDataItem",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements DateAdded",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "DateAdded",
              "children": [
                {
                  "type": "Identifier",
                  "label": "DateAdded",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "viewType: ViewType = ViewType.ITEM;",
          "children": [
            {
              "type": "Identifier",
              "label": "viewType",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "ViewType",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ViewType",
                  "children": []
                }
              ]
            },
            {
              "type": "PropertyAccessExpression",
              "label": "ViewType.ITEM",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ViewType",
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "ITEM",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly hashIndex: number;",
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "hashIndex",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "index: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "index",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "dateAdded: number = 0;",
          "children": [
            {
              "type": "Identifier",
              "label": "dateAdded",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "dateModified: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "dateModified",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "dateTaken: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "dateTaken",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "status: number = MediaConstants.UNDEFINED;",
          "children": [
            {
              "type": "Identifier",
              "label": "status",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PropertyAccessExpression",
              "label": "MediaConstants.UNDEFINED",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MediaConstants",
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "UNDEFINED",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "isSelect: boolean = false;",
          "children": [
            {
              "type": "Identifier",
              "label": "isSelect",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "FalseKeyword",
              "label": "false",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "uri: string;",
          "children": [
            {
              "type": "Identifier",
              "label": "uri",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "orientation: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "orientation",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "duration: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "duration",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "size: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "size",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "width: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "width",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "height: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "height",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "imgWidth: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "imgWidth",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "imgHeight: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "imgHeight",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "path: string = '';",
          "children": [
            {
              "type": "Identifier",
              "label": "path",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "title: string;",
          "children": [
            {
              "type": "Identifier",
              "label": "title",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "displayName: string;",
          "children": [
            {
              "type": "Identifier",
              "label": "displayName",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "mediaType: photoAccessHelper.PhotoType;",
          "children": [
            {
              "type": "Identifier",
              "label": "mediaType",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoType",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoType",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoType",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "favouriteStatus: number = STATUS_UNDEFINED;",
          "children": [
            {
              "type": "Identifier",
              "label": "favouriteStatus",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "STATUS_UNDEFINED",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "canRotate: number = STATUS_UNDEFINED;",
          "children": [
            {
              "type": "Identifier",
              "label": "canRotate",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "STATUS_UNDEFINED",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "selections: string = '';",
          "children": [
            {
              "type": "Identifier",
              "label": "selections",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "selectionArgs: string[] = [];",
          "children": [
            {
              "type": "Identifier",
              "label": "selectionArgs",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "string[]",
              "children": [
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "deviceId: string = '';",
          "children": [
            {
              "type": "Identifier",
              "label": "deviceId",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "fileAsset: photoAccessHelper.PhotoAsset = undefined;",
          "children": [
            {
              "type": "Identifier",
              "label": "fileAsset",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoAsset",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Identifier",
              "label": "undefined",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "defaultThumbnail: PixelMap = undefined;",
          "children": [
            {
              "type": "Identifier",
              "label": "defaultThumbnail",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "PixelMap",
              "children": [
                {
                  "type": "Identifier",
                  "label": "PixelMap",
                  "children": []
                }
              ]
            },
            {
              "type": "Identifier",
              "label": "undefined",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "thumbnailArray: Map<string, PixelMap> = new Map<string, PixelMap>();",
          "children": [
            {
              "type": "Identifier",
              "label": "thumbnailArray",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Map<string, PixelMap>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Map",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "PixelMap",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "PixelMap",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "NewExpression",
              "label": "new Map<string, PixelMap>()",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Map",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "PixelMap",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "PixelMap",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "selections: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selections",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectionArgs: string[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectionArgs",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "string[]",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "deviceId: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "deviceId",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "index: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "index",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.selections = selections;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.selections = selections",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.selections",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "selections",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "selections",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.selectionArgs = selectionArgs;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.selectionArgs = selectionArgs",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.selectionArgs",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "selectionArgs",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "selectionArgs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.deviceId = deviceId;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.deviceId = deviceId",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.deviceId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "deviceId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "deviceId",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hashIndex = index;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hashIndex = index",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hashIndex",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hashIndex",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.index = index;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.index = index",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.index",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "index",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getHashCode(): string {\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getHashCode",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;",
                  "children": [
                    {
                      "type": "ConditionalExpression",
                      "label": "this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.status === MediaConstants.UNDEFINED",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.status",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "status",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.UNDEFINED",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "UNDEFINED",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "QuestionToken",
                          "label": "?",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'' + this.hashIndex",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "''",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.hashIndex",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "hashIndex",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ColonToken",
                          "label": ":",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.uri + this.favouriteStatus + ' ' + this.orientation + ' '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.uri + this.favouriteStatus + ' ' + this.orientation",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.uri + this.favouriteStatus + ' '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.uri + this.favouriteStatus",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.uri",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.favouriteStatus",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "favouriteStatus",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "' '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.orientation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "orientation",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "' '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isSelect",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelect",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "loadFileAsset",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return await userFileModel.getMediaItemByUri(this.uri);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await userFileModel.getMediaItemByUri(this.uri)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "userFileModel.getMediaItemByUri(this.uri)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "userFileModel.getMediaItemByUri",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "userFileModel",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getMediaItemByUri",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.uri",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "uri",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "isLoad(): boolean {\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "isLoad",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.status > MediaConstants.UNDEFINED",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.status",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "status",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.UNDEFINED",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "MediaConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "UNDEFINED",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return true;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return true;",
                          "children": [
                            {
                              "type": "TrueKeyword",
                              "label": "true",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return false;",
                  "children": [
                    {
                      "type": "FalseKeyword",
                      "label": "false",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async load(isForce: boolean): Promise<void> {\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "load",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isForce: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isForce",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'load ' + this.status);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'load ' + this.status)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'load ' + this.status",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'load '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.status",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "status",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.status",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "status",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "ParenthesizedExpression",
                          "label": "(isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)",
                          "children": [
                            {
                              "type": "ConditionalExpression",
                              "label": "isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "isForce",
                                  "children": []
                                },
                                {
                                  "type": "QuestionToken",
                                  "label": "?",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.PART_LOADED",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PART_LOADED",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ColonToken",
                                  "label": ":",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.UNDEFINED",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "UNDEFINED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset = await this.loadFileAsset();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset = await this.loadFileAsset()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset = await this.loadFileAsset()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.loadFileAsset()",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.loadFileAsset()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.loadFileAsset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "loadFileAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (fileAsset != null) {\n      this.update(fileAsset);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "fileAsset != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "fileAsset",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.update(fileAsset);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.update(fileAsset);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.update(fileAsset)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.update",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "update",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "fileAsset",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return;",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "update",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "fileAsset: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fileAsset",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.fileAsset = fileAsset;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.fileAsset = fileAsset",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.fileAsset",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "fileAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.uri = fileAsset.uri;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.uri = fileAsset.uri",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.uri",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "fileAsset.uri",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.displayName = fileAsset.displayName;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.displayName = fileAsset.displayName",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.displayName",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "displayName",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "fileAsset.displayName",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "displayName",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.mediaType = fileAsset.photoType;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.mediaType = fileAsset.photoType",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.mediaType",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "mediaType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "fileAsset.photoType",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "photoType",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.width = screenManager.getWinWidth();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width = screenManager.getWinWidth()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.width",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "screenManager.getWinWidth()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "screenManager.getWinWidth",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "screenManager",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getWinWidth",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.height = screenManager.getWinHeight();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.height = screenManager.getWinHeight()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.height",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "screenManager.getWinHeight()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "screenManager.getWinHeight",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "screenManager",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getWinHeight",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.orientation = MediaConstants.ROTATE_NONE;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.orientation = MediaConstants.ROTATE_NONE",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.orientation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "orientation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.ROTATE_NONE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "MediaConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ROTATE_NONE",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.orientation",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "orientation",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString())",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fileAsset.get",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "photoAccessHelper.PhotoKeys.ORIENTATION.toString()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.PhotoKeys.ORIENTATION.toString",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.ORIENTATION",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAccessHelper",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PhotoKeys",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "ORIENTATION",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "toString",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NumberKeyword",
                                      "label": "number",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'orientation ' + this.orientation);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'orientation ' + this.orientation)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'orientation ' + this.orientation",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'orientation '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.orientation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "orientation",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get orientation ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get orientation ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get orientation ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get orientation '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.duration",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "duration",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString())",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fileAsset.get",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "photoAccessHelper.PhotoKeys.DURATION.toString()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.PhotoKeys.DURATION.toString",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.DURATION",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAccessHelper",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PhotoKeys",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "DURATION",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "toString",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NumberKeyword",
                                      "label": "number",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'duration ' + this.duration);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'duration ' + this.duration)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'duration ' + this.duration",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'duration '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.duration",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "duration",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get duration ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get duration ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get duration ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get duration '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.orientation === MediaConstants.ROTATE_ONCE",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.orientation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "orientation",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ROTATE_ONCE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ROTATE_ONCE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.orientation === MediaConstants.ROTATE_THIRD",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.orientation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "orientation",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ROTATE_THIRD",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ROTATE_THIRD",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.width",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "width",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AsExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString())",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fileAsset.get",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.HEIGHT.toString()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.HEIGHT.toString",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys.HEIGHT",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAccessHelper.PhotoKeys",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoAccessHelper",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "PhotoKeys",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "HEIGHT",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "toString",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NumberKeyword",
                                              "label": "number",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.height",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "height",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AsExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString())",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fileAsset.get",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.WIDTH.toString()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.WIDTH.toString",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys.WIDTH",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAccessHelper.PhotoKeys",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoAccessHelper",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "PhotoKeys",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WIDTH",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "toString",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NumberKeyword",
                                              "label": "number",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.width",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "width",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AsExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString())",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fileAsset.get",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.WIDTH.toString()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.WIDTH.toString",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys.WIDTH",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAccessHelper.PhotoKeys",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoAccessHelper",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "PhotoKeys",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WIDTH",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "toString",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NumberKeyword",
                                              "label": "number",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.height",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "height",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AsExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString())",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "fileAsset.get",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.HEIGHT.toString()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.HEIGHT.toString",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys.HEIGHT",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAccessHelper.PhotoKeys",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoAccessHelper",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "PhotoKeys",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "HEIGHT",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "toString",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NumberKeyword",
                                              "label": "number",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'width ' + this.width);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'width ' + this.width)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'width ' + this.width",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'width '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.width",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "width",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'height ' + this.height);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'height ' + this.height)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'height ' + this.height",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'height '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.height",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "height",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get width height ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get width height ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get width height ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get width height '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.title",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "title",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString())",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fileAsset.get",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "photoAccessHelper.PhotoKeys.TITLE.toString()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.PhotoKeys.TITLE.toString",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.TITLE",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAccessHelper",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PhotoKeys",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "TITLE",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "toString",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "StringKeyword",
                                      "label": "string",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'title ' + this.title);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'title ' + this.title)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'title ' + this.title",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'title '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.title",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "title",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get title ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get title ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get title ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get title '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.dateAdded",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "dateAdded",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000",
                                  "children": [
                                    {
                                      "type": "AsExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString())",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAsset.get",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "get",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "photoAccessHelper.PhotoKeys.DATE_ADDED.toString()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.DATE_ADDED.toString",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.DATE_ADDED",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoAccessHelper",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "PhotoKeys",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DATE_ADDED",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "toString",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "NumberKeyword",
                                          "label": "number",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1000",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.dateModified",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "dateModified",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000",
                                  "children": [
                                    {
                                      "type": "AsExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString())",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAsset.get",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "get",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.DATE_MODIFIED",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoAccessHelper",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "PhotoKeys",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DATE_MODIFIED",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "toString",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "NumberKeyword",
                                          "label": "number",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1000",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.dateTaken",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "dateTaken",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000",
                                  "children": [
                                    {
                                      "type": "AsExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString())",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAsset.get",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "get",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.DATE_TAKEN.toString",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.DATE_TAKEN",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoAccessHelper",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "PhotoKeys",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DATE_TAKEN",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "toString",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "NumberKeyword",
                                          "label": "number",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1000",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'dateAdded ' + this.dateAdded);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'dateAdded ' + this.dateAdded)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'dateAdded ' + this.dateAdded",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'dateAdded '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.dateAdded",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "dateAdded",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get date ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get date ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get date ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get date '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.favouriteStatus",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "favouriteStatus",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ConditionalExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE",
                                  "children": [
                                    {
                                      "type": "AsExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString())",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAsset.get",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fileAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "get",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "photoAccessHelper.PhotoKeys.FAVORITE.toString()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.FAVORITE.toString",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys.FAVORITE",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoAccessHelper.PhotoKeys",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoAccessHelper",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "PhotoKeys",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "FAVORITE",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "toString",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BooleanKeyword",
                                          "label": "boolean",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "QuestionToken",
                                      "label": "?",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "STATUS_TRUE",
                                      "children": []
                                    },
                                    {
                                      "type": "ColonToken",
                                      "label": ":",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "STATUS_FALSE",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'favouriteStatus ' + this.favouriteStatus",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'favouriteStatus '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.favouriteStatus",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "favouriteStatus",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get favouriteStatus ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get favouriteStatus '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.size",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "size",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString())",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fileAsset.get",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "photoAccessHelper.PhotoKeys.SIZE.toString()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.PhotoKeys.SIZE.toString",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAccessHelper.PhotoKeys.SIZE",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoAccessHelper.PhotoKeys",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAccessHelper",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PhotoKeys",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "SIZE",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "toString",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NumberKeyword",
                                      "label": "number",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'size ' + this.size);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'size ' + this.size)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'size ' + this.size",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'size '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.size",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "size",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get favouriteStatus ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get favouriteStatus '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "size",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{ width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "width: MediaConstants.DEFAULT_SIZE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.DEFAULT_SIZE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DEFAULT_SIZE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "height: MediaConstants.DEFAULT_SIZE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.DEFAULT_SIZE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DEFAULT_SIZE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "fileAsset != null && this.defaultThumbnail == undefined",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "fileAsset != null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "ExclamationEqualsToken",
                              "label": "!=",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.defaultThumbnail == undefined",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.defaultThumbnail",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "defaultThumbnail",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsToken",
                              "label": "==",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }",
                      "children": [
                        {
                          "type": "TryStatement",
                          "label": "try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }",
                          "children": [
                            {
                              "type": "Block",
                              "label": "{\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.defaultThumbnail = await this.fileAsset.getThumbnail(size);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.defaultThumbnail = await this.fileAsset.getThumbnail(size)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.defaultThumbnail",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "defaultThumbnail",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await this.fileAsset.getThumbnail(size)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.fileAsset.getThumbnail(size)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.fileAsset.getThumbnail",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.fileAsset",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fileAsset",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getThumbnail",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "size",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CatchClause",
                              "label": "catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "err",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "err",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }",
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err))",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Log.error",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Log",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "error",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TAG",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'getThumbnail error: ' + JSON.stringify(err)",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'getThumbnail error: '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "JSON.stringify(err)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "JSON.stringify",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "JSON",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "stringify",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isSelect = selectManager.isSelect(this.uri, this.isSelect);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isSelect = selectManager.isSelect(this.uri, this.isSelect)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isSelect",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isSelect",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "selectManager.isSelect(this.uri, this.isSelect)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "selectManager.isSelect",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "selectManager",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelect",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.uri",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "uri",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isSelect",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelect",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.imgWidth = this.width;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.imgWidth = this.width",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.imgWidth",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "imgWidth",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.width",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.imgHeight = this.height;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.imgHeight = this.height",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.imgHeight",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "imgHeight",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.height",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width > 0 && this.height > 0",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.width > 0",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.width",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "GreaterThanToken",
                              "label": ">",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.height > 0",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.height",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "GreaterThanToken",
                              "label": ">",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.status = MediaConstants.LOADED;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.status = MediaConstants.LOADED;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.status = MediaConstants.LOADED",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.status",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "status",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.LOADED",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "LOADED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.status = MediaConstants.PART_LOADED;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.status = MediaConstants.PART_LOADED;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.status = MediaConstants.PART_LOADED",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.status",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "status",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.PART_LOADED",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PART_LOADED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getThumbnail(width: number, height: number): Promise<PixelMap> {\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getThumbnail",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "width: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "width",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "height: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "height",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<PixelMap>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "PixelMap",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "PixelMap",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'getThumbnail ' + this.status);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'getThumbnail ' + this.status)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'getThumbnail ' + this.status",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'getThumbnail '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.status",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "status",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.status !== MediaConstants.LOADED",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.status",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "status",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsEqualsToken",
                              "label": "!==",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.LOADED",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "LOADED",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.status !== MediaConstants.PART_LOADED",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.status",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "status",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ExclamationEqualsEqualsToken",
                              "label": "!==",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.PART_LOADED",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "PART_LOADED",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, 'getThumbnail fail as status: ' + this.status)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getThumbnail fail as status: ' + this.status",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getThumbnail fail as status: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.status",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "status",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return undefined;",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "width === MediaConstants.DEFAULT_SIZE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.DEFAULT_SIZE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DEFAULT_SIZE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "height === MediaConstants.DEFAULT_SIZE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.DEFAULT_SIZE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DEFAULT_SIZE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return this.defaultThumbnail;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return this.defaultThumbnail;",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.defaultThumbnail",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "defaultThumbnail",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let newThumbnail: PixelMap = undefined;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let newThumbnail: PixelMap = undefined",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "newThumbnail: PixelMap = undefined",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newThumbnail",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "PixelMap",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "PixelMap",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let size = { width: width, height: height };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let size = { width: width, height: height }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "size = { width: width, height: height }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "size",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{ width: width, height: height }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "width: width",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "height: height",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString())",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString())",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cacheThumbnail",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.thumbnailArray.get(width.toString() + height.toString())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.thumbnailArray.get",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.thumbnailArray",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "thumbnailArray",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "width.toString() + height.toString()",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "width.toString()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "width.toString",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "width",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toString",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "height.toString()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "height.toString",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "height",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toString",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "cacheThumbnail != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "cacheThumbnail",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return cacheThumbnail;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return cacheThumbnail;",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cacheThumbnail",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.fileAsset != undefined",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.fileAsset",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "undefined",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }",
                      "children": [
                        {
                          "type": "TryStatement",
                          "label": "try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }",
                          "children": [
                            {
                              "type": "Block",
                              "label": "{\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "newThumbnail = await this.fileAsset.getThumbnail(size);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "newThumbnail = await this.fileAsset.getThumbnail(size)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "newThumbnail",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await this.fileAsset.getThumbnail(size)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.fileAsset.getThumbnail(size)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.fileAsset.getThumbnail",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.fileAsset",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fileAsset",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getThumbnail",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "size",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.thumbnailArray.set",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.thumbnailArray",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "thumbnailArray",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "set",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "width.toString() + height.toString()",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "width.toString()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "width.toString",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "width",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "toString",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "height.toString()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "height.toString",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "height",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "toString",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "newThumbnail",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CatchClause",
                              "label": "catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "err",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "err",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }",
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err))",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Log.error",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Log",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "error",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TAG",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'getThumbnail error: ' + JSON.stringify(err)",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'getThumbnail error: '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "JSON.stringify(err)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "JSON.stringify",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "JSON",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "stringify",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return newThumbnail;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "newThumbnail",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getAlt(): Resource {\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getAlt",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Resource",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Resource",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.mediaType === photoAccessHelper.PhotoType.VIDEO",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.mediaType",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "mediaType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "photoAccessHelper.PhotoType.VIDEO",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "photoAccessHelper.PhotoType",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoAccessHelper",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "PhotoType",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "VIDEO",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return $r('app.media.alt_video_placeholder');\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return $r('app.media.alt_video_placeholder');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "$r('app.media.alt_video_placeholder')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.media.alt_video_placeholder'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return $r('app.media.alt_placeholder');\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return $r('app.media.alt_placeholder');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "$r('app.media.alt_placeholder')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.media.alt_placeholder'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setSelect(isSelect: boolean): void {\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setSelect",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isSelect: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelect",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.isSelect = isSelect;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isSelect = isSelect",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isSelect",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isSelect",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "isSelect",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "selectManager.setSelect(this.uri, this.isSelect);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "selectManager.setSelect(this.uri, this.isSelect)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "selectManager.setSelect",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "selectManager",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "setSelect",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.uri",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isSelect",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isSelect",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async onDelete(): Promise<boolean> {\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "onDelete",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<boolean>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }",
              "children": [
                {
                  "type": "TryStatement",
                  "label": "try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await userFileModel.deleteOne(this.uri);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await userFileModel.deleteOne(this.uri)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "userFileModel.deleteOne(this.uri)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "userFileModel.deleteOne",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "userFileModel",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "deleteOne",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.uri",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "uri",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "selectManager.deleteSelect(this.uri);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "selectManager.deleteSelect(this.uri)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "selectManager.deleteSelect",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "selectManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "deleteSelect",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.uri",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.status = MediaConstants.TRASHED;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.status = MediaConstants.TRASHED",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.status",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "status",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.TRASHED",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TRASHED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return true;",
                          "children": [
                            {
                              "type": "TrueKeyword",
                              "label": "true",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'onDelete ' + this.index + ' error: ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'onDelete ' + this.index + ' error: '",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'onDelete ' + this.index",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'onDelete '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.index",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "index",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "' error: '",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return false;",
                              "children": [
                                {
                                  "type": "FalseKeyword",
                                  "label": "false",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async addToAlbum(albumUri:string): Promise<boolean> {\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "addToAlbum",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumUri:string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumUri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<boolean>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }",
              "children": [
                {
                  "type": "TryStatement",
                  "label": "try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "userFileModel.addPhotoToAlbumByUserFileMgr",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "userFileModel",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "addPhotoToAlbumByUserFileMgr",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumUri",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.uri",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "uri",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "selectManager.deleteSelect(this.uri);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "selectManager.deleteSelect(this.uri)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "selectManager.deleteSelect",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "selectManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "deleteSelect",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.uri",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.status = MediaConstants.TRASHED;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.status = MediaConstants.TRASHED",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.status",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "status",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.TRASHED",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TRASHED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return true;",
                          "children": [
                            {
                              "type": "TrueKeyword",
                              "label": "true",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'addToAlbum ' + this.index + ' error: '",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'addToAlbum ' + this.index",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'addToAlbum '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.index",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "index",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "' error: '",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "label": "return false;",
                              "children": [
                                {
                                  "type": "FalseKeyword",
                                  "label": "false",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "isDeleted(): boolean {\n    return this.status === MediaConstants.TRASHED;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "isDeleted",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    return this.status === MediaConstants.TRASHED;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.status === MediaConstants.TRASHED;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.status === MediaConstants.TRASHED",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.status",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "status",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.TRASHED",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "MediaConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "TRASHED",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async isFavor(): Promise<boolean> {\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "isFavor",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<boolean>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.favouriteStatus === STATUS_UNDEFINED",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.favouriteStatus",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "favouriteStatus",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "STATUS_UNDEFINED",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let fileAsset = await this.loadFileAsset();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fileAsset = await this.loadFileAsset()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fileAsset = await this.loadFileAsset()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fileAsset",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await this.loadFileAsset()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.loadFileAsset()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.loadFileAsset",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "loadFileAsset",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TryStatement",
                          "label": "try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }",
                          "children": [
                            {
                              "type": "Block",
                              "label": "{\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.favouriteStatus",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "favouriteStatus",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "(fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean)",
                                              "children": [
                                                {
                                                  "type": "AsExpression",
                                                  "label": "fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString())",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "fileAsset.get",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "fileAsset",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "photoAccessHelper.PhotoKeys.FAVORITE.toString()",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAccessHelper.PhotoKeys.FAVORITE.toString",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "photoAccessHelper.PhotoKeys.FAVORITE",
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "photoAccessHelper.PhotoKeys",
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "photoAccessHelper",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "PhotoKeys",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "FAVORITE",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toString",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BooleanKeyword",
                                                      "label": "boolean",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "STATUS_TRUE",
                                              "children": []
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "STATUS_FALSE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CatchClause",
                              "label": "catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "err",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "err",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }",
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Log.error(TAG, 'isFavor error: ' + JSON.stringify(err))",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Log.error",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Log",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "error",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TAG",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'isFavor error: ' + JSON.stringify(err)",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'isFavor error: '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "JSON.stringify(err)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "JSON.stringify",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "JSON",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "stringify",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return this.favouriteStatus === STATUS_TRUE;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.favouriteStatus === STATUS_TRUE",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.favouriteStatus",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "favouriteStatus",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "STATUS_TRUE",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async setFavor(): Promise<boolean> {\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "setFavor",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<boolean>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let status = !(await this.isFavor());",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let status = !(await this.isFavor())",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "status = !(await this.isFavor())",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "status",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!(await this.isFavor())",
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(await this.isFavor())",
                                  "children": [
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await this.isFavor()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.isFavor()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.isFavor",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "isFavor",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let fileAsset = await this.loadFileAsset();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fileAsset = await this.loadFileAsset()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fileAsset = await this.loadFileAsset()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fileAsset",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await this.loadFileAsset()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.loadFileAsset()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.loadFileAsset",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "loadFileAsset",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "await fileAsset.setFavorite(status);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await fileAsset.setFavorite(status)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fileAsset.setFavorite(status)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fileAsset.setFavorite",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fileAsset",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "setFavorite",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "status",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.favouriteStatus",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "favouriteStatus",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ConditionalExpression",
                                  "label": "status ? STATUS_TRUE : STATUS_FALSE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "status",
                                      "children": []
                                    },
                                    {
                                      "type": "QuestionToken",
                                      "label": "?",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "STATUS_TRUE",
                                      "children": []
                                    },
                                    {
                                      "type": "ColonToken",
                                      "label": ":",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "STATUS_FALSE",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return true;",
                          "children": [
                            {
                              "type": "TrueKeyword",
                              "label": "true",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      return false;\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      return false;\n    }",
                          "children": [
                            {
                              "type": "ReturnStatement",
                              "label": "return false;",
                              "children": [
                                {
                                  "type": "FalseKeyword",
                                  "label": "false",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async setName(name: string): Promise<void> {\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "setName",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset = await this.loadFileAsset();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset = await this.loadFileAsset()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset = await this.loadFileAsset()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.loadFileAsset()",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.loadFileAsset()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.loadFileAsset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "loadFileAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let displayName = fileAsset.displayName;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let displayName = fileAsset.displayName",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "displayName = fileAsset.displayName",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "displayName",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "fileAsset.displayName",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fileAsset",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "displayName",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let index = displayName.lastIndexOf('.');",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let index = displayName.lastIndexOf('.')",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "index = displayName.lastIndexOf('.')",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "index",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "displayName.lastIndexOf('.')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "displayName.lastIndexOf",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "displayName",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastIndexOf",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'.'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "displayName = name + displayName.slice(index);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "displayName = name + displayName.slice(index)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "displayName",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "name + displayName.slice(index)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "name",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "displayName.slice(index)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "displayName.slice",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "displayName",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "slice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "index",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.displayName = displayName;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.displayName = displayName",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.displayName",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "displayName",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "displayName",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.title = name;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.title = name",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.title",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "title",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "fileAsset.set",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fileAsset",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "set",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "photoAccessHelper.PhotoKeys.TITLE.toString()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.PhotoKeys.TITLE.toString",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.PhotoKeys.TITLE",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.PhotoKeys",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "PhotoKeys",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TITLE",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "toString",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "await fileAsset.commitModify();",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await fileAsset.commitModify()",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fileAsset.commitModify()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fileAsset.commitModify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fileAsset",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "commitModify",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'setName error: ' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'setName error: ' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'setName error: ' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'setName error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}