{
  "type": "SourceFile",
  "label": "import Ability from '@ohos.app.ability.UIAbility';\nimport type Want from '@ohos.app.ability.Want';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport type Window from '@ohos.window';\nimport Logger from '../model/Logger';\n\nconst TAG: string = 'MainAbility';\n\nexport default class MainAbility extends Ability {\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n  }\n\n  onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: Window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.getMainWindow().then((win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    })\n    this.onLoadContent(windowStage, 'pages/Index');\n  }\n\n  onLoadContent(windowStage: Window.WindowStage, page: string): void {\n    windowStage.loadContent(page, (): void => {\n    });\n\n  }\n\n  onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    Logger.info(TAG, 'Ability onWindowStageDestroy');\n  }\n\n  onForeground(): void {\n    // Ability has brought to foreground\n    Logger.info(TAG, 'Ability onForeground');\n  }\n\n  onBackground(): void {\n    // Ability has back to background\n    Logger.info(TAG, 'Ability onBackground');\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import Ability from '@ohos.app.ability.UIAbility';",
      "children": [
        {
          "type": "ImportClause",
          "label": "Ability",
          "children": [
            {
              "type": "Identifier",
              "label": "Ability",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.UIAbility'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type Want from '@ohos.app.ability.Want';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type Want",
          "children": [
            {
              "type": "Identifier",
              "label": "Want",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.Want'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type AbilityConstant from '@ohos.app.ability.AbilityConstant';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type AbilityConstant",
          "children": [
            {
              "type": "Identifier",
              "label": "AbilityConstant",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.AbilityConstant'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type Window from '@ohos.window';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type Window",
          "children": [
            {
              "type": "Identifier",
              "label": "Window",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.window'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import Logger from '../model/Logger';",
      "children": [
        {
          "type": "ImportClause",
          "label": "Logger",
          "children": [
            {
              "type": "Identifier",
              "label": "Logger",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../model/Logger'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG: string = 'MainAbility';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG: string = 'MainAbility'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG: string = 'MainAbility'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'MainAbility'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export default class MainAbility extends Ability {\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n  }\n\n  onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: Window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.getMainWindow().then((win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    })\n    this.onLoadContent(windowStage, 'pages/Index');\n  }\n\n  onLoadContent(windowStage: Window.WindowStage, page: string): void {\n    windowStage.loadContent(page, (): void => {\n    });\n\n  }\n\n  onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    Logger.info(TAG, 'Ability onWindowStageDestroy');\n  }\n\n  onForeground(): void {\n    // Ability has brought to foreground\n    Logger.info(TAG, 'Ability onForeground');\n  }\n\n  onBackground(): void {\n    // Ability has back to background\n    Logger.info(TAG, 'Ability onBackground');\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "DefaultKeyword",
          "label": "default",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "MainAbility",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends Ability",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "Ability",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Ability",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onCreate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "want: Want",
              "children": [
                {
                  "type": "Identifier",
                  "label": "want",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Want",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Want",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "launchParam: AbilityConstant.LaunchParam",
              "children": [
                {
                  "type": "Identifier",
                  "label": "launchParam",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "AbilityConstant.LaunchParam",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "AbilityConstant.LaunchParam",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AbilityConstant",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "LaunchParam",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.info(TAG, 'Ability onCreate');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.info(TAG, 'Ability onCreate')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onCreate'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.debug(TAG, `want param: ${JSON.stringify(want)}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`want param: ${JSON.stringify(want)}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`want param: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(want)}`",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(want)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "want",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`launchParam: ${JSON.stringify(launchParam)}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`launchParam: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(launchParam)}`",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(launchParam)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "launchParam",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onDestroy",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Logger.info(TAG, 'Ability onDestroy');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.info(TAG, 'Ability onDestroy');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.info(TAG, 'Ability onDestroy')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onDestroy'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onWindowStageCreate(windowStage: Window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.getMainWindow().then((win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    })\n    this.onLoadContent(windowStage, 'pages/Index');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onWindowStageCreate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "windowStage: Window.WindowStage",
              "children": [
                {
                  "type": "Identifier",
                  "label": "windowStage",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Window.WindowStage",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "Window.WindowStage",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Window",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "WindowStage",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.getMainWindow().then((win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    })\n    this.onLoadContent(windowStage, 'pages/Index');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.info(TAG, 'Ability onWindowStageCreate');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.info(TAG, 'Ability onWindowStageCreate')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onWindowStageCreate'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "windowStage.getMainWindow().then((win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "windowStage.getMainWindow().then((win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "windowStage.getMainWindow().then",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "windowStage.getMainWindow()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "windowStage.getMainWindow",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "windowStage",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getMainWindow",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "then",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(win: Window.Window): void => {\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "win: Window.Window",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "win",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "Window.Window",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "Window.Window",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Window",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Window",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });\n      win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      });",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "win.setWindowLayoutFullScreen(true).then((): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      })",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "win.setWindowLayoutFullScreen(true).then",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "win.setWindowLayoutFullScreen(true)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "win.setWindowLayoutFullScreen",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "win",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setWindowLayoutFullScreen",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "TrueKeyword",
                                                  "label": "true",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "then",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "(): void => {\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      }",
                                          "children": [
                                            {
                                              "type": "VoidKeyword",
                                              "label": "void",
                                              "children": []
                                            },
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n        win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });\n      }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        });",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "win.setWindowSystemBarEnable(['navigation']).then((): void => {\n        })",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "win.setWindowSystemBarEnable(['navigation']).then",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "win.setWindowSystemBarEnable(['navigation'])",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "win.setWindowSystemBarEnable",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "win",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "setWindowSystemBarEnable",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ArrayLiteralExpression",
                                                                  "label": "['navigation']",
                                                                  "children": [
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'navigation'",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "then",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "ArrowFunction",
                                                          "label": "(): void => {\n        }",
                                                          "children": [
                                                            {
                                                              "type": "VoidKeyword",
                                                              "label": "void",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "EqualsGreaterThanToken",
                                                              "label": "=>",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Block",
                                                              "label": "{\n        }",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      });",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then((): void => {\n      })",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }).then",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "win.setWindowSystemBarProperties({\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      })",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "win.setWindowSystemBarProperties",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "win",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setWindowSystemBarProperties",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ObjectLiteralExpression",
                                                  "label": "{\n        navigationBarColor: '#00000000',\n        navigationBarContentColor: '#B3B3B3'\n      }",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAssignment",
                                                      "label": "navigationBarColor: '#00000000'",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "navigationBarColor",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'#00000000'",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAssignment",
                                                      "label": "navigationBarContentColor: '#B3B3B3'",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "navigationBarContentColor",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'#B3B3B3'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "then",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "(): void => {\n      }",
                                          "children": [
                                            {
                                              "type": "VoidKeyword",
                                              "label": "void",
                                              "children": []
                                            },
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n      }",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.onLoadContent(windowStage, 'pages/Index');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.onLoadContent(windowStage, 'pages/Index')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onLoadContent",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onLoadContent",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "windowStage",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'pages/Index'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onLoadContent(windowStage: Window.WindowStage, page: string): void {\n    windowStage.loadContent(page, (): void => {\n    });\n\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onLoadContent",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "windowStage: Window.WindowStage",
              "children": [
                {
                  "type": "Identifier",
                  "label": "windowStage",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Window.WindowStage",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "Window.WindowStage",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Window",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "WindowStage",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "page: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "page",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    windowStage.loadContent(page, (): void => {\n    });\n\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "windowStage.loadContent(page, (): void => {\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "windowStage.loadContent(page, (): void => {\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "windowStage.loadContent",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "windowStage",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "loadContent",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "page",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(): void => {\n    }",
                          "children": [
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n    }",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    Logger.info(TAG, 'Ability onWindowStageDestroy');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onWindowStageDestroy",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // Main window is destroyed, release UI related resources\n    Logger.info(TAG, 'Ability onWindowStageDestroy');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.info(TAG, 'Ability onWindowStageDestroy');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.info(TAG, 'Ability onWindowStageDestroy')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onWindowStageDestroy'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onForeground(): void {\n    // Ability has brought to foreground\n    Logger.info(TAG, 'Ability onForeground');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onForeground",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // Ability has brought to foreground\n    Logger.info(TAG, 'Ability onForeground');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.info(TAG, 'Ability onForeground');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.info(TAG, 'Ability onForeground')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onForeground'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onBackground(): void {\n    // Ability has back to background\n    Logger.info(TAG, 'Ability onBackground');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onBackground",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // Ability has back to background\n    Logger.info(TAG, 'Ability onBackground');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Logger.info(TAG, 'Ability onBackground');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Logger.info(TAG, 'Ability onBackground')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Logger.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Logger",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onBackground'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}