{
  "type": "SourceFile",
  "label": "import fileIO from '@ohos.fileio';\nimport { stashOrGetObject } from '../utils/SingleInstanceUtils';\nimport { Log } from '../utils/Log';\nimport { hiSysEventDataQueryTimedOut } from '../utils/hisysEventUtil';\nimport photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport dataSharePredicates from '@ohos.data.dataSharePredicates';\nimport { MediaConstants } from '../constants/MediaConstants'\nimport { getSystemAlbumDisplayName } from './UserFileDataHelper';\nimport { SimpleAlbumDataItem } from '../common/SimpleAlbumDataItem';\n\nconst TAG = 'UserFileModel';\n\nexport class UserFileModelItem {\n  fileAsset: photoAccessHelper.PhotoAsset;\n  counts: number;\n}\n\nclass UserFileModel {\n  private userFileMgr: photoAccessHelper.PhotoAccessHelper = undefined;\n\n  constructor() {\n  }\n\n  onCreate(context): void {\n    if (this.userFileMgr == undefined) {\n      this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);\n    }\n  }\n\n  getUserFileMgr(): photoAccessHelper.PhotoAccessHelper {\n    return this.userFileMgr;\n  }\n\n  async createOne(displayName: string, albumUri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'createOne displayName:' + displayName + ' albumUri: ' + albumUri);\n    let fileAsset = await this.userFileMgr.createAsset(displayName, albumUri);\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    await album.addAssets([fileAsset]);\n    return fileAsset;\n  }\n\n  async getUserAlbumItemByUri(uri: string): Promise<photoAccessHelper.Album> {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }\n\n  async copyOne(source: photoAccessHelper.PhotoAsset, target: photoAccessHelper.PhotoAsset): Promise<void> {\n    Log.info(TAG, 'copy start: src:' + source.uri + ' target: ' + target.uri);\n    let fd: Number = await this.openAsset('R', source);\n    if (fd <= 0) {\n      throw new Error('fd is invalid');\n    }\n\n    let targetFd: Number = await this.openAsset('RW', target);\n    if (targetFd <= 0) {\n      throw new Error('targetFd is invalid');\n    }\n\n    await fileIO.copyFile(fd, targetFd);\n\n    await this.closeAsset(fd, source);\n    await this.closeAsset(targetFd, target);\n\n    Log.debug(TAG, 'copy end');\n  }\n\n  async deleteOne(uri: string): Promise<void> {\n    Log.debug(TAG, 'deleteAsset uri: ' + uri);\n    try {\n      await this.userFileMgr.deleteAssets([uri]);\n    } catch (err) {\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }\n  }\n\n  async recover(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      Log.debug(TAG, 'album  get');\n      album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }\n\n  async permanentDelete(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'permanentDelete');\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }\n\n  async createAlbum(albumName: string): Promise<SimpleAlbumDataItem> {\n    let newAlbum: SimpleAlbumDataItem = undefined;\n    try {\n      let album = await this.userFileMgr.createAlbum(albumName);\n      newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);\n    } catch (err) {\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }\n    return newAlbum;\n  }\n\n  async deleteAlbum(albumName: string): Promise<void> {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }\n    } catch (err) {\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }\n\n  async deleteAll(fetchOption: photoAccessHelper.FetchOptions): Promise<void> {\n    Log.info(TAG, 'deleteAll');\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOption);\n      Log.debug(TAG, 'deleteAll getPhotoAssets');\n      let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');\n      let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();\n      clearTimeout(deleteAllGetAllObject);\n      for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }\n      Log.debug(TAG, 'deleteAll getFirstObject');\n    } catch (err) {\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'deleteAll finish');\n  }\n\n  async getAllMediaItems(): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);\n      Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());\n      for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }\n\n  async getAllMovingPhotoItems(): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());\n      for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }\n\n  async getAllMediaItemsByType(type: number, subType: number, albumFetchOption, fileFetchOption): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAllMediaItemsByUserFile');\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.info(TAG, 'fileAssets: ' + fileAssets.length);\n    return fileAssets;\n  }\n\n  async getMediaItemByUriFromTrash(uri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'getMediaItemByUriFromTrash');\n    Log.info(TAG, 'uri:' + uri);\n    let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    try {\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let albumAsset = await albumFetchResult.getFirstObject();\n      let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n      try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n    return fileAsset;\n  }\n\n  async getMediaItemByUri(uri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'getMediaItemByUri');\n    Log.info(TAG, 'uri:' + uri);\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null\n    try {\n      Log.info(TAG, 'fetchResult start');\n      fetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());\n      fileAsset = await fetchResult.getFirstObject();\n      Log.info(TAG, 'fileAsset ' + fileAsset.displayName);\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return fileAsset;\n  }\n\n  async getMediaItemCountsByDisplayName(displayName: string): Promise<number> {\n    Log.info(TAG, 'getMediaItemCountsByDisplayName');\n    let count = 0;\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.DISPLAY_NAME, displayName);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');\n      count = await fetchFileResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'getMediaItemCountsByDisplayName finish');\n    return count;\n  }\n\n  async getUserAlbumCountByName(albumName: string): Promise<number> {\n    Log.info(TAG, 'getUserAlbumCountByName');\n    Log.info(TAG, 'album_name：' + albumName);\n    let count = 0;\n    let systemAlbums = await getSystemAlbumDisplayName();\n    if (systemAlbums.indexOf(albumName) >= 0) {\n      return 1;\n    }\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      count = fetchResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumCountByName finish');\n    return count;\n  }\n\n  async getActivePeers(): Promise<photoAccessHelper.PeerInfo[]> {\n    Log.info(TAG, 'getActivePeers');\n    let peers: photoAccessHelper.PeerInfo[] = [];\n    try {\n      let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')\n      peers = await this.userFileMgr.getActivePeers();\n      clearTimeout(getActivePeers);\n    } catch (err) {\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getActivePeers finish');\n    return peers;\n  }\n\n  async getUserAlbumByName(albumName: string): Promise<photoAccessHelper.Album> {\n    Log.info(TAG, 'getUserAlbumByName');\n    Log.info(TAG, 'album_name' + albumName);\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    let album = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumByName finish');\n    return album;\n  }\n\n  async getAlbums(fetchOption: photoAccessHelper.FetchOptions): Promise<photoAccessHelper.Album[]> {\n    Log.info(TAG, 'getAlbums');\n    let albums: photoAccessHelper.Album[] = [];\n    try {\n      albums = await this.userFileMgr.getAlbums(fetchOption);\n      Log.info(TAG, 'getAlbums albums ' + albums.getCounts());\n    } catch (err) {\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getAlbums finish');\n    return albums;\n  }\n\n  async openAsset(mode: string, fileAsset: photoAccessHelper.PhotoAsset): Promise<number> {\n    Log.debug(TAG, 'openAsset start');\n    let fd: number = await fileAsset.open(mode);\n    Log.info(TAG, 'openAsset end. fd: ' + fd);\n    if (fd <= 0) {\n      Log.info(TAG, 'openAsset Fail');\n    }\n    return fd;\n  }\n\n  async closeAsset(fd: number, fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    Log.debug(TAG, 'closeAsset start');\n    await fileAsset.close(fd);\n  }\n\n  async addPhotoToAlbumByUserFileMgr(albumUri: string, uri: string): Promise<void> {\n    Log.info(TAG, 'addPhotoAssetsDemoPromise');\n    Log.info(TAG, 'albumUri' + albumUri);\n    Log.info(TAG, 'mediaItem.uri' + uri);\n    try {\n      let album = await this.getUserAlbumItemByUri(albumUri);\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });\n    } catch (err) {\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }\n  }\n}\n\nexport let userFileModel: UserFileModel = stashOrGetObject<UserFileModel>(new UserFileModel(), TAG);\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import fileIO from '@ohos.fileio';",
      "children": [
        {
          "type": "ImportClause",
          "label": "fileIO",
          "children": [
            {
              "type": "Identifier",
              "label": "fileIO",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.fileio'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { stashOrGetObject } from '../utils/SingleInstanceUtils';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ stashOrGetObject }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ stashOrGetObject }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "stashOrGetObject",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "stashOrGetObject",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/SingleInstanceUtils'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { hiSysEventDataQueryTimedOut } from '../utils/hisysEventUtil';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ hiSysEventDataQueryTimedOut }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ hiSysEventDataQueryTimedOut }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "hiSysEventDataQueryTimedOut",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "hiSysEventDataQueryTimedOut",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/hisysEventUtil'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "photoAccessHelper",
          "children": [
            {
              "type": "Identifier",
              "label": "photoAccessHelper",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.photoAccessHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import dataSharePredicates from '@ohos.data.dataSharePredicates';",
      "children": [
        {
          "type": "ImportClause",
          "label": "dataSharePredicates",
          "children": [
            {
              "type": "Identifier",
              "label": "dataSharePredicates",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.data.dataSharePredicates'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants'",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { getSystemAlbumDisplayName } from './UserFileDataHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ getSystemAlbumDisplayName }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ getSystemAlbumDisplayName }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "getSystemAlbumDisplayName",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "getSystemAlbumDisplayName",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./UserFileDataHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { SimpleAlbumDataItem } from '../common/SimpleAlbumDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ SimpleAlbumDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ SimpleAlbumDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "SimpleAlbumDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "SimpleAlbumDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/SimpleAlbumDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'UserFileModel';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'UserFileModel'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'UserFileModel'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'UserFileModel'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class UserFileModelItem {\n  fileAsset: photoAccessHelper.PhotoAsset;\n  counts: number;\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "UserFileModelItem",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "fileAsset: photoAccessHelper.PhotoAsset;",
          "children": [
            {
              "type": "Identifier",
              "label": "fileAsset",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoAsset",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "counts: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "counts",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "class UserFileModel {\n  private userFileMgr: photoAccessHelper.PhotoAccessHelper = undefined;\n\n  constructor() {\n  }\n\n  onCreate(context): void {\n    if (this.userFileMgr == undefined) {\n      this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);\n    }\n  }\n\n  getUserFileMgr(): photoAccessHelper.PhotoAccessHelper {\n    return this.userFileMgr;\n  }\n\n  async createOne(displayName: string, albumUri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'createOne displayName:' + displayName + ' albumUri: ' + albumUri);\n    let fileAsset = await this.userFileMgr.createAsset(displayName, albumUri);\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    await album.addAssets([fileAsset]);\n    return fileAsset;\n  }\n\n  async getUserAlbumItemByUri(uri: string): Promise<photoAccessHelper.Album> {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }\n\n  async copyOne(source: photoAccessHelper.PhotoAsset, target: photoAccessHelper.PhotoAsset): Promise<void> {\n    Log.info(TAG, 'copy start: src:' + source.uri + ' target: ' + target.uri);\n    let fd: Number = await this.openAsset('R', source);\n    if (fd <= 0) {\n      throw new Error('fd is invalid');\n    }\n\n    let targetFd: Number = await this.openAsset('RW', target);\n    if (targetFd <= 0) {\n      throw new Error('targetFd is invalid');\n    }\n\n    await fileIO.copyFile(fd, targetFd);\n\n    await this.closeAsset(fd, source);\n    await this.closeAsset(targetFd, target);\n\n    Log.debug(TAG, 'copy end');\n  }\n\n  async deleteOne(uri: string): Promise<void> {\n    Log.debug(TAG, 'deleteAsset uri: ' + uri);\n    try {\n      await this.userFileMgr.deleteAssets([uri]);\n    } catch (err) {\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }\n  }\n\n  async recover(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      Log.debug(TAG, 'album  get');\n      album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }\n\n  async permanentDelete(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'permanentDelete');\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }\n\n  async createAlbum(albumName: string): Promise<SimpleAlbumDataItem> {\n    let newAlbum: SimpleAlbumDataItem = undefined;\n    try {\n      let album = await this.userFileMgr.createAlbum(albumName);\n      newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);\n    } catch (err) {\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }\n    return newAlbum;\n  }\n\n  async deleteAlbum(albumName: string): Promise<void> {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }\n    } catch (err) {\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }\n\n  async deleteAll(fetchOption: photoAccessHelper.FetchOptions): Promise<void> {\n    Log.info(TAG, 'deleteAll');\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOption);\n      Log.debug(TAG, 'deleteAll getPhotoAssets');\n      let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');\n      let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();\n      clearTimeout(deleteAllGetAllObject);\n      for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }\n      Log.debug(TAG, 'deleteAll getFirstObject');\n    } catch (err) {\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'deleteAll finish');\n  }\n\n  async getAllMediaItems(): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);\n      Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());\n      for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }\n\n  async getAllMovingPhotoItems(): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());\n      for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }\n\n  async getAllMediaItemsByType(type: number, subType: number, albumFetchOption, fileFetchOption): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAllMediaItemsByUserFile');\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.info(TAG, 'fileAssets: ' + fileAssets.length);\n    return fileAssets;\n  }\n\n  async getMediaItemByUriFromTrash(uri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'getMediaItemByUriFromTrash');\n    Log.info(TAG, 'uri:' + uri);\n    let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    try {\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let albumAsset = await albumFetchResult.getFirstObject();\n      let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n      try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n    return fileAsset;\n  }\n\n  async getMediaItemByUri(uri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'getMediaItemByUri');\n    Log.info(TAG, 'uri:' + uri);\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null\n    try {\n      Log.info(TAG, 'fetchResult start');\n      fetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());\n      fileAsset = await fetchResult.getFirstObject();\n      Log.info(TAG, 'fileAsset ' + fileAsset.displayName);\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return fileAsset;\n  }\n\n  async getMediaItemCountsByDisplayName(displayName: string): Promise<number> {\n    Log.info(TAG, 'getMediaItemCountsByDisplayName');\n    let count = 0;\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.DISPLAY_NAME, displayName);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');\n      count = await fetchFileResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'getMediaItemCountsByDisplayName finish');\n    return count;\n  }\n\n  async getUserAlbumCountByName(albumName: string): Promise<number> {\n    Log.info(TAG, 'getUserAlbumCountByName');\n    Log.info(TAG, 'album_name：' + albumName);\n    let count = 0;\n    let systemAlbums = await getSystemAlbumDisplayName();\n    if (systemAlbums.indexOf(albumName) >= 0) {\n      return 1;\n    }\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      count = fetchResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumCountByName finish');\n    return count;\n  }\n\n  async getActivePeers(): Promise<photoAccessHelper.PeerInfo[]> {\n    Log.info(TAG, 'getActivePeers');\n    let peers: photoAccessHelper.PeerInfo[] = [];\n    try {\n      let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')\n      peers = await this.userFileMgr.getActivePeers();\n      clearTimeout(getActivePeers);\n    } catch (err) {\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getActivePeers finish');\n    return peers;\n  }\n\n  async getUserAlbumByName(albumName: string): Promise<photoAccessHelper.Album> {\n    Log.info(TAG, 'getUserAlbumByName');\n    Log.info(TAG, 'album_name' + albumName);\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    let album = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumByName finish');\n    return album;\n  }\n\n  async getAlbums(fetchOption: photoAccessHelper.FetchOptions): Promise<photoAccessHelper.Album[]> {\n    Log.info(TAG, 'getAlbums');\n    let albums: photoAccessHelper.Album[] = [];\n    try {\n      albums = await this.userFileMgr.getAlbums(fetchOption);\n      Log.info(TAG, 'getAlbums albums ' + albums.getCounts());\n    } catch (err) {\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getAlbums finish');\n    return albums;\n  }\n\n  async openAsset(mode: string, fileAsset: photoAccessHelper.PhotoAsset): Promise<number> {\n    Log.debug(TAG, 'openAsset start');\n    let fd: number = await fileAsset.open(mode);\n    Log.info(TAG, 'openAsset end. fd: ' + fd);\n    if (fd <= 0) {\n      Log.info(TAG, 'openAsset Fail');\n    }\n    return fd;\n  }\n\n  async closeAsset(fd: number, fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    Log.debug(TAG, 'closeAsset start');\n    await fileAsset.close(fd);\n  }\n\n  async addPhotoToAlbumByUserFileMgr(albumUri: string, uri: string): Promise<void> {\n    Log.info(TAG, 'addPhotoAssetsDemoPromise');\n    Log.info(TAG, 'albumUri' + albumUri);\n    Log.info(TAG, 'mediaItem.uri' + uri);\n    try {\n      let album = await this.getUserAlbumItemByUri(albumUri);\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });\n    } catch (err) {\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }\n  }\n}",
      "children": [
        {
          "type": "Identifier",
          "label": "UserFileModel",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "private userFileMgr: photoAccessHelper.PhotoAccessHelper = undefined;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "userFileMgr",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoAccessHelper",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoAccessHelper",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoAccessHelper",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Identifier",
              "label": "undefined",
              "children": []
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor() {\n  }",
          "children": [
            {
              "type": "Block",
              "label": "{\n  }",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onCreate(context): void {\n    if (this.userFileMgr == undefined) {\n      this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onCreate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "context",
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.userFileMgr == undefined) {\n      this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.userFileMgr == undefined) {\n      this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.userFileMgr == undefined",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.userFileMgr",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFileMgr",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "undefined",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.userFileMgr = photoAccessHelper.getPhotoAccessHelper(context)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.userFileMgr",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "userFileMgr",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "photoAccessHelper.getPhotoAccessHelper(context)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.getPhotoAccessHelper",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getPhotoAccessHelper",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "context",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getUserFileMgr(): photoAccessHelper.PhotoAccessHelper {\n    return this.userFileMgr;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getUserFileMgr",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoAccessHelper",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoAccessHelper",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoAccessHelper",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return this.userFileMgr;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this.userFileMgr;",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.userFileMgr",
                      "children": [
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "userFileMgr",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async createOne(displayName: string, albumUri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'createOne displayName:' + displayName + ' albumUri: ' + albumUri);\n    let fileAsset = await this.userFileMgr.createAsset(displayName, albumUri);\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    await album.addAssets([fileAsset]);\n    return fileAsset;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "createOne",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "displayName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "displayName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albumUri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumUri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'createOne displayName:' + displayName + ' albumUri: ' + albumUri);\n    let fileAsset = await this.userFileMgr.createAsset(displayName, albumUri);\n    let album = await this.getUserAlbumItemByUri(albumUri);\n    await album.addAssets([fileAsset]);\n    return fileAsset;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'createOne displayName:' + displayName + ' albumUri: ' + albumUri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'createOne displayName:' + displayName + ' albumUri: ' + albumUri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'createOne displayName:' + displayName + ' albumUri: ' + albumUri",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'createOne displayName:' + displayName + ' albumUri: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'createOne displayName:' + displayName",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'createOne displayName:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "displayName",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "' albumUri: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumUri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset = await this.userFileMgr.createAsset(displayName, albumUri);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset = await this.userFileMgr.createAsset(displayName, albumUri)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset = await this.userFileMgr.createAsset(displayName, albumUri)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.userFileMgr.createAsset(displayName, albumUri)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.userFileMgr.createAsset(displayName, albumUri)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.userFileMgr.createAsset",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "userFileMgr",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "createAsset",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "displayName",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumUri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let album = await this.getUserAlbumItemByUri(albumUri);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let album = await this.getUserAlbumItemByUri(albumUri)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "album = await this.getUserAlbumItemByUri(albumUri)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "album",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.getUserAlbumItemByUri(albumUri)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.getUserAlbumItemByUri(albumUri)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.getUserAlbumItemByUri",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getUserAlbumItemByUri",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumUri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await album.addAssets([fileAsset]);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await album.addAssets([fileAsset])",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "album.addAssets([fileAsset])",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "album.addAssets",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "album",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "addAssets",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[fileAsset]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fileAsset",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fileAsset;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fileAsset",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getUserAlbumItemByUri(uri: string): Promise<photoAccessHelper.Album> {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getUserAlbumItemByUri",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.Album>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.Album",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.Album",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "Album",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let album: photoAccessHelper.Album = null;\n    try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return album;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.Album>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let album: photoAccessHelper.Album = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let album: photoAccessHelper.Album = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "album: photoAccessHelper.Album = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "album",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.Album",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "Album",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'getUserAlbumItemByUri');\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getUserAlbumItemByUri');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getUserAlbumItemByUri')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'getUserAlbumItemByUri'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.URI, uri)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.AlbumKeys.URI",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.AlbumKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "URI",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "uri",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "EMPTY_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.USER",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.USER_GENERIC",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER_GENERIC",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'get Album fetchResult, count: ' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'get Album fetchResult, count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult.getCount() > 0",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        album = fetchResult.getFirstObject();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "album = fetchResult.getFirstObject();",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "album = fetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "album",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "fetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fetchResult.getFirstObject",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getFirstObject",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get Album fetchResult failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get Album fetchResult failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return album;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "album",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async copyOne(source: photoAccessHelper.PhotoAsset, target: photoAccessHelper.PhotoAsset): Promise<void> {\n    Log.info(TAG, 'copy start: src:' + source.uri + ' target: ' + target.uri);\n    let fd: Number = await this.openAsset('R', source);\n    if (fd <= 0) {\n      throw new Error('fd is invalid');\n    }\n\n    let targetFd: Number = await this.openAsset('RW', target);\n    if (targetFd <= 0) {\n      throw new Error('targetFd is invalid');\n    }\n\n    await fileIO.copyFile(fd, targetFd);\n\n    await this.closeAsset(fd, source);\n    await this.closeAsset(targetFd, target);\n\n    Log.debug(TAG, 'copy end');\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "copyOne",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "source: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "source",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "target: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "target",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'copy start: src:' + source.uri + ' target: ' + target.uri);\n    let fd: Number = await this.openAsset('R', source);\n    if (fd <= 0) {\n      throw new Error('fd is invalid');\n    }\n\n    let targetFd: Number = await this.openAsset('RW', target);\n    if (targetFd <= 0) {\n      throw new Error('targetFd is invalid');\n    }\n\n    await fileIO.copyFile(fd, targetFd);\n\n    await this.closeAsset(fd, source);\n    await this.closeAsset(targetFd, target);\n\n    Log.debug(TAG, 'copy end');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'copy start: src:' + source.uri + ' target: ' + target.uri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'copy start: src:' + source.uri + ' target: ' + target.uri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'copy start: src:' + source.uri + ' target: ' + target.uri",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'copy start: src:' + source.uri + ' target: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'copy start: src:' + source.uri",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'copy start: src:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "source.uri",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "source",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "uri",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "' target: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "target.uri",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "target",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "uri",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fd: Number = await this.openAsset('R', source);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fd: Number = await this.openAsset('R', source)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fd: Number = await this.openAsset('R', source)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fd",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Number",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.openAsset('R', source)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.openAsset('R', source)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.openAsset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "openAsset",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'R'",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "source",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (fd <= 0) {\n      throw new Error('fd is invalid');\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "fd <= 0",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "fd",
                          "children": []
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new Error('fd is invalid');\n    }",
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new Error('fd is invalid');",
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new Error('fd is invalid')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Error",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'fd is invalid'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let targetFd: Number = await this.openAsset('RW', target);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let targetFd: Number = await this.openAsset('RW', target)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "targetFd: Number = await this.openAsset('RW', target)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "targetFd",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Number",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.openAsset('RW', target)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.openAsset('RW', target)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.openAsset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "openAsset",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'RW'",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "target",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (targetFd <= 0) {\n      throw new Error('targetFd is invalid');\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "targetFd <= 0",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "targetFd",
                          "children": []
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      throw new Error('targetFd is invalid');\n    }",
                      "children": [
                        {
                          "type": "ThrowStatement",
                          "label": "throw new Error('targetFd is invalid');",
                          "children": [
                            {
                              "type": "NewExpression",
                              "label": "new Error('targetFd is invalid')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Error",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'targetFd is invalid'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await fileIO.copyFile(fd, targetFd);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await fileIO.copyFile(fd, targetFd)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "fileIO.copyFile(fd, targetFd)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "fileIO.copyFile",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fileIO",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "copyFile",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "fd",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "targetFd",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.closeAsset(fd, source);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.closeAsset(fd, source)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.closeAsset(fd, source)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.closeAsset",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "closeAsset",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "fd",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "source",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await this.closeAsset(targetFd, target);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await this.closeAsset(targetFd, target)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.closeAsset(targetFd, target)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.closeAsset",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "closeAsset",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "targetFd",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "target",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'copy end');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'copy end')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'copy end'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async deleteOne(uri: string): Promise<void> {\n    Log.debug(TAG, 'deleteAsset uri: ' + uri);\n    try {\n      await this.userFileMgr.deleteAssets([uri]);\n    } catch (err) {\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "deleteOne",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'deleteAsset uri: ' + uri);\n    try {\n      await this.userFileMgr.deleteAssets([uri]);\n    } catch (err) {\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'deleteAsset uri: ' + uri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'deleteAsset uri: ' + uri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'deleteAsset uri: ' + uri",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'deleteAsset uri: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      await this.userFileMgr.deleteAssets([uri]);\n    } catch (err) {\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      await this.userFileMgr.deleteAssets([uri]);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await this.userFileMgr.deleteAssets([uri]);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await this.userFileMgr.deleteAssets([uri])",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.userFileMgr.deleteAssets([uri])",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.userFileMgr.deleteAssets",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "userFileMgr",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "deleteAssets",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ArrayLiteralExpression",
                                      "label": "[uri]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "uri",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'deleteOne with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'deleteOne with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'deleteOne with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'deleteOne with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'deleteOne with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async recover(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      Log.debug(TAG, 'album  get');\n      album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "recover",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "fileAsset: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fileAsset",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      Log.debug(TAG, 'album  get');\n      album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let albumFetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumFetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumFetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumFetchResult",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      Log.debug(TAG, 'album  get');\n      album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      Log.debug(TAG, 'album  get');\n      album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'recoverPhotoAssetsDemoPromise:' + fileAsset.displayName",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'recoverPhotoAssetsDemoPromise:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fileAsset.displayName",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fileAsset",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "displayName",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albumFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.SYSTEM",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SYSTEM",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.TRASH",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TRASH",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let album = await albumFetchResult.getFirstObject();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let album = await albumFetchResult.getFirstObject()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "album = await albumFetchResult.getFirstObject()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "album",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await albumFetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "albumFetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumFetchResult.getFirstObject",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getFirstObject",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'album  get');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'album  get')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'album  get'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      });",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch((err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }).catch",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "album.recoverAssets([fileAsset]).then(() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      })",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "album.recoverAssets([fileAsset]).then",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "album.recoverAssets([fileAsset])",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "album.recoverAssets",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "album",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "recoverAssets",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ArrayLiteralExpression",
                                                  "label": "[fileAsset]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAsset",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "then",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "() => {\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }",
                                          "children": [
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n        Log.debug(TAG, 'album recoverPhotoAssets successfully');\n      }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.debug(TAG, 'album recoverPhotoAssets successfully');",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.debug(TAG, 'album recoverPhotoAssets successfully')",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.debug",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "debug",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'album recoverPhotoAssets successfully'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "catch",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(err) => {\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      }",
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "err",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Log.info(TAG, 'album recoverPhotoAssets failed with error: ' + err)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Log.info",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Log",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "info",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'album recoverPhotoAssets failed with error: ' + err",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'album recoverPhotoAssets failed with error: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'recoverPhotoAssetsDemoPromise failed with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'recoverPhotoAssetsDemoPromise failed with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'recoverPhotoAssetsDemoPromise failed with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albumFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albumFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        albumFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "albumFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "albumFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "albumFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async permanentDelete(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'permanentDelete');\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "permanentDelete",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "fileAsset: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fileAsset",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let albumFetchResult = null;\n    try {\n      Log.debug(TAG, 'permanentDelete');\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let albumFetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumFetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumFetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumFetchResult",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.debug(TAG, 'permanentDelete');\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });\n    } catch (err) {\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.debug(TAG, 'permanentDelete');\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let album = await albumFetchResult.getFirstObject();\n      album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'permanentDelete');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'permanentDelete')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'permanentDelete'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albumFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.SYSTEM",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SYSTEM",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.TRASH",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TRASH",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let album = await albumFetchResult.getFirstObject();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let album = await albumFetchResult.getFirstObject()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "album = await albumFetchResult.getFirstObject()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "album",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await albumFetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "albumFetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumFetchResult.getFirstObject",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getFirstObject",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      });",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch((err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }).catch",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "album.deleteAssets([fileAsset]).then(() => {\n        Log.debug('album deletePhotoAssets successfully');\n      })",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "album.deleteAssets([fileAsset]).then",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "album.deleteAssets([fileAsset])",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "album.deleteAssets",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "album",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "deleteAssets",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ArrayLiteralExpression",
                                                  "label": "[fileAsset]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAsset",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "then",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "() => {\n        Log.debug('album deletePhotoAssets successfully');\n      }",
                                          "children": [
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n        Log.debug('album deletePhotoAssets successfully');\n      }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.debug('album deletePhotoAssets successfully');",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.debug('album deletePhotoAssets successfully')",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.debug",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "debug",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'album deletePhotoAssets successfully'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "catch",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(err) => {\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      }",
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "err",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Log.error(TAG, 'album deletePhotoAssets failed with error: ' + err)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Log.error",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Log",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "error",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'album deletePhotoAssets failed with error: ' + err",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'album deletePhotoAssets failed with error: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'permanentDelete failed with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'permanentDelete failed with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'permanentDelete failed with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'permanentDelete failed with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'permanentDelete failed with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albumFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albumFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        albumFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "albumFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "albumFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "albumFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async createAlbum(albumName: string): Promise<SimpleAlbumDataItem> {\n    let newAlbum: SimpleAlbumDataItem = undefined;\n    try {\n      let album = await this.userFileMgr.createAlbum(albumName);\n      newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);\n    } catch (err) {\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }\n    return newAlbum;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "createAlbum",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<SimpleAlbumDataItem>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "SimpleAlbumDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "SimpleAlbumDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let newAlbum: SimpleAlbumDataItem = undefined;\n    try {\n      let album = await this.userFileMgr.createAlbum(albumName);\n      newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);\n    } catch (err) {\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }\n    return newAlbum;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let newAlbum: SimpleAlbumDataItem = undefined;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let newAlbum: SimpleAlbumDataItem = undefined",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "newAlbum: SimpleAlbumDataItem = undefined",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newAlbum",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "SimpleAlbumDataItem",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "SimpleAlbumDataItem",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let album = await this.userFileMgr.createAlbum(albumName);\n      newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);\n    } catch (err) {\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let album = await this.userFileMgr.createAlbum(albumName);\n      newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let album = await this.userFileMgr.createAlbum(albumName);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let album = await this.userFileMgr.createAlbum(albumName)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "album = await this.userFileMgr.createAlbum(albumName)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "album",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await this.userFileMgr.createAlbum(albumName)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.userFileMgr.createAlbum(albumName)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr.createAlbum",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.userFileMgr",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFileMgr",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "createAlbum",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "albumName",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "newAlbum = new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "newAlbum",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "NewExpression",
                                  "label": "new SimpleAlbumDataItem(MediaConstants.ALBUM_ID_USER, albumName, album.albumUri,\n        '', '', MediaConstants.ALBUM_TYPE_USER, MediaConstants.ALBUM_SUBTYPE_USER_GENERIC)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "SimpleAlbumDataItem",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_ID_USER",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_ID_USER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumName",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "album.albumUri",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "album",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumUri",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "''",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "''",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_TYPE_USER",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_TYPE_USER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_SUBTYPE_USER_GENERIC",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_SUBTYPE_USER_GENERIC",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'createAlbum failed with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'createAlbum failed with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'createAlbum failed with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'createAlbum failed with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'createAlbum failed with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return newAlbum;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "newAlbum",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async deleteAlbum(albumName: string): Promise<void> {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }\n    } catch (err) {\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "deleteAlbum",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }\n    } catch (err) {\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.Album>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }\n    } catch (err) {\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.AlbumKeys.ALBUM_NAME",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.AlbumKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ALBUM_NAME",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumName",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "EMPTY_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.USER",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.USER_GENERIC",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER_GENERIC",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < fetchResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let albumAsset = await fetchResult.getObjectByPosition(i);\n        Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);\n        Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);\n        this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let albumAsset = await fetchResult.getObjectByPosition(i);",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let albumAsset = await fetchResult.getObjectByPosition(i)",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "albumAsset = await fetchResult.getObjectByPosition(i)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "AwaitExpression",
                                              "label": "await fetchResult.getObjectByPosition(i)",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "fetchResult.getObjectByPosition(i)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "fetchResult.getObjectByPosition",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getObjectByPosition",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'deleteAlbum albumUri' + albumAsset.albumUri)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'deleteAlbum albumUri' + albumAsset.albumUri",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'deleteAlbum albumUri'",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumUri",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumUri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'deleteAlbum albumName' + albumAsset.albumName)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'deleteAlbum albumName' + albumAsset.albumName",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'deleteAlbum albumName'",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumAsset.albumName",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumAsset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumName",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        });",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch((err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        })",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }).catch",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.userFileMgr.deleteAlbums([albumAsset]).then(() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        })",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.userFileMgr.deleteAlbums([albumAsset]).then",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this.userFileMgr.deleteAlbums([albumAsset])",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.userFileMgr.deleteAlbums",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.userFileMgr",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "userFileMgr",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "deleteAlbums",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "ArrayLiteralExpression",
                                                          "label": "[albumAsset]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "albumAsset",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "then",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ArrowFunction",
                                                  "label": "() => {\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }",
                                                  "children": [
                                                    {
                                                      "type": "EqualsGreaterThanToken",
                                                      "label": "=>",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Block",
                                                      "label": "{\n          Log.info(TAG, 'deletePhotoAlbumsPromise successfully');\n        }",
                                                      "children": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "label": "Log.info(TAG, 'deletePhotoAlbumsPromise successfully');",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Log.info(TAG, 'deletePhotoAlbumsPromise successfully')",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "Log.info",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "Log",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "info",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TAG",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringLiteral",
                                                                  "label": "'deletePhotoAlbumsPromise successfully'",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "catch",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "(err) => {\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        }",
                                          "children": [
                                            {
                                              "type": "Parameter",
                                              "label": "err",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "err",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n          Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);\n        }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.error(TAG, 'deletePhotoAlbumsPromise failed with err: ' + err)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.error",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "error",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'deletePhotoAlbumsPromise failed with err: ' + err",
                                                          "children": [
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'deletePhotoAlbumsPromise failed with err: '",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "err",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'deletePhotoAlbumsPromise failed with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'deletePhotoAlbumsPromise failed with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'deletePhotoAlbumsPromise failed with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async deleteAll(fetchOption: photoAccessHelper.FetchOptions): Promise<void> {\n    Log.info(TAG, 'deleteAll');\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOption);\n      Log.debug(TAG, 'deleteAll getPhotoAssets');\n      let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');\n      let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();\n      clearTimeout(deleteAllGetAllObject);\n      for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }\n      Log.debug(TAG, 'deleteAll getFirstObject');\n    } catch (err) {\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'deleteAll finish');\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "deleteAll",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "fetchOption: photoAccessHelper.FetchOptions",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fetchOption",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.FetchOptions",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.FetchOptions",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "FetchOptions",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'deleteAll');\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOption);\n      Log.debug(TAG, 'deleteAll getPhotoAssets');\n      let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');\n      let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();\n      clearTimeout(deleteAllGetAllObject);\n      for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }\n      Log.debug(TAG, 'deleteAll getFirstObject');\n    } catch (err) {\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'deleteAll finish');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'deleteAll');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'deleteAll')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'deleteAll'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchFileResult: photoAccessHelper.FetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchFileResult: photoAccessHelper.FetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchFileResult: photoAccessHelper.FetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchFileResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOption);\n      Log.debug(TAG, 'deleteAll getPhotoAssets');\n      let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');\n      let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();\n      clearTimeout(deleteAllGetAllObject);\n      for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }\n      Log.debug(TAG, 'deleteAll getFirstObject');\n    } catch (err) {\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOption);\n      Log.debug(TAG, 'deleteAll getPhotoAssets');\n      let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');\n      let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();\n      clearTimeout(deleteAllGetAllObject);\n      for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }\n      Log.debug(TAG, 'deleteAll getFirstObject');\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchFileResult = await this.userFileMgr.getAssets(fetchOption);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchFileResult = await this.userFileMgr.getAssets(fetchOption)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchFileResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAssets(fetchOption)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAssets(fetchOption)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAssets",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOption",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'deleteAll getPhotoAssets');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'deleteAll getPhotoAssets')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'deleteAll getPhotoAssets'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject');",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject')",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "deleteAllGetAllObject = hiSysEventDataQueryTimedOut('deleteAllGetAllObject')",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "deleteAllGetAllObject",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "hiSysEventDataQueryTimedOut('deleteAllGetAllObject')",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hiSysEventDataQueryTimedOut",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'deleteAllGetAllObject'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fileAssets: photoAccessHelper.PhotoAsset[] = await fetchFileResult.getAllObject()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fileAssets",
                                      "children": []
                                    },
                                    {
                                      "type": "ArrayType",
                                      "label": "photoAccessHelper.PhotoAsset[]",
                                      "children": [
                                        {
                                          "type": "TypeReference",
                                          "label": "photoAccessHelper.PhotoAsset",
                                          "children": [
                                            {
                                              "type": "FirstNode",
                                              "label": "photoAccessHelper.PhotoAsset",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "PhotoAsset",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await fetchFileResult.getAllObject()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "fetchFileResult.getAllObject()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fetchFileResult.getAllObject",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fetchFileResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getAllObject",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "clearTimeout(deleteAllGetAllObject);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "clearTimeout(deleteAllGetAllObject)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "clearTimeout",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "deleteAllGetAllObject",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0;i < fileAssets.length; i++) {\n        await this.deleteOne(fileAssets[i].uri);\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < fileAssets.length",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "fileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fileAssets",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        await this.deleteOne(fileAssets[i].uri);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "await this.deleteOne(fileAssets[i].uri);",
                                  "children": [
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await this.deleteOne(fileAssets[i].uri)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.deleteOne(fileAssets[i].uri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.deleteOne",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "deleteOne",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fileAssets[i].uri",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "fileAssets[i]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fileAssets",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'deleteAll getFirstObject');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'deleteAll getFirstObject')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'deleteAll getFirstObject'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'deleteAll error:' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'deleteAll error:' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'deleteAll error:' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'deleteAll error:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchFileResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchFileResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchFileResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchFileResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchFileResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchFileResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchFileResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'deleteAll finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'deleteAll finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'deleteAll finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getAllMediaItems(): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);\n      Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());\n      for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAllMediaItems",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.PhotoAsset[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.PhotoAsset",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PhotoAsset",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);\n      Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());\n      for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAssets: photoAccessHelper.PhotoAsset[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAssets",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "photoAccessHelper.PhotoAsset[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoFetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);\n      Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());\n      for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);\n      Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());\n      for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.orderByDesc",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "orderByDesc",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.PhotoKeys.DATE_ADDED",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.PhotoKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DATE_ADDED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "emptyFetchOption = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "emptyFetchOption",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult = await this.userFileMgr.getAssets(emptyFetchOption)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAssets(emptyFetchOption)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAssets(emptyFetchOption)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAssets",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "emptyFetchOption",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getAllMediaItems count: ' + photoFetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getAllMediaItems count: ' + photoFetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getAllMediaItems count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0;i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < photoFetchResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "photoFetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoFetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoFetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fileAssets.push(await photoFetchResult.getObjectByPosition(i));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fileAssets.push(await photoFetchResult.getObjectByPosition(i))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fileAssets.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAssets",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await photoFetchResult.getObjectByPosition(i)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "photoFetchResult.getObjectByPosition(i)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoFetchResult.getObjectByPosition",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoFetchResult",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getObjectByPosition",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getAllMediaItems failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getAllMediaItems failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getAllMediaItems failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getAllMediaItems failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getAllMediaItems failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        photoFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "photoFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fileAssets;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fileAssets",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getAllMovingPhotoItems(): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());\n      for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAllMovingPhotoItems",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.PhotoAsset[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.PhotoAsset",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PhotoAsset",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());\n      for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }\n    return fileAssets;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAssets: photoAccessHelper.PhotoAsset[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAssets",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "photoAccessHelper.PhotoAsset[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoFetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());\n      for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    } catch (err) {\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    } finally {\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);\n      predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n      let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());\n      for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(MediaConstants.PHOTO_SUBTYPE, MediaConstants.MOVING_PHOTO)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.PHOTO_SUBTYPE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PHOTO_SUBTYPE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.MOVING_PHOTO",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MOVING_PHOTO",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.orderByDesc",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "orderByDesc",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.PhotoKeys.DATE_ADDED",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.PhotoKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DATE_ADDED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions: photoAccessHelper.FetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "photoAccessHelper.FetchOptions",
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "photoAccessHelper.FetchOptions",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoAccessHelper",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "FetchOptions",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "photoFetchResult = await this.userFileMgr.getAssets(fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult = await this.userFileMgr.getAssets(fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAssets(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAssets(fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAssets",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getAllMovingPhotoItems count: ' + photoFetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getAllMovingPhotoItems count: ' + photoFetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getAllMovingPhotoItems count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0; i < photoFetchResult.getCount(); i++) {\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < photoFetchResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "photoFetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoFetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoFetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fileAssets.push(await photoFetchResult.getObjectByPosition(i));\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fileAssets.push(await photoFetchResult.getObjectByPosition(i));",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fileAssets.push(await photoFetchResult.getObjectByPosition(i))",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fileAssets.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fileAssets",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await photoFetchResult.getObjectByPosition(i)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "photoFetchResult.getObjectByPosition(i)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoFetchResult.getObjectByPosition",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoFetchResult",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getObjectByPosition",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getAllMovingPhotoItems failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getAllMovingPhotoItems failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getAllMovingPhotoItems failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (photoFetchResult != null) {\n        photoFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        photoFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "photoFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "photoFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fileAssets;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fileAssets",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getAllMediaItemsByType(type: number, subType: number, albumFetchOption, fileFetchOption): Promise<photoAccessHelper.PhotoAsset[]> {\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAllMediaItemsByUserFile');\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.info(TAG, 'fileAssets: ' + fileAssets.length);\n    return fileAssets;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAllMediaItemsByType",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "type: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "type",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "subType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "subType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albumFetchOption",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumFetchOption",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "fileFetchOption",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fileFetchOption",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.PhotoAsset[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.PhotoAsset",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PhotoAsset",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let fileAssets: photoAccessHelper.PhotoAsset[] = [];\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    try {\n      Log.info(TAG, 'getAllMediaItemsByUserFile');\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.info(TAG, 'fileAssets: ' + fileAssets.length);\n    return fileAssets;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAssets: photoAccessHelper.PhotoAsset[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAssets: photoAccessHelper.PhotoAsset[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAssets",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "photoAccessHelper.PhotoAsset[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.Album>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.info(TAG, 'getAllMediaItemsByUserFile');\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'getAllMediaItemsByUserFile');\n      Log.info(TAG, 'type:' + type);\n      Log.info(TAG, 'subType:' + subType);\n      if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }\n      Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());\n      for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getAllMediaItemsByUserFile');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getAllMediaItemsByUserFile')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'getAllMediaItemsByUserFile'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'type:' + type);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'type:' + type)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'type:' + type",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'type:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "type",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'subType:' + subType);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'subType:' + subType)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'subType:' + subType",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'subType:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "subType",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (type === photoAccessHelper.AlbumType.USER && albumFetchOption != null) {\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      } else {\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "type === photoAccessHelper.AlbumType.USER && albumFetchOption != null",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "type === photoAccessHelper.AlbumType.USER",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "type",
                                      "children": []
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.AlbumType.USER",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoAccessHelper",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "AlbumType",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "USER",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "albumFetchOption != null",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumFetchOption",
                                      "children": []
                                    },
                                    {
                                      "type": "ExclamationEqualsToken",
                                      "label": "!=",
                                      "children": []
                                    },
                                    {
                                      "type": "NullKeyword",
                                      "label": "null",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        Log.info(TAG, 'albumFetchOption ！= null');\n        fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "Log.info(TAG, 'albumFetchOption ！= null');",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Log.info(TAG, 'albumFetchOption ！= null')",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Log.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Log",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'albumFetchOption ！= null'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "fetchResult = await this.userFileMgr.getAlbums(type, subType, albumFetchOption)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await this.userFileMgr.getAlbums(type, subType, albumFetchOption)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.userFileMgr.getAlbums(type, subType, albumFetchOption)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.userFileMgr.getAlbums",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.userFileMgr",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFileMgr",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getAlbums",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "type",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "subType",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumFetchOption",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult = await this.userFileMgr.getAlbums(type, subType);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult = await this.userFileMgr.getAlbums(type, subType);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "fetchResult = await this.userFileMgr.getAlbums(type, subType)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await this.userFileMgr.getAlbums(type, subType)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.userFileMgr.getAlbums(type, subType)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.userFileMgr.getAlbums",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.userFileMgr",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFileMgr",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getAlbums",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "type",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "subType",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'get Album fetchResult, count: ' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'get Album fetchResult, count: ' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'get Album fetchResult, count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0; i < fetchResult.getCount(); i++) {\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < fetchResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);\n        let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n        try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i);",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i)",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "albumAsset: photoAccessHelper.Album = await fetchResult.getObjectByPosition(i)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumAsset",
                                              "children": []
                                            },
                                            {
                                              "type": "TypeReference",
                                              "label": "photoAccessHelper.Album",
                                              "children": [
                                                {
                                                  "type": "FirstNode",
                                                  "label": "photoAccessHelper.Album",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAccessHelper",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Album",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AwaitExpression",
                                              "label": "await fetchResult.getObjectByPosition(i)",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "fetchResult.getObjectByPosition(i)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "fetchResult.getObjectByPosition",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getObjectByPosition",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstStatement",
                                  "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "TypeReference",
                                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                                              "children": [
                                                {
                                                  "type": "FirstNode",
                                                  "label": "photoAccessHelper.FetchResult",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAccessHelper",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "FetchResult",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "TypeReference",
                                                  "label": "photoAccessHelper.PhotoAsset",
                                                  "children": [
                                                    {
                                                      "type": "FirstNode",
                                                      "label": "photoAccessHelper.PhotoAsset",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAccessHelper",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PhotoAsset",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NullKeyword",
                                              "label": "null",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "TryStatement",
                                  "label": "try {\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        } catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        } finally {\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }",
                                  "children": [
                                    {
                                      "type": "Block",
                                      "label": "{\n          photoFetchResult = await albumAsset.getAssets(fileFetchOption);\n          for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "photoFetchResult = await albumAsset.getAssets(fileFetchOption);",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "photoFetchResult = await albumAsset.getAssets(fileFetchOption)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "AwaitExpression",
                                                  "label": "await albumAsset.getAssets(fileFetchOption)",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "albumAsset.getAssets(fileFetchOption)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "albumAsset.getAssets",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "albumAsset",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "getAssets",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fileFetchOption",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ForStatement",
                                          "label": "for (let i = 0; i < photoFetchResult.getCount(); i++) {\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let i = 0",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "i = 0",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstLiteralToken",
                                                      "label": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "i < photoFetchResult.getCount()",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstBinaryOperator",
                                                  "label": "<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "photoFetchResult.getCount()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "photoFetchResult.getCount",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoFetchResult",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "getCount",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PostfixUnaryExpression",
                                              "label": "i++",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            let photoAsset = await photoFetchResult.getObjectByPosition(i);\n            fileAssets.push(photoAsset);\n            Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);\n          }",
                                              "children": [
                                                {
                                                  "type": "FirstStatement",
                                                  "label": "let photoAsset = await photoFetchResult.getObjectByPosition(i);",
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclarationList",
                                                      "label": "let photoAsset = await photoFetchResult.getObjectByPosition(i)",
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "label": "photoAsset = await photoFetchResult.getObjectByPosition(i)",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoAsset",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "AwaitExpression",
                                                              "label": "await photoFetchResult.getObjectByPosition(i)",
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "photoFetchResult.getObjectByPosition(i)",
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "photoFetchResult.getObjectByPosition",
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "photoFetchResult",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "getObjectByPosition",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "fileAssets.push(photoAsset);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "fileAssets.push(photoAsset)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "fileAssets.push",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "fileAssets",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "push",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAsset",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.info(TAG, 'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.info",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'getPhotoAssets successfully, file displayName: ' + photoAsset.displayName",
                                                          "children": [
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'getPhotoAssets successfully, file displayName: '",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAsset.displayName",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoAsset",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "displayName",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CatchClause",
                                      "label": "catch (err) {\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        }",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "err",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err);",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "Log.info(TAG, 'get Album getPhotoAssets failed with err: ' + err)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "Log.info",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Log",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "info",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "TAG",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'get Album getPhotoAssets failed with err: ' + err",
                                                      "children": [
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'get Album getPhotoAssets failed with err: '",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "err",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }\n        }",
                                      "children": [
                                        {
                                          "type": "IfStatement",
                                          "label": "if (photoFetchResult != null) {\n            photoFetchResult.close();\n          }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "photoFetchResult != null",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "ExclamationEqualsToken",
                                                  "label": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "NullKeyword",
                                                  "label": "null",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            photoFetchResult.close();\n          }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "photoFetchResult.close();",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "photoFetchResult.close()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "photoFetchResult.close",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "photoFetchResult",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "close",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'get Album fetchResult failed with err: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'get Album fetchResult failed with err: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'get Album fetchResult failed with err: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'get Album fetchResult failed with err: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'fileAssets: ' + fileAssets.length);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'fileAssets: ' + fileAssets.length)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'fileAssets: ' + fileAssets.length",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'fileAssets: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "fileAssets.length",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fileAssets",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fileAssets;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fileAssets",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getMediaItemByUriFromTrash(uri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'getMediaItemByUriFromTrash');\n    Log.info(TAG, 'uri:' + uri);\n    let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    try {\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let albumAsset = await albumFetchResult.getFirstObject();\n      let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n      try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n    return fileAsset;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getMediaItemByUriFromTrash",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getMediaItemByUriFromTrash');\n    Log.info(TAG, 'uri:' + uri);\n    let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    try {\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let albumAsset = await albumFetchResult.getFirstObject();\n      let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n      try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }\n    return fileAsset;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getMediaItemByUriFromTrash');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getMediaItemByUriFromTrash')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getMediaItemByUriFromTrash'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'uri:' + uri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'uri:' + uri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'uri:' + uri",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'uri:'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumFetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.Album>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset: photoAccessHelper.PhotoAsset = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset: photoAccessHelper.PhotoAsset = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset: photoAccessHelper.PhotoAsset = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.PhotoAsset",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PhotoAsset",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let albumAsset = await albumFetchResult.getFirstObject();\n      let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n      try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    } finally {\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);\n      let albumAsset = await albumFetchResult.getFirstObject();\n      let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;\n      try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albumFetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albumFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.TRASH)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.SYSTEM",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SYSTEM",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.TRASH",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TRASH",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let albumAsset = await albumFetchResult.getFirstObject();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let albumAsset = await albumFetchResult.getFirstObject()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "albumAsset = await albumFetchResult.getFirstObject()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "albumAsset",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await albumFetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "albumFetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "albumFetchResult.getFirstObject",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "albumFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getFirstObject",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null;",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoFetchResult",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "photoAccessHelper.FetchResult",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoAccessHelper",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "FetchResult",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "photoAccessHelper.PhotoAsset",
                                          "children": [
                                            {
                                              "type": "FirstNode",
                                              "label": "photoAccessHelper.PhotoAsset",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "PhotoAsset",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NullKeyword",
                                      "label": "null",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TryStatement",
                          "label": "try {\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      } catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      } finally {\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }",
                          "children": [
                            {
                              "type": "Block",
                              "label": "{\n        let predicates = new dataSharePredicates.DataSharePredicates();\n        let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };\n        photoFetchResult = await albumAsset.getAssets(emptyFetchOption);\n        for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "NewExpression",
                                              "label": "new dataSharePredicates.DataSharePredicates()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "dataSharePredicates.DataSharePredicates",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "dataSharePredicates",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "DataSharePredicates",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstStatement",
                                  "label": "let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        };",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        }",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "emptyFetchOption = {\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        }",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "emptyFetchOption",
                                              "children": []
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n          fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n          predicates: predicates\n        }",
                                              "children": [
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "fetchColumns",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "MediaConstants",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "FILE_ASSET_FETCH_COLUMNS",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "predicates: predicates",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "predicates",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "predicates",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "photoFetchResult = await albumAsset.getAssets(emptyFetchOption);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "photoFetchResult = await albumAsset.getAssets(emptyFetchOption)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoFetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await albumAsset.getAssets(emptyFetchOption)",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "albumAsset.getAssets(emptyFetchOption)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "albumAsset.getAssets",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "albumAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getAssets",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "emptyFetchOption",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ForStatement",
                                  "label": "for (let i = 0; i < photoFetchResult.getCount(); i++) {\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let i = 0",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "i = 0",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "i < photoFetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstBinaryOperator",
                                          "label": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "photoFetchResult.getCount()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoFetchResult.getCount",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoFetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getCount",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PostfixUnaryExpression",
                                      "label": "i++",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          let photoAsset = await photoFetchResult.getObjectByPosition(i);\n          if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }\n        }",
                                      "children": [
                                        {
                                          "type": "FirstStatement",
                                          "label": "let photoAsset = await photoFetchResult.getObjectByPosition(i);",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let photoAsset = await photoFetchResult.getObjectByPosition(i)",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "photoAsset = await photoFetchResult.getObjectByPosition(i)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "AwaitExpression",
                                                      "label": "await photoFetchResult.getObjectByPosition(i)",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "photoFetchResult.getObjectByPosition(i)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoFetchResult.getObjectByPosition",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoFetchResult",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "getObjectByPosition",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "label": "if (photoAsset.uri === uri) {\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "photoAsset.uri === uri",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoAsset.uri",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoAsset",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "EqualsEqualsEqualsToken",
                                                  "label": "===",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n            fileAsset = photoAsset;\n            Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);\n            break;\n          }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "fileAsset = photoAsset;",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "fileAsset = photoAsset",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fileAsset",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstAssignment",
                                                          "label": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "photoAsset",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.info(TAG, 'getMediaItemByUriFromTrash success: ' + photoAsset.displayName)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.info",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'getMediaItemByUriFromTrash success: ' + photoAsset.displayName",
                                                          "children": [
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'getMediaItemByUriFromTrash success: '",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "photoAsset.displayName",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "photoAsset",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "displayName",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": "break;",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CatchClause",
                              "label": "catch (err) {\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "err",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "err",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);\n      }",
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Log.info(TAG, 'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Log.info",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Log",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "info",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "TAG",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'getMediaItemByUriFromTrash getPhotoAssets failed with err: ' + err",
                                              "children": [
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'getMediaItemByUriFromTrash getPhotoAssets failed with err: '",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "err",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }\n      }",
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (photoFetchResult != null) {\n          photoFetchResult.close();\n        }",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "photoFetchResult != null",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoFetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "ExclamationEqualsToken",
                                          "label": "!=",
                                          "children": []
                                        },
                                        {
                                          "type": "NullKeyword",
                                          "label": "null",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          photoFetchResult.close();\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "photoFetchResult.close();",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "photoFetchResult.close()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "photoFetchResult.close",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "photoFetchResult",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "close",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getMediaItemByUriFromTrash failed with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getMediaItemByUriFromTrash failed with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getMediaItemByUriFromTrash failed with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (albumFetchResult != null) {\n        albumFetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albumFetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albumFetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        albumFetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "albumFetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "albumFetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "albumFetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albumFetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fileAsset;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fileAsset",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getMediaItemByUri(uri: string): Promise<photoAccessHelper.PhotoAsset> {\n    Log.info(TAG, 'getMediaItemByUri');\n    Log.info(TAG, 'uri:' + uri);\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null\n    try {\n      Log.info(TAG, 'fetchResult start');\n      fetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());\n      fileAsset = await fetchResult.getFirstObject();\n      Log.info(TAG, 'fileAsset ' + fileAsset.displayName);\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return fileAsset;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getMediaItemByUri",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getMediaItemByUri');\n    Log.info(TAG, 'uri:' + uri);\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    let fileAsset: photoAccessHelper.PhotoAsset = null;\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null\n    try {\n      Log.info(TAG, 'fetchResult start');\n      fetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());\n      fileAsset = await fetchResult.getFirstObject();\n      Log.info(TAG, 'fileAsset ' + fileAsset.displayName);\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    return fileAsset;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getMediaItemByUri');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getMediaItemByUri')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getMediaItemByUri'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'uri:' + uri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'uri:' + uri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'uri:' + uri",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'uri:'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "dataSharePredicates.DataSharePredicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "dataSharePredicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DataSharePredicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "predicates.equalTo",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "equalTo",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "photoAccessHelper.PhotoKeys.URI",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "photoAccessHelper.PhotoKeys",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoAccessHelper",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "PhotoKeys",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "URI",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "uri",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchOptions",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchColumns",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "FILE_ASSET_FETCH_COLUMNS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "predicates: predicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset: photoAccessHelper.PhotoAsset = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset: photoAccessHelper.PhotoAsset = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset: photoAccessHelper.PhotoAsset = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.PhotoAsset",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PhotoAsset",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset>",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PhotoAsset",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PhotoAsset",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoAsset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      Log.info(TAG, 'fetchResult start');\n      fetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());\n      fileAsset = await fetchResult.getFirstObject();\n      Log.info(TAG, 'fileAsset ' + fileAsset.displayName);\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'fetchResult start');\n      fetchResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());\n      fileAsset = await fetchResult.getFirstObject();\n      Log.info(TAG, 'fileAsset ' + fileAsset.displayName);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'fetchResult start');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'fetchResult start')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'fetchResult start'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await this.userFileMgr.getAssets(fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await this.userFileMgr.getAssets(fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAssets(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAssets(fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAssets",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'fetchResult count ' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'fetchResult count ' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'fetchResult count ' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'fetchResult count '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fileAsset = await fetchResult.getFirstObject();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fileAsset = await fetchResult.getFirstObject()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fileAsset",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await fetchResult.getFirstObject()",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getFirstObject",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getFirstObject",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'fileAsset ' + fileAsset.displayName);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'fileAsset ' + fileAsset.displayName)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'fileAsset ' + fileAsset.displayName",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'fileAsset '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fileAsset.displayName",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fileAsset",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "displayName",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getMediaItemByUri failed, message = ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getMediaItemByUri failed, message = ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getMediaItemByUri failed, message = ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getMediaItemByUri failed, message = '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fileAsset;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fileAsset",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getMediaItemCountsByDisplayName(displayName: string): Promise<number> {\n    Log.info(TAG, 'getMediaItemCountsByDisplayName');\n    let count = 0;\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.DISPLAY_NAME, displayName);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');\n      count = await fetchFileResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'getMediaItemCountsByDisplayName finish');\n    return count;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getMediaItemCountsByDisplayName",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "displayName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "displayName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<number>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getMediaItemCountsByDisplayName');\n    let count = 0;\n    let fetchFileResult: photoAccessHelper.FetchResult = null;\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.PhotoKeys.DISPLAY_NAME, displayName);\n    let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');\n      count = await fetchFileResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }\n    Log.debug(TAG, 'getMediaItemCountsByDisplayName finish');\n    return count;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getMediaItemCountsByDisplayName');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getMediaItemCountsByDisplayName')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getMediaItemCountsByDisplayName'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let count = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let count = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "count = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "count",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchFileResult: photoAccessHelper.FetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchFileResult: photoAccessHelper.FetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchFileResult: photoAccessHelper.FetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchFileResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "dataSharePredicates.DataSharePredicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "dataSharePredicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DataSharePredicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "predicates.equalTo(photoAccessHelper.PhotoKeys.DISPLAY_NAME, displayName);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "predicates.equalTo(photoAccessHelper.PhotoKeys.DISPLAY_NAME, displayName)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "predicates.equalTo",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "equalTo",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "photoAccessHelper.PhotoKeys.DISPLAY_NAME",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "photoAccessHelper.PhotoKeys",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoAccessHelper",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "PhotoKeys",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "DISPLAY_NAME",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "displayName",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchOptions = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchOptions",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchColumns",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "FILE_ASSET_FETCH_COLUMNS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "predicates: predicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');\n      count = await fetchFileResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);\n      Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');\n      count = await fetchFileResult.getCount();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchFileResult = await this.userFileMgr.getAssets(fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchFileResult = await this.userFileMgr.getAssets(fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchFileResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAssets(fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAssets(fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAssets",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAssets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'getMediaItemCountsByDisplayName getPhotoAssets')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'getMediaItemCountsByDisplayName getPhotoAssets'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "count = await fetchFileResult.getCount();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "count = await fetchFileResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await fetchFileResult.getCount()",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchFileResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchFileResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchFileResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getMediaItemCountsByDisplayName error:' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getMediaItemCountsByDisplayName error:' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getMediaItemCountsByDisplayName error:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchFileResult != null) {\n        fetchFileResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchFileResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchFileResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchFileResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchFileResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchFileResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchFileResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchFileResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'getMediaItemCountsByDisplayName finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'getMediaItemCountsByDisplayName finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getMediaItemCountsByDisplayName finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return count;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "count",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getUserAlbumCountByName(albumName: string): Promise<number> {\n    Log.info(TAG, 'getUserAlbumCountByName');\n    Log.info(TAG, 'album_name：' + albumName);\n    let count = 0;\n    let systemAlbums = await getSystemAlbumDisplayName();\n    if (systemAlbums.indexOf(albumName) >= 0) {\n      return 1;\n    }\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      count = fetchResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumCountByName finish');\n    return count;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getUserAlbumCountByName",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<number>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getUserAlbumCountByName');\n    Log.info(TAG, 'album_name：' + albumName);\n    let count = 0;\n    let systemAlbums = await getSystemAlbumDisplayName();\n    if (systemAlbums.indexOf(albumName) >= 0) {\n      return 1;\n    }\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      count = fetchResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumCountByName finish');\n    return count;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getUserAlbumCountByName');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getUserAlbumCountByName')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getUserAlbumCountByName'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'album_name：' + albumName);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'album_name：' + albumName)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'album_name：' + albumName",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'album_name：'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumName",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let count = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let count = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "count = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "count",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let systemAlbums = await getSystemAlbumDisplayName();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let systemAlbums = await getSystemAlbumDisplayName()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "systemAlbums = await getSystemAlbumDisplayName()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "systemAlbums",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await getSystemAlbumDisplayName()",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "getSystemAlbumDisplayName()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "getSystemAlbumDisplayName",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (systemAlbums.indexOf(albumName) >= 0) {\n      return 1;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "systemAlbums.indexOf(albumName) >= 0",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "systemAlbums.indexOf(albumName)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "systemAlbums.indexOf",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemAlbums",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "indexOf",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "albumName",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanEqualsToken",
                          "label": ">=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return 1;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return 1;",
                          "children": [
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult: photoAccessHelper.FetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult: photoAccessHelper.FetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult: photoAccessHelper.FetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      count = fetchResult.getCount();\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      count = fetchResult.getCount();\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.AlbumKeys.ALBUM_NAME",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.AlbumKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ALBUM_NAME",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumName",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "EMPTY_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.USER",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.USER_GENERIC",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER_GENERIC",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'fetchResult' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'fetchResult' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'fetchResult' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'fetchResult'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "count = fetchResult.getCount();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "count = fetchResult.getCount()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getUserAlbumCountByName error:' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getUserAlbumCountByName error:' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getUserAlbumCountByName error:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'getUserAlbumCountByName finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'getUserAlbumCountByName finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getUserAlbumCountByName finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return count;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "count",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getActivePeers(): Promise<photoAccessHelper.PeerInfo[]> {\n    Log.info(TAG, 'getActivePeers');\n    let peers: photoAccessHelper.PeerInfo[] = [];\n    try {\n      let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')\n      peers = await this.userFileMgr.getActivePeers();\n      clearTimeout(getActivePeers);\n    } catch (err) {\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getActivePeers finish');\n    return peers;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getActivePeers",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PeerInfo[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.PeerInfo[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.PeerInfo",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.PeerInfo",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PeerInfo",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getActivePeers');\n    let peers: photoAccessHelper.PeerInfo[] = [];\n    try {\n      let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')\n      peers = await this.userFileMgr.getActivePeers();\n      clearTimeout(getActivePeers);\n    } catch (err) {\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getActivePeers finish');\n    return peers;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getActivePeers');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getActivePeers')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getActivePeers'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let peers: photoAccessHelper.PeerInfo[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let peers: photoAccessHelper.PeerInfo[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "peers: photoAccessHelper.PeerInfo[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "peers",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "photoAccessHelper.PeerInfo[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.PeerInfo",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.PeerInfo",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PeerInfo",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')\n      peers = await this.userFileMgr.getActivePeers();\n      clearTimeout(getActivePeers);\n    } catch (err) {\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')\n      peers = await this.userFileMgr.getActivePeers();\n      clearTimeout(getActivePeers);\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "getActivePeers = hiSysEventDataQueryTimedOut('getActivePeers')",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "getActivePeers",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "hiSysEventDataQueryTimedOut('getActivePeers')",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hiSysEventDataQueryTimedOut",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getActivePeers'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "peers = await this.userFileMgr.getActivePeers();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "peers = await this.userFileMgr.getActivePeers()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "peers",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getActivePeers()",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getActivePeers()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getActivePeers",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getActivePeers",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "clearTimeout(getActivePeers);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "clearTimeout(getActivePeers)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "clearTimeout",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getActivePeers",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getActivePeers error:' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getActivePeers error:' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getActivePeers error:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'getActivePeers finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'getActivePeers finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getActivePeers finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return peers;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "peers",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getUserAlbumByName(albumName: string): Promise<photoAccessHelper.Album> {\n    Log.info(TAG, 'getUserAlbumByName');\n    Log.info(TAG, 'album_name' + albumName);\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    let album = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumByName finish');\n    return album;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getUserAlbumByName",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.Album>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.Album",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.Album",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "Album",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getUserAlbumByName');\n    Log.info(TAG, 'album_name' + albumName);\n    let fetchResult: photoAccessHelper.FetchResult = null;\n    let album = null;\n    try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }\n    Log.debug(TAG, 'getUserAlbumByName finish');\n    return album;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getUserAlbumByName');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getUserAlbumByName')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getUserAlbumByName'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'album_name' + albumName);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'album_name' + albumName)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'album_name' + albumName",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'album_name'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumName",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchResult: photoAccessHelper.FetchResult = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchResult: photoAccessHelper.FetchResult = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchResult: photoAccessHelper.FetchResult = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchResult",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.FetchResult",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.FetchResult",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "FetchResult",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let album = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let album = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "album = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "album",
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    } catch (err) {\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    } finally {\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);\n      Log.info(TAG, 'fetchResult' + fetchResult.getCount());\n      if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.AlbumKeys.ALBUM_NAME",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.AlbumKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "AlbumKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ALBUM_NAME",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumName",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "EMPTY_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult = await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(photoAccessHelper.AlbumType.USER, photoAccessHelper.AlbumSubtype.USER_GENERIC, fetchOptions)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumType.USER",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumType",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumType",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.AlbumSubtype.USER_GENERIC",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "photoAccessHelper.AlbumSubtype",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "photoAccessHelper",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "AlbumSubtype",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "USER_GENERIC",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOptions",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'fetchResult' + fetchResult.getCount());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'fetchResult' + fetchResult.getCount())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'fetchResult' + fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'fetchResult'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.getCount()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.getCount",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCount",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult.getCount() > 0) {\n        album = fetchResult.getFirstObject();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult.getCount() > 0",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fetchResult.getCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fetchResult.getCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        album = fetchResult.getFirstObject();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "album = fetchResult.getFirstObject();",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "album = fetchResult.getFirstObject()",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "album",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "fetchResult.getFirstObject()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fetchResult.getFirstObject",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getFirstObject",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getUserAlbumByName error:' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getUserAlbumByName error:' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getUserAlbumByName error:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (fetchResult != null) {\n        fetchResult.close();\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (fetchResult != null) {\n        fetchResult.close();\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "fetchResult != null",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fetchResult",
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsToken",
                                  "label": "!=",
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        fetchResult.close();\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "fetchResult.close();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "fetchResult.close()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fetchResult.close",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchResult",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "close",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'getUserAlbumByName finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'getUserAlbumByName finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getUserAlbumByName finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return album;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "album",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async getAlbums(fetchOption: photoAccessHelper.FetchOptions): Promise<photoAccessHelper.Album[]> {\n    Log.info(TAG, 'getAlbums');\n    let albums: photoAccessHelper.Album[] = [];\n    try {\n      albums = await this.userFileMgr.getAlbums(fetchOption);\n      Log.info(TAG, 'getAlbums albums ' + albums.getCounts());\n    } catch (err) {\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getAlbums finish');\n    return albums;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getAlbums",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "fetchOption: photoAccessHelper.FetchOptions",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fetchOption",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.FetchOptions",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.FetchOptions",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "FetchOptions",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.Album[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.Album[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.Album",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.Album",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "Album",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getAlbums');\n    let albums: photoAccessHelper.Album[] = [];\n    try {\n      albums = await this.userFileMgr.getAlbums(fetchOption);\n      Log.info(TAG, 'getAlbums albums ' + albums.getCounts());\n    } catch (err) {\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }\n    Log.debug(TAG, 'getAlbums finish');\n    return albums;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getAlbums');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getAlbums')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getAlbums'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let albums: photoAccessHelper.Album[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let albums: photoAccessHelper.Album[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "albums: photoAccessHelper.Album[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albums",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "photoAccessHelper.Album[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "photoAccessHelper.Album",
                                  "children": [
                                    {
                                      "type": "FirstNode",
                                      "label": "photoAccessHelper.Album",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Album",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      albums = await this.userFileMgr.getAlbums(fetchOption);\n      Log.info(TAG, 'getAlbums albums ' + albums.getCounts());\n    } catch (err) {\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      albums = await this.userFileMgr.getAlbums(fetchOption);\n      Log.info(TAG, 'getAlbums albums ' + albums.getCounts());\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "albums = await this.userFileMgr.getAlbums(fetchOption);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "albums = await this.userFileMgr.getAlbums(fetchOption)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "albums",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AwaitExpression",
                                  "label": "await this.userFileMgr.getAlbums(fetchOption)",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.userFileMgr.getAlbums(fetchOption)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.userFileMgr.getAlbums",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.userFileMgr",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileMgr",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAlbums",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fetchOption",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'getAlbums albums ' + albums.getCounts());",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'getAlbums albums ' + albums.getCounts())",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'getAlbums albums ' + albums.getCounts()",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'getAlbums albums '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "albums.getCounts()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "albums.getCounts",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "albums",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getCounts",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'getAlbums error:' + JSON.stringify(err));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'getAlbums error:' + JSON.stringify(err))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'getAlbums error:' + JSON.stringify(err)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'getAlbums error:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(err)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "err",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'getAlbums finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'getAlbums finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getAlbums finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return albums;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "albums",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async openAsset(mode: string, fileAsset: photoAccessHelper.PhotoAsset): Promise<number> {\n    Log.debug(TAG, 'openAsset start');\n    let fd: number = await fileAsset.open(mode);\n    Log.info(TAG, 'openAsset end. fd: ' + fd);\n    if (fd <= 0) {\n      Log.info(TAG, 'openAsset Fail');\n    }\n    return fd;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "openAsset",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "mode: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "mode",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "fileAsset: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fileAsset",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<number>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'openAsset start');\n    let fd: number = await fileAsset.open(mode);\n    Log.info(TAG, 'openAsset end. fd: ' + fd);\n    if (fd <= 0) {\n      Log.info(TAG, 'openAsset Fail');\n    }\n    return fd;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'openAsset start');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'openAsset start')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'openAsset start'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fd: number = await fileAsset.open(mode);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fd: number = await fileAsset.open(mode)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fd: number = await fileAsset.open(mode)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fd",
                              "children": []
                            },
                            {
                              "type": "NumberKeyword",
                              "label": "number",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await fileAsset.open(mode)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fileAsset.open(mode)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fileAsset.open",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fileAsset",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "open",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "mode",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'openAsset end. fd: ' + fd);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'openAsset end. fd: ' + fd)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'openAsset end. fd: ' + fd",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'openAsset end. fd: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "fd",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (fd <= 0) {\n      Log.info(TAG, 'openAsset Fail');\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "fd <= 0",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "fd",
                          "children": []
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'openAsset Fail');\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'openAsset Fail');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'openAsset Fail')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'openAsset Fail'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return fd;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "fd",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async closeAsset(fd: number, fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    Log.debug(TAG, 'closeAsset start');\n    await fileAsset.close(fd);\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "closeAsset",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "fd: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fd",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "fileAsset: photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "Identifier",
                  "label": "fileAsset",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "photoAccessHelper",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PhotoAsset",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'closeAsset start');\n    await fileAsset.close(fd);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'closeAsset start');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'closeAsset start')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'closeAsset start'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await fileAsset.close(fd);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await fileAsset.close(fd)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "fileAsset.close(fd)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "fileAsset.close",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fileAsset",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "close",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "fd",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async addPhotoToAlbumByUserFileMgr(albumUri: string, uri: string): Promise<void> {\n    Log.info(TAG, 'addPhotoAssetsDemoPromise');\n    Log.info(TAG, 'albumUri' + albumUri);\n    Log.info(TAG, 'mediaItem.uri' + uri);\n    try {\n      let album = await this.getUserAlbumItemByUri(albumUri);\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });\n    } catch (err) {\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "addPhotoToAlbumByUserFileMgr",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumUri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumUri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "uri: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uri",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<void>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "VoidKeyword",
                  "label": "void",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'addPhotoAssetsDemoPromise');\n    Log.info(TAG, 'albumUri' + albumUri);\n    Log.info(TAG, 'mediaItem.uri' + uri);\n    try {\n      let album = await this.getUserAlbumItemByUri(albumUri);\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });\n    } catch (err) {\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'addPhotoAssetsDemoPromise');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'addPhotoAssetsDemoPromise')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'addPhotoAssetsDemoPromise'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'albumUri' + albumUri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'albumUri' + albumUri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'albumUri' + albumUri",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'albumUri'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumUri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'mediaItem.uri' + uri);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'mediaItem.uri' + uri)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'mediaItem.uri' + uri",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'mediaItem.uri'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "uri",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      let album = await this.getUserAlbumItemByUri(albumUri);\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });\n    } catch (err) {\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      let album = await this.getUserAlbumItemByUri(albumUri);\n      let predicates = new dataSharePredicates.DataSharePredicates();\n      predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);\n      let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };\n      this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let album = await this.getUserAlbumItemByUri(albumUri);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let album = await this.getUserAlbumItemByUri(albumUri)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "album = await this.getUserAlbumItemByUri(albumUri)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "album",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await this.getUserAlbumItemByUri(albumUri)",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "this.getUserAlbumItemByUri(albumUri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.getUserAlbumItemByUri",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getUserAlbumItemByUri",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "albumUri",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "NewExpression",
                                      "label": "new dataSharePredicates.DataSharePredicates()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dataSharePredicates.DataSharePredicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dataSharePredicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "DataSharePredicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "predicates.equalTo(photoAccessHelper.PhotoKeys.URI, uri)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "predicates.equalTo",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "equalTo",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.PhotoKeys.URI",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.PhotoKeys",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "photoAccessHelper",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "PhotoKeys",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "URI",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "uri",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "fetchOptions = {\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchOptions",
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n        predicates: predicates\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "fetchColumns",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MediaConstants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "FILE_ASSET_FETCH_COLUMNS",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "predicates: predicates",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "predicates",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      });",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.userFileMgr.getAssets(fetchOptions, async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.userFileMgr.getAssets",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.userFileMgr",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "userFileMgr",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getAssets",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "fetchOptions",
                                  "children": []
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "async (err, fetchResult) => {\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      }",
                                  "children": [
                                    {
                                      "type": "AsyncKeyword",
                                      "label": "async",
                                      "children": []
                                    },
                                    {
                                      "type": "Parameter",
                                      "label": "err",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Parameter",
                                      "label": "fetchResult",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fetchResult",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }\n      }",
                                      "children": [
                                        {
                                          "type": "IfStatement",
                                          "label": "if (fetchResult != undefined) {\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        } else {\n          Log.info(TAG, 'fetchResult fail' + err);\n        }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "fetchResult != undefined",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fetchResult",
                                                  "children": []
                                                },
                                                {
                                                  "type": "ExclamationEqualsToken",
                                                  "label": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "undefined",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n          Log.info(TAG, 'fetchResult success');\n          let fileAsset = await fetchResult.getFirstObject();\n          if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }\n          fetchResult.close();\n        }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.info(TAG, 'fetchResult success');",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.info(TAG, 'fetchResult success')",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.info",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'fetchResult success'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "FirstStatement",
                                                  "label": "let fileAsset = await fetchResult.getFirstObject();",
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclarationList",
                                                      "label": "let fileAsset = await fetchResult.getFirstObject()",
                                                      "children": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "label": "fileAsset = await fetchResult.getFirstObject()",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "fileAsset",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "AwaitExpression",
                                                              "label": "await fetchResult.getFirstObject()",
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "fetchResult.getFirstObject()",
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fetchResult.getFirstObject",
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "fetchResult",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "getFirstObject",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "label": "if (fileAsset != undefined) {\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "fileAsset != undefined",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "fileAsset",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "ExclamationEqualsToken",
                                                          "label": "!=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "undefined",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Block",
                                                      "label": "{\n            Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);\n            album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });\n          }",
                                                      "children": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "label": "Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName);",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Log.info(TAG, 'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName)",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "Log.info",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "Log",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "info",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "TAG",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "'addPhotoToAlbumByUserFileMgr photo displayName : ' + fileAsset.displayName",
                                                                  "children": [
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'addPhotoToAlbumByUserFileMgr photo displayName : '",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PlusToken",
                                                                      "label": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "fileAsset.displayName",
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "fileAsset",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "displayName",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "label": "album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            });",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch((err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            })",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }).catch",
                                                                  "children": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "label": "album.addAssets([fileAsset]).then(() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            })",
                                                                      "children": [
                                                                        {
                                                                          "type": "PropertyAccessExpression",
                                                                          "label": "album.addAssets([fileAsset]).then",
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "album.addAssets([fileAsset])",
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "album.addAssets",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "album",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "addAssets",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "ArrayLiteralExpression",
                                                                                  "label": "[fileAsset]",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "fileAsset",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "then",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ArrowFunction",
                                                                          "label": "() => {\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }",
                                                                          "children": [
                                                                            {
                                                                              "type": "EqualsGreaterThanToken",
                                                                              "label": "=>",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Block",
                                                                              "label": "{\n              Log.info(TAG, 'album addPhotoAssets successfully');\n            }",
                                                                              "children": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "label": "Log.info(TAG, 'album addPhotoAssets successfully');",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "label": "Log.info(TAG, 'album addPhotoAssets successfully')",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "PropertyAccessExpression",
                                                                                          "label": "Log.info",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "Log",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "label": "info",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "TAG",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "StringLiteral",
                                                                                          "label": "'album addPhotoAssets successfully'",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "catch",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ArrowFunction",
                                                                  "label": "(err) => {\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            }",
                                                                  "children": [
                                                                    {
                                                                      "type": "Parameter",
                                                                      "label": "err",
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "err",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "EqualsGreaterThanToken",
                                                                      "label": "=>",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Block",
                                                                      "label": "{\n              Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);\n            }",
                                                                      "children": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "label": "Log.info(TAG, 'album addPhotoAssets failed with error: ' + err);",
                                                                          "children": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "label": "Log.info(TAG, 'album addPhotoAssets failed with error: ' + err)",
                                                                              "children": [
                                                                                {
                                                                                  "type": "PropertyAccessExpression",
                                                                                  "label": "Log.info",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "Log",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "info",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "TAG",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "label": "'album addPhotoAssets failed with error: ' + err",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "StringLiteral",
                                                                                      "label": "'album addPhotoAssets failed with error: '",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PlusToken",
                                                                                      "label": "+",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "err",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "fetchResult.close();",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "fetchResult.close()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "fetchResult.close",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "fetchResult",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "close",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n          Log.info(TAG, 'fetchResult fail' + err);\n        }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "Log.info(TAG, 'fetchResult fail' + err);",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Log.info(TAG, 'fetchResult fail' + err)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Log.info",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Log",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'fetchResult fail' + err",
                                                          "children": [
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'fetchResult fail'",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "err",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Log.error(TAG, 'addPhotoAssetsDemoPromise failed with error: ' + err)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Log.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Log",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'addPhotoAssetsDemoPromise failed with error: ' + err",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'addPhotoAssetsDemoPromise failed with error: '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "export let userFileModel: UserFileModel = stashOrGetObject<UserFileModel>(new UserFileModel(), TAG);",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "VariableDeclarationList",
          "label": "let userFileModel: UserFileModel = stashOrGetObject<UserFileModel>(new UserFileModel(), TAG)",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "userFileModel: UserFileModel = stashOrGetObject<UserFileModel>(new UserFileModel(), TAG)",
              "children": [
                {
                  "type": "Identifier",
                  "label": "userFileModel",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "UserFileModel",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileModel",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "CallExpression",
                  "label": "stashOrGetObject<UserFileModel>(new UserFileModel(), TAG)",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "stashOrGetObject",
                      "children": []
                    },
                    {
                      "type": "TypeReference",
                      "label": "UserFileModel",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "UserFileModel",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "NewExpression",
                      "label": "new UserFileModel()",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "UserFileModel",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Identifier",
                      "label": "TAG",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}