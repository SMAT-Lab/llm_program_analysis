{
  "type": "SourceFile",
  "label": "import BoundingRect from 'zrender/src/core/BoundingRect';\nimport * as vec2 from 'zrender/src/core/vector';\nimport * as polygonContain from 'zrender/src/contain/polygon';\nimport { GeoJSON, GeoProjection, GeoSVGGraphicRoot } from './geoTypes';\nimport * as matrix from 'zrender/src/core/matrix';\nimport Element from 'zrender/src/Element';\nimport { each } from 'zrender/src/core/util';\nconst TMP_TRANSFORM = [] as number[];\nfunction transformPoints(points: number[][], transform: matrix.MatrixArray) {\n    for (let p = 0; p < points.length; p++) {\n        vec2.applyTransform(points[p], points[p], transform);\n    }\n}\nfunction updateBBoxFromPoints(\n    points: ArrayLike<number>[],\n    min: vec2.VectorArray,\n    max: vec2.VectorArray,\n    projection: GeoProjection\n) {\n    for (let i = 0; i < points.length; i++) {\n        let p = points[i];\n        if (projection) {\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }\n        if (p && isFinite(p[0]) && isFinite(p[1])) {\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }\n    }\n}\nfunction centroid(points: number[][]) {\n    let signedArea = 0;\n    let cx = 0;\n    let cy = 0;\n    const len = points.length;\n    let x0 = points[len - 1][0];\n    let y0 = points[len - 1][1];\n    // Polygon should been closed.\n    for (let i = 0; i < len; i++) {\n        const x1 = points[i][0];\n        const y1 = points[i][1];\n        const a = x0 * y1 - x1 * y0;\n        signedArea += a;\n        cx += (x0 + x1) * a;\n        cy += (y0 + y1) * a;\n        x0 = x1;\n        y0 = y1;\n    }\n    return signedArea\n        ? [cx / signedArea / 3, cy / signedArea / 3, signedArea]\n        : [points[0][0] || 0, points[0][1] || 0];\n}\nexport abstract class Region {\n    readonly name: string;\n    readonly type: 'geoJSON' | 'geoSVG';\n    protected _center: number[];\n    protected _rect: BoundingRect;\n    constructor(\n        name: string\n    ) {\n        this.name = name;\n    }\n    setCenter(center: number[]) {\n        this._center = center;\n    }\n    getCenter() {\n        let center = this._center;\n        if (!center) {\n            // In most cases there are no need to calculate this center.\n            // So calculate only when called.\n            center = this._center = this.calcCenter();\n        }\n        return center;\n    }\n    abstract calcCenter(): number[];\n}\nexport class GeoJSONPolygonGeometry {\n    readonly type = 'polygon';\n    exterior: number[][];\n    interiors?: number[][][];\n    constructor(exterior: number[][], interiors: number[][][]) {\n        this.exterior = exterior;\n        this.interiors = interiors;\n    }\n}\nexport class GeoJSONLineStringGeometry {\n    readonly type = 'linestring';\n    points: number[][][];\n    constructor(points: number[][][]) {\n        this.points = points;\n    }\n}\nexport class GeoJSONRegion extends Region {\n    readonly type = 'geoJSON';\n    readonly geometries: (GeoJSONPolygonGeometry | GeoJSONLineStringGeometry)[];\n    // Injected outside.\n    properties: GeoJSON['features'][0]['properties'];\n    constructor(\n        name: string,\n        geometries: GeoJSONRegion['geometries'],\n        cp: GeoJSON['features'][0]['properties']['cp']\n    ) {\n        super(name);\n        this.geometries = geometries;\n        this._center = cp && [cp[0], cp[1]];\n    }\n    calcCenter() {\n        const geometries = this.geometries;\n        let largestGeo: GeoJSONPolygonGeometry;\n        let largestGeoSize = 0;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i] as GeoJSONPolygonGeometry;\n            const exterior = geo.exterior;\n            // Simple trick to use points count instead of polygon area as region size.\n            // Ignore linestring\n            const size = exterior && exterior.length;\n            if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }\n        }\n        if (largestGeo) {\n            return centroid(largestGeo.exterior);\n        }\n        // from bounding rect by default.\n        const rect = this.getBoundingRect();\n        return [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }\n    getBoundingRect(projection?: GeoProjection): BoundingRect {\n        let rect = this._rect;\n        // Always recalculate if using projection.\n        if (rect && !projection) {\n            return rect;\n        }\n        const min = [Infinity, Infinity];\n        const max = [-Infinity, -Infinity];\n        const geometries = this.geometries;\n        each(geometries, geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        });\n        // Normalie invalid bounding.\n        if (!(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        rect = new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        );\n        if (!projection) {\n            this._rect = rect;\n        }\n        return rect;\n    }\n    contain(coord: number[]): boolean {\n        const rect = this.getBoundingRect();\n        const geometries = this.geometries;\n        if (!rect.contain(coord[0], coord[1])) {\n            return false;\n        }\n        loopGeo: for (let i = 0, len = geometries.length; i < len; i++) {\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    transformTo(x: number, y: number, width: number, height: number): void {\n        let rect = this.getBoundingRect();\n        const aspect = rect.width / rect.height;\n        if (!width) {\n            width = aspect * height;\n        }\n        else if (!height) {\n            height = width / aspect;\n        }\n        const target = new BoundingRect(x, y, width, height);\n        const transform = rect.calculateTransform(target);\n        const geometries = this.geometries;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i];\n            if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }\n        }\n        rect = this._rect;\n        rect.copy(target);\n        // Update center\n        this._center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }\n    cloneShallow(name: string): GeoJSONRegion {\n        name == null && (name = this.name);\n        const newRegion = new GeoJSONRegion(name, this.geometries, this._center);\n        newRegion._rect = this._rect;\n        newRegion.transformTo = null; // Simply avoid to be called.\n        return newRegion;\n    }\n}\nexport class GeoSVGRegion extends Region {\n    readonly type = 'geoSVG';\n    // Can only be used to calculate, but not be modified.\n    // Because this el may not belong to this view,\n    // but been displaying on some other view.\n    private _elOnlyForCalculate: Element;\n    constructor(\n        name: string,\n        elOnlyForCalculate: Element\n    ) {\n        super(name);\n        this._elOnlyForCalculate = elOnlyForCalculate;\n    }\n    calcCenter(): number[] {\n        const el = this._elOnlyForCalculate;\n        const rect = el.getBoundingRect();\n        const center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n        const mat = matrix.identity(TMP_TRANSFORM);\n        let target = el;\n        while (target && !(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n        matrix.invert(mat, mat);\n        vec2.applyTransform(center, center, mat);\n        return center;\n    }\n}",
  "start_token": 0,
  "end_token": 1744,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import BoundingRect from 'zrender/src/core/BoundingRect';",
      "start_token": 0,
      "end_token": 4,
      "children": [
        {
          "type": "ImportClause",
          "label": "BoundingRect",
          "start_token": 1,
          "end_token": 1,
          "children": [
            {
              "type": "Identifier",
              "label": "BoundingRect",
              "start_token": 1,
              "end_token": 1,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'zrender/src/core/BoundingRect'",
          "start_token": 3,
          "end_token": 3,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import * as vec2 from 'zrender/src/core/vector';",
      "start_token": 5,
      "end_token": 11,
      "children": [
        {
          "type": "ImportClause",
          "label": "* as vec2",
          "start_token": 6,
          "end_token": 8,
          "children": [
            {
              "type": "NamespaceImport",
              "label": "* as vec2",
              "start_token": 6,
              "end_token": 8,
              "children": [
                {
                  "type": "Identifier",
                  "label": "vec2",
                  "start_token": 8,
                  "end_token": 8,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'zrender/src/core/vector'",
          "start_token": 10,
          "end_token": 10,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import * as polygonContain from 'zrender/src/contain/polygon';",
      "start_token": 12,
      "end_token": 18,
      "children": [
        {
          "type": "ImportClause",
          "label": "* as polygonContain",
          "start_token": 13,
          "end_token": 15,
          "children": [
            {
              "type": "NamespaceImport",
              "label": "* as polygonContain",
              "start_token": 13,
              "end_token": 15,
              "children": [
                {
                  "type": "Identifier",
                  "label": "polygonContain",
                  "start_token": 15,
                  "end_token": 15,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'zrender/src/contain/polygon'",
          "start_token": 17,
          "end_token": 17,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { GeoJSON, GeoProjection, GeoSVGGraphicRoot } from './geoTypes';",
      "start_token": 19,
      "end_token": 29,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ GeoJSON, GeoProjection, GeoSVGGraphicRoot }",
          "start_token": 20,
          "end_token": 26,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ GeoJSON, GeoProjection, GeoSVGGraphicRoot }",
              "start_token": 20,
              "end_token": 26,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "GeoJSON",
                  "start_token": 21,
                  "end_token": 21,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "GeoJSON",
                      "start_token": 21,
                      "end_token": 21,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "GeoProjection",
                  "start_token": 23,
                  "end_token": 23,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "GeoProjection",
                      "start_token": 23,
                      "end_token": 23,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "GeoSVGGraphicRoot",
                  "start_token": 25,
                  "end_token": 25,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "GeoSVGGraphicRoot",
                      "start_token": 25,
                      "end_token": 25,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./geoTypes'",
          "start_token": 28,
          "end_token": 28,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import * as matrix from 'zrender/src/core/matrix';",
      "start_token": 30,
      "end_token": 36,
      "children": [
        {
          "type": "ImportClause",
          "label": "* as matrix",
          "start_token": 31,
          "end_token": 33,
          "children": [
            {
              "type": "NamespaceImport",
              "label": "* as matrix",
              "start_token": 31,
              "end_token": 33,
              "children": [
                {
                  "type": "Identifier",
                  "label": "matrix",
                  "start_token": 33,
                  "end_token": 33,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'zrender/src/core/matrix'",
          "start_token": 35,
          "end_token": 35,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import Element from 'zrender/src/Element';",
      "start_token": 37,
      "end_token": 41,
      "children": [
        {
          "type": "ImportClause",
          "label": "Element",
          "start_token": 38,
          "end_token": 38,
          "children": [
            {
              "type": "Identifier",
              "label": "Element",
              "start_token": 38,
              "end_token": 38,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'zrender/src/Element'",
          "start_token": 40,
          "end_token": 40,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { each } from 'zrender/src/core/util';",
      "start_token": 42,
      "end_token": 48,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ each }",
          "start_token": 43,
          "end_token": 45,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ each }",
              "start_token": 43,
              "end_token": 45,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "each",
                  "start_token": 44,
                  "end_token": 44,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "each",
                      "start_token": 44,
                      "end_token": 44,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'zrender/src/core/util'",
          "start_token": 47,
          "end_token": 47,
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TMP_TRANSFORM = [] as number[];",
      "start_token": 49,
      "end_token": 58,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TMP_TRANSFORM = [] as number[]",
          "start_token": 49,
          "end_token": 57,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TMP_TRANSFORM = [] as number[]",
              "start_token": 50,
              "end_token": 57,
              "children": [
                {
                  "type": "Identifier",
                  "label": "TMP_TRANSFORM",
                  "start_token": 50,
                  "end_token": 50,
                  "children": []
                },
                {
                  "type": "AsExpression",
                  "label": "[] as number[]",
                  "start_token": 52,
                  "end_token": 57,
                  "children": [
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[]",
                      "start_token": 52,
                      "end_token": 53,
                      "children": []
                    },
                    {
                      "type": "ArrayType",
                      "label": "number[]",
                      "start_token": 55,
                      "end_token": 57,
                      "children": [
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "start_token": 55,
                          "end_token": 55,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function transformPoints(points: number[][], transform: matrix.MatrixArray) {\n    for (let p = 0; p < points.length; p++) {\n        vec2.applyTransform(points[p], points[p], transform);\n    }\n}",
      "start_token": 59,
      "end_token": 113,
      "children": [
        {
          "type": "Identifier",
          "label": "transformPoints",
          "start_token": 60,
          "end_token": 60,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "points: number[][]",
          "start_token": 62,
          "end_token": 68,
          "children": [
            {
              "type": "Identifier",
              "label": "points",
              "start_token": 62,
              "end_token": 62,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[][]",
              "start_token": 64,
              "end_token": 68,
              "children": [
                {
                  "type": "ArrayType",
                  "label": "number[]",
                  "start_token": 64,
                  "end_token": 66,
                  "children": [
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 64,
                      "end_token": 64,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "transform: matrix.MatrixArray",
          "start_token": 70,
          "end_token": 74,
          "children": [
            {
              "type": "Identifier",
              "label": "transform",
              "start_token": 70,
              "end_token": 70,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "matrix.MatrixArray",
              "start_token": 72,
              "end_token": 74,
              "children": [
                {
                  "type": "FirstNode",
                  "label": "matrix.MatrixArray",
                  "start_token": 72,
                  "end_token": 74,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "matrix",
                      "start_token": 72,
                      "end_token": 72,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "MatrixArray",
                      "start_token": 74,
                      "end_token": 74,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n    for (let p = 0; p < points.length; p++) {\n        vec2.applyTransform(points[p], points[p], transform);\n    }\n}",
          "start_token": 76,
          "end_token": 113,
          "children": [
            {
              "type": "ForStatement",
              "label": "for (let p = 0; p < points.length; p++) {\n        vec2.applyTransform(points[p], points[p], transform);\n    }",
              "start_token": 77,
              "end_token": 112,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let p = 0",
                  "start_token": 79,
                  "end_token": 82,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "p = 0",
                      "start_token": 80,
                      "end_token": 82,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "p",
                          "start_token": 80,
                          "end_token": 80,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 82,
                          "end_token": 82,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BinaryExpression",
                  "label": "p < points.length",
                  "start_token": 84,
                  "end_token": 88,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "p",
                      "start_token": 84,
                      "end_token": 84,
                      "children": []
                    },
                    {
                      "type": "FirstBinaryOperator",
                      "label": "<",
                      "start_token": 85,
                      "end_token": 85,
                      "children": []
                    },
                    {
                      "type": "PropertyAccessExpression",
                      "label": "points.length",
                      "start_token": 86,
                      "end_token": 88,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "points",
                          "start_token": 86,
                          "end_token": 86,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "length",
                          "start_token": 88,
                          "end_token": 88,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "PostfixUnaryExpression",
                  "label": "p++",
                  "start_token": 90,
                  "end_token": 92,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "p",
                      "start_token": 90,
                      "end_token": 90,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n        vec2.applyTransform(points[p], points[p], transform);\n    }",
                  "start_token": 94,
                  "end_token": 112,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "vec2.applyTransform(points[p], points[p], transform);",
                      "start_token": 95,
                      "end_token": 111,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "vec2.applyTransform(points[p], points[p], transform)",
                          "start_token": 95,
                          "end_token": 110,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "vec2.applyTransform",
                              "start_token": 95,
                              "end_token": 97,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "vec2",
                                  "start_token": 95,
                                  "end_token": 95,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "applyTransform",
                                  "start_token": 97,
                                  "end_token": 97,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "points[p]",
                              "start_token": 99,
                              "end_token": 102,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "points",
                                  "start_token": 99,
                                  "end_token": 99,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "p",
                                  "start_token": 101,
                                  "end_token": 101,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "points[p]",
                              "start_token": 104,
                              "end_token": 107,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "points",
                                  "start_token": 104,
                                  "end_token": 104,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "p",
                                  "start_token": 106,
                                  "end_token": 106,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "transform",
                              "start_token": 109,
                              "end_token": 109,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function updateBBoxFromPoints(\n    points: ArrayLike<number>[],\n    min: vec2.VectorArray,\n    max: vec2.VectorArray,\n    projection: GeoProjection\n) {\n    for (let i = 0; i < points.length; i++) {\n        let p = points[i];\n        if (projection) {\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }\n        if (p && isFinite(p[0]) && isFinite(p[1])) {\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }\n    }\n}",
      "start_token": 114,
      "end_token": 242,
      "children": [
        {
          "type": "Identifier",
          "label": "updateBBoxFromPoints",
          "start_token": 115,
          "end_token": 115,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "points: ArrayLike<number>[]",
          "start_token": 117,
          "end_token": 124,
          "children": [
            {
              "type": "Identifier",
              "label": "points",
              "start_token": 117,
              "end_token": 117,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "ArrayLike<number>[]",
              "start_token": 119,
              "end_token": 124,
              "children": [
                {
                  "type": "TypeReference",
                  "label": "ArrayLike<number>",
                  "start_token": 119,
                  "end_token": 122,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ArrayLike",
                      "start_token": 119,
                      "end_token": 119,
                      "children": []
                    },
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 121,
                      "end_token": 121,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "min: vec2.VectorArray",
          "start_token": 126,
          "end_token": 130,
          "children": [
            {
              "type": "Identifier",
              "label": "min",
              "start_token": 126,
              "end_token": 126,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "vec2.VectorArray",
              "start_token": 128,
              "end_token": 130,
              "children": [
                {
                  "type": "FirstNode",
                  "label": "vec2.VectorArray",
                  "start_token": 128,
                  "end_token": 130,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "vec2",
                      "start_token": 128,
                      "end_token": 128,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "VectorArray",
                      "start_token": 130,
                      "end_token": 130,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "max: vec2.VectorArray",
          "start_token": 132,
          "end_token": 136,
          "children": [
            {
              "type": "Identifier",
              "label": "max",
              "start_token": 132,
              "end_token": 132,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "vec2.VectorArray",
              "start_token": 134,
              "end_token": 136,
              "children": [
                {
                  "type": "FirstNode",
                  "label": "vec2.VectorArray",
                  "start_token": 134,
                  "end_token": 136,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "vec2",
                      "start_token": 134,
                      "end_token": 134,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "VectorArray",
                      "start_token": 136,
                      "end_token": 136,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "projection: GeoProjection",
          "start_token": 138,
          "end_token": 140,
          "children": [
            {
              "type": "Identifier",
              "label": "projection",
              "start_token": 138,
              "end_token": 138,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "GeoProjection",
              "start_token": 140,
              "end_token": 140,
              "children": [
                {
                  "type": "Identifier",
                  "label": "GeoProjection",
                  "start_token": 140,
                  "end_token": 140,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n    for (let i = 0; i < points.length; i++) {\n        let p = points[i];\n        if (projection) {\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }\n        if (p && isFinite(p[0]) && isFinite(p[1])) {\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }\n    }\n}",
          "start_token": 142,
          "end_token": 242,
          "children": [
            {
              "type": "ForStatement",
              "label": "for (let i = 0; i < points.length; i++) {\n        let p = points[i];\n        if (projection) {\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }\n        if (p && isFinite(p[0]) && isFinite(p[1])) {\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }\n    }",
              "start_token": 143,
              "end_token": 241,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let i = 0",
                  "start_token": 145,
                  "end_token": 148,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "i = 0",
                      "start_token": 146,
                      "end_token": 148,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "start_token": 146,
                          "end_token": 146,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 148,
                          "end_token": 148,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BinaryExpression",
                  "label": "i < points.length",
                  "start_token": 150,
                  "end_token": 154,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "i",
                      "start_token": 150,
                      "end_token": 150,
                      "children": []
                    },
                    {
                      "type": "FirstBinaryOperator",
                      "label": "<",
                      "start_token": 151,
                      "end_token": 151,
                      "children": []
                    },
                    {
                      "type": "PropertyAccessExpression",
                      "label": "points.length",
                      "start_token": 152,
                      "end_token": 154,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "points",
                          "start_token": 152,
                          "end_token": 152,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "length",
                          "start_token": 154,
                          "end_token": 154,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "PostfixUnaryExpression",
                  "label": "i++",
                  "start_token": 156,
                  "end_token": 158,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "i",
                      "start_token": 156,
                      "end_token": 156,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n        let p = points[i];\n        if (projection) {\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }\n        if (p && isFinite(p[0]) && isFinite(p[1])) {\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }\n    }",
                  "start_token": 160,
                  "end_token": 241,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "let p = points[i];",
                      "start_token": 161,
                      "end_token": 168,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "let p = points[i]",
                          "start_token": 161,
                          "end_token": 167,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "p = points[i]",
                              "start_token": 162,
                              "end_token": 167,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "p",
                                  "start_token": 162,
                                  "end_token": 162,
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "points[i]",
                                  "start_token": 164,
                                  "end_token": 167,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "points",
                                      "start_token": 164,
                                      "end_token": 164,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "start_token": 166,
                                      "end_token": 166,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (projection) {\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }",
                      "start_token": 169,
                      "end_token": 188,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "projection",
                          "start_token": 171,
                          "end_token": 171,
                          "children": []
                        },
                        {
                          "type": "Block",
                          "label": "{\n            // projection may return null point.\n            p = projection.project(p as number[]);\n        }",
                          "start_token": 173,
                          "end_token": 188,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "p = projection.project(p as number[]);",
                              "start_token": 175,
                              "end_token": 187,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "p = projection.project(p as number[])",
                                  "start_token": 175,
                                  "end_token": 186,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "p",
                                      "start_token": 175,
                                      "end_token": 175,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 176,
                                      "end_token": 176,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "projection.project(p as number[])",
                                      "start_token": 177,
                                      "end_token": 186,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "projection.project",
                                          "start_token": 177,
                                          "end_token": 179,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "projection",
                                              "start_token": 177,
                                              "end_token": 177,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "project",
                                              "start_token": 179,
                                              "end_token": 179,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsExpression",
                                          "label": "p as number[]",
                                          "start_token": 181,
                                          "end_token": 185,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "p",
                                              "start_token": 181,
                                              "end_token": 181,
                                              "children": []
                                            },
                                            {
                                              "type": "ArrayType",
                                              "label": "number[]",
                                              "start_token": 183,
                                              "end_token": 185,
                                              "children": [
                                                {
                                                  "type": "NumberKeyword",
                                                  "label": "number",
                                                  "start_token": 183,
                                                  "end_token": 183,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (p && isFinite(p[0]) && isFinite(p[1])) {\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }",
                      "start_token": 189,
                      "end_token": 240,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "p && isFinite(p[0]) && isFinite(p[1])",
                          "start_token": 191,
                          "end_token": 207,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "p && isFinite(p[0])",
                              "start_token": 191,
                              "end_token": 199,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "p",
                                  "start_token": 191,
                                  "end_token": 191,
                                  "children": []
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "start_token": 192,
                                  "end_token": 192,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "isFinite(p[0])",
                                  "start_token": 193,
                                  "end_token": 199,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "isFinite",
                                      "start_token": 193,
                                      "end_token": 193,
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "p[0]",
                                      "start_token": 195,
                                      "end_token": 198,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "p",
                                          "start_token": 195,
                                          "end_token": 195,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "start_token": 197,
                                          "end_token": 197,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 200,
                              "end_token": 200,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "isFinite(p[1])",
                              "start_token": 201,
                              "end_token": 207,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "isFinite",
                                  "start_token": 201,
                                  "end_token": 201,
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "p[1]",
                                  "start_token": 203,
                                  "end_token": 206,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "p",
                                      "start_token": 203,
                                      "end_token": 203,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 205,
                                      "end_token": 205,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n            vec2.min(min, min, p as vec2.VectorArray);\n            vec2.max(max, max, p as vec2.VectorArray);\n        }",
                          "start_token": 209,
                          "end_token": 240,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "vec2.min(min, min, p as vec2.VectorArray);",
                              "start_token": 210,
                              "end_token": 224,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "vec2.min(min, min, p as vec2.VectorArray)",
                                  "start_token": 210,
                                  "end_token": 223,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "vec2.min",
                                      "start_token": 210,
                                      "end_token": 212,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "vec2",
                                          "start_token": 210,
                                          "end_token": 210,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "min",
                                          "start_token": 212,
                                          "end_token": 212,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "min",
                                      "start_token": 214,
                                      "end_token": 214,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "min",
                                      "start_token": 216,
                                      "end_token": 216,
                                      "children": []
                                    },
                                    {
                                      "type": "AsExpression",
                                      "label": "p as vec2.VectorArray",
                                      "start_token": 218,
                                      "end_token": 222,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "p",
                                          "start_token": 218,
                                          "end_token": 218,
                                          "children": []
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "vec2.VectorArray",
                                          "start_token": 220,
                                          "end_token": 222,
                                          "children": [
                                            {
                                              "type": "FirstNode",
                                              "label": "vec2.VectorArray",
                                              "start_token": 220,
                                              "end_token": 222,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "vec2",
                                                  "start_token": 220,
                                                  "end_token": 220,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "VectorArray",
                                                  "start_token": 222,
                                                  "end_token": 222,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "vec2.max(max, max, p as vec2.VectorArray);",
                              "start_token": 225,
                              "end_token": 239,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "vec2.max(max, max, p as vec2.VectorArray)",
                                  "start_token": 225,
                                  "end_token": 238,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "vec2.max",
                                      "start_token": 225,
                                      "end_token": 227,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "vec2",
                                          "start_token": 225,
                                          "end_token": 225,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "max",
                                          "start_token": 227,
                                          "end_token": 227,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "max",
                                      "start_token": 229,
                                      "end_token": 229,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "max",
                                      "start_token": 231,
                                      "end_token": 231,
                                      "children": []
                                    },
                                    {
                                      "type": "AsExpression",
                                      "label": "p as vec2.VectorArray",
                                      "start_token": 233,
                                      "end_token": 237,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "p",
                                          "start_token": 233,
                                          "end_token": 233,
                                          "children": []
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "vec2.VectorArray",
                                          "start_token": 235,
                                          "end_token": 237,
                                          "children": [
                                            {
                                              "type": "FirstNode",
                                              "label": "vec2.VectorArray",
                                              "start_token": 235,
                                              "end_token": 237,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "vec2",
                                                  "start_token": 235,
                                                  "end_token": 235,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "VectorArray",
                                                  "start_token": 237,
                                                  "end_token": 237,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function centroid(points: number[][]) {\n    let signedArea = 0;\n    let cx = 0;\n    let cy = 0;\n    const len = points.length;\n    let x0 = points[len - 1][0];\n    let y0 = points[len - 1][1];\n    // Polygon should been closed.\n    for (let i = 0; i < len; i++) {\n        const x1 = points[i][0];\n        const y1 = points[i][1];\n        const a = x0 * y1 - x1 * y0;\n        signedArea += a;\n        cx += (x0 + x1) * a;\n        cy += (y0 + y1) * a;\n        x0 = x1;\n        y0 = y1;\n    }\n    return signedArea\n        ? [cx / signedArea / 3, cy / signedArea / 3, signedArea]\n        : [points[0][0] || 0, points[0][1] || 0];\n}",
      "start_token": 243,
      "end_token": 430,
      "children": [
        {
          "type": "Identifier",
          "label": "centroid",
          "start_token": 244,
          "end_token": 244,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "points: number[][]",
          "start_token": 246,
          "end_token": 252,
          "children": [
            {
              "type": "Identifier",
              "label": "points",
              "start_token": 246,
              "end_token": 246,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[][]",
              "start_token": 248,
              "end_token": 252,
              "children": [
                {
                  "type": "ArrayType",
                  "label": "number[]",
                  "start_token": 248,
                  "end_token": 250,
                  "children": [
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 248,
                      "end_token": 248,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n    let signedArea = 0;\n    let cx = 0;\n    let cy = 0;\n    const len = points.length;\n    let x0 = points[len - 1][0];\n    let y0 = points[len - 1][1];\n    // Polygon should been closed.\n    for (let i = 0; i < len; i++) {\n        const x1 = points[i][0];\n        const y1 = points[i][1];\n        const a = x0 * y1 - x1 * y0;\n        signedArea += a;\n        cx += (x0 + x1) * a;\n        cy += (y0 + y1) * a;\n        x0 = x1;\n        y0 = y1;\n    }\n    return signedArea\n        ? [cx / signedArea / 3, cy / signedArea / 3, signedArea]\n        : [points[0][0] || 0, points[0][1] || 0];\n}",
          "start_token": 254,
          "end_token": 430,
          "children": [
            {
              "type": "FirstStatement",
              "label": "let signedArea = 0;",
              "start_token": 255,
              "end_token": 259,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let signedArea = 0",
                  "start_token": 255,
                  "end_token": 258,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "signedArea = 0",
                      "start_token": 256,
                      "end_token": 258,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "signedArea",
                          "start_token": 256,
                          "end_token": 256,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 258,
                          "end_token": 258,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let cx = 0;",
              "start_token": 260,
              "end_token": 264,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let cx = 0",
                  "start_token": 260,
                  "end_token": 263,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "cx = 0",
                      "start_token": 261,
                      "end_token": 263,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "cx",
                          "start_token": 261,
                          "end_token": 261,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 263,
                          "end_token": 263,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let cy = 0;",
              "start_token": 265,
              "end_token": 269,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let cy = 0",
                  "start_token": 265,
                  "end_token": 268,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "cy = 0",
                      "start_token": 266,
                      "end_token": 268,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "cy",
                          "start_token": 266,
                          "end_token": 266,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 268,
                          "end_token": 268,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const len = points.length;",
              "start_token": 270,
              "end_token": 276,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const len = points.length",
                  "start_token": 270,
                  "end_token": 275,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "len = points.length",
                      "start_token": 271,
                      "end_token": 275,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "len",
                          "start_token": 271,
                          "end_token": 271,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "points.length",
                          "start_token": 273,
                          "end_token": 275,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "points",
                              "start_token": 273,
                              "end_token": 273,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "start_token": 275,
                              "end_token": 275,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let x0 = points[len - 1][0];",
              "start_token": 277,
              "end_token": 289,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let x0 = points[len - 1][0]",
                  "start_token": 277,
                  "end_token": 288,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "x0 = points[len - 1][0]",
                      "start_token": 278,
                      "end_token": 288,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "x0",
                          "start_token": 278,
                          "end_token": 278,
                          "children": []
                        },
                        {
                          "type": "ElementAccessExpression",
                          "label": "points[len - 1][0]",
                          "start_token": 280,
                          "end_token": 288,
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "points[len - 1]",
                              "start_token": 280,
                              "end_token": 285,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "points",
                                  "start_token": 280,
                                  "end_token": 280,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "len - 1",
                                  "start_token": 282,
                                  "end_token": 284,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "len",
                                      "start_token": 282,
                                      "end_token": 282,
                                      "children": []
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "start_token": 283,
                                      "end_token": 283,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 284,
                                      "end_token": 284,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 287,
                              "end_token": 287,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "let y0 = points[len - 1][1];",
              "start_token": 290,
              "end_token": 302,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let y0 = points[len - 1][1]",
                  "start_token": 290,
                  "end_token": 301,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "y0 = points[len - 1][1]",
                      "start_token": 291,
                      "end_token": 301,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "y0",
                          "start_token": 291,
                          "end_token": 291,
                          "children": []
                        },
                        {
                          "type": "ElementAccessExpression",
                          "label": "points[len - 1][1]",
                          "start_token": 293,
                          "end_token": 301,
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "points[len - 1]",
                              "start_token": 293,
                              "end_token": 298,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "points",
                                  "start_token": 293,
                                  "end_token": 293,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "len - 1",
                                  "start_token": 295,
                                  "end_token": 297,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "len",
                                      "start_token": 295,
                                      "end_token": 295,
                                      "children": []
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "start_token": 296,
                                      "end_token": 296,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 297,
                                      "end_token": 297,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "start_token": 300,
                              "end_token": 300,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ForStatement",
              "label": "for (let i = 0; i < len; i++) {\n        const x1 = points[i][0];\n        const y1 = points[i][1];\n        const a = x0 * y1 - x1 * y0;\n        signedArea += a;\n        cx += (x0 + x1) * a;\n        cy += (y0 + y1) * a;\n        x0 = x1;\n        y0 = y1;\n    }",
              "start_token": 304,
              "end_token": 388,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "let i = 0",
                  "start_token": 306,
                  "end_token": 309,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "i = 0",
                      "start_token": 307,
                      "end_token": 309,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "start_token": 307,
                          "end_token": 307,
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 309,
                          "end_token": 309,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BinaryExpression",
                  "label": "i < len",
                  "start_token": 311,
                  "end_token": 313,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "i",
                      "start_token": 311,
                      "end_token": 311,
                      "children": []
                    },
                    {
                      "type": "FirstBinaryOperator",
                      "label": "<",
                      "start_token": 312,
                      "end_token": 312,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "len",
                      "start_token": 313,
                      "end_token": 313,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PostfixUnaryExpression",
                  "label": "i++",
                  "start_token": 315,
                  "end_token": 317,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "i",
                      "start_token": 315,
                      "end_token": 315,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n        const x1 = points[i][0];\n        const y1 = points[i][1];\n        const a = x0 * y1 - x1 * y0;\n        signedArea += a;\n        cx += (x0 + x1) * a;\n        cy += (y0 + y1) * a;\n        x0 = x1;\n        y0 = y1;\n    }",
                  "start_token": 319,
                  "end_token": 388,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "const x1 = points[i][0];",
                      "start_token": 320,
                      "end_token": 330,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const x1 = points[i][0]",
                          "start_token": 320,
                          "end_token": 329,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "x1 = points[i][0]",
                              "start_token": 321,
                              "end_token": 329,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "x1",
                                  "start_token": 321,
                                  "end_token": 321,
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "points[i][0]",
                                  "start_token": 323,
                                  "end_token": 329,
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "points[i]",
                                      "start_token": 323,
                                      "end_token": 326,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "points",
                                          "start_token": 323,
                                          "end_token": 323,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "start_token": 325,
                                          "end_token": 325,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 328,
                                      "end_token": 328,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "const y1 = points[i][1];",
                      "start_token": 331,
                      "end_token": 341,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const y1 = points[i][1]",
                          "start_token": 331,
                          "end_token": 340,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "y1 = points[i][1]",
                              "start_token": 332,
                              "end_token": 340,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "y1",
                                  "start_token": 332,
                                  "end_token": 332,
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "points[i][1]",
                                  "start_token": 334,
                                  "end_token": 340,
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "points[i]",
                                      "start_token": 334,
                                      "end_token": 337,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "points",
                                          "start_token": 334,
                                          "end_token": 334,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "start_token": 336,
                                          "end_token": 336,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 339,
                                      "end_token": 339,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "const a = x0 * y1 - x1 * y0;",
                      "start_token": 342,
                      "end_token": 352,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const a = x0 * y1 - x1 * y0",
                          "start_token": 342,
                          "end_token": 351,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "a = x0 * y1 - x1 * y0",
                              "start_token": 343,
                              "end_token": 351,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "a",
                                  "start_token": 343,
                                  "end_token": 343,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "x0 * y1 - x1 * y0",
                                  "start_token": 345,
                                  "end_token": 351,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "x0 * y1",
                                      "start_token": 345,
                                      "end_token": 347,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "x0",
                                          "start_token": 345,
                                          "end_token": 345,
                                          "children": []
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "start_token": 346,
                                          "end_token": 346,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "y1",
                                          "start_token": 347,
                                          "end_token": 347,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "start_token": 348,
                                      "end_token": 348,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "x1 * y0",
                                      "start_token": 349,
                                      "end_token": 351,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "x1",
                                          "start_token": 349,
                                          "end_token": 349,
                                          "children": []
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "start_token": 350,
                                          "end_token": 350,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "y0",
                                          "start_token": 351,
                                          "end_token": 351,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "signedArea += a;",
                      "start_token": 353,
                      "end_token": 357,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "signedArea += a",
                          "start_token": 353,
                          "end_token": 356,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "signedArea",
                              "start_token": 353,
                              "end_token": 353,
                              "children": []
                            },
                            {
                              "type": "FirstCompoundAssignment",
                              "label": "+=",
                              "start_token": 354,
                              "end_token": 355,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "a",
                              "start_token": 356,
                              "end_token": 356,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "cx += (x0 + x1) * a;",
                      "start_token": 358,
                      "end_token": 368,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "cx += (x0 + x1) * a",
                          "start_token": 358,
                          "end_token": 367,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cx",
                              "start_token": 358,
                              "end_token": 358,
                              "children": []
                            },
                            {
                              "type": "FirstCompoundAssignment",
                              "label": "+=",
                              "start_token": 359,
                              "end_token": 360,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "(x0 + x1) * a",
                              "start_token": 361,
                              "end_token": 367,
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(x0 + x1)",
                                  "start_token": 361,
                                  "end_token": 365,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "x0 + x1",
                                      "start_token": 362,
                                      "end_token": 364,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "x0",
                                          "start_token": 362,
                                          "end_token": 362,
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "start_token": 363,
                                          "end_token": 363,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "x1",
                                          "start_token": 364,
                                          "end_token": 364,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "start_token": 366,
                                  "end_token": 366,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "a",
                                  "start_token": 367,
                                  "end_token": 367,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "cy += (y0 + y1) * a;",
                      "start_token": 369,
                      "end_token": 379,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "cy += (y0 + y1) * a",
                          "start_token": 369,
                          "end_token": 378,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cy",
                              "start_token": 369,
                              "end_token": 369,
                              "children": []
                            },
                            {
                              "type": "FirstCompoundAssignment",
                              "label": "+=",
                              "start_token": 370,
                              "end_token": 371,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "(y0 + y1) * a",
                              "start_token": 372,
                              "end_token": 378,
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(y0 + y1)",
                                  "start_token": 372,
                                  "end_token": 376,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "y0 + y1",
                                      "start_token": 373,
                                      "end_token": 375,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "y0",
                                          "start_token": 373,
                                          "end_token": 373,
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "start_token": 374,
                                          "end_token": 374,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "y1",
                                          "start_token": 375,
                                          "end_token": 375,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "start_token": 377,
                                  "end_token": 377,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "a",
                                  "start_token": 378,
                                  "end_token": 378,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "x0 = x1;",
                      "start_token": 380,
                      "end_token": 383,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "x0 = x1",
                          "start_token": 380,
                          "end_token": 382,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "x0",
                              "start_token": 380,
                              "end_token": 380,
                              "children": []
                            },
                            {
                              "type": "FirstAssignment",
                              "label": "=",
                              "start_token": 381,
                              "end_token": 381,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "x1",
                              "start_token": 382,
                              "end_token": 382,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "y0 = y1;",
                      "start_token": 384,
                      "end_token": 387,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "y0 = y1",
                          "start_token": 384,
                          "end_token": 386,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "y0",
                              "start_token": 384,
                              "end_token": 384,
                              "children": []
                            },
                            {
                              "type": "FirstAssignment",
                              "label": "=",
                              "start_token": 385,
                              "end_token": 385,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "y1",
                              "start_token": 386,
                              "end_token": 386,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return signedArea\n        ? [cx / signedArea / 3, cy / signedArea / 3, signedArea]\n        : [points[0][0] || 0, points[0][1] || 0];",
              "start_token": 389,
              "end_token": 429,
              "children": [
                {
                  "type": "ConditionalExpression",
                  "label": "signedArea\n        ? [cx / signedArea / 3, cy / signedArea / 3, signedArea]\n        : [points[0][0] || 0, points[0][1] || 0]",
                  "start_token": 390,
                  "end_token": 428,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "signedArea",
                      "start_token": 390,
                      "end_token": 390,
                      "children": []
                    },
                    {
                      "type": "QuestionToken",
                      "label": "?",
                      "start_token": 391,
                      "end_token": 391,
                      "children": []
                    },
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[cx / signedArea / 3, cy / signedArea / 3, signedArea]",
                      "start_token": 392,
                      "end_token": 406,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "cx / signedArea / 3",
                          "start_token": 393,
                          "end_token": 397,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "cx / signedArea",
                              "start_token": 393,
                              "end_token": 395,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "cx",
                                  "start_token": 393,
                                  "end_token": 393,
                                  "children": []
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "start_token": 394,
                                  "end_token": 394,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "signedArea",
                                  "start_token": 395,
                                  "end_token": 395,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "start_token": 396,
                              "end_token": 396,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "3",
                              "start_token": 397,
                              "end_token": 397,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "cy / signedArea / 3",
                          "start_token": 399,
                          "end_token": 403,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "cy / signedArea",
                              "start_token": 399,
                              "end_token": 401,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "cy",
                                  "start_token": 399,
                                  "end_token": 399,
                                  "children": []
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "start_token": 400,
                                  "end_token": 400,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "signedArea",
                                  "start_token": 401,
                                  "end_token": 401,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "start_token": 402,
                              "end_token": 402,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "3",
                              "start_token": 403,
                              "end_token": 403,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "signedArea",
                          "start_token": 405,
                          "end_token": 405,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ColonToken",
                      "label": ":",
                      "start_token": 407,
                      "end_token": 407,
                      "children": []
                    },
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[points[0][0] || 0, points[0][1] || 0]",
                      "start_token": 408,
                      "end_token": 428,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "points[0][0] || 0",
                          "start_token": 409,
                          "end_token": 417,
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "points[0][0]",
                              "start_token": 409,
                              "end_token": 415,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "points[0]",
                                  "start_token": 409,
                                  "end_token": 412,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "points",
                                      "start_token": 409,
                                      "end_token": 409,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 411,
                                      "end_token": 411,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "start_token": 414,
                                  "end_token": 414,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BarBarToken",
                              "label": "||",
                              "start_token": 416,
                              "end_token": 416,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 417,
                              "end_token": 417,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "points[0][1] || 0",
                          "start_token": 419,
                          "end_token": 427,
                          "children": [
                            {
                              "type": "ElementAccessExpression",
                              "label": "points[0][1]",
                              "start_token": 419,
                              "end_token": 425,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "points[0]",
                                  "start_token": 419,
                                  "end_token": 422,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "points",
                                      "start_token": 419,
                                      "end_token": 419,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 421,
                                      "end_token": 421,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "start_token": 424,
                                  "end_token": 424,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BarBarToken",
                              "label": "||",
                              "start_token": 426,
                              "end_token": 426,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 427,
                              "end_token": 427,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export abstract class Region {\n    readonly name: string;\n    readonly type: 'geoJSON' | 'geoSVG';\n    protected _center: number[];\n    protected _rect: BoundingRect;\n    constructor(\n        name: string\n    ) {\n        this.name = name;\n    }\n    setCenter(center: number[]) {\n        this._center = center;\n    }\n    getCenter() {\n        let center = this._center;\n        if (!center) {\n            // In most cases there are no need to calculate this center.\n            // So calculate only when called.\n            center = this._center = this.calcCenter();\n        }\n        return center;\n    }\n    abstract calcCenter(): number[];\n}",
      "start_token": 431,
      "end_token": 535,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 431,
          "end_token": 431,
          "children": []
        },
        {
          "type": "FirstContextualKeyword",
          "label": "abstract",
          "start_token": 432,
          "end_token": 432,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "Region",
          "start_token": 434,
          "end_token": 434,
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly name: string;",
          "start_token": 436,
          "end_token": 440,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 436,
              "end_token": 436,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "name",
              "start_token": 437,
              "end_token": 437,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 439,
              "end_token": 439,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly type: 'geoJSON' | 'geoSVG';",
          "start_token": 441,
          "end_token": 447,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 441,
              "end_token": 441,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "type",
              "start_token": 442,
              "end_token": 442,
              "children": []
            },
            {
              "type": "UnionType",
              "label": "'geoJSON' | 'geoSVG'",
              "start_token": 444,
              "end_token": 446,
              "children": [
                {
                  "type": "LiteralType",
                  "label": "'geoJSON'",
                  "start_token": 444,
                  "end_token": 444,
                  "children": [
                    {
                      "type": "StringLiteral",
                      "label": "'geoJSON'",
                      "start_token": 444,
                      "end_token": 444,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "LiteralType",
                  "label": "'geoSVG'",
                  "start_token": 446,
                  "end_token": 446,
                  "children": [
                    {
                      "type": "StringLiteral",
                      "label": "'geoSVG'",
                      "start_token": 446,
                      "end_token": 446,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "protected _center: number[];",
          "start_token": 448,
          "end_token": 454,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 448,
              "end_token": 448,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_center",
              "start_token": 449,
              "end_token": 449,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "start_token": 451,
              "end_token": 453,
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 451,
                  "end_token": 451,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "protected _rect: BoundingRect;",
          "start_token": 455,
          "end_token": 459,
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "start_token": 455,
              "end_token": 455,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_rect",
              "start_token": 456,
              "end_token": 456,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "BoundingRect",
              "start_token": 458,
              "end_token": 458,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BoundingRect",
                  "start_token": 458,
                  "end_token": 458,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(\n        name: string\n    ) {\n        this.name = name;\n    }",
          "start_token": 460,
          "end_token": 473,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 462,
              "end_token": 464,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 462,
                  "end_token": 462,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 464,
                  "end_token": 464,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        this.name = name;\n    }",
              "start_token": 466,
              "end_token": 473,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.name = name;",
                  "start_token": 467,
                  "end_token": 472,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.name = name",
                      "start_token": 467,
                      "end_token": 471,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.name",
                          "start_token": 467,
                          "end_token": 469,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 467,
                              "end_token": 467,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "name",
                              "start_token": 469,
                              "end_token": 469,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 470,
                          "end_token": 470,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "start_token": 471,
                          "end_token": 471,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setCenter(center: number[]) {\n        this._center = center;\n    }",
          "start_token": 474,
          "end_token": 489,
          "children": [
            {
              "type": "Identifier",
              "label": "setCenter",
              "start_token": 474,
              "end_token": 474,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "center: number[]",
              "start_token": 476,
              "end_token": 480,
              "children": [
                {
                  "type": "Identifier",
                  "label": "center",
                  "start_token": 476,
                  "end_token": 476,
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "number[]",
                  "start_token": 478,
                  "end_token": 480,
                  "children": [
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 478,
                      "end_token": 478,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        this._center = center;\n    }",
              "start_token": 482,
              "end_token": 489,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this._center = center;",
                  "start_token": 483,
                  "end_token": 488,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this._center = center",
                      "start_token": 483,
                      "end_token": 487,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._center",
                          "start_token": 483,
                          "end_token": 485,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 483,
                              "end_token": 483,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_center",
                              "start_token": 485,
                              "end_token": 485,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 486,
                          "end_token": 486,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "center",
                          "start_token": 487,
                          "end_token": 487,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getCenter() {\n        let center = this._center;\n        if (!center) {\n            // In most cases there are no need to calculate this center.\n            // So calculate only when called.\n            center = this._center = this.calcCenter();\n        }\n        return center;\n    }",
          "start_token": 490,
          "end_token": 525,
          "children": [
            {
              "type": "Identifier",
              "label": "getCenter",
              "start_token": 490,
              "end_token": 490,
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n        let center = this._center;\n        if (!center) {\n            // In most cases there are no need to calculate this center.\n            // So calculate only when called.\n            center = this._center = this.calcCenter();\n        }\n        return center;\n    }",
              "start_token": 493,
              "end_token": 525,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let center = this._center;",
                  "start_token": 494,
                  "end_token": 500,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let center = this._center",
                      "start_token": 494,
                      "end_token": 499,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "center = this._center",
                          "start_token": 495,
                          "end_token": 499,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "center",
                              "start_token": 495,
                              "end_token": 495,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._center",
                              "start_token": 497,
                              "end_token": 499,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 497,
                                  "end_token": 497,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_center",
                                  "start_token": 499,
                                  "end_token": 499,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!center) {\n            // In most cases there are no need to calculate this center.\n            // So calculate only when called.\n            center = this._center = this.calcCenter();\n        }",
                  "start_token": 501,
                  "end_token": 521,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!center",
                      "start_token": 503,
                      "end_token": 504,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "center",
                          "start_token": 504,
                          "end_token": 504,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            // In most cases there are no need to calculate this center.\n            // So calculate only when called.\n            center = this._center = this.calcCenter();\n        }",
                      "start_token": 506,
                      "end_token": 521,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "center = this._center = this.calcCenter();",
                          "start_token": 509,
                          "end_token": 520,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "center = this._center = this.calcCenter()",
                              "start_token": 509,
                              "end_token": 519,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "center",
                                  "start_token": 509,
                                  "end_token": 509,
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 510,
                                  "end_token": 510,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this._center = this.calcCenter()",
                                  "start_token": 511,
                                  "end_token": 519,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this._center",
                                      "start_token": 511,
                                      "end_token": 513,
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "start_token": 511,
                                          "end_token": 511,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "_center",
                                          "start_token": 513,
                                          "end_token": 513,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 514,
                                      "end_token": 514,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.calcCenter()",
                                      "start_token": 515,
                                      "end_token": 519,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.calcCenter",
                                          "start_token": 515,
                                          "end_token": 517,
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "start_token": 515,
                                              "end_token": 515,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "calcCenter",
                                              "start_token": 517,
                                              "end_token": 517,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return center;",
                  "start_token": 522,
                  "end_token": 524,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "center",
                      "start_token": 523,
                      "end_token": 523,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "abstract calcCenter(): number[];",
          "start_token": 526,
          "end_token": 534,
          "children": [
            {
              "type": "FirstContextualKeyword",
              "label": "abstract",
              "start_token": 526,
              "end_token": 526,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "calcCenter",
              "start_token": 527,
              "end_token": 527,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "start_token": 531,
              "end_token": 533,
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 531,
                  "end_token": 531,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GeoJSONPolygonGeometry {\n    readonly type = 'polygon';\n    exterior: number[][];\n    interiors?: number[][][];\n    constructor(exterior: number[][], interiors: number[][][]) {\n        this.exterior = exterior;\n        this.interiors = interiors;\n    }\n}",
      "start_token": 536,
      "end_token": 598,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 536,
          "end_token": 536,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GeoJSONPolygonGeometry",
          "start_token": 538,
          "end_token": 538,
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly type = 'polygon';",
          "start_token": 540,
          "end_token": 544,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 540,
              "end_token": 540,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "type",
              "start_token": 541,
              "end_token": 541,
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "'polygon'",
              "start_token": 543,
              "end_token": 543,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "exterior: number[][];",
          "start_token": 545,
          "end_token": 552,
          "children": [
            {
              "type": "Identifier",
              "label": "exterior",
              "start_token": 545,
              "end_token": 545,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[][]",
              "start_token": 547,
              "end_token": 551,
              "children": [
                {
                  "type": "ArrayType",
                  "label": "number[]",
                  "start_token": 547,
                  "end_token": 549,
                  "children": [
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 547,
                      "end_token": 547,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "interiors?: number[][][];",
          "start_token": 553,
          "end_token": 563,
          "children": [
            {
              "type": "Identifier",
              "label": "interiors",
              "start_token": 553,
              "end_token": 553,
              "children": []
            },
            {
              "type": "QuestionToken",
              "label": "?",
              "start_token": 554,
              "end_token": 554,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[][][]",
              "start_token": 556,
              "end_token": 562,
              "children": [
                {
                  "type": "ArrayType",
                  "label": "number[][]",
                  "start_token": 556,
                  "end_token": 560,
                  "children": [
                    {
                      "type": "ArrayType",
                      "label": "number[]",
                      "start_token": 556,
                      "end_token": 558,
                      "children": [
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "start_token": 556,
                          "end_token": 556,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(exterior: number[][], interiors: number[][][]) {\n        this.exterior = exterior;\n        this.interiors = interiors;\n    }",
          "start_token": 564,
          "end_token": 597,
          "children": [
            {
              "type": "Parameter",
              "label": "exterior: number[][]",
              "start_token": 566,
              "end_token": 572,
              "children": [
                {
                  "type": "Identifier",
                  "label": "exterior",
                  "start_token": 566,
                  "end_token": 566,
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "number[][]",
                  "start_token": 568,
                  "end_token": 572,
                  "children": [
                    {
                      "type": "ArrayType",
                      "label": "number[]",
                      "start_token": 568,
                      "end_token": 570,
                      "children": [
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "start_token": 568,
                          "end_token": 568,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "interiors: number[][][]",
              "start_token": 574,
              "end_token": 582,
              "children": [
                {
                  "type": "Identifier",
                  "label": "interiors",
                  "start_token": 574,
                  "end_token": 574,
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "number[][][]",
                  "start_token": 576,
                  "end_token": 582,
                  "children": [
                    {
                      "type": "ArrayType",
                      "label": "number[][]",
                      "start_token": 576,
                      "end_token": 580,
                      "children": [
                        {
                          "type": "ArrayType",
                          "label": "number[]",
                          "start_token": 576,
                          "end_token": 578,
                          "children": [
                            {
                              "type": "NumberKeyword",
                              "label": "number",
                              "start_token": 576,
                              "end_token": 576,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        this.exterior = exterior;\n        this.interiors = interiors;\n    }",
              "start_token": 584,
              "end_token": 597,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.exterior = exterior;",
                  "start_token": 585,
                  "end_token": 590,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.exterior = exterior",
                      "start_token": 585,
                      "end_token": 589,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.exterior",
                          "start_token": 585,
                          "end_token": 587,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 585,
                              "end_token": 585,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "exterior",
                              "start_token": 587,
                              "end_token": 587,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 588,
                          "end_token": 588,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "exterior",
                          "start_token": 589,
                          "end_token": 589,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.interiors = interiors;",
                  "start_token": 591,
                  "end_token": 596,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.interiors = interiors",
                      "start_token": 591,
                      "end_token": 595,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.interiors",
                          "start_token": 591,
                          "end_token": 593,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 591,
                              "end_token": 591,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "interiors",
                              "start_token": 593,
                              "end_token": 593,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 594,
                          "end_token": 594,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "interiors",
                          "start_token": 595,
                          "end_token": 595,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GeoJSONLineStringGeometry {\n    readonly type = 'linestring';\n    points: number[][][];\n    constructor(points: number[][][]) {\n        this.points = points;\n    }\n}",
      "start_token": 599,
      "end_token": 638,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 599,
          "end_token": 599,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GeoJSONLineStringGeometry",
          "start_token": 601,
          "end_token": 601,
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly type = 'linestring';",
          "start_token": 603,
          "end_token": 607,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 603,
              "end_token": 603,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "type",
              "start_token": 604,
              "end_token": 604,
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "'linestring'",
              "start_token": 606,
              "end_token": 606,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "points: number[][][];",
          "start_token": 608,
          "end_token": 617,
          "children": [
            {
              "type": "Identifier",
              "label": "points",
              "start_token": 608,
              "end_token": 608,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[][][]",
              "start_token": 610,
              "end_token": 616,
              "children": [
                {
                  "type": "ArrayType",
                  "label": "number[][]",
                  "start_token": 610,
                  "end_token": 614,
                  "children": [
                    {
                      "type": "ArrayType",
                      "label": "number[]",
                      "start_token": 610,
                      "end_token": 612,
                      "children": [
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "start_token": 610,
                          "end_token": 610,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(points: number[][][]) {\n        this.points = points;\n    }",
          "start_token": 618,
          "end_token": 637,
          "children": [
            {
              "type": "Parameter",
              "label": "points: number[][][]",
              "start_token": 620,
              "end_token": 628,
              "children": [
                {
                  "type": "Identifier",
                  "label": "points",
                  "start_token": 620,
                  "end_token": 620,
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "number[][][]",
                  "start_token": 622,
                  "end_token": 628,
                  "children": [
                    {
                      "type": "ArrayType",
                      "label": "number[][]",
                      "start_token": 622,
                      "end_token": 626,
                      "children": [
                        {
                          "type": "ArrayType",
                          "label": "number[]",
                          "start_token": 622,
                          "end_token": 624,
                          "children": [
                            {
                              "type": "NumberKeyword",
                              "label": "number",
                              "start_token": 622,
                              "end_token": 622,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        this.points = points;\n    }",
              "start_token": 630,
              "end_token": 637,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.points = points;",
                  "start_token": 631,
                  "end_token": 636,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.points = points",
                      "start_token": 631,
                      "end_token": 635,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.points",
                          "start_token": 631,
                          "end_token": 633,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 631,
                              "end_token": 631,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "points",
                              "start_token": 633,
                              "end_token": 633,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 634,
                          "end_token": 634,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "points",
                          "start_token": 635,
                          "end_token": 635,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GeoJSONRegion extends Region {\n    readonly type = 'geoJSON';\n    readonly geometries: (GeoJSONPolygonGeometry | GeoJSONLineStringGeometry)[];\n    // Injected outside.\n    properties: GeoJSON['features'][0]['properties'];\n    constructor(\n        name: string,\n        geometries: GeoJSONRegion['geometries'],\n        cp: GeoJSON['features'][0]['properties']['cp']\n    ) {\n        super(name);\n        this.geometries = geometries;\n        this._center = cp && [cp[0], cp[1]];\n    }\n    calcCenter() {\n        const geometries = this.geometries;\n        let largestGeo: GeoJSONPolygonGeometry;\n        let largestGeoSize = 0;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i] as GeoJSONPolygonGeometry;\n            const exterior = geo.exterior;\n            // Simple trick to use points count instead of polygon area as region size.\n            // Ignore linestring\n            const size = exterior && exterior.length;\n            if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }\n        }\n        if (largestGeo) {\n            return centroid(largestGeo.exterior);\n        }\n        // from bounding rect by default.\n        const rect = this.getBoundingRect();\n        return [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }\n    getBoundingRect(projection?: GeoProjection): BoundingRect {\n        let rect = this._rect;\n        // Always recalculate if using projection.\n        if (rect && !projection) {\n            return rect;\n        }\n        const min = [Infinity, Infinity];\n        const max = [-Infinity, -Infinity];\n        const geometries = this.geometries;\n        each(geometries, geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        });\n        // Normalie invalid bounding.\n        if (!(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        rect = new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        );\n        if (!projection) {\n            this._rect = rect;\n        }\n        return rect;\n    }\n    contain(coord: number[]): boolean {\n        const rect = this.getBoundingRect();\n        const geometries = this.geometries;\n        if (!rect.contain(coord[0], coord[1])) {\n            return false;\n        }\n        loopGeo: for (let i = 0, len = geometries.length; i < len; i++) {\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    transformTo(x: number, y: number, width: number, height: number): void {\n        let rect = this.getBoundingRect();\n        const aspect = rect.width / rect.height;\n        if (!width) {\n            width = aspect * height;\n        }\n        else if (!height) {\n            height = width / aspect;\n        }\n        const target = new BoundingRect(x, y, width, height);\n        const transform = rect.calculateTransform(target);\n        const geometries = this.geometries;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i];\n            if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }\n        }\n        rect = this._rect;\n        rect.copy(target);\n        // Update center\n        this._center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }\n    cloneShallow(name: string): GeoJSONRegion {\n        name == null && (name = this.name);\n        const newRegion = new GeoJSONRegion(name, this.geometries, this._center);\n        newRegion._rect = this._rect;\n        newRegion.transformTo = null; // Simply avoid to be called.\n        return newRegion;\n    }\n}",
      "start_token": 639,
      "end_token": 1577,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 639,
          "end_token": 639,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GeoJSONRegion",
          "start_token": 641,
          "end_token": 641,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends Region",
          "start_token": 642,
          "end_token": 643,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "Region",
              "start_token": 643,
              "end_token": 643,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Region",
                  "start_token": 643,
                  "end_token": 643,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly type = 'geoJSON';",
          "start_token": 645,
          "end_token": 649,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 645,
              "end_token": 645,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "type",
              "start_token": 646,
              "end_token": 646,
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "'geoJSON'",
              "start_token": 648,
              "end_token": 648,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly geometries: (GeoJSONPolygonGeometry | GeoJSONLineStringGeometry)[];",
          "start_token": 650,
          "end_token": 660,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 650,
              "end_token": 650,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "geometries",
              "start_token": 651,
              "end_token": 651,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "(GeoJSONPolygonGeometry | GeoJSONLineStringGeometry)[]",
              "start_token": 653,
              "end_token": 659,
              "children": [
                {
                  "type": "ParenthesizedType",
                  "label": "(GeoJSONPolygonGeometry | GeoJSONLineStringGeometry)",
                  "start_token": 653,
                  "end_token": 657,
                  "children": [
                    {
                      "type": "UnionType",
                      "label": "GeoJSONPolygonGeometry | GeoJSONLineStringGeometry",
                      "start_token": 654,
                      "end_token": 656,
                      "children": [
                        {
                          "type": "TypeReference",
                          "label": "GeoJSONPolygonGeometry",
                          "start_token": 654,
                          "end_token": 654,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "GeoJSONPolygonGeometry",
                              "start_token": 654,
                              "end_token": 654,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "TypeReference",
                          "label": "GeoJSONLineStringGeometry",
                          "start_token": 656,
                          "end_token": 656,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "GeoJSONLineStringGeometry",
                              "start_token": 656,
                              "end_token": 656,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "properties: GeoJSON['features'][0]['properties'];",
          "start_token": 662,
          "end_token": 674,
          "children": [
            {
              "type": "Identifier",
              "label": "properties",
              "start_token": 662,
              "end_token": 662,
              "children": []
            },
            {
              "type": "IndexedAccessType",
              "label": "GeoJSON['features'][0]['properties']",
              "start_token": 664,
              "end_token": 673,
              "children": [
                {
                  "type": "IndexedAccessType",
                  "label": "GeoJSON['features'][0]",
                  "start_token": 664,
                  "end_token": 670,
                  "children": [
                    {
                      "type": "IndexedAccessType",
                      "label": "GeoJSON['features']",
                      "start_token": 664,
                      "end_token": 667,
                      "children": [
                        {
                          "type": "TypeReference",
                          "label": "GeoJSON",
                          "start_token": 664,
                          "end_token": 664,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "GeoJSON",
                              "start_token": 664,
                              "end_token": 664,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "LiteralType",
                          "label": "'features'",
                          "start_token": 666,
                          "end_token": 666,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'features'",
                              "start_token": 666,
                              "end_token": 666,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "LiteralType",
                      "label": "0",
                      "start_token": 669,
                      "end_token": 669,
                      "children": [
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "start_token": 669,
                          "end_token": 669,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "LiteralType",
                  "label": "'properties'",
                  "start_token": 672,
                  "end_token": 672,
                  "children": [
                    {
                      "type": "StringLiteral",
                      "label": "'properties'",
                      "start_token": 672,
                      "end_token": 672,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(\n        name: string,\n        geometries: GeoJSONRegion['geometries'],\n        cp: GeoJSON['features'][0]['properties']['cp']\n    ) {\n        super(name);\n        this.geometries = geometries;\n        this._center = cp && [cp[0], cp[1]];\n    }",
          "start_token": 675,
          "end_token": 734,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 677,
              "end_token": 679,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 677,
                  "end_token": 677,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 679,
                  "end_token": 679,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "geometries: GeoJSONRegion['geometries']",
              "start_token": 681,
              "end_token": 686,
              "children": [
                {
                  "type": "Identifier",
                  "label": "geometries",
                  "start_token": 681,
                  "end_token": 681,
                  "children": []
                },
                {
                  "type": "IndexedAccessType",
                  "label": "GeoJSONRegion['geometries']",
                  "start_token": 683,
                  "end_token": 686,
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "GeoJSONRegion",
                      "start_token": 683,
                      "end_token": 683,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "GeoJSONRegion",
                          "start_token": 683,
                          "end_token": 683,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "LiteralType",
                      "label": "'geometries'",
                      "start_token": 685,
                      "end_token": 685,
                      "children": [
                        {
                          "type": "StringLiteral",
                          "label": "'geometries'",
                          "start_token": 685,
                          "end_token": 685,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "cp: GeoJSON['features'][0]['properties']['cp']",
              "start_token": 688,
              "end_token": 702,
              "children": [
                {
                  "type": "Identifier",
                  "label": "cp",
                  "start_token": 688,
                  "end_token": 688,
                  "children": []
                },
                {
                  "type": "IndexedAccessType",
                  "label": "GeoJSON['features'][0]['properties']['cp']",
                  "start_token": 690,
                  "end_token": 702,
                  "children": [
                    {
                      "type": "IndexedAccessType",
                      "label": "GeoJSON['features'][0]['properties']",
                      "start_token": 690,
                      "end_token": 699,
                      "children": [
                        {
                          "type": "IndexedAccessType",
                          "label": "GeoJSON['features'][0]",
                          "start_token": 690,
                          "end_token": 696,
                          "children": [
                            {
                              "type": "IndexedAccessType",
                              "label": "GeoJSON['features']",
                              "start_token": 690,
                              "end_token": 693,
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "GeoJSON",
                                  "start_token": 690,
                                  "end_token": 690,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "GeoJSON",
                                      "start_token": 690,
                                      "end_token": 690,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LiteralType",
                                  "label": "'features'",
                                  "start_token": 692,
                                  "end_token": 692,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'features'",
                                      "start_token": 692,
                                      "end_token": 692,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "LiteralType",
                              "label": "0",
                              "start_token": 695,
                              "end_token": 695,
                              "children": [
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "start_token": 695,
                                  "end_token": 695,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "LiteralType",
                          "label": "'properties'",
                          "start_token": 698,
                          "end_token": 698,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'properties'",
                              "start_token": 698,
                              "end_token": 698,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "LiteralType",
                      "label": "'cp'",
                      "start_token": 701,
                      "end_token": 701,
                      "children": [
                        {
                          "type": "StringLiteral",
                          "label": "'cp'",
                          "start_token": 701,
                          "end_token": 701,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        super(name);\n        this.geometries = geometries;\n        this._center = cp && [cp[0], cp[1]];\n    }",
              "start_token": 704,
              "end_token": 734,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(name);",
                  "start_token": 705,
                  "end_token": 709,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(name)",
                      "start_token": 705,
                      "end_token": 708,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 705,
                          "end_token": 705,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "start_token": 707,
                          "end_token": 707,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.geometries = geometries;",
                  "start_token": 710,
                  "end_token": 715,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.geometries = geometries",
                      "start_token": 710,
                      "end_token": 714,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.geometries",
                          "start_token": 710,
                          "end_token": 712,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 710,
                              "end_token": 710,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 712,
                              "end_token": 712,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 713,
                          "end_token": 713,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "geometries",
                          "start_token": 714,
                          "end_token": 714,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this._center = cp && [cp[0], cp[1]];",
                  "start_token": 716,
                  "end_token": 733,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this._center = cp && [cp[0], cp[1]]",
                      "start_token": 716,
                      "end_token": 732,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._center",
                          "start_token": 716,
                          "end_token": 718,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 716,
                              "end_token": 716,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_center",
                              "start_token": 718,
                              "end_token": 718,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 719,
                          "end_token": 719,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "cp && [cp[0], cp[1]]",
                          "start_token": 720,
                          "end_token": 732,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cp",
                              "start_token": 720,
                              "end_token": 720,
                              "children": []
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 721,
                              "end_token": 721,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[cp[0], cp[1]]",
                              "start_token": 722,
                              "end_token": 732,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "cp[0]",
                                  "start_token": 723,
                                  "end_token": 726,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "cp",
                                      "start_token": 723,
                                      "end_token": 723,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 725,
                                      "end_token": 725,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "cp[1]",
                                  "start_token": 728,
                                  "end_token": 731,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "cp",
                                      "start_token": 728,
                                      "end_token": 728,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 730,
                                      "end_token": 730,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "calcCenter() {\n        const geometries = this.geometries;\n        let largestGeo: GeoJSONPolygonGeometry;\n        let largestGeoSize = 0;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i] as GeoJSONPolygonGeometry;\n            const exterior = geo.exterior;\n            // Simple trick to use points count instead of polygon area as region size.\n            // Ignore linestring\n            const size = exterior && exterior.length;\n            if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }\n        }\n        if (largestGeo) {\n            return centroid(largestGeo.exterior);\n        }\n        // from bounding rect by default.\n        const rect = this.getBoundingRect();\n        return [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }",
          "start_token": 735,
          "end_token": 866,
          "children": [
            {
              "type": "Identifier",
              "label": "calcCenter",
              "start_token": 735,
              "end_token": 735,
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n        const geometries = this.geometries;\n        let largestGeo: GeoJSONPolygonGeometry;\n        let largestGeoSize = 0;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i] as GeoJSONPolygonGeometry;\n            const exterior = geo.exterior;\n            // Simple trick to use points count instead of polygon area as region size.\n            // Ignore linestring\n            const size = exterior && exterior.length;\n            if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }\n        }\n        if (largestGeo) {\n            return centroid(largestGeo.exterior);\n        }\n        // from bounding rect by default.\n        const rect = this.getBoundingRect();\n        return [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }",
              "start_token": 738,
              "end_token": 866,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const geometries = this.geometries;",
                  "start_token": 739,
                  "end_token": 745,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const geometries = this.geometries",
                      "start_token": 739,
                      "end_token": 744,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "geometries = this.geometries",
                          "start_token": 740,
                          "end_token": 744,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 740,
                              "end_token": 740,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.geometries",
                              "start_token": 742,
                              "end_token": 744,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 742,
                                  "end_token": 742,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "geometries",
                                  "start_token": 744,
                                  "end_token": 744,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let largestGeo: GeoJSONPolygonGeometry;",
                  "start_token": 746,
                  "end_token": 750,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let largestGeo: GeoJSONPolygonGeometry",
                      "start_token": 746,
                      "end_token": 749,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "largestGeo: GeoJSONPolygonGeometry",
                          "start_token": 747,
                          "end_token": 749,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "largestGeo",
                              "start_token": 747,
                              "end_token": 747,
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "GeoJSONPolygonGeometry",
                              "start_token": 749,
                              "end_token": 749,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "GeoJSONPolygonGeometry",
                                  "start_token": 749,
                                  "end_token": 749,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let largestGeoSize = 0;",
                  "start_token": 751,
                  "end_token": 755,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let largestGeoSize = 0",
                      "start_token": 751,
                      "end_token": 754,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "largestGeoSize = 0",
                          "start_token": 752,
                          "end_token": 754,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "largestGeoSize",
                              "start_token": 752,
                              "end_token": 752,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 754,
                              "end_token": 754,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i] as GeoJSONPolygonGeometry;\n            const exterior = geo.exterior;\n            // Simple trick to use points count instead of polygon area as region size.\n            // Ignore linestring\n            const size = exterior && exterior.length;\n            if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }\n        }",
                  "start_token": 756,
                  "end_token": 818,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "start_token": 758,
                      "end_token": 761,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "start_token": 759,
                          "end_token": 761,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "start_token": 759,
                              "end_token": 759,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 761,
                              "end_token": 761,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < geometries.length",
                      "start_token": 763,
                      "end_token": 767,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "start_token": 763,
                          "end_token": 763,
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "start_token": 764,
                          "end_token": 764,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "geometries.length",
                          "start_token": 765,
                          "end_token": 767,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 765,
                              "end_token": 765,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "start_token": 767,
                              "end_token": 767,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "start_token": 769,
                      "end_token": 771,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "start_token": 769,
                          "end_token": 769,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            const geo = geometries[i] as GeoJSONPolygonGeometry;\n            const exterior = geo.exterior;\n            // Simple trick to use points count instead of polygon area as region size.\n            // Ignore linestring\n            const size = exterior && exterior.length;\n            if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }\n        }",
                      "start_token": 773,
                      "end_token": 818,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const geo = geometries[i] as GeoJSONPolygonGeometry;",
                          "start_token": 774,
                          "end_token": 783,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const geo = geometries[i] as GeoJSONPolygonGeometry",
                              "start_token": 774,
                              "end_token": 782,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "geo = geometries[i] as GeoJSONPolygonGeometry",
                                  "start_token": 775,
                                  "end_token": 782,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "geo",
                                      "start_token": 775,
                                      "end_token": 775,
                                      "children": []
                                    },
                                    {
                                      "type": "AsExpression",
                                      "label": "geometries[i] as GeoJSONPolygonGeometry",
                                      "start_token": 777,
                                      "end_token": 782,
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "geometries[i]",
                                          "start_token": 777,
                                          "end_token": 780,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geometries",
                                              "start_token": 777,
                                              "end_token": 777,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "i",
                                              "start_token": 779,
                                              "end_token": 779,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "GeoJSONPolygonGeometry",
                                          "start_token": 782,
                                          "end_token": 782,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "GeoJSONPolygonGeometry",
                                              "start_token": 782,
                                              "end_token": 782,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const exterior = geo.exterior;",
                          "start_token": 784,
                          "end_token": 790,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const exterior = geo.exterior",
                              "start_token": 784,
                              "end_token": 789,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "exterior = geo.exterior",
                                  "start_token": 785,
                                  "end_token": 789,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "exterior",
                                      "start_token": 785,
                                      "end_token": 785,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "geo.exterior",
                                      "start_token": 787,
                                      "end_token": 789,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "geo",
                                          "start_token": 787,
                                          "end_token": 787,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "exterior",
                                          "start_token": 789,
                                          "end_token": 789,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const size = exterior && exterior.length;",
                          "start_token": 793,
                          "end_token": 801,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const size = exterior && exterior.length",
                              "start_token": 793,
                              "end_token": 800,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "size = exterior && exterior.length",
                                  "start_token": 794,
                                  "end_token": 800,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "size",
                                      "start_token": 794,
                                      "end_token": 794,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "exterior && exterior.length",
                                      "start_token": 796,
                                      "end_token": 800,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "exterior",
                                          "start_token": 796,
                                          "end_token": 796,
                                          "children": []
                                        },
                                        {
                                          "type": "AmpersandAmpersandToken",
                                          "label": "&&",
                                          "start_token": 797,
                                          "end_token": 797,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "exterior.length",
                                          "start_token": 798,
                                          "end_token": 800,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "exterior",
                                              "start_token": 798,
                                              "end_token": 798,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "length",
                                              "start_token": 800,
                                              "end_token": 800,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (size > largestGeoSize) {\n                largestGeo = geo;\n                largestGeoSize = size;\n            }",
                          "start_token": 802,
                          "end_token": 817,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "size > largestGeoSize",
                              "start_token": 804,
                              "end_token": 806,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "size",
                                  "start_token": 804,
                                  "end_token": 804,
                                  "children": []
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "start_token": 805,
                                  "end_token": 805,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "largestGeoSize",
                                  "start_token": 806,
                                  "end_token": 806,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n                largestGeo = geo;\n                largestGeoSize = size;\n            }",
                              "start_token": 808,
                              "end_token": 817,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "largestGeo = geo;",
                                  "start_token": 809,
                                  "end_token": 812,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "largestGeo = geo",
                                      "start_token": 809,
                                      "end_token": 811,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "largestGeo",
                                          "start_token": 809,
                                          "end_token": 809,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "start_token": 810,
                                          "end_token": 810,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "geo",
                                          "start_token": 811,
                                          "end_token": 811,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "largestGeoSize = size;",
                                  "start_token": 813,
                                  "end_token": 816,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "largestGeoSize = size",
                                      "start_token": 813,
                                      "end_token": 815,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "largestGeoSize",
                                          "start_token": 813,
                                          "end_token": 813,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "start_token": 814,
                                          "end_token": 814,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "size",
                                          "start_token": 815,
                                          "end_token": 815,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (largestGeo) {\n            return centroid(largestGeo.exterior);\n        }",
                  "start_token": 819,
                  "end_token": 832,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "largestGeo",
                      "start_token": 821,
                      "end_token": 821,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n            return centroid(largestGeo.exterior);\n        }",
                      "start_token": 823,
                      "end_token": 832,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return centroid(largestGeo.exterior);",
                          "start_token": 824,
                          "end_token": 831,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "centroid(largestGeo.exterior)",
                              "start_token": 825,
                              "end_token": 830,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "centroid",
                                  "start_token": 825,
                                  "end_token": 825,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "largestGeo.exterior",
                                  "start_token": 827,
                                  "end_token": 829,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "largestGeo",
                                      "start_token": 827,
                                      "end_token": 827,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "exterior",
                                      "start_token": 829,
                                      "end_token": 829,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const rect = this.getBoundingRect();",
                  "start_token": 834,
                  "end_token": 842,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const rect = this.getBoundingRect()",
                      "start_token": 834,
                      "end_token": 841,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "rect = this.getBoundingRect()",
                          "start_token": 835,
                          "end_token": 841,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 835,
                              "end_token": 835,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.getBoundingRect()",
                              "start_token": 837,
                              "end_token": 841,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getBoundingRect",
                                  "start_token": 837,
                                  "end_token": 839,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 837,
                                      "end_token": 837,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getBoundingRect",
                                      "start_token": 839,
                                      "end_token": 839,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];",
                  "start_token": 843,
                  "end_token": 865,
                  "children": [
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ]",
                      "start_token": 844,
                      "end_token": 864,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "rect.x + rect.width / 2",
                          "start_token": 845,
                          "end_token": 853,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "rect.x",
                              "start_token": 845,
                              "end_token": 847,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "rect",
                                  "start_token": 845,
                                  "end_token": 845,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "x",
                                  "start_token": 847,
                                  "end_token": 847,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "start_token": 848,
                              "end_token": 848,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "rect.width / 2",
                              "start_token": 849,
                              "end_token": 853,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.width",
                                  "start_token": 849,
                                  "end_token": 851,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 849,
                                      "end_token": 849,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "start_token": 851,
                                      "end_token": 851,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "start_token": 852,
                                  "end_token": 852,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "2",
                                  "start_token": 853,
                                  "end_token": 853,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "rect.y + rect.height / 2",
                          "start_token": 855,
                          "end_token": 863,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "rect.y",
                              "start_token": 855,
                              "end_token": 857,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "rect",
                                  "start_token": 855,
                                  "end_token": 855,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "y",
                                  "start_token": 857,
                                  "end_token": 857,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "start_token": 858,
                              "end_token": 858,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "rect.height / 2",
                              "start_token": 859,
                              "end_token": 863,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.height",
                                  "start_token": 859,
                                  "end_token": 861,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 859,
                                      "end_token": 859,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "start_token": 861,
                                      "end_token": 861,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "start_token": 862,
                                  "end_token": 862,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "2",
                                  "start_token": 863,
                                  "end_token": 863,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getBoundingRect(projection?: GeoProjection): BoundingRect {\n        let rect = this._rect;\n        // Always recalculate if using projection.\n        if (rect && !projection) {\n            return rect;\n        }\n        const min = [Infinity, Infinity];\n        const max = [-Infinity, -Infinity];\n        const geometries = this.geometries;\n        each(geometries, geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        });\n        // Normalie invalid bounding.\n        if (!(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        rect = new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        );\n        if (!projection) {\n            this._rect = rect;\n        }\n        return rect;\n    }",
          "start_token": 867,
          "end_token": 1100,
          "children": [
            {
              "type": "Identifier",
              "label": "getBoundingRect",
              "start_token": 867,
              "end_token": 867,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "projection?: GeoProjection",
              "start_token": 869,
              "end_token": 872,
              "children": [
                {
                  "type": "Identifier",
                  "label": "projection",
                  "start_token": 869,
                  "end_token": 869,
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "start_token": 870,
                  "end_token": 870,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "GeoProjection",
                  "start_token": 872,
                  "end_token": 872,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "GeoProjection",
                      "start_token": 872,
                      "end_token": 872,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "BoundingRect",
              "start_token": 875,
              "end_token": 875,
              "children": [
                {
                  "type": "Identifier",
                  "label": "BoundingRect",
                  "start_token": 875,
                  "end_token": 875,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        let rect = this._rect;\n        // Always recalculate if using projection.\n        if (rect && !projection) {\n            return rect;\n        }\n        const min = [Infinity, Infinity];\n        const max = [-Infinity, -Infinity];\n        const geometries = this.geometries;\n        each(geometries, geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        });\n        // Normalie invalid bounding.\n        if (!(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        rect = new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        );\n        if (!projection) {\n            this._rect = rect;\n        }\n        return rect;\n    }",
              "start_token": 876,
              "end_token": 1100,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let rect = this._rect;",
                  "start_token": 877,
                  "end_token": 883,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let rect = this._rect",
                      "start_token": 877,
                      "end_token": 882,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "rect = this._rect",
                          "start_token": 878,
                          "end_token": 882,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 878,
                              "end_token": 878,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._rect",
                              "start_token": 880,
                              "end_token": 882,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 880,
                                  "end_token": 880,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_rect",
                                  "start_token": 882,
                                  "end_token": 882,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (rect && !projection) {\n            return rect;\n        }",
                  "start_token": 885,
                  "end_token": 896,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "rect && !projection",
                      "start_token": 887,
                      "end_token": 890,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "rect",
                          "start_token": 887,
                          "end_token": 887,
                          "children": []
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 888,
                          "end_token": 888,
                          "children": []
                        },
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "!projection",
                          "start_token": 889,
                          "end_token": 890,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "projection",
                              "start_token": 890,
                              "end_token": 890,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            return rect;\n        }",
                      "start_token": 892,
                      "end_token": 896,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return rect;",
                          "start_token": 893,
                          "end_token": 895,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 894,
                              "end_token": 894,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const min = [Infinity, Infinity];",
                  "start_token": 897,
                  "end_token": 905,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const min = [Infinity, Infinity]",
                      "start_token": 897,
                      "end_token": 904,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "min = [Infinity, Infinity]",
                          "start_token": 898,
                          "end_token": 904,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "min",
                              "start_token": 898,
                              "end_token": 898,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[Infinity, Infinity]",
                              "start_token": 900,
                              "end_token": 904,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Infinity",
                                  "start_token": 901,
                                  "end_token": 901,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "Infinity",
                                  "start_token": 903,
                                  "end_token": 903,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const max = [-Infinity, -Infinity];",
                  "start_token": 906,
                  "end_token": 916,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const max = [-Infinity, -Infinity]",
                      "start_token": 906,
                      "end_token": 915,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "max = [-Infinity, -Infinity]",
                          "start_token": 907,
                          "end_token": 915,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "max",
                              "start_token": 907,
                              "end_token": 907,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[-Infinity, -Infinity]",
                              "start_token": 909,
                              "end_token": 915,
                              "children": [
                                {
                                  "type": "PrefixUnaryExpression",
                                  "label": "-Infinity",
                                  "start_token": 910,
                                  "end_token": 911,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Infinity",
                                      "start_token": 911,
                                      "end_token": 911,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PrefixUnaryExpression",
                                  "label": "-Infinity",
                                  "start_token": 913,
                                  "end_token": 914,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Infinity",
                                      "start_token": 914,
                                      "end_token": 914,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const geometries = this.geometries;",
                  "start_token": 917,
                  "end_token": 923,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const geometries = this.geometries",
                      "start_token": 917,
                      "end_token": 922,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "geometries = this.geometries",
                          "start_token": 918,
                          "end_token": 922,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 918,
                              "end_token": 918,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.geometries",
                              "start_token": 920,
                              "end_token": 922,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 920,
                                  "end_token": 920,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "geometries",
                                  "start_token": 922,
                                  "end_token": 922,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "each(geometries, geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        });",
                  "start_token": 924,
                  "end_token": 985,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "each(geometries, geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        })",
                      "start_token": 924,
                      "end_token": 984,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "each",
                          "start_token": 924,
                          "end_token": 924,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "geometries",
                          "start_token": 926,
                          "end_token": 926,
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "geo => {\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        }",
                          "start_token": 928,
                          "end_token": 983,
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "geo",
                              "start_token": 928,
                              "end_token": 928,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "geo",
                                  "start_token": 928,
                                  "end_token": 928,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "start_token": 929,
                              "end_token": 929,
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n            if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }\n        }",
                              "start_token": 930,
                              "end_token": 983,
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (geo.type === 'polygon') {\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }\n            else {\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }",
                                  "start_token": 931,
                                  "end_token": 982,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "geo.type === 'polygon'",
                                      "start_token": 933,
                                      "end_token": 937,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "geo.type",
                                          "start_token": 933,
                                          "end_token": 935,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geo",
                                              "start_token": 933,
                                              "end_token": 933,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "type",
                                              "start_token": 935,
                                              "end_token": 935,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "EqualsEqualsEqualsToken",
                                          "label": "===",
                                          "start_token": 936,
                                          "end_token": 936,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'polygon'",
                                          "start_token": 937,
                                          "end_token": 937,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n                // Doesn't consider hole\n                updateBBoxFromPoints(geo.exterior, min, max, projection);\n            }",
                                      "start_token": 939,
                                      "end_token": 954,
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "updateBBoxFromPoints(geo.exterior, min, max, projection);",
                                          "start_token": 941,
                                          "end_token": 953,
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "updateBBoxFromPoints(geo.exterior, min, max, projection)",
                                              "start_token": 941,
                                              "end_token": 952,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "updateBBoxFromPoints",
                                                  "start_token": 941,
                                                  "end_token": 941,
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "geo.exterior",
                                                  "start_token": 943,
                                                  "end_token": 945,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "geo",
                                                      "start_token": 943,
                                                      "end_token": 943,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "exterior",
                                                      "start_token": 945,
                                                      "end_token": 945,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "min",
                                                  "start_token": 947,
                                                  "end_token": 947,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "max",
                                                  "start_token": 949,
                                                  "end_token": 949,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "projection",
                                                  "start_token": 951,
                                                  "end_token": 951,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n                each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });\n            }",
                                      "start_token": 956,
                                      "end_token": 982,
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                });",
                                          "start_token": 957,
                                          "end_token": 981,
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "each(geo.points, (points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                })",
                                              "start_token": 957,
                                              "end_token": 980,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "each",
                                                  "start_token": 957,
                                                  "end_token": 957,
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "geo.points",
                                                  "start_token": 959,
                                                  "end_token": 961,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "geo",
                                                      "start_token": 959,
                                                      "end_token": 959,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "points",
                                                      "start_token": 961,
                                                      "end_token": 961,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ArrowFunction",
                                                  "label": "(points) => {\n                    updateBBoxFromPoints(points, min, max, projection);\n                }",
                                                  "start_token": 963,
                                                  "end_token": 979,
                                                  "children": [
                                                    {
                                                      "type": "Parameter",
                                                      "label": "points",
                                                      "start_token": 964,
                                                      "end_token": 964,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "points",
                                                          "start_token": 964,
                                                          "end_token": 964,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "EqualsGreaterThanToken",
                                                      "label": "=>",
                                                      "start_token": 966,
                                                      "end_token": 966,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Block",
                                                      "label": "{\n                    updateBBoxFromPoints(points, min, max, projection);\n                }",
                                                      "start_token": 967,
                                                      "end_token": 979,
                                                      "children": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "label": "updateBBoxFromPoints(points, min, max, projection);",
                                                          "start_token": 968,
                                                          "end_token": 978,
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "updateBBoxFromPoints(points, min, max, projection)",
                                                              "start_token": 968,
                                                              "end_token": 977,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "updateBBoxFromPoints",
                                                                  "start_token": 968,
                                                                  "end_token": 968,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "points",
                                                                  "start_token": 970,
                                                                  "end_token": 970,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "min",
                                                                  "start_token": 972,
                                                                  "end_token": 972,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "max",
                                                                  "start_token": 974,
                                                                  "end_token": 974,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "projection",
                                                                  "start_token": 976,
                                                                  "end_token": 976,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }",
                  "start_token": 987,
                  "end_token": 1047,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))",
                      "start_token": 989,
                      "end_token": 1022,
                      "children": [
                        {
                          "type": "ParenthesizedExpression",
                          "label": "(isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1]))",
                          "start_token": 990,
                          "end_token": 1022,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0]) && isFinite(max[1])",
                              "start_token": 991,
                              "end_token": 1021,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "isFinite(min[0]) && isFinite(min[1]) && isFinite(max[0])",
                                  "start_token": 991,
                                  "end_token": 1013,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "isFinite(min[0]) && isFinite(min[1])",
                                      "start_token": 991,
                                      "end_token": 1005,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "isFinite(min[0])",
                                          "start_token": 991,
                                          "end_token": 997,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "isFinite",
                                              "start_token": 991,
                                              "end_token": 991,
                                              "children": []
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "min[0]",
                                              "start_token": 993,
                                              "end_token": 996,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "min",
                                                  "start_token": 993,
                                                  "end_token": 993,
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "start_token": 995,
                                                  "end_token": 995,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AmpersandAmpersandToken",
                                          "label": "&&",
                                          "start_token": 998,
                                          "end_token": 998,
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "isFinite(min[1])",
                                          "start_token": 999,
                                          "end_token": 1005,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "isFinite",
                                              "start_token": 999,
                                              "end_token": 999,
                                              "children": []
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "min[1]",
                                              "start_token": 1001,
                                              "end_token": 1004,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "min",
                                                  "start_token": 1001,
                                                  "end_token": 1001,
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "start_token": 1003,
                                                  "end_token": 1003,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AmpersandAmpersandToken",
                                      "label": "&&",
                                      "start_token": 1006,
                                      "end_token": 1006,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "isFinite(max[0])",
                                      "start_token": 1007,
                                      "end_token": 1013,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "isFinite",
                                          "start_token": 1007,
                                          "end_token": 1007,
                                          "children": []
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "max[0]",
                                          "start_token": 1009,
                                          "end_token": 1012,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "max",
                                              "start_token": 1009,
                                              "end_token": 1009,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "start_token": 1011,
                                              "end_token": 1011,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "start_token": 1014,
                                  "end_token": 1014,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "isFinite(max[1])",
                                  "start_token": 1015,
                                  "end_token": 1021,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "isFinite",
                                      "start_token": 1015,
                                      "end_token": 1015,
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "max[1]",
                                      "start_token": 1017,
                                      "end_token": 1020,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "max",
                                          "start_token": 1017,
                                          "end_token": 1017,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "start_token": 1019,
                                          "end_token": 1019,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }",
                      "start_token": 1024,
                      "end_token": 1047,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "min[0] = min[1] = max[0] = max[1] = 0;",
                          "start_token": 1025,
                          "end_token": 1046,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "min[0] = min[1] = max[0] = max[1] = 0",
                              "start_token": 1025,
                              "end_token": 1045,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "min[0]",
                                  "start_token": 1025,
                                  "end_token": 1028,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "min",
                                      "start_token": 1025,
                                      "end_token": 1025,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 1027,
                                      "end_token": 1027,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 1029,
                                  "end_token": 1029,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "min[1] = max[0] = max[1] = 0",
                                  "start_token": 1030,
                                  "end_token": 1045,
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "min[1]",
                                      "start_token": 1030,
                                      "end_token": 1033,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "min",
                                          "start_token": 1030,
                                          "end_token": 1030,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "start_token": 1032,
                                          "end_token": 1032,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 1034,
                                      "end_token": 1034,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "max[0] = max[1] = 0",
                                      "start_token": 1035,
                                      "end_token": 1045,
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "max[0]",
                                          "start_token": 1035,
                                          "end_token": 1038,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "max",
                                              "start_token": 1035,
                                              "end_token": 1035,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "start_token": 1037,
                                              "end_token": 1037,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "start_token": 1039,
                                          "end_token": 1039,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "max[1] = 0",
                                          "start_token": 1040,
                                          "end_token": 1045,
                                          "children": [
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "max[1]",
                                              "start_token": 1040,
                                              "end_token": 1043,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "max",
                                                  "start_token": 1040,
                                                  "end_token": 1040,
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "start_token": 1042,
                                                  "end_token": 1042,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstAssignment",
                                              "label": "=",
                                              "start_token": 1044,
                                              "end_token": 1044,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "start_token": 1045,
                                              "end_token": 1045,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "rect = new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        );",
                  "start_token": 1048,
                  "end_token": 1083,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "rect = new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        )",
                      "start_token": 1048,
                      "end_token": 1082,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "rect",
                          "start_token": 1048,
                          "end_token": 1048,
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 1049,
                          "end_token": 1049,
                          "children": []
                        },
                        {
                          "type": "NewExpression",
                          "label": "new BoundingRect(\n            min[0], min[1], max[0] - min[0], max[1] - min[1]\n        )",
                          "start_token": 1050,
                          "end_token": 1082,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "BoundingRect",
                              "start_token": 1051,
                              "end_token": 1051,
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "min[0]",
                              "start_token": 1053,
                              "end_token": 1056,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "min",
                                  "start_token": 1053,
                                  "end_token": 1053,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "start_token": 1055,
                                  "end_token": 1055,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "min[1]",
                              "start_token": 1058,
                              "end_token": 1061,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "min",
                                  "start_token": 1058,
                                  "end_token": 1058,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "start_token": 1060,
                                  "end_token": 1060,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "max[0] - min[0]",
                              "start_token": 1063,
                              "end_token": 1071,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "max[0]",
                                  "start_token": 1063,
                                  "end_token": 1066,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "max",
                                      "start_token": 1063,
                                      "end_token": 1063,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 1065,
                                      "end_token": 1065,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "MinusToken",
                                  "label": "-",
                                  "start_token": 1067,
                                  "end_token": 1067,
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "min[0]",
                                  "start_token": 1068,
                                  "end_token": 1071,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "min",
                                      "start_token": 1068,
                                      "end_token": 1068,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "start_token": 1070,
                                      "end_token": 1070,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "max[1] - min[1]",
                              "start_token": 1073,
                              "end_token": 1081,
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "max[1]",
                                  "start_token": 1073,
                                  "end_token": 1076,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "max",
                                      "start_token": 1073,
                                      "end_token": 1073,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 1075,
                                      "end_token": 1075,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "MinusToken",
                                  "label": "-",
                                  "start_token": 1077,
                                  "end_token": 1077,
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "min[1]",
                                  "start_token": 1078,
                                  "end_token": 1081,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "min",
                                      "start_token": 1078,
                                      "end_token": 1078,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "start_token": 1080,
                                      "end_token": 1080,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!projection) {\n            this._rect = rect;\n        }",
                  "start_token": 1084,
                  "end_token": 1096,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!projection",
                      "start_token": 1086,
                      "end_token": 1087,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "projection",
                          "start_token": 1087,
                          "end_token": 1087,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            this._rect = rect;\n        }",
                      "start_token": 1089,
                      "end_token": 1096,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this._rect = rect;",
                          "start_token": 1090,
                          "end_token": 1095,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this._rect = rect",
                              "start_token": 1090,
                              "end_token": 1094,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this._rect",
                                  "start_token": 1090,
                                  "end_token": 1092,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1090,
                                      "end_token": 1090,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "_rect",
                                      "start_token": 1092,
                                      "end_token": 1092,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 1093,
                                  "end_token": 1093,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "rect",
                                  "start_token": 1094,
                                  "end_token": 1094,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return rect;",
                  "start_token": 1097,
                  "end_token": 1099,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "rect",
                      "start_token": 1098,
                      "end_token": 1098,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "contain(coord: number[]): boolean {\n        const rect = this.getBoundingRect();\n        const geometries = this.geometries;\n        if (!rect.contain(coord[0], coord[1])) {\n            return false;\n        }\n        loopGeo: for (let i = 0, len = geometries.length; i < len; i++) {\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }",
          "start_token": 1101,
          "end_token": 1291,
          "children": [
            {
              "type": "Identifier",
              "label": "contain",
              "start_token": 1101,
              "end_token": 1101,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "coord: number[]",
              "start_token": 1103,
              "end_token": 1107,
              "children": [
                {
                  "type": "Identifier",
                  "label": "coord",
                  "start_token": 1103,
                  "end_token": 1103,
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "number[]",
                  "start_token": 1105,
                  "end_token": 1107,
                  "children": [
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "start_token": 1105,
                      "end_token": 1105,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "start_token": 1110,
              "end_token": 1110,
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n        const rect = this.getBoundingRect();\n        const geometries = this.geometries;\n        if (!rect.contain(coord[0], coord[1])) {\n            return false;\n        }\n        loopGeo: for (let i = 0, len = geometries.length; i < len; i++) {\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }",
              "start_token": 1111,
              "end_token": 1291,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const rect = this.getBoundingRect();",
                  "start_token": 1112,
                  "end_token": 1120,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const rect = this.getBoundingRect()",
                      "start_token": 1112,
                      "end_token": 1119,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "rect = this.getBoundingRect()",
                          "start_token": 1113,
                          "end_token": 1119,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 1113,
                              "end_token": 1113,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.getBoundingRect()",
                              "start_token": 1115,
                              "end_token": 1119,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getBoundingRect",
                                  "start_token": 1115,
                                  "end_token": 1117,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1115,
                                      "end_token": 1115,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getBoundingRect",
                                      "start_token": 1117,
                                      "end_token": 1117,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const geometries = this.geometries;",
                  "start_token": 1121,
                  "end_token": 1127,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const geometries = this.geometries",
                      "start_token": 1121,
                      "end_token": 1126,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "geometries = this.geometries",
                          "start_token": 1122,
                          "end_token": 1126,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 1122,
                              "end_token": 1122,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.geometries",
                              "start_token": 1124,
                              "end_token": 1126,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 1124,
                                  "end_token": 1124,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "geometries",
                                  "start_token": 1126,
                                  "end_token": 1126,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!rect.contain(coord[0], coord[1])) {\n            return false;\n        }",
                  "start_token": 1128,
                  "end_token": 1150,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!rect.contain(coord[0], coord[1])",
                      "start_token": 1130,
                      "end_token": 1144,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "rect.contain(coord[0], coord[1])",
                          "start_token": 1131,
                          "end_token": 1144,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "rect.contain",
                              "start_token": 1131,
                              "end_token": 1133,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "rect",
                                  "start_token": 1131,
                                  "end_token": 1131,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "contain",
                                  "start_token": 1133,
                                  "end_token": 1133,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "coord[0]",
                              "start_token": 1135,
                              "end_token": 1138,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "coord",
                                  "start_token": 1135,
                                  "end_token": 1135,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "start_token": 1137,
                                  "end_token": 1137,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "coord[1]",
                              "start_token": 1140,
                              "end_token": 1143,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "coord",
                                  "start_token": 1140,
                                  "end_token": 1140,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "start_token": 1142,
                                  "end_token": 1142,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            return false;\n        }",
                      "start_token": 1146,
                      "end_token": 1150,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return false;",
                          "start_token": 1147,
                          "end_token": 1149,
                          "children": [
                            {
                              "type": "FalseKeyword",
                              "label": "false",
                              "start_token": 1148,
                              "end_token": 1148,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "LabeledStatement",
                  "label": "loopGeo: for (let i = 0, len = geometries.length; i < len; i++) {\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }",
                  "start_token": 1151,
                  "end_token": 1287,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "loopGeo",
                      "start_token": 1151,
                      "end_token": 1151,
                      "children": []
                    },
                    {
                      "type": "ForStatement",
                      "label": "for (let i = 0, len = geometries.length; i < len; i++) {\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }",
                      "start_token": 1153,
                      "end_token": 1287,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "let i = 0, len = geometries.length",
                          "start_token": 1155,
                          "end_token": 1164,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "i = 0",
                              "start_token": 1156,
                              "end_token": 1158,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "start_token": 1156,
                                  "end_token": 1156,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "start_token": 1158,
                                  "end_token": 1158,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "VariableDeclaration",
                              "label": "len = geometries.length",
                              "start_token": 1160,
                              "end_token": 1164,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "len",
                                  "start_token": 1160,
                                  "end_token": 1160,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "geometries.length",
                                  "start_token": 1162,
                                  "end_token": 1164,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "geometries",
                                      "start_token": 1162,
                                      "end_token": 1162,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "start_token": 1164,
                                      "end_token": 1164,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "i < len",
                          "start_token": 1166,
                          "end_token": 1168,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "start_token": 1166,
                              "end_token": 1166,
                              "children": []
                            },
                            {
                              "type": "FirstBinaryOperator",
                              "label": "<",
                              "start_token": 1167,
                              "end_token": 1167,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "len",
                              "start_token": 1168,
                              "end_token": 1168,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PostfixUnaryExpression",
                          "label": "i++",
                          "start_token": 1170,
                          "end_token": 1172,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "start_token": 1170,
                              "end_token": 1170,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n            const geo = geometries[i];\n            // Only support polygon.\n            if (geo.type !== 'polygon') {\n                continue;\n            }\n            const exterior = geo.exterior;\n            const interiors = geo.interiors;\n            if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }\n        }",
                          "start_token": 1174,
                          "end_token": 1287,
                          "children": [
                            {
                              "type": "FirstStatement",
                              "label": "const geo = geometries[i];",
                              "start_token": 1175,
                              "end_token": 1182,
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "const geo = geometries[i]",
                                  "start_token": 1175,
                                  "end_token": 1181,
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "geo = geometries[i]",
                                      "start_token": 1176,
                                      "end_token": 1181,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "geo",
                                          "start_token": 1176,
                                          "end_token": 1176,
                                          "children": []
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "geometries[i]",
                                          "start_token": 1178,
                                          "end_token": 1181,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geometries",
                                              "start_token": 1178,
                                              "end_token": 1178,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "i",
                                              "start_token": 1180,
                                              "end_token": 1180,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "IfStatement",
                              "label": "if (geo.type !== 'polygon') {\n                continue;\n            }",
                              "start_token": 1184,
                              "end_token": 1195,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "geo.type !== 'polygon'",
                                  "start_token": 1186,
                                  "end_token": 1190,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "geo.type",
                                      "start_token": 1186,
                                      "end_token": 1188,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "geo",
                                          "start_token": 1186,
                                          "end_token": 1186,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 1188,
                                          "end_token": 1188,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExclamationEqualsEqualsToken",
                                      "label": "!==",
                                      "start_token": 1189,
                                      "end_token": 1189,
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'polygon'",
                                      "start_token": 1190,
                                      "end_token": 1190,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n                continue;\n            }",
                                  "start_token": 1192,
                                  "end_token": 1195,
                                  "children": [
                                    {
                                      "type": "ContinueStatement",
                                      "label": "continue;",
                                      "start_token": 1193,
                                      "end_token": 1194,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "FirstStatement",
                              "label": "const exterior = geo.exterior;",
                              "start_token": 1196,
                              "end_token": 1202,
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "const exterior = geo.exterior",
                                  "start_token": 1196,
                                  "end_token": 1201,
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "exterior = geo.exterior",
                                      "start_token": 1197,
                                      "end_token": 1201,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "exterior",
                                          "start_token": 1197,
                                          "end_token": 1197,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "geo.exterior",
                                          "start_token": 1199,
                                          "end_token": 1201,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geo",
                                              "start_token": 1199,
                                              "end_token": 1199,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "exterior",
                                              "start_token": 1201,
                                              "end_token": 1201,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "FirstStatement",
                              "label": "const interiors = geo.interiors;",
                              "start_token": 1203,
                              "end_token": 1209,
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "const interiors = geo.interiors",
                                  "start_token": 1203,
                                  "end_token": 1208,
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "interiors = geo.interiors",
                                      "start_token": 1204,
                                      "end_token": 1208,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "interiors",
                                          "start_token": 1204,
                                          "end_token": 1204,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "geo.interiors",
                                          "start_token": 1206,
                                          "end_token": 1208,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geo",
                                              "start_token": 1206,
                                              "end_token": 1206,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "interiors",
                                              "start_token": 1208,
                                              "end_token": 1208,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "IfStatement",
                              "label": "if (polygonContain.contain(exterior, coord[0], coord[1])) {\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }",
                              "start_token": 1210,
                              "end_token": 1286,
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "polygonContain.contain(exterior, coord[0], coord[1])",
                                  "start_token": 1212,
                                  "end_token": 1227,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "polygonContain.contain",
                                      "start_token": 1212,
                                      "end_token": 1214,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "polygonContain",
                                          "start_token": 1212,
                                          "end_token": 1212,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "contain",
                                          "start_token": 1214,
                                          "end_token": 1214,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "exterior",
                                      "start_token": 1216,
                                      "end_token": 1216,
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "coord[0]",
                                      "start_token": 1218,
                                      "end_token": 1221,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "coord",
                                          "start_token": 1218,
                                          "end_token": 1218,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "start_token": 1220,
                                          "end_token": 1220,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "coord[1]",
                                      "start_token": 1223,
                                      "end_token": 1226,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "coord",
                                          "start_token": 1223,
                                          "end_token": 1223,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "start_token": 1225,
                                          "end_token": 1225,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n                // Not in the region if point is in the hole.\n                for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }\n                return true;\n            }",
                                  "start_token": 1229,
                                  "end_token": 1286,
                                  "children": [
                                    {
                                      "type": "ForStatement",
                                      "label": "for (let k = 0; k < (interiors ? interiors.length : 0); k++) {\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }",
                                      "start_token": 1231,
                                      "end_token": 1282,
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "let k = 0",
                                          "start_token": 1233,
                                          "end_token": 1236,
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "k = 0",
                                              "start_token": 1234,
                                              "end_token": 1236,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "k",
                                                  "start_token": 1234,
                                                  "end_token": 1234,
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "start_token": 1236,
                                                  "end_token": 1236,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "k < (interiors ? interiors.length : 0)",
                                          "start_token": 1238,
                                          "end_token": 1248,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "k",
                                              "start_token": 1238,
                                              "end_token": 1238,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstBinaryOperator",
                                              "label": "<",
                                              "start_token": 1239,
                                              "end_token": 1239,
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(interiors ? interiors.length : 0)",
                                              "start_token": 1240,
                                              "end_token": 1248,
                                              "children": [
                                                {
                                                  "type": "ConditionalExpression",
                                                  "label": "interiors ? interiors.length : 0",
                                                  "start_token": 1241,
                                                  "end_token": 1247,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "interiors",
                                                      "start_token": 1241,
                                                      "end_token": 1241,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "QuestionToken",
                                                      "label": "?",
                                                      "start_token": 1242,
                                                      "end_token": 1242,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "interiors.length",
                                                      "start_token": 1243,
                                                      "end_token": 1245,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "interiors",
                                                          "start_token": 1243,
                                                          "end_token": 1243,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "length",
                                                          "start_token": 1245,
                                                          "end_token": 1245,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ColonToken",
                                                      "label": ":",
                                                      "start_token": 1246,
                                                      "end_token": 1246,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstLiteralToken",
                                                      "label": "0",
                                                      "start_token": 1247,
                                                      "end_token": 1247,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PostfixUnaryExpression",
                                          "label": "k++",
                                          "start_token": 1250,
                                          "end_token": 1252,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "k",
                                              "start_token": 1250,
                                              "end_token": 1250,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n                    if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }\n                }",
                                          "start_token": 1254,
                                          "end_token": 1282,
                                          "children": [
                                            {
                                              "type": "IfStatement",
                                              "label": "if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n                        continue loopGeo;\n                    }",
                                              "start_token": 1255,
                                              "end_token": 1281,
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "polygonContain.contain(interiors[k], coord[0], coord[1])",
                                                  "start_token": 1257,
                                                  "end_token": 1275,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "polygonContain.contain",
                                                      "start_token": 1257,
                                                      "end_token": 1259,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "polygonContain",
                                                          "start_token": 1257,
                                                          "end_token": 1257,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "contain",
                                                          "start_token": 1259,
                                                          "end_token": 1259,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "interiors[k]",
                                                      "start_token": 1261,
                                                      "end_token": 1264,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "interiors",
                                                          "start_token": 1261,
                                                          "end_token": 1261,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "k",
                                                          "start_token": 1263,
                                                          "end_token": 1263,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "coord[0]",
                                                      "start_token": 1266,
                                                      "end_token": 1269,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "coord",
                                                          "start_token": 1266,
                                                          "end_token": 1266,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "start_token": 1268,
                                                          "end_token": 1268,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "coord[1]",
                                                      "start_token": 1271,
                                                      "end_token": 1274,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "coord",
                                                          "start_token": 1271,
                                                          "end_token": 1271,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "1",
                                                          "start_token": 1273,
                                                          "end_token": 1273,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n                        continue loopGeo;\n                    }",
                                                  "start_token": 1277,
                                                  "end_token": 1281,
                                                  "children": [
                                                    {
                                                      "type": "ContinueStatement",
                                                      "label": "continue loopGeo;",
                                                      "start_token": 1278,
                                                      "end_token": 1280,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "loopGeo",
                                                          "start_token": 1279,
                                                          "end_token": 1279,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "label": "return true;",
                                      "start_token": 1283,
                                      "end_token": 1285,
                                      "children": [
                                        {
                                          "type": "TrueKeyword",
                                          "label": "true",
                                          "start_token": 1284,
                                          "end_token": 1284,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return false;",
                  "start_token": 1288,
                  "end_token": 1290,
                  "children": [
                    {
                      "type": "FalseKeyword",
                      "label": "false",
                      "start_token": 1289,
                      "end_token": 1289,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "transformTo(x: number, y: number, width: number, height: number): void {\n        let rect = this.getBoundingRect();\n        const aspect = rect.width / rect.height;\n        if (!width) {\n            width = aspect * height;\n        }\n        else if (!height) {\n            height = width / aspect;\n        }\n        const target = new BoundingRect(x, y, width, height);\n        const transform = rect.calculateTransform(target);\n        const geometries = this.geometries;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i];\n            if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }\n        }\n        rect = this._rect;\n        rect.copy(target);\n        // Update center\n        this._center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }",
          "start_token": 1292,
          "end_token": 1519,
          "children": [
            {
              "type": "Identifier",
              "label": "transformTo",
              "start_token": 1292,
              "end_token": 1292,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "x: number",
              "start_token": 1294,
              "end_token": 1296,
              "children": [
                {
                  "type": "Identifier",
                  "label": "x",
                  "start_token": 1294,
                  "end_token": 1294,
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 1296,
                  "end_token": 1296,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "y: number",
              "start_token": 1298,
              "end_token": 1300,
              "children": [
                {
                  "type": "Identifier",
                  "label": "y",
                  "start_token": 1298,
                  "end_token": 1298,
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 1300,
                  "end_token": 1300,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "width: number",
              "start_token": 1302,
              "end_token": 1304,
              "children": [
                {
                  "type": "Identifier",
                  "label": "width",
                  "start_token": 1302,
                  "end_token": 1302,
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 1304,
                  "end_token": 1304,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "height: number",
              "start_token": 1306,
              "end_token": 1308,
              "children": [
                {
                  "type": "Identifier",
                  "label": "height",
                  "start_token": 1306,
                  "end_token": 1306,
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 1308,
                  "end_token": 1308,
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "start_token": 1311,
              "end_token": 1311,
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n        let rect = this.getBoundingRect();\n        const aspect = rect.width / rect.height;\n        if (!width) {\n            width = aspect * height;\n        }\n        else if (!height) {\n            height = width / aspect;\n        }\n        const target = new BoundingRect(x, y, width, height);\n        const transform = rect.calculateTransform(target);\n        const geometries = this.geometries;\n        for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i];\n            if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }\n        }\n        rect = this._rect;\n        rect.copy(target);\n        // Update center\n        this._center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n    }",
              "start_token": 1312,
              "end_token": 1519,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let rect = this.getBoundingRect();",
                  "start_token": 1313,
                  "end_token": 1321,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let rect = this.getBoundingRect()",
                      "start_token": 1313,
                      "end_token": 1320,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "rect = this.getBoundingRect()",
                          "start_token": 1314,
                          "end_token": 1320,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 1314,
                              "end_token": 1314,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.getBoundingRect()",
                              "start_token": 1316,
                              "end_token": 1320,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getBoundingRect",
                                  "start_token": 1316,
                                  "end_token": 1318,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1316,
                                      "end_token": 1316,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getBoundingRect",
                                      "start_token": 1318,
                                      "end_token": 1318,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const aspect = rect.width / rect.height;",
                  "start_token": 1322,
                  "end_token": 1332,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const aspect = rect.width / rect.height",
                      "start_token": 1322,
                      "end_token": 1331,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "aspect = rect.width / rect.height",
                          "start_token": 1323,
                          "end_token": 1331,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "aspect",
                              "start_token": 1323,
                              "end_token": 1323,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "rect.width / rect.height",
                              "start_token": 1325,
                              "end_token": 1331,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.width",
                                  "start_token": 1325,
                                  "end_token": 1327,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 1325,
                                      "end_token": 1325,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "start_token": 1327,
                                      "end_token": 1327,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "start_token": 1328,
                                  "end_token": 1328,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.height",
                                  "start_token": 1329,
                                  "end_token": 1331,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 1329,
                                      "end_token": 1329,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "start_token": 1331,
                                      "end_token": 1331,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!width) {\n            width = aspect * height;\n        }\n        else if (!height) {\n            height = width / aspect;\n        }",
                  "start_token": 1333,
                  "end_token": 1359,
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!width",
                      "start_token": 1335,
                      "end_token": 1336,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "width",
                          "start_token": 1336,
                          "end_token": 1336,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            width = aspect * height;\n        }",
                      "start_token": 1338,
                      "end_token": 1345,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "width = aspect * height;",
                          "start_token": 1339,
                          "end_token": 1344,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "width = aspect * height",
                              "start_token": 1339,
                              "end_token": 1343,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "start_token": 1339,
                                  "end_token": 1339,
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 1340,
                                  "end_token": 1340,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "aspect * height",
                                  "start_token": 1341,
                                  "end_token": 1343,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "aspect",
                                      "start_token": 1341,
                                      "end_token": 1341,
                                      "children": []
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "start_token": 1342,
                                      "end_token": 1342,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "start_token": 1343,
                                      "end_token": 1343,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (!height) {\n            height = width / aspect;\n        }",
                      "start_token": 1347,
                      "end_token": 1359,
                      "children": [
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "!height",
                          "start_token": 1349,
                          "end_token": 1350,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "height",
                              "start_token": 1350,
                              "end_token": 1350,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n            height = width / aspect;\n        }",
                          "start_token": 1352,
                          "end_token": 1359,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "height = width / aspect;",
                              "start_token": 1353,
                              "end_token": 1358,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "height = width / aspect",
                                  "start_token": 1353,
                                  "end_token": 1357,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "start_token": 1353,
                                      "end_token": 1353,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 1354,
                                      "end_token": 1354,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "width / aspect",
                                      "start_token": 1355,
                                      "end_token": 1357,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "width",
                                          "start_token": 1355,
                                          "end_token": 1355,
                                          "children": []
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "start_token": 1356,
                                          "end_token": 1356,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "aspect",
                                          "start_token": 1357,
                                          "end_token": 1357,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const target = new BoundingRect(x, y, width, height);",
                  "start_token": 1360,
                  "end_token": 1374,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const target = new BoundingRect(x, y, width, height)",
                      "start_token": 1360,
                      "end_token": 1373,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "target = new BoundingRect(x, y, width, height)",
                          "start_token": 1361,
                          "end_token": 1373,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "target",
                              "start_token": 1361,
                              "end_token": 1361,
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new BoundingRect(x, y, width, height)",
                              "start_token": 1363,
                              "end_token": 1373,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "BoundingRect",
                                  "start_token": 1364,
                                  "end_token": 1364,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "x",
                                  "start_token": 1366,
                                  "end_token": 1366,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "y",
                                  "start_token": 1368,
                                  "end_token": 1368,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "start_token": 1370,
                                  "end_token": 1370,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "start_token": 1372,
                                  "end_token": 1372,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const transform = rect.calculateTransform(target);",
                  "start_token": 1375,
                  "end_token": 1384,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const transform = rect.calculateTransform(target)",
                      "start_token": 1375,
                      "end_token": 1383,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "transform = rect.calculateTransform(target)",
                          "start_token": 1376,
                          "end_token": 1383,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "transform",
                              "start_token": 1376,
                              "end_token": 1376,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "rect.calculateTransform(target)",
                              "start_token": 1378,
                              "end_token": 1383,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.calculateTransform",
                                  "start_token": 1378,
                                  "end_token": 1380,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 1378,
                                      "end_token": 1378,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "calculateTransform",
                                      "start_token": 1380,
                                      "end_token": 1380,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "target",
                                  "start_token": 1382,
                                  "end_token": 1382,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const geometries = this.geometries;",
                  "start_token": 1385,
                  "end_token": 1391,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const geometries = this.geometries",
                      "start_token": 1385,
                      "end_token": 1390,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "geometries = this.geometries",
                          "start_token": 1386,
                          "end_token": 1390,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 1386,
                              "end_token": 1386,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.geometries",
                              "start_token": 1388,
                              "end_token": 1390,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 1388,
                                  "end_token": 1388,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "geometries",
                                  "start_token": 1390,
                                  "end_token": 1390,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0; i < geometries.length; i++) {\n            const geo = geometries[i];\n            if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }\n        }",
                  "start_token": 1392,
                  "end_token": 1478,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "start_token": 1394,
                      "end_token": 1397,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "start_token": 1395,
                          "end_token": 1397,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "start_token": 1395,
                              "end_token": 1395,
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 1397,
                              "end_token": 1397,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < geometries.length",
                      "start_token": 1399,
                      "end_token": 1403,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "start_token": 1399,
                          "end_token": 1399,
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "start_token": 1400,
                          "end_token": 1400,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "geometries.length",
                          "start_token": 1401,
                          "end_token": 1403,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "geometries",
                              "start_token": 1401,
                              "end_token": 1401,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "start_token": 1403,
                              "end_token": 1403,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "start_token": 1405,
                      "end_token": 1407,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "start_token": 1405,
                          "end_token": 1405,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            const geo = geometries[i];\n            if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }\n        }",
                      "start_token": 1409,
                      "end_token": 1478,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const geo = geometries[i];",
                          "start_token": 1410,
                          "end_token": 1417,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const geo = geometries[i]",
                              "start_token": 1410,
                              "end_token": 1416,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "geo = geometries[i]",
                                  "start_token": 1411,
                                  "end_token": 1416,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "geo",
                                      "start_token": 1411,
                                      "end_token": 1411,
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "geometries[i]",
                                      "start_token": 1413,
                                      "end_token": 1416,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "geometries",
                                          "start_token": 1413,
                                          "end_token": 1413,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "start_token": 1415,
                                          "end_token": 1415,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (geo.type === 'polygon') {\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }\n            else {\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }",
                          "start_token": 1418,
                          "end_token": 1477,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "geo.type === 'polygon'",
                              "start_token": 1420,
                              "end_token": 1424,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "geo.type",
                                  "start_token": 1420,
                                  "end_token": 1422,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "geo",
                                      "start_token": 1420,
                                      "end_token": 1420,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "type",
                                      "start_token": 1422,
                                      "end_token": 1422,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 1423,
                                  "end_token": 1423,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'polygon'",
                                  "start_token": 1424,
                                  "end_token": 1424,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n                transformPoints(geo.exterior, transform);\n                each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });\n            }",
                              "start_token": 1426,
                              "end_token": 1455,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "transformPoints(geo.exterior, transform);",
                                  "start_token": 1427,
                                  "end_token": 1435,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "transformPoints(geo.exterior, transform)",
                                      "start_token": 1427,
                                      "end_token": 1434,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "transformPoints",
                                          "start_token": 1427,
                                          "end_token": 1427,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "geo.exterior",
                                          "start_token": 1429,
                                          "end_token": 1431,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geo",
                                              "start_token": 1429,
                                              "end_token": 1429,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "exterior",
                                              "start_token": 1431,
                                              "end_token": 1431,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "transform",
                                          "start_token": 1433,
                                          "end_token": 1433,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                });",
                                  "start_token": 1436,
                                  "end_token": 1454,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "each(geo.interiors, interior => {\n                    transformPoints(interior, transform);\n                })",
                                      "start_token": 1436,
                                      "end_token": 1453,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "each",
                                          "start_token": 1436,
                                          "end_token": 1436,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "geo.interiors",
                                          "start_token": 1438,
                                          "end_token": 1440,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geo",
                                              "start_token": 1438,
                                              "end_token": 1438,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "interiors",
                                              "start_token": 1440,
                                              "end_token": 1440,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "interior => {\n                    transformPoints(interior, transform);\n                }",
                                          "start_token": 1442,
                                          "end_token": 1452,
                                          "children": [
                                            {
                                              "type": "Parameter",
                                              "label": "interior",
                                              "start_token": 1442,
                                              "end_token": 1442,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "interior",
                                                  "start_token": 1442,
                                                  "end_token": 1442,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "start_token": 1443,
                                              "end_token": 1443,
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n                    transformPoints(interior, transform);\n                }",
                                              "start_token": 1444,
                                              "end_token": 1452,
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "transformPoints(interior, transform);",
                                                  "start_token": 1445,
                                                  "end_token": 1451,
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "transformPoints(interior, transform)",
                                                      "start_token": 1445,
                                                      "end_token": 1450,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "transformPoints",
                                                          "start_token": 1445,
                                                          "end_token": 1445,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "interior",
                                                          "start_token": 1447,
                                                          "end_token": 1447,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "transform",
                                                          "start_token": 1449,
                                                          "end_token": 1449,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n                each(geo.points, points => {\n                    transformPoints(points, transform);\n                });\n            }",
                              "start_token": 1457,
                              "end_token": 1477,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "each(geo.points, points => {\n                    transformPoints(points, transform);\n                });",
                                  "start_token": 1458,
                                  "end_token": 1476,
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "each(geo.points, points => {\n                    transformPoints(points, transform);\n                })",
                                      "start_token": 1458,
                                      "end_token": 1475,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "each",
                                          "start_token": 1458,
                                          "end_token": 1458,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "geo.points",
                                          "start_token": 1460,
                                          "end_token": 1462,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "geo",
                                              "start_token": 1460,
                                              "end_token": 1460,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "points",
                                              "start_token": 1462,
                                              "end_token": 1462,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrowFunction",
                                          "label": "points => {\n                    transformPoints(points, transform);\n                }",
                                          "start_token": 1464,
                                          "end_token": 1474,
                                          "children": [
                                            {
                                              "type": "Parameter",
                                              "label": "points",
                                              "start_token": 1464,
                                              "end_token": 1464,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "points",
                                                  "start_token": 1464,
                                                  "end_token": 1464,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "EqualsGreaterThanToken",
                                              "label": "=>",
                                              "start_token": 1465,
                                              "end_token": 1465,
                                              "children": []
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{\n                    transformPoints(points, transform);\n                }",
                                              "start_token": 1466,
                                              "end_token": 1474,
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "transformPoints(points, transform);",
                                                  "start_token": 1467,
                                                  "end_token": 1473,
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "transformPoints(points, transform)",
                                                      "start_token": 1467,
                                                      "end_token": 1472,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "transformPoints",
                                                          "start_token": 1467,
                                                          "end_token": 1467,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "points",
                                                          "start_token": 1469,
                                                          "end_token": 1469,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "transform",
                                                          "start_token": 1471,
                                                          "end_token": 1471,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "rect = this._rect;",
                  "start_token": 1479,
                  "end_token": 1484,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "rect = this._rect",
                      "start_token": 1479,
                      "end_token": 1483,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "rect",
                          "start_token": 1479,
                          "end_token": 1479,
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 1480,
                          "end_token": 1480,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._rect",
                          "start_token": 1481,
                          "end_token": 1483,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 1481,
                              "end_token": 1481,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_rect",
                              "start_token": 1483,
                              "end_token": 1483,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "rect.copy(target);",
                  "start_token": 1485,
                  "end_token": 1491,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "rect.copy(target)",
                      "start_token": 1485,
                      "end_token": 1490,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "rect.copy",
                          "start_token": 1485,
                          "end_token": 1487,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 1485,
                              "end_token": 1485,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "copy",
                              "start_token": 1487,
                              "end_token": 1487,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "target",
                          "start_token": 1489,
                          "end_token": 1489,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this._center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];",
                  "start_token": 1493,
                  "end_token": 1518,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this._center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ]",
                      "start_token": 1493,
                      "end_token": 1517,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._center",
                          "start_token": 1493,
                          "end_token": 1495,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 1493,
                              "end_token": 1493,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_center",
                              "start_token": 1495,
                              "end_token": 1495,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 1496,
                          "end_token": 1496,
                          "children": []
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ]",
                          "start_token": 1497,
                          "end_token": 1517,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "rect.x + rect.width / 2",
                              "start_token": 1498,
                              "end_token": 1506,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.x",
                                  "start_token": 1498,
                                  "end_token": 1500,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 1498,
                                      "end_token": 1498,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "x",
                                      "start_token": 1500,
                                      "end_token": 1500,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "start_token": 1501,
                                  "end_token": 1501,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "rect.width / 2",
                                  "start_token": 1502,
                                  "end_token": 1506,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rect.width",
                                      "start_token": 1502,
                                      "end_token": 1504,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rect",
                                          "start_token": 1502,
                                          "end_token": 1502,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "width",
                                          "start_token": 1504,
                                          "end_token": 1504,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "start_token": 1505,
                                      "end_token": 1505,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "2",
                                      "start_token": 1506,
                                      "end_token": 1506,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "rect.y + rect.height / 2",
                              "start_token": 1508,
                              "end_token": 1516,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rect.y",
                                  "start_token": 1508,
                                  "end_token": 1510,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "rect",
                                      "start_token": 1508,
                                      "end_token": 1508,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "y",
                                      "start_token": 1510,
                                      "end_token": 1510,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "start_token": 1511,
                                  "end_token": 1511,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "rect.height / 2",
                                  "start_token": 1512,
                                  "end_token": 1516,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rect.height",
                                      "start_token": 1512,
                                      "end_token": 1514,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rect",
                                          "start_token": 1512,
                                          "end_token": 1512,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "height",
                                          "start_token": 1514,
                                          "end_token": 1514,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "start_token": 1515,
                                      "end_token": 1515,
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "2",
                                      "start_token": 1516,
                                      "end_token": 1516,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "cloneShallow(name: string): GeoJSONRegion {\n        name == null && (name = this.name);\n        const newRegion = new GeoJSONRegion(name, this.geometries, this._center);\n        newRegion._rect = this._rect;\n        newRegion.transformTo = null; // Simply avoid to be called.\n        return newRegion;\n    }",
          "start_token": 1520,
          "end_token": 1576,
          "children": [
            {
              "type": "Identifier",
              "label": "cloneShallow",
              "start_token": 1520,
              "end_token": 1520,
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 1522,
              "end_token": 1524,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 1522,
                  "end_token": 1522,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 1524,
                  "end_token": 1524,
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "GeoJSONRegion",
              "start_token": 1527,
              "end_token": 1527,
              "children": [
                {
                  "type": "Identifier",
                  "label": "GeoJSONRegion",
                  "start_token": 1527,
                  "end_token": 1527,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        name == null && (name = this.name);\n        const newRegion = new GeoJSONRegion(name, this.geometries, this._center);\n        newRegion._rect = this._rect;\n        newRegion.transformTo = null; // Simply avoid to be called.\n        return newRegion;\n    }",
              "start_token": 1528,
              "end_token": 1576,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "name == null && (name = this.name);",
                  "start_token": 1529,
                  "end_token": 1540,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "name == null && (name = this.name)",
                      "start_token": 1529,
                      "end_token": 1539,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "name == null",
                          "start_token": 1529,
                          "end_token": 1531,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "name",
                              "start_token": 1529,
                              "end_token": 1529,
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsToken",
                              "label": "==",
                              "start_token": 1530,
                              "end_token": 1530,
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "start_token": 1531,
                              "end_token": 1531,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 1532,
                          "end_token": 1532,
                          "children": []
                        },
                        {
                          "type": "ParenthesizedExpression",
                          "label": "(name = this.name)",
                          "start_token": 1533,
                          "end_token": 1539,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "name = this.name",
                              "start_token": 1534,
                              "end_token": 1538,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1534,
                                  "end_token": 1534,
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 1535,
                                  "end_token": 1535,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.name",
                                  "start_token": 1536,
                                  "end_token": 1538,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1536,
                                      "end_token": 1536,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "name",
                                      "start_token": 1538,
                                      "end_token": 1538,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const newRegion = new GeoJSONRegion(name, this.geometries, this._center);",
                  "start_token": 1541,
                  "end_token": 1557,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const newRegion = new GeoJSONRegion(name, this.geometries, this._center)",
                      "start_token": 1541,
                      "end_token": 1556,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "newRegion = new GeoJSONRegion(name, this.geometries, this._center)",
                          "start_token": 1542,
                          "end_token": 1556,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newRegion",
                              "start_token": 1542,
                              "end_token": 1542,
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new GeoJSONRegion(name, this.geometries, this._center)",
                              "start_token": 1544,
                              "end_token": 1556,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "GeoJSONRegion",
                                  "start_token": 1545,
                                  "end_token": 1545,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "name",
                                  "start_token": 1547,
                                  "end_token": 1547,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.geometries",
                                  "start_token": 1549,
                                  "end_token": 1551,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1549,
                                      "end_token": 1549,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "geometries",
                                      "start_token": 1551,
                                      "end_token": 1551,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this._center",
                                  "start_token": 1553,
                                  "end_token": 1555,
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "start_token": 1553,
                                      "end_token": 1553,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "_center",
                                      "start_token": 1555,
                                      "end_token": 1555,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "newRegion._rect = this._rect;",
                  "start_token": 1558,
                  "end_token": 1565,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "newRegion._rect = this._rect",
                      "start_token": 1558,
                      "end_token": 1564,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "newRegion._rect",
                          "start_token": 1558,
                          "end_token": 1560,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newRegion",
                              "start_token": 1558,
                              "end_token": 1558,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_rect",
                              "start_token": 1560,
                              "end_token": 1560,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 1561,
                          "end_token": 1561,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._rect",
                          "start_token": 1562,
                          "end_token": 1564,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 1562,
                              "end_token": 1562,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_rect",
                              "start_token": 1564,
                              "end_token": 1564,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "newRegion.transformTo = null;",
                  "start_token": 1566,
                  "end_token": 1571,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "newRegion.transformTo = null",
                      "start_token": 1566,
                      "end_token": 1570,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "newRegion.transformTo",
                          "start_token": 1566,
                          "end_token": 1568,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newRegion",
                              "start_token": 1566,
                              "end_token": 1566,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "transformTo",
                              "start_token": 1568,
                              "end_token": 1568,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 1569,
                          "end_token": 1569,
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "start_token": 1570,
                          "end_token": 1570,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return newRegion;",
                  "start_token": 1573,
                  "end_token": 1575,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "newRegion",
                      "start_token": 1574,
                      "end_token": 1574,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GeoSVGRegion extends Region {\n    readonly type = 'geoSVG';\n    // Can only be used to calculate, but not be modified.\n    // Because this el may not belong to this view,\n    // but been displaying on some other view.\n    private _elOnlyForCalculate: Element;\n    constructor(\n        name: string,\n        elOnlyForCalculate: Element\n    ) {\n        super(name);\n        this._elOnlyForCalculate = elOnlyForCalculate;\n    }\n    calcCenter(): number[] {\n        const el = this._elOnlyForCalculate;\n        const rect = el.getBoundingRect();\n        const center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n        const mat = matrix.identity(TMP_TRANSFORM);\n        let target = el;\n        while (target && !(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n        matrix.invert(mat, mat);\n        vec2.applyTransform(center, center, mat);\n        return center;\n    }\n}",
      "start_token": 1578,
      "end_token": 1744,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 1578,
          "end_token": 1578,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GeoSVGRegion",
          "start_token": 1580,
          "end_token": 1580,
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends Region",
          "start_token": 1581,
          "end_token": 1582,
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "Region",
              "start_token": 1582,
              "end_token": 1582,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Region",
                  "start_token": 1582,
                  "end_token": 1582,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly type = 'geoSVG';",
          "start_token": 1584,
          "end_token": 1588,
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "start_token": 1584,
              "end_token": 1584,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "type",
              "start_token": 1585,
              "end_token": 1585,
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "'geoSVG'",
              "start_token": 1587,
              "end_token": 1587,
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private _elOnlyForCalculate: Element;",
          "start_token": 1592,
          "end_token": 1596,
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "start_token": 1592,
              "end_token": 1592,
              "children": []
            },
            {
              "type": "Identifier",
              "label": "_elOnlyForCalculate",
              "start_token": 1593,
              "end_token": 1593,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Element",
              "start_token": 1595,
              "end_token": 1595,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Element",
                  "start_token": 1595,
                  "end_token": 1595,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(\n        name: string,\n        elOnlyForCalculate: Element\n    ) {\n        super(name);\n        this._elOnlyForCalculate = elOnlyForCalculate;\n    }",
          "start_token": 1597,
          "end_token": 1619,
          "children": [
            {
              "type": "Parameter",
              "label": "name: string",
              "start_token": 1599,
              "end_token": 1601,
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "start_token": 1599,
                  "end_token": 1599,
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "start_token": 1601,
                  "end_token": 1601,
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "elOnlyForCalculate: Element",
              "start_token": 1603,
              "end_token": 1605,
              "children": [
                {
                  "type": "Identifier",
                  "label": "elOnlyForCalculate",
                  "start_token": 1603,
                  "end_token": 1603,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Element",
                  "start_token": 1605,
                  "end_token": 1605,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Element",
                      "start_token": 1605,
                      "end_token": 1605,
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        super(name);\n        this._elOnlyForCalculate = elOnlyForCalculate;\n    }",
              "start_token": 1607,
              "end_token": 1619,
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(name);",
                  "start_token": 1608,
                  "end_token": 1612,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(name)",
                      "start_token": 1608,
                      "end_token": 1611,
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "start_token": 1608,
                          "end_token": 1608,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "start_token": 1610,
                          "end_token": 1610,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this._elOnlyForCalculate = elOnlyForCalculate;",
                  "start_token": 1613,
                  "end_token": 1618,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this._elOnlyForCalculate = elOnlyForCalculate",
                      "start_token": 1613,
                      "end_token": 1617,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this._elOnlyForCalculate",
                          "start_token": 1613,
                          "end_token": 1615,
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "start_token": 1613,
                              "end_token": 1613,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "_elOnlyForCalculate",
                              "start_token": 1615,
                              "end_token": 1615,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "start_token": 1616,
                          "end_token": 1616,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "elOnlyForCalculate",
                          "start_token": 1617,
                          "end_token": 1617,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "calcCenter(): number[] {\n        const el = this._elOnlyForCalculate;\n        const rect = el.getBoundingRect();\n        const center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n        const mat = matrix.identity(TMP_TRANSFORM);\n        let target = el;\n        while (target && !(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n        matrix.invert(mat, mat);\n        vec2.applyTransform(center, center, mat);\n        return center;\n    }",
          "start_token": 1620,
          "end_token": 1743,
          "children": [
            {
              "type": "Identifier",
              "label": "calcCenter",
              "start_token": 1620,
              "end_token": 1620,
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "start_token": 1624,
              "end_token": 1626,
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 1624,
                  "end_token": 1624,
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n        const el = this._elOnlyForCalculate;\n        const rect = el.getBoundingRect();\n        const center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];\n        const mat = matrix.identity(TMP_TRANSFORM);\n        let target = el;\n        while (target && !(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n        matrix.invert(mat, mat);\n        vec2.applyTransform(center, center, mat);\n        return center;\n    }",
              "start_token": 1627,
              "end_token": 1743,
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "const el = this._elOnlyForCalculate;",
                  "start_token": 1628,
                  "end_token": 1634,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const el = this._elOnlyForCalculate",
                      "start_token": 1628,
                      "end_token": 1633,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "el = this._elOnlyForCalculate",
                          "start_token": 1629,
                          "end_token": 1633,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "el",
                              "start_token": 1629,
                              "end_token": 1629,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this._elOnlyForCalculate",
                              "start_token": 1631,
                              "end_token": 1633,
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "start_token": 1631,
                                  "end_token": 1631,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "_elOnlyForCalculate",
                                  "start_token": 1633,
                                  "end_token": 1633,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const rect = el.getBoundingRect();",
                  "start_token": 1635,
                  "end_token": 1643,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const rect = el.getBoundingRect()",
                      "start_token": 1635,
                      "end_token": 1642,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "rect = el.getBoundingRect()",
                          "start_token": 1636,
                          "end_token": 1642,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rect",
                              "start_token": 1636,
                              "end_token": 1636,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "el.getBoundingRect()",
                              "start_token": 1638,
                              "end_token": 1642,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "el.getBoundingRect",
                                  "start_token": 1638,
                                  "end_token": 1640,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "el",
                                      "start_token": 1638,
                                      "end_token": 1638,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getBoundingRect",
                                      "start_token": 1640,
                                      "end_token": 1640,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ];",
                  "start_token": 1644,
                  "end_token": 1668,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ]",
                      "start_token": 1644,
                      "end_token": 1667,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "center = [\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ]",
                          "start_token": 1645,
                          "end_token": 1667,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "center",
                              "start_token": 1645,
                              "end_token": 1645,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[\n            rect.x + rect.width / 2,\n            rect.y + rect.height / 2\n        ]",
                              "start_token": 1647,
                              "end_token": 1667,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "rect.x + rect.width / 2",
                                  "start_token": 1648,
                                  "end_token": 1656,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rect.x",
                                      "start_token": 1648,
                                      "end_token": 1650,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rect",
                                          "start_token": 1648,
                                          "end_token": 1648,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "x",
                                          "start_token": 1650,
                                          "end_token": 1650,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "start_token": 1651,
                                      "end_token": 1651,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "rect.width / 2",
                                      "start_token": 1652,
                                      "end_token": 1656,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "rect.width",
                                          "start_token": 1652,
                                          "end_token": 1654,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "rect",
                                              "start_token": 1652,
                                              "end_token": 1652,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "width",
                                              "start_token": 1654,
                                              "end_token": 1654,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "start_token": 1655,
                                          "end_token": 1655,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "2",
                                          "start_token": 1656,
                                          "end_token": 1656,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "rect.y + rect.height / 2",
                                  "start_token": 1658,
                                  "end_token": 1666,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rect.y",
                                      "start_token": 1658,
                                      "end_token": 1660,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rect",
                                          "start_token": 1658,
                                          "end_token": 1658,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "y",
                                          "start_token": 1660,
                                          "end_token": 1660,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "start_token": 1661,
                                      "end_token": 1661,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "rect.height / 2",
                                      "start_token": 1662,
                                      "end_token": 1666,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "rect.height",
                                          "start_token": 1662,
                                          "end_token": 1664,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "rect",
                                              "start_token": 1662,
                                              "end_token": 1662,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "height",
                                              "start_token": 1664,
                                              "end_token": 1664,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "start_token": 1665,
                                          "end_token": 1665,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "2",
                                          "start_token": 1666,
                                          "end_token": 1666,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "const mat = matrix.identity(TMP_TRANSFORM);",
                  "start_token": 1669,
                  "end_token": 1678,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "const mat = matrix.identity(TMP_TRANSFORM)",
                      "start_token": 1669,
                      "end_token": 1677,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "mat = matrix.identity(TMP_TRANSFORM)",
                          "start_token": 1670,
                          "end_token": 1677,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mat",
                              "start_token": 1670,
                              "end_token": 1670,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "matrix.identity(TMP_TRANSFORM)",
                              "start_token": 1672,
                              "end_token": 1677,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "matrix.identity",
                                  "start_token": 1672,
                                  "end_token": 1674,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "matrix",
                                      "start_token": 1672,
                                      "end_token": 1672,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "identity",
                                      "start_token": 1674,
                                      "end_token": 1674,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TMP_TRANSFORM",
                                  "start_token": 1676,
                                  "end_token": 1676,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let target = el;",
                  "start_token": 1679,
                  "end_token": 1683,
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let target = el",
                      "start_token": 1679,
                      "end_token": 1682,
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "target = el",
                          "start_token": 1680,
                          "end_token": 1682,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "target",
                              "start_token": 1680,
                              "end_token": 1680,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "el",
                              "start_token": 1682,
                              "end_token": 1682,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "WhileStatement",
                  "label": "while (target && !(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }",
                  "start_token": 1684,
                  "end_token": 1719,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "target && !(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot",
                      "start_token": 1686,
                      "end_token": 1695,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "target",
                          "start_token": 1686,
                          "end_token": 1686,
                          "children": []
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 1687,
                          "end_token": 1687,
                          "children": []
                        },
                        {
                          "type": "PrefixUnaryExpression",
                          "label": "!(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot",
                          "start_token": 1688,
                          "end_token": 1695,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "(target as GeoSVGGraphicRoot).isGeoSVGGraphicRoot",
                              "start_token": 1689,
                              "end_token": 1695,
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(target as GeoSVGGraphicRoot)",
                                  "start_token": 1689,
                                  "end_token": 1693,
                                  "children": [
                                    {
                                      "type": "AsExpression",
                                      "label": "target as GeoSVGGraphicRoot",
                                      "start_token": 1690,
                                      "end_token": 1692,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "target",
                                          "start_token": 1690,
                                          "end_token": 1690,
                                          "children": []
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "GeoSVGGraphicRoot",
                                          "start_token": 1692,
                                          "end_token": 1692,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "GeoSVGGraphicRoot",
                                              "start_token": 1692,
                                              "end_token": 1692,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isGeoSVGGraphicRoot",
                                  "start_token": 1695,
                                  "end_token": 1695,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }",
                      "start_token": 1697,
                      "end_token": 1719,
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "matrix.mul(mat, target.getLocalTransform(), mat);",
                          "start_token": 1698,
                          "end_token": 1712,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "matrix.mul(mat, target.getLocalTransform(), mat)",
                              "start_token": 1698,
                              "end_token": 1711,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "matrix.mul",
                                  "start_token": 1698,
                                  "end_token": 1700,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "matrix",
                                      "start_token": 1698,
                                      "end_token": 1698,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "mul",
                                      "start_token": 1700,
                                      "end_token": 1700,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "mat",
                                  "start_token": 1702,
                                  "end_token": 1702,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "target.getLocalTransform()",
                                  "start_token": 1704,
                                  "end_token": 1708,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "target.getLocalTransform",
                                      "start_token": 1704,
                                      "end_token": 1706,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "target",
                                          "start_token": 1704,
                                          "end_token": 1704,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getLocalTransform",
                                          "start_token": 1706,
                                          "end_token": 1706,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "mat",
                                  "start_token": 1710,
                                  "end_token": 1710,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "target = target.parent;",
                          "start_token": 1713,
                          "end_token": 1718,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "target = target.parent",
                              "start_token": 1713,
                              "end_token": 1717,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "target",
                                  "start_token": 1713,
                                  "end_token": 1713,
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "start_token": 1714,
                                  "end_token": 1714,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "target.parent",
                                  "start_token": 1715,
                                  "end_token": 1717,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "target",
                                      "start_token": 1715,
                                      "end_token": 1715,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "parent",
                                      "start_token": 1717,
                                      "end_token": 1717,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "matrix.invert(mat, mat);",
                  "start_token": 1720,
                  "end_token": 1728,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "matrix.invert(mat, mat)",
                      "start_token": 1720,
                      "end_token": 1727,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "matrix.invert",
                          "start_token": 1720,
                          "end_token": 1722,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "matrix",
                              "start_token": 1720,
                              "end_token": 1720,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "invert",
                              "start_token": 1722,
                              "end_token": 1722,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "mat",
                          "start_token": 1724,
                          "end_token": 1724,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "mat",
                          "start_token": 1726,
                          "end_token": 1726,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "vec2.applyTransform(center, center, mat);",
                  "start_token": 1729,
                  "end_token": 1739,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "vec2.applyTransform(center, center, mat)",
                      "start_token": 1729,
                      "end_token": 1738,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "vec2.applyTransform",
                          "start_token": 1729,
                          "end_token": 1731,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "vec2",
                              "start_token": 1729,
                              "end_token": 1729,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "applyTransform",
                              "start_token": 1731,
                              "end_token": 1731,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "center",
                          "start_token": 1733,
                          "end_token": 1733,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "center",
                          "start_token": 1735,
                          "end_token": 1735,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "mat",
                          "start_token": 1737,
                          "end_token": 1737,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return center;",
                  "start_token": 1740,
                  "end_token": 1742,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "center",
                      "start_token": 1741,
                      "end_token": 1741,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}