{
  "type": "SourceFile",
  "label": "import image from '@ohos.multimedia.image'\nimport fileio from '@ohos.fileio'\nimport fs from '@ohos.file.fs';\nimport prompt from '@ohos.prompt'\nimport photoAccessHelper from '@ohos.file.photoAccessHelper'\nimport DateTimeUtil from './DateTimeUtil'\n\n\n/**\n * mediaUtils of wifi test\n */\n\nconst TAG = \"[MediaUtils]\"\n\nclass MediaUtils {\n  async createAndGetFile(context: any) {\n    let mediaTest = photoAccessHelper.getPhotoAccessHelper(context)\n    let info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }\n    let dateTimeUtil = new DateTimeUtil()\n    let name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`\n    let displayName = `${info.prefix}${name}${info.suffix}`\n    let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE;\n    let options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }\n    return await mediaTest.createAsset(photoType, '.jpg', options)\n  }\n\n  async savePicture(data: image.PixelMap, context: any) {\n    console.log(TAG, `savePicture`)\n    let packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }\n    let imagePackerApi = image.createImagePacker()\n    let arrayBuffer = await imagePackerApi.packing(data, packOpts)\n    let fileAsset = await this.createAndGetFile(context)\n    let file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n    imagePackerApi.release()\n    try {\n      await fs.write(file.fd, arrayBuffer);\n    } catch (err) {\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }\n    await fs.close(file.fd);\n    console.log(TAG, `write done`)\n    prompt.showToast({\n      message: '图片保存成功', duration: 1000\n    })\n  }\n}\n\nexport default new MediaUtils()",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import image from '@ohos.multimedia.image'",
      "children": [
        {
          "type": "ImportClause",
          "label": "image",
          "children": [
            {
              "type": "Identifier",
              "label": "image",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.multimedia.image'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import fileio from '@ohos.fileio'",
      "children": [
        {
          "type": "ImportClause",
          "label": "fileio",
          "children": [
            {
              "type": "Identifier",
              "label": "fileio",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.fileio'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import fs from '@ohos.file.fs';",
      "children": [
        {
          "type": "ImportClause",
          "label": "fs",
          "children": [
            {
              "type": "Identifier",
              "label": "fs",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.fs'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import prompt from '@ohos.prompt'",
      "children": [
        {
          "type": "ImportClause",
          "label": "prompt",
          "children": [
            {
              "type": "Identifier",
              "label": "prompt",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.prompt'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper'",
      "children": [
        {
          "type": "ImportClause",
          "label": "photoAccessHelper",
          "children": [
            {
              "type": "Identifier",
              "label": "photoAccessHelper",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.photoAccessHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import DateTimeUtil from './DateTimeUtil'",
      "children": [
        {
          "type": "ImportClause",
          "label": "DateTimeUtil",
          "children": [
            {
              "type": "Identifier",
              "label": "DateTimeUtil",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./DateTimeUtil'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = \"[MediaUtils]\"",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = \"[MediaUtils]\"",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = \"[MediaUtils]\"",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "\"[MediaUtils]\"",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "class MediaUtils {\n  async createAndGetFile(context: any) {\n    let mediaTest = photoAccessHelper.getPhotoAccessHelper(context)\n    let info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }\n    let dateTimeUtil = new DateTimeUtil()\n    let name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`\n    let displayName = `${info.prefix}${name}${info.suffix}`\n    let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE;\n    let options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }\n    return await mediaTest.createAsset(photoType, '.jpg', options)\n  }\n\n  async savePicture(data: image.PixelMap, context: any) {\n    console.log(TAG, `savePicture`)\n    let packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }\n    let imagePackerApi = image.createImagePacker()\n    let arrayBuffer = await imagePackerApi.packing(data, packOpts)\n    let fileAsset = await this.createAndGetFile(context)\n    let file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n    imagePackerApi.release()\n    try {\n      await fs.write(file.fd, arrayBuffer);\n    } catch (err) {\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }\n    await fs.close(file.fd);\n    console.log(TAG, `write done`)\n    prompt.showToast({\n      message: '图片保存成功', duration: 1000\n    })\n  }\n}",
      "children": [
        {
          "type": "Identifier",
          "label": "MediaUtils",
          "children": []
        },
        {
          "type": "MethodDeclaration",
          "label": "async createAndGetFile(context: any) {\n    let mediaTest = photoAccessHelper.getPhotoAccessHelper(context)\n    let info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }\n    let dateTimeUtil = new DateTimeUtil()\n    let name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`\n    let displayName = `${info.prefix}${name}${info.suffix}`\n    let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE;\n    let options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }\n    return await mediaTest.createAsset(photoType, '.jpg', options)\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "createAndGetFile",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "context: any",
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "children": []
                },
                {
                  "type": "AnyKeyword",
                  "label": "any",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let mediaTest = photoAccessHelper.getPhotoAccessHelper(context)\n    let info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }\n    let dateTimeUtil = new DateTimeUtil()\n    let name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`\n    let displayName = `${info.prefix}${name}${info.suffix}`\n    let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE;\n    let options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }\n    return await mediaTest.createAsset(photoType, '.jpg', options)\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let mediaTest = photoAccessHelper.getPhotoAccessHelper(context)",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let mediaTest = photoAccessHelper.getPhotoAccessHelper(context)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "mediaTest = photoAccessHelper.getPhotoAccessHelper(context)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaTest",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "photoAccessHelper.getPhotoAccessHelper(context)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.getPhotoAccessHelper",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getPhotoAccessHelper",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "context",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "info = {\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      prefix: 'IMG_', suffix: '.jpg', directory: photoAccessHelper.PhotoType.IMAGE\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "prefix: 'IMG_'",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "prefix",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'IMG_'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "suffix: '.jpg'",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "suffix",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'.jpg'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "directory: photoAccessHelper.PhotoType.IMAGE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "directory",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "photoAccessHelper.PhotoType.IMAGE",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "photoAccessHelper.PhotoType",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "photoAccessHelper",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "PhotoType",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "IMAGE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let dateTimeUtil = new DateTimeUtil()",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let dateTimeUtil = new DateTimeUtil()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "dateTimeUtil = new DateTimeUtil()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "dateTimeUtil",
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new DateTimeUtil()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "DateTimeUtil",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "name = `${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "name",
                              "children": []
                            },
                            {
                              "type": "TemplateExpression",
                              "label": "`${dateTimeUtil.getDate()}_${dateTimeUtil.getTime()}`",
                              "children": [
                                {
                                  "type": "TemplateHead",
                                  "label": "`${",
                                  "children": []
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "dateTimeUtil.getDate()}_${",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "dateTimeUtil.getDate()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dateTimeUtil.getDate",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dateTimeUtil",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getDate",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TemplateMiddle",
                                      "label": "}_${",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "dateTimeUtil.getTime()}`",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "dateTimeUtil.getTime()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "dateTimeUtil.getTime",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dateTimeUtil",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getTime",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "LastTemplateToken",
                                      "label": "}`",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let displayName = `${info.prefix}${name}${info.suffix}`",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let displayName = `${info.prefix}${name}${info.suffix}`",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "displayName = `${info.prefix}${name}${info.suffix}`",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "displayName",
                              "children": []
                            },
                            {
                              "type": "TemplateExpression",
                              "label": "`${info.prefix}${name}${info.suffix}`",
                              "children": [
                                {
                                  "type": "TemplateHead",
                                  "label": "`${",
                                  "children": []
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "info.prefix}${",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "info.prefix",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "info",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "prefix",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TemplateMiddle",
                                      "label": "}${",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "name}${",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "name",
                                      "children": []
                                    },
                                    {
                                      "type": "TemplateMiddle",
                                      "label": "}${",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "TemplateSpan",
                                  "label": "info.suffix}`",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "info.suffix",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "info",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "suffix",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "LastTemplateToken",
                                      "label": "}`",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "photoType: photoAccessHelper.PhotoType = photoAccessHelper.PhotoType.IMAGE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoType",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.PhotoType",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.PhotoType",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PhotoType",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "photoAccessHelper.PhotoType.IMAGE",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "photoAccessHelper.PhotoType",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PhotoType",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "IMAGE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "options: photoAccessHelper.CreateOptions = {\n      title: displayName\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "options",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "photoAccessHelper.CreateOptions",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "photoAccessHelper.CreateOptions",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoAccessHelper",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "CreateOptions",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      title: displayName\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "title: displayName",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "title",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "displayName",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return await mediaTest.createAsset(photoType, '.jpg', options)",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await mediaTest.createAsset(photoType, '.jpg', options)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "mediaTest.createAsset(photoType, '.jpg', options)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "mediaTest.createAsset",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mediaTest",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "createAsset",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "photoType",
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'.jpg'",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "options",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async savePicture(data: image.PixelMap, context: any) {\n    console.log(TAG, `savePicture`)\n    let packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }\n    let imagePackerApi = image.createImagePacker()\n    let arrayBuffer = await imagePackerApi.packing(data, packOpts)\n    let fileAsset = await this.createAndGetFile(context)\n    let file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n    imagePackerApi.release()\n    try {\n      await fs.write(file.fd, arrayBuffer);\n    } catch (err) {\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }\n    await fs.close(file.fd);\n    console.log(TAG, `write done`)\n    prompt.showToast({\n      message: '图片保存成功', duration: 1000\n    })\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "savePicture",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "data: image.PixelMap",
              "children": [
                {
                  "type": "Identifier",
                  "label": "data",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "image.PixelMap",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "image.PixelMap",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "image",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "PixelMap",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "context: any",
              "children": [
                {
                  "type": "Identifier",
                  "label": "context",
                  "children": []
                },
                {
                  "type": "AnyKeyword",
                  "label": "any",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    console.log(TAG, `savePicture`)\n    let packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }\n    let imagePackerApi = image.createImagePacker()\n    let arrayBuffer = await imagePackerApi.packing(data, packOpts)\n    let fileAsset = await this.createAndGetFile(context)\n    let file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n    imagePackerApi.release()\n    try {\n      await fs.write(file.fd, arrayBuffer);\n    } catch (err) {\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }\n    await fs.close(file.fd);\n    console.log(TAG, `write done`)\n    prompt.showToast({\n      message: '图片保存成功', duration: 1000\n    })\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "console.log(TAG, `savePicture`)",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "console.log(TAG, `savePicture`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "console.log",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "console",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "log",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "FirstTemplateToken",
                          "label": "`savePicture`",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "packOpts: image.PackingOption = {\n      format: \"image/jpeg\", quality: 100\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "packOpts",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "image.PackingOption",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "image.PackingOption",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "image",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PackingOption",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      format: \"image/jpeg\", quality: 100\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "format: \"image/jpeg\"",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "format",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"image/jpeg\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "quality: 100",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "quality",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "100",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imagePackerApi = image.createImagePacker()",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imagePackerApi = image.createImagePacker()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imagePackerApi = image.createImagePacker()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imagePackerApi",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "image.createImagePacker()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "image.createImagePacker",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "image",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "createImagePacker",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let arrayBuffer = await imagePackerApi.packing(data, packOpts)",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let arrayBuffer = await imagePackerApi.packing(data, packOpts)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "arrayBuffer = await imagePackerApi.packing(data, packOpts)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "arrayBuffer",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await imagePackerApi.packing(data, packOpts)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "imagePackerApi.packing(data, packOpts)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "imagePackerApi.packing",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "imagePackerApi",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "packing",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "data",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "packOpts",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fileAsset = await this.createAndGetFile(context)",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fileAsset = await this.createAndGetFile(context)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fileAsset = await this.createAndGetFile(context)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fileAsset",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.createAndGetFile(context)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.createAndGetFile(context)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.createAndGetFile",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "createAndGetFile",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "context",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "file = await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "file",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fs.open(fileAsset,  fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fs.open",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fs",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "open",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "fileAsset",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fs.OpenMode.READ_WRITE",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fs.OpenMode",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fs",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "OpenMode",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "READ_WRITE",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BarToken",
                                          "label": "|",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "fs.OpenMode.CREATE",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "fs.OpenMode",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "fs",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "OpenMode",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "CREATE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "imagePackerApi.release()",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "imagePackerApi.release()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "imagePackerApi.release",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imagePackerApi",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "release",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      await fs.write(file.fd, arrayBuffer);\n    } catch (err) {\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      await fs.write(file.fd, arrayBuffer);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "await fs.write(file.fd, arrayBuffer);",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await fs.write(file.fd, arrayBuffer)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "fs.write(file.fd, arrayBuffer)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "fs.write",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "fs",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "write",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "file.fd",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "file",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "fd",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "arrayBuffer",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      console.log(`write failed, code is ${err.code}, message is ${err.message}`)\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "console.log(`write failed, code is ${err.code}, message is ${err.message}`)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "console.log(`write failed, code is ${err.code}, message is ${err.message}`)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "console.log",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "console",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "log",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TemplateExpression",
                                      "label": "`write failed, code is ${err.code}, message is ${err.message}`",
                                      "children": [
                                        {
                                          "type": "TemplateHead",
                                          "label": "`write failed, code is ${",
                                          "children": []
                                        },
                                        {
                                          "type": "TemplateSpan",
                                          "label": "err.code}, message is ${",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "err.code",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "err",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "code",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "TemplateMiddle",
                                              "label": "}, message is ${",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "TemplateSpan",
                                          "label": "err.message}`",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "err.message",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "err",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "message",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "LastTemplateToken",
                                              "label": "}`",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "await fs.close(file.fd);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await fs.close(file.fd)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "fs.close(file.fd)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "fs.close",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "fs",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "close",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "file.fd",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "file",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "fd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "console.log(TAG, `write done`)",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "console.log(TAG, `write done`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "console.log",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "console",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "log",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "FirstTemplateToken",
                          "label": "`write done`",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "prompt.showToast({\n      message: '图片保存成功', duration: 1000\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "prompt.showToast({\n      message: '图片保存成功', duration: 1000\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "prompt.showToast",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "prompt",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "showToast",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{\n      message: '图片保存成功', duration: 1000\n    }",
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "message: '图片保存成功'",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "message",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'图片保存成功'",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAssignment",
                              "label": "duration: 1000",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "duration",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1000",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ExportAssignment",
      "label": "export default new MediaUtils()",
      "children": [
        {
          "type": "NewExpression",
          "label": "new MediaUtils()",
          "children": [
            {
              "type": "Identifier",
              "label": "MediaUtils",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}