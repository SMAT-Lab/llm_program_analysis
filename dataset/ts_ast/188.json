{
  "type": "SourceFile",
  "label": "import type { Quiz } from '../../types'\nimport type { SupportedLocale } from '../../locales'\nimport { defaultLocale, t } from '../../locales'\nimport { toCommentBlock } from './toCommentBlock'\nimport { toInfoHeader } from './toInfoHeader'\nimport { toLinks } from './toLinks'\nimport { toDivider } from './toDivider'\nimport { toFooter } from './toFooter'\nexport function formatToCode(quiz: Quiz, locale: SupportedLocale) {\n  return `${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`\n}",
  "start_token": 0,
  "end_token": 67,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import type { Quiz } from '../../types'",
      "start_token": 0,
      "end_token": 6,
      "children": [
        {
          "type": "ImportClause",
          "label": "type { Quiz }",
          "start_token": 1,
          "end_token": 4,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Quiz }",
              "start_token": 2,
              "end_token": 4,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Quiz",
                  "start_token": 3,
                  "end_token": 3,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Quiz",
                      "start_token": 3,
                      "end_token": 3,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../../types'",
          "start_token": 6,
          "end_token": 6,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { SupportedLocale } from '../../locales'",
      "start_token": 7,
      "end_token": 13,
      "children": [
        {
          "type": "ImportClause",
          "label": "type { SupportedLocale }",
          "start_token": 8,
          "end_token": 11,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ SupportedLocale }",
              "start_token": 9,
              "end_token": 11,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "SupportedLocale",
                  "start_token": 10,
                  "end_token": 10,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "SupportedLocale",
                      "start_token": 10,
                      "end_token": 10,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../../locales'",
          "start_token": 13,
          "end_token": 13,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { defaultLocale, t } from '../../locales'",
      "start_token": 14,
      "end_token": 21,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ defaultLocale, t }",
          "start_token": 15,
          "end_token": 19,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ defaultLocale, t }",
              "start_token": 15,
              "end_token": 19,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "defaultLocale",
                  "start_token": 16,
                  "end_token": 16,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "defaultLocale",
                      "start_token": 16,
                      "end_token": 16,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "t",
                  "start_token": 18,
                  "end_token": 18,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "t",
                      "start_token": 18,
                      "end_token": 18,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../../locales'",
          "start_token": 21,
          "end_token": 21,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { toCommentBlock } from './toCommentBlock'",
      "start_token": 22,
      "end_token": 27,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ toCommentBlock }",
          "start_token": 23,
          "end_token": 25,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ toCommentBlock }",
              "start_token": 23,
              "end_token": 25,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "toCommentBlock",
                  "start_token": 24,
                  "end_token": 24,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "toCommentBlock",
                      "start_token": 24,
                      "end_token": 24,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./toCommentBlock'",
          "start_token": 27,
          "end_token": 27,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { toInfoHeader } from './toInfoHeader'",
      "start_token": 28,
      "end_token": 33,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ toInfoHeader }",
          "start_token": 29,
          "end_token": 31,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ toInfoHeader }",
              "start_token": 29,
              "end_token": 31,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "toInfoHeader",
                  "start_token": 30,
                  "end_token": 30,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "toInfoHeader",
                      "start_token": 30,
                      "end_token": 30,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./toInfoHeader'",
          "start_token": 33,
          "end_token": 33,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { toLinks } from './toLinks'",
      "start_token": 34,
      "end_token": 39,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ toLinks }",
          "start_token": 35,
          "end_token": 37,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ toLinks }",
              "start_token": 35,
              "end_token": 37,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "toLinks",
                  "start_token": 36,
                  "end_token": 36,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "toLinks",
                      "start_token": 36,
                      "end_token": 36,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./toLinks'",
          "start_token": 39,
          "end_token": 39,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { toDivider } from './toDivider'",
      "start_token": 40,
      "end_token": 45,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ toDivider }",
          "start_token": 41,
          "end_token": 43,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ toDivider }",
              "start_token": 41,
              "end_token": 43,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "toDivider",
                  "start_token": 42,
                  "end_token": 42,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "toDivider",
                      "start_token": 42,
                      "end_token": 42,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./toDivider'",
          "start_token": 45,
          "end_token": 45,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { toFooter } from './toFooter'",
      "start_token": 46,
      "end_token": 51,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ toFooter }",
          "start_token": 47,
          "end_token": 49,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ toFooter }",
              "start_token": 47,
              "end_token": 49,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "toFooter",
                  "start_token": 48,
                  "end_token": 48,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "toFooter",
                      "start_token": 48,
                      "end_token": 48,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./toFooter'",
          "start_token": 51,
          "end_token": 51,
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export function formatToCode(quiz: Quiz, locale: SupportedLocale) {\n  return `${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`\n}",
      "start_token": 52,
      "end_token": 67,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 52,
          "end_token": 52,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "formatToCode",
          "start_token": 54,
          "end_token": 54,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "quiz: Quiz",
          "start_token": 56,
          "end_token": 58,
          "children": [
            {
              "type": "Identifier",
              "label": "quiz",
              "start_token": 56,
              "end_token": 56,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Quiz",
              "start_token": 58,
              "end_token": 58,
              "children": [
                {
                  "type": "Identifier",
                  "label": "Quiz",
                  "start_token": 58,
                  "end_token": 58,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "locale: SupportedLocale",
          "start_token": 60,
          "end_token": 62,
          "children": [
            {
              "type": "Identifier",
              "label": "locale",
              "start_token": 60,
              "end_token": 60,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "SupportedLocale",
              "start_token": 62,
              "end_token": 62,
              "children": [
                {
                  "type": "Identifier",
                  "label": "SupportedLocale",
                  "start_token": 62,
                  "end_token": 62,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  return `${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`\n}",
          "start_token": 64,
          "end_token": 67,
          "children": [
            {
              "type": "ReturnStatement",
              "label": "return `${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`",
              "start_token": 65,
              "end_token": 66,
              "children": [
                {
                  "type": "TemplateExpression",
                  "label": "`${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`",
                  "start_token": 66,
                  "end_token": 66,
                  "children": [
                    {
                      "type": "TemplateHead",
                      "label": "`${",
                      "start_token": 66,
                      "end_token": 66,
                      "children": []
                    },
                    {
                      "type": "TemplateSpan",
                      "label": "toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${",
                      "start_token": 66,
                      "end_token": 66,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))",
                          "start_token": 66,
                          "end_token": 66,
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "toCommentBlock",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale)",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "toInfoHeader(quiz, locale)",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "toInfoHeader",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "quiz",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "locale",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(quiz.readme[locale] || quiz.readme[defaultLocale])",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "quiz.readme[locale] || quiz.readme[defaultLocale]",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "quiz.readme[locale]",
                                                  "start_token": 66,
                                                  "end_token": 66,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "quiz.readme",
                                                      "start_token": 66,
                                                      "end_token": 66,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "quiz",
                                                          "start_token": 66,
                                                          "end_token": 66,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "readme",
                                                          "start_token": 66,
                                                          "end_token": 66,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "locale",
                                                      "start_token": 66,
                                                      "end_token": 66,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "BarBarToken",
                                                  "label": "||",
                                                  "start_token": 66,
                                                  "end_token": 66,
                                                  "children": []
                                                },
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "quiz.readme[defaultLocale]",
                                                  "start_token": 66,
                                                  "end_token": 66,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "quiz.readme",
                                                      "start_token": 66,
                                                      "end_token": 66,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "quiz",
                                                          "start_token": 66,
                                                          "end_token": 66,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "readme",
                                                          "start_token": 66,
                                                          "end_token": 66,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "defaultLocale",
                                                      "start_token": 66,
                                                      "end_token": 66,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "toLinks(quiz, locale)",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "toLinks",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "quiz",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "locale",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "start_token": 66,
                              "end_token": 66,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "toDivider(t(locale, 'divider.code-start'))",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "toDivider",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "t(locale, 'divider.code-start')",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "t",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "locale",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'divider.code-start'",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TemplateMiddle",
                          "label": "}\\n${",
                          "start_token": 66,
                          "end_token": 66,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "TemplateSpan",
                      "label": "(quiz.template || '').trim()\n  }\\n${",
                      "start_token": 66,
                      "end_token": 66,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "(quiz.template || '').trim()",
                          "start_token": 66,
                          "end_token": 66,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "(quiz.template || '').trim",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(quiz.template || '')",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "quiz.template || ''",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "quiz.template",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "quiz",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "template",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BarBarToken",
                                          "label": "||",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "''",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "trim",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TemplateMiddle",
                          "label": "}\\n${",
                          "start_token": 66,
                          "end_token": 66,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "TemplateSpan",
                      "label": "toDivider(t(locale, 'divider.test-cases'))\n  }${",
                      "start_token": 66,
                      "end_token": 66,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "toDivider(t(locale, 'divider.test-cases'))",
                          "start_token": 66,
                          "end_token": 66,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "toDivider",
                              "start_token": 66,
                              "end_token": 66,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "t(locale, 'divider.test-cases')",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "t",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "locale",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'divider.test-cases'",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TemplateMiddle",
                          "label": "}${",
                          "start_token": 66,
                          "end_token": 66,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "TemplateSpan",
                      "label": "(quiz.tests || '').trim()\n  }\\n${",
                      "start_token": 66,
                      "end_token": 66,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "(quiz.tests || '').trim()",
                          "start_token": 66,
                          "end_token": 66,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "(quiz.tests || '').trim",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(quiz.tests || '')",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "quiz.tests || ''",
                                      "start_token": 66,
                                      "end_token": 66,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "quiz.tests",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "quiz",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "tests",
                                              "start_token": 66,
                                              "end_token": 66,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BarBarToken",
                                          "label": "||",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "''",
                                          "start_token": 66,
                                          "end_token": 66,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "trim",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TemplateMiddle",
                          "label": "}\\n${",
                          "start_token": 66,
                          "end_token": 66,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "TemplateSpan",
                      "label": "toDivider(t(locale, 'divider.further-steps'))\n  }${",
                      "start_token": 66,
                      "end_token": 66,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "toDivider(t(locale, 'divider.further-steps'))",
                          "start_token": 66,
                          "end_token": 66,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "toDivider",
                              "start_token": 66,
                              "end_token": 66,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "t(locale, 'divider.further-steps')",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "t",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "locale",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'divider.further-steps'",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "TemplateMiddle",
                          "label": "}${",
                          "start_token": 66,
                          "end_token": 66,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "TemplateSpan",
                      "label": "toCommentBlock(toFooter(quiz, locale))}`",
                      "start_token": 66,
                      "end_token": 66,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "toCommentBlock(toFooter(quiz, locale))",
                          "start_token": 66,
                          "end_token": 66,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "toCommentBlock",
                              "start_token": 66,
                              "end_token": 66,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "toFooter(quiz, locale)",
                              "start_token": 66,
                              "end_token": 66,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "toFooter",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "quiz",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "locale",
                                  "start_token": 66,
                                  "end_token": 66,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "LastTemplateToken",
                          "label": "}`",
                          "start_token": 66,
                          "end_token": 66,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}