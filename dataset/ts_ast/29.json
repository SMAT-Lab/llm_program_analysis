{
  "type": "SourceFile",
  "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport { AsyncCallback } from './AsyncCallback';\nimport { Log } from '../utils/Log';\nimport { MenuOperationCallback } from './MenuOperationCallback';\nimport { MenuOperation } from './MenuOperation';\nimport { MenuContext } from './MenuContext';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\nimport { SimpleAlbumDataItem } from '../common/SimpleAlbumDataItem';\nimport { userFileModel } from '../base/UserFileModel';\n\nexport enum FindSameOperation {\n  NONE,\n  REPLACE,\n  SKIP\n}\n\nexport interface Assets {\n  sourceAsset: photoAccessHelper.PhotoAsset,\n  targetAsset: photoAccessHelper.PhotoAsset\n}\n\nconst TAG = 'ProcessMenuOperation';\n\nexport class ProcessMenuOperation implements MenuOperation, AsyncCallback<String[]>, MenuOperationCallback {\n  // Number of data operated in a batch\n  readonly BATCH_SIZE: number = 1;\n\n  // Maximum progress\n  readonly MAX_PROGRESS: number = 100;\n  items: Object[] = [];\n  menuContext: MenuContext;\n  uris: string[];\n  count: number;\n  onOperationEnd: Function;\n\n  // Total batches operated\n  totalBatches: number;\n\n  // Currently operated batch\n  currentBatch: number = 0;\n  successBatch: number = 0;\n  isCancelled: boolean = false;\n  startTime: number;\n  isPause: boolean = false;\n  isError: boolean = false;\n  findSameOperation: number = FindSameOperation.NONE;\n  requestTime: number;\n\n  constructor(menuContext: MenuContext) {\n    this.menuContext = menuContext;\n    this.requestTime = Date.now();\n  }\n\n  doAction(): void {\n  }\n\n  // Asynchronous callback for getSelection\n  callback(uris: string[]): void {\n    this.callbackBindImpl(uris);\n  }\n\n  protected callbackBindImpl(uris: string[]): void {\n  }\n\n  onCompleted(): void {\n    Log.info(TAG, 'onCompleted ' + this.isPause);\n    this.successBatch++;\n    if (!this.isPause) {\n      this.cyclicOperation();\n    }\n  }\n\n  onError(): void {\n    Log.error(TAG, 'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches');\n    this.isError = true;\n    this.cyclicOperation();\n  }\n\n  // Start processing operation\n  processOperation(): void {\n    Log.info(TAG, 'processOperation start');\n    let length = this.items.length;\n    Log.info(TAG, 'selected count: ' + this.count + ', uris length: ' + length);\n    // Batch deletion\n    this.totalBatches = Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number);\n    Log.info(TAG, 'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches');\n    if (this.isCancelled) {\n      this.isCancelled = false;\n    }\n    this.startTime = Date.now();\n\n    this.requestOneBatchOperation();\n  }\n\n  // Batch circular deletion\n  cyclicOperation(): void {\n    Log.info(TAG, 'cyclicOperation');\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n\n    if (this.isCancelled) {\n      this.onProcessDone();\n    }\n\n    if (this.currentBatch >= this.totalBatches || this.isError) {\n      this.onProcessDone();\n    } else {\n      this.requestOneBatchOperation();\n    }\n  }\n\n  // Operate a batch of data\n  requestOneBatchOperation(): void {\n  }\n\n  onProcessDone(): void {\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [100]);\n    this.findSameOperation = FindSameOperation.NONE;\n    if (this.startTime != null) {\n      let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;\n      let costTime = Date.now() - this.startTime;\n      Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');\n    }\n    this.isCancelled = false;\n    if (this.onOperationEnd != null) this.onOperationEnd(this.isError, this.successBatch, this.count);\n  }\n\n  // Operate cancel callback\n  onOperateCancelled(): void {\n    this.onOperateCancelledBindImpl();\n  }\n\n  protected onOperateCancelledBindImpl(): void {\n    Log.info(TAG, 'Operate Cancel');\n    this.isCancelled = true;\n    this.onProcessDone();\n  }\n\n  // Operate cancel callback\n  onOperatePause(): void {\n    Log.info(TAG, 'Operate Pause');\n    this.isPause = true;\n  }\n\n  // Calculate the operation progress according to the batch\n  getExpectProgress(): number {\n    Log.info(TAG, 'getExpectProgress');\n    let progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS);\n    return progress;\n  }\n\n  setFindSameOperation(newOperation: number): void {\n    this.setFindSameOperationBindImpl(newOperation);\n  }\n\n  protected setFindSameOperationBindImpl(newOperation: number): void {\n    Log.info(TAG, 'setFindSameOperation ' + newOperation);\n    this.findSameOperation = newOperation;\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "photoAccessHelper",
          "children": [
            {
              "type": "Identifier",
              "label": "photoAccessHelper",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.photoAccessHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { AsyncCallback } from './AsyncCallback';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ AsyncCallback }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ AsyncCallback }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "AsyncCallback",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "AsyncCallback",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./AsyncCallback'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuOperationCallback } from './MenuOperationCallback';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuOperationCallback }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuOperationCallback }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuOperationCallback",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuOperationCallback",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuOperationCallback'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuOperation } from './MenuOperation';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuOperation }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuOperation }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuOperation",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuOperation",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuOperation'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuContext } from './MenuContext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuContext }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuContext }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuContext'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { BroadcastConstants } from '../constants/BroadcastConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ BroadcastConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BroadcastConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BroadcastConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BroadcastConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/BroadcastConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { SimpleAlbumDataItem } from '../common/SimpleAlbumDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ SimpleAlbumDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ SimpleAlbumDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "SimpleAlbumDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "SimpleAlbumDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/SimpleAlbumDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { userFileModel } from '../base/UserFileModel';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ userFileModel }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ userFileModel }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "userFileModel",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFileModel",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileModel'",
          "children": []
        }
      ]
    },
    {
      "type": "EnumDeclaration",
      "label": "export enum FindSameOperation {\n  NONE,\n  REPLACE,\n  SKIP\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "FindSameOperation",
          "children": []
        },
        {
          "type": "EnumMember",
          "label": "NONE",
          "children": [
            {
              "type": "Identifier",
              "label": "NONE",
              "children": []
            }
          ]
        },
        {
          "type": "EnumMember",
          "label": "REPLACE",
          "children": [
            {
              "type": "Identifier",
              "label": "REPLACE",
              "children": []
            }
          ]
        },
        {
          "type": "EnumMember",
          "label": "SKIP",
          "children": [
            {
              "type": "Identifier",
              "label": "SKIP",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "InterfaceDeclaration",
      "label": "export interface Assets {\n  sourceAsset: photoAccessHelper.PhotoAsset,\n  targetAsset: photoAccessHelper.PhotoAsset\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "Assets",
          "children": []
        },
        {
          "type": "PropertySignature",
          "label": "sourceAsset: photoAccessHelper.PhotoAsset,",
          "children": [
            {
              "type": "Identifier",
              "label": "sourceAsset",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoAsset",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertySignature",
          "label": "targetAsset: photoAccessHelper.PhotoAsset",
          "children": [
            {
              "type": "Identifier",
              "label": "targetAsset",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "photoAccessHelper.PhotoAsset",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "photoAccessHelper.PhotoAsset",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "photoAccessHelper",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "PhotoAsset",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'ProcessMenuOperation';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'ProcessMenuOperation'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'ProcessMenuOperation'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'ProcessMenuOperation'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class ProcessMenuOperation implements MenuOperation, AsyncCallback<String[]>, MenuOperationCallback {\n  // Number of data operated in a batch\n  readonly BATCH_SIZE: number = 1;\n\n  // Maximum progress\n  readonly MAX_PROGRESS: number = 100;\n  items: Object[] = [];\n  menuContext: MenuContext;\n  uris: string[];\n  count: number;\n  onOperationEnd: Function;\n\n  // Total batches operated\n  totalBatches: number;\n\n  // Currently operated batch\n  currentBatch: number = 0;\n  successBatch: number = 0;\n  isCancelled: boolean = false;\n  startTime: number;\n  isPause: boolean = false;\n  isError: boolean = false;\n  findSameOperation: number = FindSameOperation.NONE;\n  requestTime: number;\n\n  constructor(menuContext: MenuContext) {\n    this.menuContext = menuContext;\n    this.requestTime = Date.now();\n  }\n\n  doAction(): void {\n  }\n\n  // Asynchronous callback for getSelection\n  callback(uris: string[]): void {\n    this.callbackBindImpl(uris);\n  }\n\n  protected callbackBindImpl(uris: string[]): void {\n  }\n\n  onCompleted(): void {\n    Log.info(TAG, 'onCompleted ' + this.isPause);\n    this.successBatch++;\n    if (!this.isPause) {\n      this.cyclicOperation();\n    }\n  }\n\n  onError(): void {\n    Log.error(TAG, 'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches');\n    this.isError = true;\n    this.cyclicOperation();\n  }\n\n  // Start processing operation\n  processOperation(): void {\n    Log.info(TAG, 'processOperation start');\n    let length = this.items.length;\n    Log.info(TAG, 'selected count: ' + this.count + ', uris length: ' + length);\n    // Batch deletion\n    this.totalBatches = Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number);\n    Log.info(TAG, 'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches');\n    if (this.isCancelled) {\n      this.isCancelled = false;\n    }\n    this.startTime = Date.now();\n\n    this.requestOneBatchOperation();\n  }\n\n  // Batch circular deletion\n  cyclicOperation(): void {\n    Log.info(TAG, 'cyclicOperation');\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n\n    if (this.isCancelled) {\n      this.onProcessDone();\n    }\n\n    if (this.currentBatch >= this.totalBatches || this.isError) {\n      this.onProcessDone();\n    } else {\n      this.requestOneBatchOperation();\n    }\n  }\n\n  // Operate a batch of data\n  requestOneBatchOperation(): void {\n  }\n\n  onProcessDone(): void {\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [100]);\n    this.findSameOperation = FindSameOperation.NONE;\n    if (this.startTime != null) {\n      let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;\n      let costTime = Date.now() - this.startTime;\n      Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');\n    }\n    this.isCancelled = false;\n    if (this.onOperationEnd != null) this.onOperationEnd(this.isError, this.successBatch, this.count);\n  }\n\n  // Operate cancel callback\n  onOperateCancelled(): void {\n    this.onOperateCancelledBindImpl();\n  }\n\n  protected onOperateCancelledBindImpl(): void {\n    Log.info(TAG, 'Operate Cancel');\n    this.isCancelled = true;\n    this.onProcessDone();\n  }\n\n  // Operate cancel callback\n  onOperatePause(): void {\n    Log.info(TAG, 'Operate Pause');\n    this.isPause = true;\n  }\n\n  // Calculate the operation progress according to the batch\n  getExpectProgress(): number {\n    Log.info(TAG, 'getExpectProgress');\n    let progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS);\n    return progress;\n  }\n\n  setFindSameOperation(newOperation: number): void {\n    this.setFindSameOperationBindImpl(newOperation);\n  }\n\n  protected setFindSameOperationBindImpl(newOperation: number): void {\n    Log.info(TAG, 'setFindSameOperation ' + newOperation);\n    this.findSameOperation = newOperation;\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "ProcessMenuOperation",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements MenuOperation, AsyncCallback<String[]>, MenuOperationCallback",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "MenuOperation",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MenuOperation",
                  "children": []
                }
              ]
            },
            {
              "type": "ExpressionWithTypeArguments",
              "label": "AsyncCallback<String[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "AsyncCallback",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "String[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "String",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "String",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionWithTypeArguments",
              "label": "MenuOperationCallback",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MenuOperationCallback",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly BATCH_SIZE: number = 1;",
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "BATCH_SIZE",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "1",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "readonly MAX_PROGRESS: number = 100;",
          "children": [
            {
              "type": "ReadonlyKeyword",
              "label": "readonly",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "MAX_PROGRESS",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "100",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "items: Object[] = [];",
          "children": [
            {
              "type": "Identifier",
              "label": "items",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "Object[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[]",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "menuContext: MenuContext;",
          "children": [
            {
              "type": "Identifier",
              "label": "menuContext",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "MenuContext",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MenuContext",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "uris: string[];",
          "children": [
            {
              "type": "Identifier",
              "label": "uris",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "string[]",
              "children": [
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "count: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "count",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "onOperationEnd: Function;",
          "children": [
            {
              "type": "Identifier",
              "label": "onOperationEnd",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Function",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Function",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "totalBatches: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "totalBatches",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "currentBatch: number = 0;",
          "children": [
            {
              "type": "Identifier",
              "label": "currentBatch",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "successBatch: number = 0;",
          "children": [
            {
              "type": "Identifier",
              "label": "successBatch",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "isCancelled: boolean = false;",
          "children": [
            {
              "type": "Identifier",
              "label": "isCancelled",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "FalseKeyword",
              "label": "false",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "startTime: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "startTime",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "isPause: boolean = false;",
          "children": [
            {
              "type": "Identifier",
              "label": "isPause",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "FalseKeyword",
              "label": "false",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "isError: boolean = false;",
          "children": [
            {
              "type": "Identifier",
              "label": "isError",
              "children": []
            },
            {
              "type": "BooleanKeyword",
              "label": "boolean",
              "children": []
            },
            {
              "type": "FalseKeyword",
              "label": "false",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "findSameOperation: number = FindSameOperation.NONE;",
          "children": [
            {
              "type": "Identifier",
              "label": "findSameOperation",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PropertyAccessExpression",
              "label": "FindSameOperation.NONE",
              "children": [
                {
                  "type": "Identifier",
                  "label": "FindSameOperation",
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "NONE",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "requestTime: number;",
          "children": [
            {
              "type": "Identifier",
              "label": "requestTime",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(menuContext: MenuContext) {\n    this.menuContext = menuContext;\n    this.requestTime = Date.now();\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "menuContext: MenuContext",
              "children": [
                {
                  "type": "Identifier",
                  "label": "menuContext",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.menuContext = menuContext;\n    this.requestTime = Date.now();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext = menuContext;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.menuContext = menuContext",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "menuContext",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "menuContext",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.requestTime = Date.now();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.requestTime = Date.now()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.requestTime",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "requestTime",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Date.now()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Date.now",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Date",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "now",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "doAction(): void {\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "doAction",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n  }",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "callback(uris: string[]): void {\n    this.callbackBindImpl(uris);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "callback",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uris: string[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uris",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "string[]",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.callbackBindImpl(uris);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.callbackBindImpl(uris);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.callbackBindImpl(uris)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.callbackBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "callbackBindImpl",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "uris",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected callbackBindImpl(uris: string[]): void {\n  }",
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "callbackBindImpl",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "uris: string[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "uris",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "string[]",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n  }",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onCompleted(): void {\n    Log.info(TAG, 'onCompleted ' + this.isPause);\n    this.successBatch++;\n    if (!this.isPause) {\n      this.cyclicOperation();\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onCompleted",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'onCompleted ' + this.isPause);\n    this.successBatch++;\n    if (!this.isPause) {\n      this.cyclicOperation();\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'onCompleted ' + this.isPause);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'onCompleted ' + this.isPause)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onCompleted ' + this.isPause",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'onCompleted '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isPause",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isPause",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.successBatch++;",
                  "children": [
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "this.successBatch++",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.successBatch",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "successBatch",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!this.isPause) {\n      this.cyclicOperation();\n    }",
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!this.isPause",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isPause",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isPause",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.cyclicOperation();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.cyclicOperation();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.cyclicOperation()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.cyclicOperation",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "cyclicOperation",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onError(): void {\n    Log.error(TAG, 'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches');\n    this.isError = true;\n    this.cyclicOperation();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onError",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.error(TAG, 'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches');\n    this.isError = true;\n    this.cyclicOperation();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.error(TAG, 'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.error(TAG, 'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.error",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "error",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches + ' batches'",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'Operate the ' + this.currentBatch + ' batch data error, total ' + this.totalBatches",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'Operate the ' + this.currentBatch + ' batch data error, total '",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'Operate the ' + this.currentBatch",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'Operate the '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.currentBatch",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "currentBatch",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "' batch data error, total '",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.totalBatches",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "totalBatches",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "' batches'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isError = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isError = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isError",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isError",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.cyclicOperation();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.cyclicOperation()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.cyclicOperation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "cyclicOperation",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "processOperation(): void {\n    Log.info(TAG, 'processOperation start');\n    let length = this.items.length;\n    Log.info(TAG, 'selected count: ' + this.count + ', uris length: ' + length);\n    // Batch deletion\n    this.totalBatches = Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number);\n    Log.info(TAG, 'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches');\n    if (this.isCancelled) {\n      this.isCancelled = false;\n    }\n    this.startTime = Date.now();\n\n    this.requestOneBatchOperation();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "processOperation",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'processOperation start');\n    let length = this.items.length;\n    Log.info(TAG, 'selected count: ' + this.count + ', uris length: ' + length);\n    // Batch deletion\n    this.totalBatches = Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number);\n    Log.info(TAG, 'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches');\n    if (this.isCancelled) {\n      this.isCancelled = false;\n    }\n    this.startTime = Date.now();\n\n    this.requestOneBatchOperation();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'processOperation start');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'processOperation start')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'processOperation start'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let length = this.items.length;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let length = this.items.length",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "length = this.items.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.items.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.items",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "length",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'selected count: ' + this.count + ', uris length: ' + length);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'selected count: ' + this.count + ', uris length: ' + length)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'selected count: ' + this.count + ', uris length: ' + length",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'selected count: ' + this.count + ', uris length: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'selected count: ' + this.count",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'selected count: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.count",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "count",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', uris length: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.totalBatches = Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.totalBatches = Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.totalBatches",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "totalBatches",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "Math.floor(length / this.BATCH_SIZE) + (((length % this.BATCH_SIZE) ? 1 : 0) as number)",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Math.floor(length / this.BATCH_SIZE)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Math.floor",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Math",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "floor",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "length / this.BATCH_SIZE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.BATCH_SIZE",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "BATCH_SIZE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "ParenthesizedExpression",
                              "label": "(((length % this.BATCH_SIZE) ? 1 : 0) as number)",
                              "children": [
                                {
                                  "type": "AsExpression",
                                  "label": "((length % this.BATCH_SIZE) ? 1 : 0) as number",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "((length % this.BATCH_SIZE) ? 1 : 0)",
                                      "children": [
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "(length % this.BATCH_SIZE) ? 1 : 0",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(length % this.BATCH_SIZE)",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "length % this.BATCH_SIZE",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "length",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PercentToken",
                                                      "label": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.BATCH_SIZE",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "BATCH_SIZE",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "NumberKeyword",
                                      "label": "number",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'The count to be operate is ' + length + ', operate in ' + this.totalBatches + ' batches'",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'The count to be operate is ' + length + ', operate in ' + this.totalBatches",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'The count to be operate is ' + length + ', operate in '",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'The count to be operate is ' + length",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'The count to be operate is '",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "', operate in '",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.totalBatches",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "totalBatches",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "' batches'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isCancelled) {\n      this.isCancelled = false;\n    }",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.isCancelled",
                      "children": [
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "isCancelled",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.isCancelled = false;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.isCancelled = false;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.isCancelled = false",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.isCancelled",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isCancelled",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "FalseKeyword",
                                  "label": "false",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.startTime = Date.now();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.startTime = Date.now()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.startTime",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "startTime",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Date.now()",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Date.now",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Date",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "now",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.requestOneBatchOperation();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.requestOneBatchOperation()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.requestOneBatchOperation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "requestOneBatchOperation",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "cyclicOperation(): void {\n    Log.info(TAG, 'cyclicOperation');\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n\n    if (this.isCancelled) {\n      this.onProcessDone();\n    }\n\n    if (this.currentBatch >= this.totalBatches || this.isError) {\n      this.onProcessDone();\n    } else {\n      this.requestOneBatchOperation();\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "cyclicOperation",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'cyclicOperation');\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n\n    if (this.isCancelled) {\n      this.onProcessDone();\n    }\n\n    if (this.currentBatch >= this.totalBatches || this.isError) {\n      this.onProcessDone();\n    } else {\n      this.requestOneBatchOperation();\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'cyclicOperation');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'cyclicOperation')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'cyclicOperation'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.broadCast",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "BroadcastConstants.UPDATE_PROGRESS",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "BroadcastConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "UPDATE_PROGRESS",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[this.getExpectProgress(), this.currentBatch]",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.getExpectProgress()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getExpectProgress",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getExpectProgress",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.currentBatch",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "currentBatch",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isCancelled) {\n      this.onProcessDone();\n    }",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.isCancelled",
                      "children": [
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "isCancelled",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.onProcessDone();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.onProcessDone();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.onProcessDone()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.onProcessDone",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "onProcessDone",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.currentBatch >= this.totalBatches || this.isError) {\n      this.onProcessDone();\n    } else {\n      this.requestOneBatchOperation();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.currentBatch >= this.totalBatches || this.isError",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.currentBatch >= this.totalBatches",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.currentBatch",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "currentBatch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "GreaterThanEqualsToken",
                              "label": ">=",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.totalBatches",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "totalBatches",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isError",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isError",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.onProcessDone();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.onProcessDone();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.onProcessDone()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.onProcessDone",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "onProcessDone",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.requestOneBatchOperation();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.requestOneBatchOperation();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.requestOneBatchOperation()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.requestOneBatchOperation",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "requestOneBatchOperation",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "requestOneBatchOperation(): void {\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "requestOneBatchOperation",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n  }",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onProcessDone(): void {\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [100]);\n    this.findSameOperation = FindSameOperation.NONE;\n    if (this.startTime != null) {\n      let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;\n      let costTime = Date.now() - this.startTime;\n      Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');\n    }\n    this.isCancelled = false;\n    if (this.onOperationEnd != null) this.onOperationEnd(this.isError, this.successBatch, this.count);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onProcessDone",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [100]);\n    this.findSameOperation = FindSameOperation.NONE;\n    if (this.startTime != null) {\n      let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;\n      let costTime = Date.now() - this.startTime;\n      Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');\n    }\n    this.isCancelled = false;\n    if (this.onOperationEnd != null) this.onOperationEnd(this.isError, this.successBatch, this.count);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [100]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [100])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.broadCast",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "BroadcastConstants.UPDATE_PROGRESS",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "BroadcastConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "UPDATE_PROGRESS",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[100]",
                          "children": [
                            {
                              "type": "FirstLiteralToken",
                              "label": "100",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.findSameOperation = FindSameOperation.NONE;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.findSameOperation = FindSameOperation.NONE",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.findSameOperation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "findSameOperation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "FindSameOperation.NONE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "FindSameOperation",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "NONE",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.startTime != null) {\n      let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;\n      let costTime = Date.now() - this.startTime;\n      Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.startTime != null",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.startTime",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "startTime",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;\n      let costTime = Date.now() - this.startTime;\n      Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE;",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "operateCount = this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "operateCount",
                                      "children": []
                                    },
                                    {
                                      "type": "ConditionalExpression",
                                      "label": "this.currentBatch >= this.totalBatches ? this.count : this.currentBatch * this.BATCH_SIZE",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.currentBatch >= this.totalBatches",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.currentBatch",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "currentBatch",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "GreaterThanEqualsToken",
                                              "label": ">=",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.totalBatches",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "totalBatches",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "QuestionToken",
                                          "label": "?",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.count",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ColonToken",
                                          "label": ":",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.currentBatch * this.BATCH_SIZE",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.currentBatch",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "currentBatch",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.BATCH_SIZE",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "BATCH_SIZE",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "let costTime = Date.now() - this.startTime;",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let costTime = Date.now() - this.startTime",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "costTime = Date.now() - this.startTime",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "costTime",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "Date.now() - this.startTime",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Date.now()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Date.now",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Date",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "now",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MinusToken",
                                          "label": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.startTime",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "startTime",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount) + ' ms/item.'",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average ' + (costTime / operateCount)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime +\n      ' ms, average '",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'process data operate done, operate ' + operateCount + ' items, cost time ' + costTime",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'process data operate done, operate ' + operateCount + ' items, cost time '",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'process data operate done, operate ' + operateCount",
                                                      "children": [
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'process data operate done, operate '",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "operateCount",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "' items, cost time '",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "costTime",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "' ms, average '",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(costTime / operateCount)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "costTime / operateCount",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "costTime",
                                                  "children": []
                                                },
                                                {
                                                  "type": "SlashToken",
                                                  "label": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "operateCount",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "' ms/item.'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isCancelled = false;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isCancelled = false",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isCancelled",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isCancelled",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "FalseKeyword",
                          "label": "false",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.onOperationEnd != null) this.onOperationEnd(this.isError, this.successBatch, this.count);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.onOperationEnd != null",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onOperationEnd",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onOperationEnd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "this.onOperationEnd(this.isError, this.successBatch, this.count);",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "this.onOperationEnd(this.isError, this.successBatch, this.count)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.onOperationEnd",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "onOperationEnd",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isError",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isError",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.successBatch",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "successBatch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.count",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onOperateCancelled(): void {\n    this.onOperateCancelledBindImpl();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onOperateCancelled",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.onOperateCancelledBindImpl();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.onOperateCancelledBindImpl();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.onOperateCancelledBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onOperateCancelledBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onOperateCancelledBindImpl",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected onOperateCancelledBindImpl(): void {\n    Log.info(TAG, 'Operate Cancel');\n    this.isCancelled = true;\n    this.onProcessDone();\n  }",
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "onOperateCancelledBindImpl",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'Operate Cancel');\n    this.isCancelled = true;\n    this.onProcessDone();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'Operate Cancel');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'Operate Cancel')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Operate Cancel'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isCancelled = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isCancelled = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isCancelled",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isCancelled",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.onProcessDone();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.onProcessDone()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onProcessDone",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onProcessDone",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onOperatePause(): void {\n    Log.info(TAG, 'Operate Pause');\n    this.isPause = true;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onOperatePause",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'Operate Pause');\n    this.isPause = true;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'Operate Pause');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'Operate Pause')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Operate Pause'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isPause = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isPause = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isPause",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isPause",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getExpectProgress(): number {\n    Log.info(TAG, 'getExpectProgress');\n    let progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS);\n    return progress;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getExpectProgress",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'getExpectProgress');\n    let progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS);\n    return progress;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'getExpectProgress');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'getExpectProgress')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'getExpectProgress'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "progress = Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "progress",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Math.min(\n      Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count), this.MAX_PROGRESS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Math.min",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Math",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "min",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Math.floor(this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Math.floor",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Math",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "floor",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE / this.count",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.MAX_PROGRESS * this.currentBatch * this.BATCH_SIZE",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.MAX_PROGRESS * this.currentBatch",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.MAX_PROGRESS",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "MAX_PROGRESS",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AsteriskToken",
                                                  "label": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.currentBatch",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "currentBatch",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.BATCH_SIZE",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "BATCH_SIZE",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.count",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.MAX_PROGRESS",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MAX_PROGRESS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return progress;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "progress",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setFindSameOperation(newOperation: number): void {\n    this.setFindSameOperationBindImpl(newOperation);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setFindSameOperation",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "newOperation: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "newOperation",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.setFindSameOperationBindImpl(newOperation);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.setFindSameOperationBindImpl(newOperation);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.setFindSameOperationBindImpl(newOperation)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.setFindSameOperationBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "setFindSameOperationBindImpl",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "newOperation",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "protected setFindSameOperationBindImpl(newOperation: number): void {\n    Log.info(TAG, 'setFindSameOperation ' + newOperation);\n    this.findSameOperation = newOperation;\n  }",
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "setFindSameOperationBindImpl",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "newOperation: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "newOperation",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setFindSameOperation ' + newOperation);\n    this.findSameOperation = newOperation;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setFindSameOperation ' + newOperation);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setFindSameOperation ' + newOperation)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setFindSameOperation ' + newOperation",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setFindSameOperation '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "newOperation",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.findSameOperation = newOperation;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.findSameOperation = newOperation",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.findSameOperation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "findSameOperation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "newOperation",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}