{
  "type": "SourceFile",
  "label": "import abilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport bundleManager from '@ohos.bundle.bundleManager';\nimport IdlServiceExtStub from './idl_service_ext_stub';\nimport hilog from '@ohos.hilog';\nimport rpc from '@ohos.rpc';\nimport type { BusinessError } from '@ohos.base';\nimport type { InsertDataToMapCallback } from './i_idl_service_ext';\nimport type { ProcessDataCallback } from './i_idl_service_ext';\n\nconst ERR_OK = 0;\nconst TAG: string = '[IdlServiceExtImpl]';\nconst DOMAIN_NUMBER: number = 0xFF00;\nconst ERR_DENY = -1;\n\n// 开发者需要在这个类型里对接口进行实现\nexport default class ServiceExtImpl extends IdlServiceExtStub {\n  processData(data: number, callback: ProcessDataCallback): void {\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);\n\n    let callerUid = rpc.IPCSkeleton.getCallingUid();\n    bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    });\n\n    let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();\n    let accessManger = abilityAccessCtrl.createAtManager();\n    // 所校验的具体权限由开发者自行选择，此处ohos.permission.GET_BUNDLE_INFO_PRIVILEGED只作为示例\n    let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');\n    if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // 鉴权失败，返回错误\n      return;\n    }\n    hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');\n    callback(ERR_OK, data + 1); // 鉴权通过，执行正常业务逻辑\n  };\n\n  insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);\n    callback(ERR_OK);\n  };\n};",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import abilityAccessCtrl from '@ohos.abilityAccessCtrl';",
      "children": [
        {
          "type": "ImportClause",
          "label": "abilityAccessCtrl",
          "children": [
            {
              "type": "Identifier",
              "label": "abilityAccessCtrl",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.abilityAccessCtrl'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import bundleManager from '@ohos.bundle.bundleManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "bundleManager",
          "children": [
            {
              "type": "Identifier",
              "label": "bundleManager",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.bundle.bundleManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import IdlServiceExtStub from './idl_service_ext_stub';",
      "children": [
        {
          "type": "ImportClause",
          "label": "IdlServiceExtStub",
          "children": [
            {
              "type": "Identifier",
              "label": "IdlServiceExtStub",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./idl_service_ext_stub'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import hilog from '@ohos.hilog';",
      "children": [
        {
          "type": "ImportClause",
          "label": "hilog",
          "children": [
            {
              "type": "Identifier",
              "label": "hilog",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.hilog'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import rpc from '@ohos.rpc';",
      "children": [
        {
          "type": "ImportClause",
          "label": "rpc",
          "children": [
            {
              "type": "Identifier",
              "label": "rpc",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.rpc'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { BusinessError } from '@ohos.base';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type { BusinessError }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BusinessError }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BusinessError",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BusinessError",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.base'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { InsertDataToMapCallback } from './i_idl_service_ext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type { InsertDataToMapCallback }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ InsertDataToMapCallback }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "InsertDataToMapCallback",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "InsertDataToMapCallback",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./i_idl_service_ext'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { ProcessDataCallback } from './i_idl_service_ext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type { ProcessDataCallback }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ProcessDataCallback }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ProcessDataCallback",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ProcessDataCallback",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./i_idl_service_ext'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const ERR_OK = 0;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const ERR_OK = 0",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "ERR_OK = 0",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ERR_OK",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG: string = '[IdlServiceExtImpl]';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG: string = '[IdlServiceExtImpl]'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG: string = '[IdlServiceExtImpl]'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'[IdlServiceExtImpl]'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const DOMAIN_NUMBER: number = 0xFF00;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const DOMAIN_NUMBER: number = 0xFF00",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "DOMAIN_NUMBER: number = 0xFF00",
              "children": [
                {
                  "type": "Identifier",
                  "label": "DOMAIN_NUMBER",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0xFF00",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const ERR_DENY = -1;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const ERR_DENY = -1",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "ERR_DENY = -1",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ERR_DENY",
                  "children": []
                },
                {
                  "type": "PrefixUnaryExpression",
                  "label": "-1",
                  "children": [
                    {
                      "type": "FirstLiteralToken",
                      "label": "1",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export default class ServiceExtImpl extends IdlServiceExtStub {\n  processData(data: number, callback: ProcessDataCallback): void {\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);\n\n    let callerUid = rpc.IPCSkeleton.getCallingUid();\n    bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    });\n\n    let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();\n    let accessManger = abilityAccessCtrl.createAtManager();\n    // 所校验的具体权限由开发者自行选择，此处ohos.permission.GET_BUNDLE_INFO_PRIVILEGED只作为示例\n    let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');\n    if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // 鉴权失败，返回错误\n      return;\n    }\n    hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');\n    callback(ERR_OK, data + 1); // 鉴权通过，执行正常业务逻辑\n  };\n\n  insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);\n    callback(ERR_OK);\n  };\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "DefaultKeyword",
          "label": "default",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "ServiceExtImpl",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends IdlServiceExtStub",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "IdlServiceExtStub",
              "children": [
                {
                  "type": "Identifier",
                  "label": "IdlServiceExtStub",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "processData(data: number, callback: ProcessDataCallback): void {\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);\n\n    let callerUid = rpc.IPCSkeleton.getCallingUid();\n    bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    });\n\n    let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();\n    let accessManger = abilityAccessCtrl.createAtManager();\n    // 所校验的具体权限由开发者自行选择，此处ohos.permission.GET_BUNDLE_INFO_PRIVILEGED只作为示例\n    let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');\n    if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // 鉴权失败，返回错误\n      return;\n    }\n    hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');\n    callback(ERR_OK, data + 1); // 鉴权通过，执行正常业务逻辑\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "processData",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "data: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "data",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "callback: ProcessDataCallback",
              "children": [
                {
                  "type": "Identifier",
                  "label": "callback",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ProcessDataCallback",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ProcessDataCallback",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);\n\n    let callerUid = rpc.IPCSkeleton.getCallingUid();\n    bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    });\n\n    let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();\n    let accessManger = abilityAccessCtrl.createAtManager();\n    // 所校验的具体权限由开发者自行选择，此处ohos.permission.GET_BUNDLE_INFO_PRIVILEGED只作为示例\n    let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');\n    if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // 鉴权失败，返回错误\n      return;\n    }\n    hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');\n    callback(ERR_OK, data + 1); // 鉴权通过，执行正常业务逻辑\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`processData: ${data}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`processData: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "data}`",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let callerUid = rpc.IPCSkeleton.getCallingUid();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let callerUid = rpc.IPCSkeleton.getCallingUid()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "callerUid = rpc.IPCSkeleton.getCallingUid()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "callerUid",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "rpc.IPCSkeleton.getCallingUid()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rpc.IPCSkeleton.getCallingUid",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rpc.IPCSkeleton",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rpc",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "IPCSkeleton",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getCallingUid",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }).catch",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "bundleManager.getBundleNameByUid(callerUid).then",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "bundleManager.getBundleNameByUid(callerUid)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "bundleManager.getBundleNameByUid",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "bundleManager",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getBundleNameByUid",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "callerUid",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "then",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }",
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "callerBundleName",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "callerBundleName",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // 对客户端包名进行识别\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // 识别通过，执行正常业务逻辑\n    }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "hilog.info",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "hilog",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "info",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DOMAIN_NUMBER",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'getBundleNameByUid: ' + callerBundleName",
                                                  "children": [
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'getBundleNameByUid: '",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "callerBundleName",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "label": "if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "callerBundleName !== 'com.samples.stagemodelabilitydevelop'",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "callerBundleName",
                                                  "children": []
                                                },
                                                {
                                                  "type": "ExclamationEqualsEqualsToken",
                                                  "label": "!==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'com.samples.stagemodelabilitydevelop'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Block",
                                              "label": "{ // 识别不通过\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }",
                                              "children": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject')",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "hilog.info",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "hilog",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "DOMAIN_NUMBER",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "TAG",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "'The caller bundle is not in trustlist, reject'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "label": "return;",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "catch",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "err: BusinessError",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "err",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "BusinessError",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "BusinessError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "hilog.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "hilog",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DOMAIN_NUMBER",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'getBundleNameByUid failed: ' + err.message",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'getBundleNameByUid failed: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "err.message",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "err",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "message",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let callerTokenId = rpc.IPCSkeleton.getCallingTokenId()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "callerTokenId = rpc.IPCSkeleton.getCallingTokenId()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "callerTokenId",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "rpc.IPCSkeleton.getCallingTokenId()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "rpc.IPCSkeleton.getCallingTokenId",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "rpc.IPCSkeleton",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "rpc",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "IPCSkeleton",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getCallingTokenId",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let accessManger = abilityAccessCtrl.createAtManager();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let accessManger = abilityAccessCtrl.createAtManager()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "accessManger = abilityAccessCtrl.createAtManager()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "accessManger",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "abilityAccessCtrl.createAtManager()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "abilityAccessCtrl.createAtManager",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "abilityAccessCtrl",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "createAtManager",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED')",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED')",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "grantStatus",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "accessManger.verifyAccessTokenSync",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "accessManger",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "verifyAccessTokenSync",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "callerTokenId",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // 鉴权失败，返回错误\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "grantStatus",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "abilityAccessCtrl.GrantStatus.PERMISSION_DENIED",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "abilityAccessCtrl.GrantStatus",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "abilityAccessCtrl",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "GrantStatus",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "PERMISSION_DENIED",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // 鉴权失败，返回错误\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "hilog.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "hilog",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DOMAIN_NUMBER",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'PERMISSION_DENIED'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "callback(ERR_DENY, data);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "callback(ERR_DENY, data)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "callback",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ERR_DENY",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'verify access token success.'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "callback(ERR_OK, data + 1);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "callback(ERR_OK, data + 1)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "callback",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "ERR_OK",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "data + 1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "data",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "SemicolonClassElement",
          "label": ";",
          "children": []
        },
        {
          "type": "MethodDeclaration",
          "label": "insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);\n    callback(ERR_OK);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "insertDataToMap",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "key: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "key",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "val: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "val",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "callback: InsertDataToMapCallback",
              "children": [
                {
                  "type": "Identifier",
                  "label": "callback",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "InsertDataToMapCallback",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "InsertDataToMapCallback",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 开发者自行实现业务逻辑\n    hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);\n    callback(ERR_OK);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`insertDataToMap, key: ${key}  val: ${val}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`insertDataToMap, key: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "key}  val: ${",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "key",
                                  "children": []
                                },
                                {
                                  "type": "TemplateMiddle",
                                  "label": "}  val: ${",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "val}`",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "val",
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "callback(ERR_OK);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "callback(ERR_OK)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "callback",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "ERR_OK",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "SemicolonClassElement",
          "label": ";",
          "children": []
        }
      ]
    },
    {
      "type": "EmptyStatement",
      "label": ";",
      "children": []
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}