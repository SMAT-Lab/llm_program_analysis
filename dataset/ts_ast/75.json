{
  "type": "SourceFile",
  "label": "import { Action } from './Action';\nimport { ActionBarProp } from '../common/ActionBarProp';\nimport { ActionBarMode, ActionBarSelectionMode } from './ActionBarMode';\nimport { screenManager } from '../common/ScreenManager';\nimport { MediaConstants } from '../constants/MediaConstants';\n\nexport class PhotoGridBarModel {\n  private albumId: string = '';\n\n  setAlbumId(albumId: string): void {\n    this.albumId = albumId;\n  }\n\n  createActionBar(title: Object, isSelectedMode: boolean, selectedCount: number,\n                  isAllSelected: boolean, isEmpty: boolean): ActionBarProp {\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n    return actionBarProp;\n  }\n\n  updateActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean,\n                  selectedCount: number, isAllSelected: boolean, isEmpty: boolean): void {\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n  }\n\n  private updateHorizontalActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean,\n                                    selectedCount: number, isAllSelected: boolean, isEmpty: boolean): ActionBarProp {\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    let menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    if (isSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }\n    }\n    actionBarProp.setMenuList(menuList);\n    return actionBarProp;\n  }\n\n  private updateVerticalActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean): ActionBarProp {\n    let menuList: Action[] = [];\n\n    if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n      menuList.push(Action.NEW);\n    }\n\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    if (isSelectedMode) {\n      menuList = [];\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }\n\n    return actionBarProp;\n  }\n\n  getMenuList(isSelectedMode: boolean, selectedCount: number, isAllSelected: boolean, isEmpty: boolean): Action[] {\n    let menuList: Action[] = [];\n    if (isSelectedMode) {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }\n    } else {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }\n    }\n    return menuList;\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Action } from './Action';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Action }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Action }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Action",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Action",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./Action'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ActionBarProp } from '../common/ActionBarProp';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ActionBarProp }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ActionBarProp }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ActionBarProp'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ActionBarMode, ActionBarSelectionMode } from './ActionBarMode';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ActionBarMode, ActionBarSelectionMode }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ActionBarMode, ActionBarSelectionMode }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ActionBarMode",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarMode",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "ActionBarSelectionMode",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarSelectionMode",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ActionBarMode'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from '../common/ScreenManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class PhotoGridBarModel {\n  private albumId: string = '';\n\n  setAlbumId(albumId: string): void {\n    this.albumId = albumId;\n  }\n\n  createActionBar(title: Object, isSelectedMode: boolean, selectedCount: number,\n                  isAllSelected: boolean, isEmpty: boolean): ActionBarProp {\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n    return actionBarProp;\n  }\n\n  updateActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean,\n                  selectedCount: number, isAllSelected: boolean, isEmpty: boolean): void {\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n  }\n\n  private updateHorizontalActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean,\n                                    selectedCount: number, isAllSelected: boolean, isEmpty: boolean): ActionBarProp {\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    let menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    if (isSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }\n    }\n    actionBarProp.setMenuList(menuList);\n    return actionBarProp;\n  }\n\n  private updateVerticalActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean): ActionBarProp {\n    let menuList: Action[] = [];\n\n    if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n      menuList.push(Action.NEW);\n    }\n\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    if (isSelectedMode) {\n      menuList = [];\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }\n\n    return actionBarProp;\n  }\n\n  getMenuList(isSelectedMode: boolean, selectedCount: number, isAllSelected: boolean, isEmpty: boolean): Action[] {\n    let menuList: Action[] = [];\n    if (isSelectedMode) {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }\n    } else {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }\n    }\n    return menuList;\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "PhotoGridBarModel",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "private albumId: string = '';",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "albumId",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumId(albumId: string): void {\n    this.albumId = albumId;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumId",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumId: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumId",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.albumId = albumId;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.albumId = albumId;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumId = albumId",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "albumId",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "createActionBar(title: Object, isSelectedMode: boolean, selectedCount: number,\n                  isAllSelected: boolean, isEmpty: boolean): ActionBarProp {\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n    return actionBarProp;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "createActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "title: Object",
              "children": [
                {
                  "type": "Identifier",
                  "label": "title",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAllSelected: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAllSelected",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isEmpty: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isEmpty",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ActionBarProp",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n    return actionBarProp;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let actionBarProp: ActionBarProp = new ActionBarProp();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let actionBarProp: ActionBarProp = new ActionBarProp()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "actionBarProp: ActionBarProp = new ActionBarProp()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "actionBarProp",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "ActionBarProp",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ActionBarProp",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "NewExpression",
                              "label": "new ActionBarProp()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ActionBarProp",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let isHorizontal = screenManager.isHorizontal()",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isHorizontal = screenManager.isHorizontal()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isHorizontal = screenManager.isHorizontal()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isHorizontal",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isHorizontal()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isHorizontal",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isHorizontal",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isHorizontal",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateHorizontalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateHorizontalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "title",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelectedMode",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "selectedCount",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAllSelected",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isEmpty",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateVerticalActionBar(actionBarProp, title, isSelectedMode)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateVerticalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateVerticalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "title",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelectedMode",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return actionBarProp;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "actionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "updateActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean,\n                  selectedCount: number, isAllSelected: boolean, isEmpty: boolean): void {\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "updateActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "actionBarProp: ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "actionBarProp",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "title: Object",
              "children": [
                {
                  "type": "Identifier",
                  "label": "title",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAllSelected: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAllSelected",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isEmpty: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isEmpty",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let isHorizontal = screenManager.isHorizontal()\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let isHorizontal = screenManager.isHorizontal()",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isHorizontal = screenManager.isHorizontal()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isHorizontal = screenManager.isHorizontal()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isHorizontal",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isHorizontal()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isHorizontal",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isHorizontal",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isHorizontal",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateHorizontalActionBar(actionBarProp, title, isSelectedMode, selectedCount, isAllSelected, isEmpty)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateHorizontalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateHorizontalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "title",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelectedMode",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "selectedCount",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAllSelected",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isEmpty",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateVerticalActionBar(actionBarProp, title, isSelectedMode);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateVerticalActionBar(actionBarProp, title, isSelectedMode)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateVerticalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateVerticalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "title",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelectedMode",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private updateHorizontalActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean,\n                                    selectedCount: number, isAllSelected: boolean, isEmpty: boolean): ActionBarProp {\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    let menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    if (isSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }\n    }\n    actionBarProp.setMenuList(menuList);\n    return actionBarProp;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "updateHorizontalActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "actionBarProp: ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "actionBarProp",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "title: Object",
              "children": [
                {
                  "type": "Identifier",
                  "label": "title",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAllSelected: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAllSelected",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isEmpty: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isEmpty",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ActionBarProp",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    let menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty);\n    if (isSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }\n    }\n    actionBarProp.setMenuList(menuList);\n    return actionBarProp;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode(ActionBarMode.STANDARD_MODE);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode(ActionBarMode.STANDARD_MODE)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMode",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n      .setLeftAction(Action.BACK)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n      .setLeftAction",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "actionBarProp",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setLeftAction",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Action.BACK",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Action",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "BACK",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setTitle",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "title",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setMode",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "ActionBarMode.STANDARD_MODE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "ActionBarMode",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "STANDARD_MODE",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "menuList: Action[] = this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "Action[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Action",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.getMenuList(isSelectedMode, selectedCount, isAllSelected, isEmpty)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getMenuList",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getMenuList",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isSelectedMode",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "selectedCount",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAllSelected",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isEmpty",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isSelectedMode",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "actionBarProp\n        .setLeftAction",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "actionBarProp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setLeftAction",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Action.CANCEL",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Action",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "CANCEL",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setMode",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "ActionBarMode.SELECTION_MODE",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "ActionBarMode",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SELECTION_MODE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setSelectionMode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "ActionBarSelectionMode.MULTI",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "ActionBarSelectionMode",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MULTI",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n        menuList.push(Action.NEW);\n      }",
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_DISABLE_NEW_LIST.has",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "MediaConstants.ALBUM_DISABLE_NEW_LIST",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "MediaConstants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "ALBUM_DISABLE_NEW_LIST",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "has",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumId",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumId",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        menuList.push(Action.NEW);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push(Action.NEW);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push(Action.NEW)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Action.NEW",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Action",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NEW",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "actionBarProp.setMenuList(menuList);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "actionBarProp.setMenuList(menuList)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "actionBarProp.setMenuList",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "actionBarProp",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "setMenuList",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "menuList",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return actionBarProp;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "actionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private updateVerticalActionBar(actionBarProp: ActionBarProp, title: Object, isSelectedMode: boolean): ActionBarProp {\n    let menuList: Action[] = [];\n\n    if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n      menuList.push(Action.NEW);\n    }\n\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    if (isSelectedMode) {\n      menuList = [];\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }\n\n    return actionBarProp;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "updateVerticalActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "actionBarProp: ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "actionBarProp",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "title: Object",
              "children": [
                {
                  "type": "Identifier",
                  "label": "title",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Object",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Object",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ActionBarProp",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let menuList: Action[] = [];\n\n    if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n      menuList.push(Action.NEW);\n    }\n\n    actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode(ActionBarMode.STANDARD_MODE);\n    if (isSelectedMode) {\n      menuList = [];\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }\n\n    return actionBarProp;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let menuList: Action[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let menuList: Action[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "menuList: Action[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "Action[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Action",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)) {\n      menuList.push(Action.NEW);\n    }",
                  "children": [
                    {
                      "type": "PrefixUnaryExpression",
                      "label": "!MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "MediaConstants.ALBUM_DISABLE_NEW_LIST.has(this.albumId)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_DISABLE_NEW_LIST.has",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.ALBUM_DISABLE_NEW_LIST",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ALBUM_DISABLE_NEW_LIST",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "has",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.albumId",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumId",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      menuList.push(Action.NEW);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "menuList.push(Action.NEW);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "menuList.push(Action.NEW)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "menuList.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "menuList",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Action.NEW",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "NEW",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode(ActionBarMode.STANDARD_MODE);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode(ActionBarMode.STANDARD_MODE)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)\n      .setMode",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList(menuList)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)\n      .setMenuList",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle(title)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n      .setLeftAction(Action.BACK)\n      .setTitle",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "actionBarProp\n      .setLeftAction(Action.BACK)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "actionBarProp\n      .setLeftAction",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "actionBarProp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setLeftAction",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Action.BACK",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Action",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "BACK",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setTitle",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "title",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setMenuList",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "menuList",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setMode",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "ActionBarMode.STANDARD_MODE",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "ActionBarMode",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "STANDARD_MODE",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isSelectedMode) {\n      menuList = [];\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isSelectedMode",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      menuList = [];\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "menuList = [];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "menuList = []",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "menuList",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "actionBarProp\n        .setLeftAction",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "actionBarProp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "setLeftAction",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Action.CANCEL",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Action",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "CANCEL",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setMenuList",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "menuList",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setMode",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "ActionBarMode.SELECTION_MODE",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "ActionBarMode",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SELECTION_MODE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setSelectionMode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "ActionBarSelectionMode.MULTI",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "ActionBarSelectionMode",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MULTI",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return actionBarProp;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "actionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getMenuList(isSelectedMode: boolean, selectedCount: number, isAllSelected: boolean, isEmpty: boolean): Action[] {\n    let menuList: Action[] = [];\n    if (isSelectedMode) {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }\n    } else {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }\n    }\n    return menuList;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getMenuList",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAllSelected: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAllSelected",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isEmpty: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isEmpty",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayType",
              "label": "Action[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Action",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Action",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let menuList: Action[] = [];\n    if (isSelectedMode) {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }\n    } else {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }\n    }\n    return menuList;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let menuList: Action[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let menuList: Action[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "menuList: Action[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "Action[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Action",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isSelectedMode) {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }\n    } else {\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isSelectedMode",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      } else {\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.albumId === MediaConstants.ALBUM_ID_RECYCLE",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.albumId",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "albumId",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MediaConstants.ALBUM_ID_RECYCLE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MediaConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ALBUM_ID_RECYCLE",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push((new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "(new Boolean(selectedCount)) ? Action.RECOVER : Action.RECOVER_INVALID",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(new Boolean(selectedCount))",
                                              "children": [
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new Boolean(selectedCount)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Boolean",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "selectedCount",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.RECOVER",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "RECOVER",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.RECOVER_INVALID",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "RECOVER_INVALID",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "(new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(new Boolean(selectedCount))",
                                              "children": [
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new Boolean(selectedCount)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Boolean",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "selectedCount",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.DELETE",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DELETE",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.DELETE_INVALID",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DELETE_INVALID",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "isAllSelected",
                                              "children": []
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.DESELECT_ALL",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DESELECT_ALL",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.SELECT_ALL",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "SELECT_ALL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);\n        menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push(isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "isAllSelected ? Action.DESELECT_ALL : Action.SELECT_ALL",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "isAllSelected",
                                              "children": []
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.DESELECT_ALL",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DESELECT_ALL",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.SELECT_ALL",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "SELECT_ALL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push((new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID, Action.MORE)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ConditionalExpression",
                                          "label": "(new Boolean(selectedCount)) ? Action.DELETE : Action.DELETE_INVALID",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(new Boolean(selectedCount))",
                                              "children": [
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new Boolean(selectedCount)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Boolean",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "selectedCount",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionToken",
                                              "label": "?",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.DELETE",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DELETE",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ColonToken",
                                              "label": ":",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Action.DELETE_INVALID",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Action",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DELETE_INVALID",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Action.MORE",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Action",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "MORE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty) {\n        menuList.push(Action.CLEAR_RECYCLE);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.albumId === MediaConstants.ALBUM_ID_RECYCLE && !isEmpty",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.albumId === MediaConstants.ALBUM_ID_RECYCLE",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumId",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumId",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.ALBUM_ID_RECYCLE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ALBUM_ID_RECYCLE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "PrefixUnaryExpression",
                                  "label": "!isEmpty",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "isEmpty",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        menuList.push(Action.CLEAR_RECYCLE);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "menuList.push(Action.CLEAR_RECYCLE);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "menuList.push(Action.CLEAR_RECYCLE)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "menuList.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "menuList",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Action.CLEAR_RECYCLE",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Action",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "CLEAR_RECYCLE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return menuList;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "menuList",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}