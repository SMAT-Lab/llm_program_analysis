{
  "type": "SourceFile",
  "label": "import { logger } from '@storybook/core/node-logger';\nimport getDefaultBrowser from '@aw-web-design/x-default-browser';\nimport betterOpn from 'better-opn';\n// betterOpn alias used because also loading open\nimport open from 'open';\nimport { dedent } from 'ts-dedent';\nexport function openInBrowser(address: string) {\n  const browserEnvVar = process.env.BROWSER;\n  const userBrowserIsChrome =\n    browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser';\n  const openOptions = browserEnvVar ? { app: { name: browserEnvVar } } : {};\n  getDefaultBrowser(async (err: any, res: any) => {\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  });\n}",
  "start_token": 0,
  "end_token": 162,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { logger } from '@storybook/core/node-logger';",
      "start_token": 0,
      "end_token": 6,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ logger }",
          "start_token": 1,
          "end_token": 3,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ logger }",
              "start_token": 1,
              "end_token": 3,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "logger",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "logger",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@storybook/core/node-logger'",
          "start_token": 5,
          "end_token": 5,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import getDefaultBrowser from '@aw-web-design/x-default-browser';",
      "start_token": 7,
      "end_token": 11,
      "children": [
        {
          "type": "ImportClause",
          "label": "getDefaultBrowser",
          "start_token": 8,
          "end_token": 8,
          "children": [
            {
              "type": "Identifier",
              "label": "getDefaultBrowser",
              "start_token": 8,
              "end_token": 8,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@aw-web-design/x-default-browser'",
          "start_token": 10,
          "end_token": 10,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import betterOpn from 'better-opn';",
      "start_token": 12,
      "end_token": 16,
      "children": [
        {
          "type": "ImportClause",
          "label": "betterOpn",
          "start_token": 13,
          "end_token": 13,
          "children": [
            {
              "type": "Identifier",
              "label": "betterOpn",
              "start_token": 13,
              "end_token": 13,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'better-opn'",
          "start_token": 15,
          "end_token": 15,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import open from 'open';",
      "start_token": 18,
      "end_token": 22,
      "children": [
        {
          "type": "ImportClause",
          "label": "open",
          "start_token": 19,
          "end_token": 19,
          "children": [
            {
              "type": "Identifier",
              "label": "open",
              "start_token": 19,
              "end_token": 19,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'open'",
          "start_token": 21,
          "end_token": 21,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { dedent } from 'ts-dedent';",
      "start_token": 23,
      "end_token": 29,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ dedent }",
          "start_token": 24,
          "end_token": 26,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ dedent }",
              "start_token": 24,
              "end_token": 26,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "dedent",
                  "start_token": 25,
                  "end_token": 25,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "dedent",
                      "start_token": 25,
                      "end_token": 25,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'ts-dedent'",
          "start_token": 28,
          "end_token": 28,
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export function openInBrowser(address: string) {\n  const browserEnvVar = process.env.BROWSER;\n  const userBrowserIsChrome =\n    browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser';\n  const openOptions = browserEnvVar ? { app: { name: browserEnvVar } } : {};\n  getDefaultBrowser(async (err: any, res: any) => {\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  });\n}",
      "start_token": 30,
      "end_token": 162,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 30,
          "end_token": 30,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "openInBrowser",
          "start_token": 32,
          "end_token": 32,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "address: string",
          "start_token": 34,
          "end_token": 36,
          "children": [
            {
              "type": "Identifier",
              "label": "address",
              "start_token": 34,
              "end_token": 34,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 36,
              "end_token": 36,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  const browserEnvVar = process.env.BROWSER;\n  const userBrowserIsChrome =\n    browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser';\n  const openOptions = browserEnvVar ? { app: { name: browserEnvVar } } : {};\n  getDefaultBrowser(async (err: any, res: any) => {\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  });\n}",
          "start_token": 38,
          "end_token": 162,
          "children": [
            {
              "type": "FirstStatement",
              "label": "const browserEnvVar = process.env.BROWSER;",
              "start_token": 39,
              "end_token": 47,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const browserEnvVar = process.env.BROWSER",
                  "start_token": 39,
                  "end_token": 46,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "browserEnvVar = process.env.BROWSER",
                      "start_token": 40,
                      "end_token": 46,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "browserEnvVar",
                          "start_token": 40,
                          "end_token": 40,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "process.env.BROWSER",
                          "start_token": 42,
                          "end_token": 46,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "process.env",
                              "start_token": 42,
                              "end_token": 44,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "process",
                                  "start_token": 42,
                                  "end_token": 42,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "env",
                                  "start_token": 44,
                                  "end_token": 44,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "BROWSER",
                              "start_token": 46,
                              "end_token": 46,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const userBrowserIsChrome =\n    browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser';",
              "start_token": 48,
              "end_token": 66,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const userBrowserIsChrome =\n    browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser'",
                  "start_token": 48,
                  "end_token": 65,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "userBrowserIsChrome =\n    browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser'",
                      "start_token": 49,
                      "end_token": 65,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "userBrowserIsChrome",
                          "start_token": 49,
                          "end_token": 49,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave' ||\n    browserEnvVar === 'com.brave.browser'",
                          "start_token": 51,
                          "end_token": 65,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium' ||\n    browserEnvVar === 'brave'",
                              "start_token": 51,
                              "end_token": 61,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "browserEnvVar === 'chrome' ||\n    browserEnvVar === 'chromium'",
                                  "start_token": 51,
                                  "end_token": 57,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "browserEnvVar === 'chrome'",
                                      "start_token": 51,
                                      "end_token": 53,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "browserEnvVar",
                                          "start_token": 51,
                                          "end_token": 51,
                                          "children": []
                                        },
                                        {
                                          "type": "EqualsEqualsEqualsToken",
                                          "label": "===",
                                          "start_token": 52,
                                          "end_token": 52,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'chrome'",
                                          "start_token": 53,
                                          "end_token": 53,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BarBarToken",
                                      "label": "||",
                                      "start_token": 54,
                                      "end_token": 54,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "browserEnvVar === 'chromium'",
                                      "start_token": 55,
                                      "end_token": 57,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "browserEnvVar",
                                          "start_token": 55,
                                          "end_token": 55,
                                          "children": []
                                        },
                                        {
                                          "type": "EqualsEqualsEqualsToken",
                                          "label": "===",
                                          "start_token": 56,
                                          "end_token": 56,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'chromium'",
                                          "start_token": 57,
                                          "end_token": 57,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "start_token": 58,
                                  "end_token": 58,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "browserEnvVar === 'brave'",
                                  "start_token": 59,
                                  "end_token": 61,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "browserEnvVar",
                                      "start_token": 59,
                                      "end_token": 59,
                                      "children": []
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "start_token": 60,
                                      "end_token": 60,
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'brave'",
                                      "start_token": 61,
                                      "end_token": 61,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BarBarToken",
                              "label": "||",
                              "start_token": 62,
                              "end_token": 62,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "browserEnvVar === 'com.brave.browser'",
                              "start_token": 63,
                              "end_token": 65,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "browserEnvVar",
                                  "start_token": 63,
                                  "end_token": 63,
                                  "children": []
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 64,
                                  "end_token": 64,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'com.brave.browser'",
                                  "start_token": 65,
                                  "end_token": 65,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const openOptions = browserEnvVar ? { app: { name: browserEnvVar } } : {};",
              "start_token": 67,
              "end_token": 84,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const openOptions = browserEnvVar ? { app: { name: browserEnvVar } } : {}",
                  "start_token": 67,
                  "end_token": 83,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "openOptions = browserEnvVar ? { app: { name: browserEnvVar } } : {}",
                      "start_token": 68,
                      "end_token": 83,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "openOptions",
                          "start_token": 68,
                          "end_token": 68,
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "browserEnvVar ? { app: { name: browserEnvVar } } : {}",
                          "start_token": 70,
                          "end_token": 83,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "browserEnvVar",
                              "start_token": 70,
                              "end_token": 70,
                              "children": []
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "start_token": 71,
                              "end_token": 71,
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{ app: { name: browserEnvVar } }",
                              "start_token": 72,
                              "end_token": 80,
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "app: { name: browserEnvVar }",
                                  "start_token": 73,
                                  "end_token": 79,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "app",
                                      "start_token": 73,
                                      "end_token": 73,
                                      "children": []
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{ name: browserEnvVar }",
                                      "start_token": 75,
                                      "end_token": 79,
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "name: browserEnvVar",
                                          "start_token": 76,
                                          "end_token": 78,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "name",
                                              "start_token": 76,
                                              "end_token": 76,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "browserEnvVar",
                                              "start_token": 78,
                                              "end_token": 78,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "start_token": 81,
                              "end_token": 81,
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{}",
                              "start_token": 82,
                              "end_token": 83,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "getDefaultBrowser(async (err: any, res: any) => {\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  });",
              "start_token": 85,
              "end_token": 161,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "getDefaultBrowser(async (err: any, res: any) => {\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  })",
                  "start_token": 85,
                  "end_token": 160,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "getDefaultBrowser",
                      "start_token": 85,
                      "end_token": 85,
                      "children": []
                    },
                    {
                      "type": "ArrowFunction",
                      "label": "async (err: any, res: any) => {\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  }",
                      "start_token": 87,
                      "end_token": 159,
                      "children": [
                        {
                          "type": "AsyncKeyword",
                          "label": "async",
                          "start_token": 87,
                          "end_token": 87,
                          "children": []
                        },
                        {
                          "type": "Parameter",
                          "label": "err: any",
                          "start_token": 89,
                          "end_token": 91,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "start_token": 89,
                              "end_token": 89,
                              "children": []
                            },
                            {
                              "type": "AnyKeyword",
                              "label": "any",
                              "start_token": 91,
                              "end_token": 91,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Parameter",
                          "label": "res: any",
                          "start_token": 93,
                          "end_token": 95,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "res",
                              "start_token": 93,
                              "end_token": 93,
                              "children": []
                            },
                            {
                              "type": "AnyKeyword",
                              "label": "any",
                              "start_token": 95,
                              "end_token": 95,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsGreaterThanToken",
                          "label": "=>",
                          "start_token": 97,
                          "end_token": 97,
                          "children": []
                        },
                        {
                          "type": "Block",
                          "label": "{\n    try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }\n  }",
                          "start_token": 98,
                          "end_token": 159,
                          "children": [
                            {
                              "type": "TryStatement",
                              "label": "try {\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    } catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }",
                              "start_token": 99,
                              "end_token": 158,
                              "children": [
                                {
                                  "type": "Block",
                                  "label": "{\n      if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }\n    }",
                                  "start_token": 100,
                                  "end_token": 144,
                                  "children": [
                                    {
                                      "type": "IfStatement",
                                      "label": "if (\n        res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)\n      ) {\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      } else {\n        await open(address, openOptions);\n      }",
                                      "start_token": 101,
                                      "end_token": 143,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "res &&\n        (res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)",
                                          "start_token": 103,
                                          "end_token": 121,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "res",
                                              "start_token": 103,
                                              "end_token": 103,
                                              "children": []
                                            },
                                            {
                                              "type": "AmpersandAmpersandToken",
                                              "label": "&&",
                                              "start_token": 104,
                                              "end_token": 104,
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome)",
                                              "start_token": 105,
                                              "end_token": 121,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser' ||\n          userBrowserIsChrome",
                                                  "start_token": 106,
                                                  "end_token": 120,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "res.isChrome ||\n          res.isChromium ||\n          res.identity === 'com.brave.browser'",
                                                      "start_token": 106,
                                                      "end_token": 118,
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "res.isChrome ||\n          res.isChromium",
                                                          "start_token": 106,
                                                          "end_token": 112,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "res.isChrome",
                                                              "start_token": 106,
                                                              "end_token": 108,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "res",
                                                                  "start_token": 106,
                                                                  "end_token": 106,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "isChrome",
                                                                  "start_token": 108,
                                                                  "end_token": 108,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "BarBarToken",
                                                              "label": "||",
                                                              "start_token": 109,
                                                              "end_token": 109,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "res.isChromium",
                                                              "start_token": 110,
                                                              "end_token": 112,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "res",
                                                                  "start_token": 110,
                                                                  "end_token": 110,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "isChromium",
                                                                  "start_token": 112,
                                                                  "end_token": 112,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "BarBarToken",
                                                          "label": "||",
                                                          "start_token": 113,
                                                          "end_token": 113,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "res.identity === 'com.brave.browser'",
                                                          "start_token": 114,
                                                          "end_token": 118,
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "res.identity",
                                                              "start_token": 114,
                                                              "end_token": 116,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "res",
                                                                  "start_token": 114,
                                                                  "end_token": 114,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "identity",
                                                                  "start_token": 116,
                                                                  "end_token": 116,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "EqualsEqualsEqualsToken",
                                                              "label": "===",
                                                              "start_token": 117,
                                                              "end_token": 117,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'com.brave.browser'",
                                                              "start_token": 118,
                                                              "end_token": 118,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BarBarToken",
                                                      "label": "||",
                                                      "start_token": 119,
                                                      "end_token": 119,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userBrowserIsChrome",
                                                      "start_token": 120,
                                                      "end_token": 120,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        // We use betterOpn for Chrome because it is better at handling which chrome tab\n        // or window the preview loads in.\n        await betterOpn(address);\n      }",
                                          "start_token": 123,
                                          "end_token": 132,
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "await betterOpn(address);",
                                              "start_token": 126,
                                              "end_token": 131,
                                              "children": [
                                                {
                                                  "type": "AwaitExpression",
                                                  "label": "await betterOpn(address)",
                                                  "start_token": 126,
                                                  "end_token": 130,
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "betterOpn(address)",
                                                      "start_token": 127,
                                                      "end_token": 130,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "betterOpn",
                                                          "start_token": 127,
                                                          "end_token": 127,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "address",
                                                          "start_token": 129,
                                                          "end_token": 129,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        await open(address, openOptions);\n      }",
                                          "start_token": 134,
                                          "end_token": 143,
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "await open(address, openOptions);",
                                              "start_token": 135,
                                              "end_token": 142,
                                              "children": [
                                                {
                                                  "type": "AwaitExpression",
                                                  "label": "await open(address, openOptions)",
                                                  "start_token": 135,
                                                  "end_token": 141,
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "open(address, openOptions)",
                                                      "start_token": 136,
                                                      "end_token": 141,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "open",
                                                          "start_token": 136,
                                                          "end_token": 136,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "address",
                                                          "start_token": 138,
                                                          "end_token": 138,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "openOptions",
                                                          "start_token": 140,
                                                          "end_token": 140,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "CatchClause",
                                  "label": "catch (error) {\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }",
                                  "start_token": 145,
                                  "end_token": 158,
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "error",
                                      "start_token": 147,
                                      "end_token": 147,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "start_token": 147,
                                          "end_token": 147,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n      logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);\n    }",
                                      "start_token": 149,
                                      "end_token": 158,
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `);",
                                          "start_token": 150,
                                          "end_token": 157,
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "logger.error(dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `)",
                                              "start_token": 150,
                                              "end_token": 156,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "logger.error",
                                                  "start_token": 150,
                                                  "end_token": 152,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "logger",
                                                      "start_token": 150,
                                                      "end_token": 150,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "error",
                                                      "start_token": 152,
                                                      "end_token": 152,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "TaggedTemplateExpression",
                                                  "label": "dedent`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `",
                                                  "start_token": 154,
                                                  "end_token": 155,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "dedent",
                                                      "start_token": 154,
                                                      "end_token": 154,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`\n        Could not open ${address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `",
                                                      "start_token": 155,
                                                      "end_token": 155,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`\n        Could not open ${",
                                                          "start_token": 155,
                                                          "end_token": 155,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "address} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `",
                                                          "start_token": 155,
                                                          "end_token": 155,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "address",
                                                              "start_token": 155,
                                                              "end_token": 155,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "} inside a browser. If you're running this command inside a\n        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a\n        browser by default.\n      `",
                                                              "start_token": 155,
                                                              "end_token": 155,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}