{
  "type": "SourceFile",
  "label": "import { Platform, UnavailabilityError, uuid } from 'expo-modules-core';\nimport NotificationScheduler from './NotificationScheduler';\nimport {\n  NativeCalendarTriggerInput,\n  NativeDailyTriggerInput,\n  NativeDateTriggerInput,\n  NativeNotificationTriggerInput,\n  NativeTimeIntervalTriggerInput,\n  NativeWeeklyTriggerInput,\n  NativeMonthlyTriggerInput,\n  NativeYearlyTriggerInput,\n} from './NotificationScheduler.types';\nimport {\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  SchedulableTriggerInputTypes,\n} from './Notifications.types';\nexport default async function scheduleNotificationAsync(\n  request: NotificationRequestInput\n): Promise<string> {\n  if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }\n  return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuid.v4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );\n}\ntype ValidTriggerDateComponents = 'month' | 'day' | 'weekday' | 'hour' | 'minute';\nexport function parseTrigger(\n  userFacingTrigger: NotificationTriggerInput\n): NativeNotificationTriggerInput {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n  if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }\n  const dateTrigger = parseDateTrigger(userFacingTrigger);\n  if (dateTrigger) {\n    return dateTrigger;\n  }\n  const calendarTrigger = parseCalendarTrigger(userFacingTrigger);\n  if (calendarTrigger) {\n    return calendarTrigger;\n  }\n  const dailyTrigger = parseDailyTrigger(userFacingTrigger);\n  if (dailyTrigger) {\n    return dailyTrigger;\n  }\n  const weeklyTrigger = parseWeeklyTrigger(userFacingTrigger);\n  if (weeklyTrigger) {\n    return weeklyTrigger;\n  }\n  const monthlyTrigger = parseMonthlyTrigger(userFacingTrigger);\n  if (monthlyTrigger) {\n    return monthlyTrigger;\n  }\n  const yearlyTrigger = parseYearlyTrigger(userFacingTrigger);\n  if (yearlyTrigger) {\n    return yearlyTrigger;\n  }\n  const timeIntervalTrigger = parseTimeIntervalTrigger(userFacingTrigger);\n  if (timeIntervalTrigger) {\n    return timeIntervalTrigger;\n  }\n  return Platform.select({\n    default: null, // There's no notion of channels on platforms other than Android.\n    android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    },\n  });\n}\nfunction parseCalendarTrigger(\n  trigger: NotificationTriggerInput\n): NativeCalendarTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.CALENDAR\n  ) {\n    const { repeats, ...calendarTrigger } = trigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  }\n  return undefined;\n}\nfunction parseDateTrigger(trigger: NotificationTriggerInput): NativeDateTriggerInput | undefined {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  } else if (\n    typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger &&\n    trigger.date instanceof Date\n  ) {\n    const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  } else {\n    return undefined;\n  }\n}\nfunction toTimestamp(date: number | Date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}\nfunction parseDailyTrigger(trigger: NotificationTriggerInput): NativeDailyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DAILY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['hour', 'minute']);\n    const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}\nfunction parseWeeklyTrigger(\n  trigger: NotificationTriggerInput\n): NativeWeeklyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.WEEKLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute']);\n    const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}\nfunction parseMonthlyTrigger(\n  trigger: NotificationTriggerInput\n): NativeMonthlyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.MONTHLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute']);\n    const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}\nfunction parseYearlyTrigger(\n  trigger: NotificationTriggerInput\n): NativeYearlyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.YEARLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute']);\n    const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}\nfunction parseTimeIntervalTrigger(\n  trigger: NotificationTriggerInput\n): NativeTimeIntervalTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL &&\n    'seconds' in trigger &&\n    typeof trigger.seconds === 'number'\n  ) {\n    const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}\n// Needed only to satisfy Typescript types for validated date components\nconst placeholderDateComponentValue = -9999;\nfunction validateDateComponentsInTrigger(\n  trigger: NonNullable<NotificationTriggerInput>,\n  components: readonly ValidTriggerDateComponents[]\n) {\n  const anyTriggerType = trigger as any;\n  components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });\n}\nfunction daysInMonth(month: number = 0, year?: number) {\n  return new Date(year ?? 2000, month + 1, 0).getDate();\n}",
  "start_token": 0,
  "end_token": 1413,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Platform, UnavailabilityError, uuid } from 'expo-modules-core';",
      "start_token": 0,
      "end_token": 10,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Platform, UnavailabilityError, uuid }",
          "start_token": 1,
          "end_token": 7,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Platform, UnavailabilityError, uuid }",
              "start_token": 1,
              "end_token": 7,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Platform",
                  "start_token": 2,
                  "end_token": 2,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Platform",
                      "start_token": 2,
                      "end_token": 2,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "UnavailabilityError",
                  "start_token": 4,
                  "end_token": 4,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UnavailabilityError",
                      "start_token": 4,
                      "end_token": 4,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "uuid",
                  "start_token": 6,
                  "end_token": 6,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "uuid",
                      "start_token": 6,
                      "end_token": 6,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'expo-modules-core'",
          "start_token": 9,
          "end_token": 9,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import NotificationScheduler from './NotificationScheduler';",
      "start_token": 11,
      "end_token": 15,
      "children": [
        {
          "type": "ImportClause",
          "label": "NotificationScheduler",
          "start_token": 12,
          "end_token": 12,
          "children": [
            {
              "type": "Identifier",
              "label": "NotificationScheduler",
              "start_token": 12,
              "end_token": 12,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./NotificationScheduler'",
          "start_token": 14,
          "end_token": 14,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {\n  NativeCalendarTriggerInput,\n  NativeDailyTriggerInput,\n  NativeDateTriggerInput,\n  NativeNotificationTriggerInput,\n  NativeTimeIntervalTriggerInput,\n  NativeWeeklyTriggerInput,\n  NativeMonthlyTriggerInput,\n  NativeYearlyTriggerInput,\n} from './NotificationScheduler.types';",
      "start_token": 16,
      "end_token": 37,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  NativeCalendarTriggerInput,\n  NativeDailyTriggerInput,\n  NativeDateTriggerInput,\n  NativeNotificationTriggerInput,\n  NativeTimeIntervalTriggerInput,\n  NativeWeeklyTriggerInput,\n  NativeMonthlyTriggerInput,\n  NativeYearlyTriggerInput,\n}",
          "start_token": 17,
          "end_token": 34,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  NativeCalendarTriggerInput,\n  NativeDailyTriggerInput,\n  NativeDateTriggerInput,\n  NativeNotificationTriggerInput,\n  NativeTimeIntervalTriggerInput,\n  NativeWeeklyTriggerInput,\n  NativeMonthlyTriggerInput,\n  NativeYearlyTriggerInput,\n}",
              "start_token": 17,
              "end_token": 34,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "NativeCalendarTriggerInput",
                  "start_token": 18,
                  "end_token": 18,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeCalendarTriggerInput",
                      "start_token": 18,
                      "end_token": 18,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeDailyTriggerInput",
                  "start_token": 20,
                  "end_token": 20,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeDailyTriggerInput",
                      "start_token": 20,
                      "end_token": 20,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeDateTriggerInput",
                  "start_token": 22,
                  "end_token": 22,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeDateTriggerInput",
                      "start_token": 22,
                      "end_token": 22,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeNotificationTriggerInput",
                  "start_token": 24,
                  "end_token": 24,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeNotificationTriggerInput",
                      "start_token": 24,
                      "end_token": 24,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeTimeIntervalTriggerInput",
                  "start_token": 26,
                  "end_token": 26,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeTimeIntervalTriggerInput",
                      "start_token": 26,
                      "end_token": 26,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeWeeklyTriggerInput",
                  "start_token": 28,
                  "end_token": 28,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeWeeklyTriggerInput",
                      "start_token": 28,
                      "end_token": 28,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeMonthlyTriggerInput",
                  "start_token": 30,
                  "end_token": 30,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeMonthlyTriggerInput",
                      "start_token": 30,
                      "end_token": 30,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NativeYearlyTriggerInput",
                  "start_token": 32,
                  "end_token": 32,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NativeYearlyTriggerInput",
                      "start_token": 32,
                      "end_token": 32,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./NotificationScheduler.types'",
          "start_token": 36,
          "end_token": 36,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import {\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  SchedulableTriggerInputTypes,\n} from './Notifications.types';",
      "start_token": 38,
      "end_token": 49,
      "children": [
        {
          "type": "ImportClause",
          "label": "{\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  SchedulableTriggerInputTypes,\n}",
          "start_token": 39,
          "end_token": 46,
          "children": [
            {
              "type": "NamedImports",
              "label": "{\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  SchedulableTriggerInputTypes,\n}",
              "start_token": 39,
              "end_token": 46,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "NotificationRequestInput",
                  "start_token": 40,
                  "end_token": 40,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NotificationRequestInput",
                      "start_token": 40,
                      "end_token": 40,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 42,
                  "end_token": 42,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NotificationTriggerInput",
                      "start_token": 42,
                      "end_token": 42,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "SchedulableTriggerInputTypes",
                  "start_token": 44,
                  "end_token": 44,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "SchedulableTriggerInputTypes",
                      "start_token": 44,
                      "end_token": 44,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./Notifications.types'",
          "start_token": 48,
          "end_token": 48,
          "children": []
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export default async function scheduleNotificationAsync(\n  request: NotificationRequestInput\n): Promise<string> {\n  if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }\n  return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuid.v4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );\n}",
      "start_token": 50,
      "end_token": 113,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 50,
          "end_token": 50,
          "children": []
        },
        {
          "type": "DefaultKeyword",
          "label": "default",
          "start_token": 51,
          "end_token": 51,
          "children": []
        },
        {
          "type": "AsyncKeyword",
          "label": "async",
          "start_token": 52,
          "end_token": 52,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "scheduleNotificationAsync",
          "start_token": 54,
          "end_token": 54,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "request: NotificationRequestInput",
          "start_token": 56,
          "end_token": 58,
          "children": [
            {
              "type": "Identifier",
              "label": "request",
              "start_token": 56,
              "end_token": 56,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationRequestInput",
              "start_token": 58,
              "end_token": 58,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationRequestInput",
                  "start_token": 58,
                  "end_token": 58,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "TypeReference",
          "label": "Promise<string>",
          "start_token": 61,
          "end_token": 64,
          "children": [
            {
              "type": "Identifier",
              "label": "Promise",
              "start_token": 61,
              "end_token": 61,
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "start_token": 63,
              "end_token": 63,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }\n  return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuid.v4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );\n}",
          "start_token": 65,
          "end_token": 113,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }",
              "start_token": 66,
              "end_token": 83,
              "children": [
                {
                  "type": "PrefixUnaryExpression",
                  "label": "!NotificationScheduler.scheduleNotificationAsync",
                  "start_token": 68,
                  "end_token": 71,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "NotificationScheduler.scheduleNotificationAsync",
                      "start_token": 69,
                      "end_token": 71,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "NotificationScheduler",
                          "start_token": 69,
                          "end_token": 69,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "scheduleNotificationAsync",
                          "start_token": 71,
                          "end_token": 71,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }",
                  "start_token": 73,
                  "end_token": 83,
                  "children": [
                    {
                      "type": "ThrowStatement",
                      "label": "throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');",
                      "start_token": 74,
                      "end_token": 82,
                      "children": [
                        {
                          "type": "NewExpression",
                          "label": "new UnavailabilityError('Notifications', 'scheduleNotificationAsync')",
                          "start_token": 75,
                          "end_token": 81,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "UnavailabilityError",
                              "start_token": 76,
                              "end_token": 76,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'Notifications'",
                              "start_token": 78,
                              "end_token": 78,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'scheduleNotificationAsync'",
                              "start_token": 80,
                              "end_token": 80,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuid.v4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );",
              "start_token": 84,
              "end_token": 112,
              "children": [
                {
                  "type": "AwaitExpression",
                  "label": "await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuid.v4(),\n    request.content,\n    parseTrigger(request.trigger)\n  )",
                  "start_token": 85,
                  "end_token": 111,
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuid.v4(),\n    request.content,\n    parseTrigger(request.trigger)\n  )",
                      "start_token": 86,
                      "end_token": 111,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "NotificationScheduler.scheduleNotificationAsync",
                          "start_token": 86,
                          "end_token": 88,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "NotificationScheduler",
                              "start_token": 86,
                              "end_token": 86,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scheduleNotificationAsync",
                              "start_token": 88,
                              "end_token": 88,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "request.identifier ?? uuid.v4()",
                          "start_token": 90,
                          "end_token": 99,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "request.identifier",
                              "start_token": 90,
                              "end_token": 92,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "request",
                                  "start_token": 90,
                                  "end_token": 90,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "identifier",
                                  "start_token": 92,
                                  "end_token": 92,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionQuestionToken",
                              "label": "??",
                              "start_token": 93,
                              "end_token": 94,
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "uuid.v4()",
                              "start_token": 95,
                              "end_token": 99,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "uuid.v4",
                                  "start_token": 95,
                                  "end_token": 97,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "uuid",
                                      "start_token": 95,
                                      "end_token": 95,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "v4",
                                      "start_token": 97,
                                      "end_token": 97,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "request.content",
                          "start_token": 101,
                          "end_token": 103,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "request",
                              "start_token": 101,
                              "end_token": 101,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "content",
                              "start_token": 103,
                              "end_token": 103,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseTrigger(request.trigger)",
                          "start_token": 105,
                          "end_token": 110,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseTrigger",
                              "start_token": 105,
                              "end_token": 105,
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "request.trigger",
                              "start_token": 107,
                              "end_token": 109,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "request",
                                  "start_token": 107,
                                  "end_token": 107,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 109,
                                  "end_token": 109,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "TypeAliasDeclaration",
      "label": "type ValidTriggerDateComponents = 'month' | 'day' | 'weekday' | 'hour' | 'minute';",
      "start_token": 114,
      "end_token": 126,
      "children": [
        {
          "type": "Identifier",
          "label": "ValidTriggerDateComponents",
          "start_token": 115,
          "end_token": 115,
          "children": []
        },
        {
          "type": "UnionType",
          "label": "'month' | 'day' | 'weekday' | 'hour' | 'minute'",
          "start_token": 117,
          "end_token": 125,
          "children": [
            {
              "type": "LiteralType",
              "label": "'month'",
              "start_token": 117,
              "end_token": 117,
              "children": [
                {
                  "type": "StringLiteral",
                  "label": "'month'",
                  "start_token": 117,
                  "end_token": 117,
                  "children": []
                }
              ]
            },
            {
              "type": "LiteralType",
              "label": "'day'",
              "start_token": 119,
              "end_token": 119,
              "children": [
                {
                  "type": "StringLiteral",
                  "label": "'day'",
                  "start_token": 119,
                  "end_token": 119,
                  "children": []
                }
              ]
            },
            {
              "type": "LiteralType",
              "label": "'weekday'",
              "start_token": 121,
              "end_token": 121,
              "children": [
                {
                  "type": "StringLiteral",
                  "label": "'weekday'",
                  "start_token": 121,
                  "end_token": 121,
                  "children": []
                }
              ]
            },
            {
              "type": "LiteralType",
              "label": "'hour'",
              "start_token": 123,
              "end_token": 123,
              "children": [
                {
                  "type": "StringLiteral",
                  "label": "'hour'",
                  "start_token": 123,
                  "end_token": 123,
                  "children": []
                }
              ]
            },
            {
              "type": "LiteralType",
              "label": "'minute'",
              "start_token": 125,
              "end_token": 125,
              "children": [
                {
                  "type": "StringLiteral",
                  "label": "'minute'",
                  "start_token": 125,
                  "end_token": 125,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "export function parseTrigger(\n  userFacingTrigger: NotificationTriggerInput\n): NativeNotificationTriggerInput {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n  if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }\n  const dateTrigger = parseDateTrigger(userFacingTrigger);\n  if (dateTrigger) {\n    return dateTrigger;\n  }\n  const calendarTrigger = parseCalendarTrigger(userFacingTrigger);\n  if (calendarTrigger) {\n    return calendarTrigger;\n  }\n  const dailyTrigger = parseDailyTrigger(userFacingTrigger);\n  if (dailyTrigger) {\n    return dailyTrigger;\n  }\n  const weeklyTrigger = parseWeeklyTrigger(userFacingTrigger);\n  if (weeklyTrigger) {\n    return weeklyTrigger;\n  }\n  const monthlyTrigger = parseMonthlyTrigger(userFacingTrigger);\n  if (monthlyTrigger) {\n    return monthlyTrigger;\n  }\n  const yearlyTrigger = parseYearlyTrigger(userFacingTrigger);\n  if (yearlyTrigger) {\n    return yearlyTrigger;\n  }\n  const timeIntervalTrigger = parseTimeIntervalTrigger(userFacingTrigger);\n  if (timeIntervalTrigger) {\n    return timeIntervalTrigger;\n  }\n  return Platform.select({\n    default: null, // There's no notion of channels on platforms other than Android.\n    android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    },\n  });\n}",
      "start_token": 127,
      "end_token": 331,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 127,
          "end_token": 127,
          "children": []
        },
        {
          "type": "Identifier",
          "label": "parseTrigger",
          "start_token": 129,
          "end_token": 129,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "userFacingTrigger: NotificationTriggerInput",
          "start_token": 131,
          "end_token": 133,
          "children": [
            {
              "type": "Identifier",
              "label": "userFacingTrigger",
              "start_token": 131,
              "end_token": 131,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 133,
              "end_token": 133,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 133,
                  "end_token": 133,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "TypeReference",
          "label": "NativeNotificationTriggerInput",
          "start_token": 136,
          "end_token": 136,
          "children": [
            {
              "type": "Identifier",
              "label": "NativeNotificationTriggerInput",
              "start_token": 136,
              "end_token": 136,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (userFacingTrigger === null) {\n    return null;\n  }\n  if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }\n  const dateTrigger = parseDateTrigger(userFacingTrigger);\n  if (dateTrigger) {\n    return dateTrigger;\n  }\n  const calendarTrigger = parseCalendarTrigger(userFacingTrigger);\n  if (calendarTrigger) {\n    return calendarTrigger;\n  }\n  const dailyTrigger = parseDailyTrigger(userFacingTrigger);\n  if (dailyTrigger) {\n    return dailyTrigger;\n  }\n  const weeklyTrigger = parseWeeklyTrigger(userFacingTrigger);\n  if (weeklyTrigger) {\n    return weeklyTrigger;\n  }\n  const monthlyTrigger = parseMonthlyTrigger(userFacingTrigger);\n  if (monthlyTrigger) {\n    return monthlyTrigger;\n  }\n  const yearlyTrigger = parseYearlyTrigger(userFacingTrigger);\n  if (yearlyTrigger) {\n    return yearlyTrigger;\n  }\n  const timeIntervalTrigger = parseTimeIntervalTrigger(userFacingTrigger);\n  if (timeIntervalTrigger) {\n    return timeIntervalTrigger;\n  }\n  return Platform.select({\n    default: null, // There's no notion of channels on platforms other than Android.\n    android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    },\n  });\n}",
          "start_token": 137,
          "end_token": 331,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (userFacingTrigger === null) {\n    return null;\n  }",
              "start_token": 138,
              "end_token": 148,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "userFacingTrigger === null",
                  "start_token": 140,
                  "end_token": 142,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFacingTrigger",
                      "start_token": 140,
                      "end_token": 140,
                      "children": []
                    },
                    {
                      "type": "EqualsEqualsEqualsToken",
                      "label": "===",
                      "start_token": 141,
                      "end_token": 141,
                      "children": []
                    },
                    {
                      "type": "NullKeyword",
                      "label": "null",
                      "start_token": 142,
                      "end_token": 142,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    return null;\n  }",
                  "start_token": 144,
                  "end_token": 148,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return null;",
                      "start_token": 145,
                      "end_token": 147,
                      "children": [
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "start_token": 146,
                          "end_token": 146,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }",
              "start_token": 149,
              "end_token": 163,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "userFacingTrigger === undefined",
                  "start_token": 151,
                  "end_token": 153,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFacingTrigger",
                      "start_token": 151,
                      "end_token": 151,
                      "children": []
                    },
                    {
                      "type": "EqualsEqualsEqualsToken",
                      "label": "===",
                      "start_token": 152,
                      "end_token": 152,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "undefined",
                      "start_token": 153,
                      "end_token": 153,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }",
                  "start_token": 155,
                  "end_token": 163,
                  "children": [
                    {
                      "type": "ThrowStatement",
                      "label": "throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );",
                      "start_token": 156,
                      "end_token": 162,
                      "children": [
                        {
                          "type": "NewExpression",
                          "label": "new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    )",
                          "start_token": 157,
                          "end_token": 161,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "TypeError",
                              "start_token": 158,
                              "end_token": 158,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'",
                              "start_token": 160,
                              "end_token": 160,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const dateTrigger = parseDateTrigger(userFacingTrigger);",
              "start_token": 164,
              "end_token": 171,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const dateTrigger = parseDateTrigger(userFacingTrigger)",
                  "start_token": 164,
                  "end_token": 170,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "dateTrigger = parseDateTrigger(userFacingTrigger)",
                      "start_token": 165,
                      "end_token": 170,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dateTrigger",
                          "start_token": 165,
                          "end_token": 165,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseDateTrigger(userFacingTrigger)",
                          "start_token": 167,
                          "end_token": 170,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseDateTrigger",
                              "start_token": 167,
                              "end_token": 167,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 169,
                              "end_token": 169,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (dateTrigger) {\n    return dateTrigger;\n  }",
              "start_token": 172,
              "end_token": 180,
              "children": [
                {
                  "type": "Identifier",
                  "label": "dateTrigger",
                  "start_token": 174,
                  "end_token": 174,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return dateTrigger;\n  }",
                  "start_token": 176,
                  "end_token": 180,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return dateTrigger;",
                      "start_token": 177,
                      "end_token": 179,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dateTrigger",
                          "start_token": 178,
                          "end_token": 178,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const calendarTrigger = parseCalendarTrigger(userFacingTrigger);",
              "start_token": 181,
              "end_token": 188,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const calendarTrigger = parseCalendarTrigger(userFacingTrigger)",
                  "start_token": 181,
                  "end_token": 187,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "calendarTrigger = parseCalendarTrigger(userFacingTrigger)",
                      "start_token": 182,
                      "end_token": 187,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "calendarTrigger",
                          "start_token": 182,
                          "end_token": 182,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseCalendarTrigger(userFacingTrigger)",
                          "start_token": 184,
                          "end_token": 187,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseCalendarTrigger",
                              "start_token": 184,
                              "end_token": 184,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 186,
                              "end_token": 186,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (calendarTrigger) {\n    return calendarTrigger;\n  }",
              "start_token": 189,
              "end_token": 197,
              "children": [
                {
                  "type": "Identifier",
                  "label": "calendarTrigger",
                  "start_token": 191,
                  "end_token": 191,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return calendarTrigger;\n  }",
                  "start_token": 193,
                  "end_token": 197,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return calendarTrigger;",
                      "start_token": 194,
                      "end_token": 196,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "calendarTrigger",
                          "start_token": 195,
                          "end_token": 195,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const dailyTrigger = parseDailyTrigger(userFacingTrigger);",
              "start_token": 198,
              "end_token": 205,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const dailyTrigger = parseDailyTrigger(userFacingTrigger)",
                  "start_token": 198,
                  "end_token": 204,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "dailyTrigger = parseDailyTrigger(userFacingTrigger)",
                      "start_token": 199,
                      "end_token": 204,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dailyTrigger",
                          "start_token": 199,
                          "end_token": 199,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseDailyTrigger(userFacingTrigger)",
                          "start_token": 201,
                          "end_token": 204,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseDailyTrigger",
                              "start_token": 201,
                              "end_token": 201,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 203,
                              "end_token": 203,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (dailyTrigger) {\n    return dailyTrigger;\n  }",
              "start_token": 206,
              "end_token": 214,
              "children": [
                {
                  "type": "Identifier",
                  "label": "dailyTrigger",
                  "start_token": 208,
                  "end_token": 208,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return dailyTrigger;\n  }",
                  "start_token": 210,
                  "end_token": 214,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return dailyTrigger;",
                      "start_token": 211,
                      "end_token": 213,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dailyTrigger",
                          "start_token": 212,
                          "end_token": 212,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const weeklyTrigger = parseWeeklyTrigger(userFacingTrigger);",
              "start_token": 215,
              "end_token": 222,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const weeklyTrigger = parseWeeklyTrigger(userFacingTrigger)",
                  "start_token": 215,
                  "end_token": 221,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "weeklyTrigger = parseWeeklyTrigger(userFacingTrigger)",
                      "start_token": 216,
                      "end_token": 221,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "weeklyTrigger",
                          "start_token": 216,
                          "end_token": 216,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseWeeklyTrigger(userFacingTrigger)",
                          "start_token": 218,
                          "end_token": 221,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseWeeklyTrigger",
                              "start_token": 218,
                              "end_token": 218,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 220,
                              "end_token": 220,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (weeklyTrigger) {\n    return weeklyTrigger;\n  }",
              "start_token": 223,
              "end_token": 231,
              "children": [
                {
                  "type": "Identifier",
                  "label": "weeklyTrigger",
                  "start_token": 225,
                  "end_token": 225,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return weeklyTrigger;\n  }",
                  "start_token": 227,
                  "end_token": 231,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return weeklyTrigger;",
                      "start_token": 228,
                      "end_token": 230,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "weeklyTrigger",
                          "start_token": 229,
                          "end_token": 229,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const monthlyTrigger = parseMonthlyTrigger(userFacingTrigger);",
              "start_token": 232,
              "end_token": 239,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const monthlyTrigger = parseMonthlyTrigger(userFacingTrigger)",
                  "start_token": 232,
                  "end_token": 238,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "monthlyTrigger = parseMonthlyTrigger(userFacingTrigger)",
                      "start_token": 233,
                      "end_token": 238,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "monthlyTrigger",
                          "start_token": 233,
                          "end_token": 233,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseMonthlyTrigger(userFacingTrigger)",
                          "start_token": 235,
                          "end_token": 238,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseMonthlyTrigger",
                              "start_token": 235,
                              "end_token": 235,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 237,
                              "end_token": 237,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (monthlyTrigger) {\n    return monthlyTrigger;\n  }",
              "start_token": 240,
              "end_token": 248,
              "children": [
                {
                  "type": "Identifier",
                  "label": "monthlyTrigger",
                  "start_token": 242,
                  "end_token": 242,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return monthlyTrigger;\n  }",
                  "start_token": 244,
                  "end_token": 248,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return monthlyTrigger;",
                      "start_token": 245,
                      "end_token": 247,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "monthlyTrigger",
                          "start_token": 246,
                          "end_token": 246,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const yearlyTrigger = parseYearlyTrigger(userFacingTrigger);",
              "start_token": 249,
              "end_token": 256,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const yearlyTrigger = parseYearlyTrigger(userFacingTrigger)",
                  "start_token": 249,
                  "end_token": 255,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "yearlyTrigger = parseYearlyTrigger(userFacingTrigger)",
                      "start_token": 250,
                      "end_token": 255,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "yearlyTrigger",
                          "start_token": 250,
                          "end_token": 250,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseYearlyTrigger(userFacingTrigger)",
                          "start_token": 252,
                          "end_token": 255,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseYearlyTrigger",
                              "start_token": 252,
                              "end_token": 252,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 254,
                              "end_token": 254,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (yearlyTrigger) {\n    return yearlyTrigger;\n  }",
              "start_token": 257,
              "end_token": 265,
              "children": [
                {
                  "type": "Identifier",
                  "label": "yearlyTrigger",
                  "start_token": 259,
                  "end_token": 259,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return yearlyTrigger;\n  }",
                  "start_token": 261,
                  "end_token": 265,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return yearlyTrigger;",
                      "start_token": 262,
                      "end_token": 264,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "yearlyTrigger",
                          "start_token": 263,
                          "end_token": 263,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "FirstStatement",
              "label": "const timeIntervalTrigger = parseTimeIntervalTrigger(userFacingTrigger);",
              "start_token": 266,
              "end_token": 273,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const timeIntervalTrigger = parseTimeIntervalTrigger(userFacingTrigger)",
                  "start_token": 266,
                  "end_token": 272,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "timeIntervalTrigger = parseTimeIntervalTrigger(userFacingTrigger)",
                      "start_token": 267,
                      "end_token": 272,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "timeIntervalTrigger",
                          "start_token": 267,
                          "end_token": 267,
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "parseTimeIntervalTrigger(userFacingTrigger)",
                          "start_token": 269,
                          "end_token": 272,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "parseTimeIntervalTrigger",
                              "start_token": 269,
                              "end_token": 269,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "userFacingTrigger",
                              "start_token": 271,
                              "end_token": 271,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "IfStatement",
              "label": "if (timeIntervalTrigger) {\n    return timeIntervalTrigger;\n  }",
              "start_token": 274,
              "end_token": 282,
              "children": [
                {
                  "type": "Identifier",
                  "label": "timeIntervalTrigger",
                  "start_token": 276,
                  "end_token": 276,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n    return timeIntervalTrigger;\n  }",
                  "start_token": 278,
                  "end_token": 282,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return timeIntervalTrigger;",
                      "start_token": 279,
                      "end_token": 281,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "timeIntervalTrigger",
                          "start_token": 280,
                          "end_token": 280,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return Platform.select({\n    default: null, // There's no notion of channels on platforms other than Android.\n    android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    },\n  });",
              "start_token": 283,
              "end_token": 330,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "Platform.select({\n    default: null, // There's no notion of channels on platforms other than Android.\n    android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    },\n  })",
                  "start_token": 284,
                  "end_token": 329,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "Platform.select",
                      "start_token": 284,
                      "end_token": 286,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "Platform",
                          "start_token": 284,
                          "end_token": 284,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "select",
                          "start_token": 286,
                          "end_token": 286,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ObjectLiteralExpression",
                      "label": "{\n    default: null, // There's no notion of channels on platforms other than Android.\n    android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    },\n  }",
                      "start_token": 288,
                      "end_token": 328,
                      "children": [
                        {
                          "type": "PropertyAssignment",
                          "label": "default: null",
                          "start_token": 289,
                          "end_token": 291,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "default",
                              "start_token": 289,
                              "end_token": 289,
                              "children": []
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "start_token": 291,
                              "end_token": 291,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAssignment",
                          "label": "android: {\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    }",
                          "start_token": 294,
                          "end_token": 326,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "android",
                              "start_token": 294,
                              "end_token": 294,
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      type: 'channel',\n      channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined,\n    }",
                              "start_token": 296,
                              "end_token": 326,
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "type: 'channel'",
                                  "start_token": 297,
                                  "end_token": 299,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "type",
                                      "start_token": 297,
                                      "end_token": 297,
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'channel'",
                                      "start_token": 299,
                                      "end_token": 299,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "channelId:\n        typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined",
                                  "start_token": 301,
                                  "end_token": 324,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "channelId",
                                      "start_token": 301,
                                      "end_token": 301,
                                      "children": []
                                    },
                                    {
                                      "type": "ConditionalExpression",
                                      "label": "typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)\n          ? userFacingTrigger?.channelId\n          : undefined",
                                      "start_token": 303,
                                      "end_token": 324,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null &&\n        !(userFacingTrigger instanceof Date)",
                                          "start_token": 303,
                                          "end_token": 317,
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "typeof userFacingTrigger === 'object' &&\n        userFacingTrigger !== null",
                                              "start_token": 303,
                                              "end_token": 310,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "typeof userFacingTrigger === 'object'",
                                                  "start_token": 303,
                                                  "end_token": 306,
                                                  "children": [
                                                    {
                                                      "type": "TypeOfExpression",
                                                      "label": "typeof userFacingTrigger",
                                                      "start_token": 303,
                                                      "end_token": 304,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFacingTrigger",
                                                          "start_token": 304,
                                                          "end_token": 304,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "EqualsEqualsEqualsToken",
                                                      "label": "===",
                                                      "start_token": 305,
                                                      "end_token": 305,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "'object'",
                                                      "start_token": 306,
                                                      "end_token": 306,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AmpersandAmpersandToken",
                                                  "label": "&&",
                                                  "start_token": 307,
                                                  "end_token": 307,
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "userFacingTrigger !== null",
                                                  "start_token": 308,
                                                  "end_token": 310,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFacingTrigger",
                                                      "start_token": 308,
                                                      "end_token": 308,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ExclamationEqualsEqualsToken",
                                                      "label": "!==",
                                                      "start_token": 309,
                                                      "end_token": 309,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "NullKeyword",
                                                      "label": "null",
                                                      "start_token": 310,
                                                      "end_token": 310,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AmpersandAmpersandToken",
                                              "label": "&&",
                                              "start_token": 311,
                                              "end_token": 311,
                                              "children": []
                                            },
                                            {
                                              "type": "PrefixUnaryExpression",
                                              "label": "!(userFacingTrigger instanceof Date)",
                                              "start_token": 312,
                                              "end_token": 317,
                                              "children": [
                                                {
                                                  "type": "ParenthesizedExpression",
                                                  "label": "(userFacingTrigger instanceof Date)",
                                                  "start_token": 313,
                                                  "end_token": 317,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "userFacingTrigger instanceof Date",
                                                      "start_token": 314,
                                                      "end_token": 316,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFacingTrigger",
                                                          "start_token": 314,
                                                          "end_token": 314,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "InstanceOfKeyword",
                                                          "label": "instanceof",
                                                          "start_token": 315,
                                                          "end_token": 315,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Date",
                                                          "start_token": 316,
                                                          "end_token": 316,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "QuestionToken",
                                          "label": "?",
                                          "start_token": 318,
                                          "end_token": 318,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFacingTrigger?.channelId",
                                          "start_token": 319,
                                          "end_token": 322,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "userFacingTrigger",
                                              "start_token": 319,
                                              "end_token": 319,
                                              "children": []
                                            },
                                            {
                                              "type": "QuestionDotToken",
                                              "label": "?.",
                                              "start_token": 320,
                                              "end_token": 321,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "channelId",
                                              "start_token": 322,
                                              "end_token": 322,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ColonToken",
                                          "label": ":",
                                          "start_token": 323,
                                          "end_token": 323,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "undefined",
                                          "start_token": 324,
                                          "end_token": 324,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseCalendarTrigger(\n  trigger: NotificationTriggerInput\n): NativeCalendarTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.CALENDAR\n  ) {\n    const { repeats, ...calendarTrigger } = trigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  }\n  return undefined;\n}",
      "start_token": 332,
      "end_token": 397,
      "children": [
        {
          "type": "Identifier",
          "label": "parseCalendarTrigger",
          "start_token": 333,
          "end_token": 333,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 335,
          "end_token": 337,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 335,
              "end_token": 335,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 337,
              "end_token": 337,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 337,
                  "end_token": 337,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeCalendarTriggerInput | undefined",
          "start_token": 340,
          "end_token": 342,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeCalendarTriggerInput",
              "start_token": 340,
              "end_token": 340,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeCalendarTriggerInput",
                  "start_token": 340,
                  "end_token": 340,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 342,
              "end_token": 342,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.CALENDAR\n  ) {\n    const { repeats, ...calendarTrigger } = trigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  }\n  return undefined;\n}",
          "start_token": 343,
          "end_token": 397,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.CALENDAR\n  ) {\n    const { repeats, ...calendarTrigger } = trigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  }",
              "start_token": 344,
              "end_token": 393,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.CALENDAR",
                  "start_token": 346,
                  "end_token": 365,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger",
                      "start_token": 346,
                      "end_token": 357,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "trigger !== null &&\n    typeof trigger === 'object'",
                          "start_token": 346,
                          "end_token": 353,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "trigger !== null",
                              "start_token": 346,
                              "end_token": 348,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 346,
                                  "end_token": 346,
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsEqualsToken",
                                  "label": "!==",
                                  "start_token": 347,
                                  "end_token": 347,
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "start_token": 348,
                                  "end_token": 348,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 349,
                              "end_token": 349,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "typeof trigger === 'object'",
                              "start_token": 350,
                              "end_token": 353,
                              "children": [
                                {
                                  "type": "TypeOfExpression",
                                  "label": "typeof trigger",
                                  "start_token": 350,
                                  "end_token": 351,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 351,
                                      "end_token": 351,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 352,
                                  "end_token": 352,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'object'",
                                  "start_token": 353,
                                  "end_token": 353,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 354,
                          "end_token": 354,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'type' in trigger",
                          "start_token": 355,
                          "end_token": 357,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'type'",
                              "start_token": 355,
                              "end_token": 355,
                              "children": []
                            },
                            {
                              "type": "InKeyword",
                              "label": "in",
                              "start_token": 356,
                              "end_token": 356,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 357,
                              "end_token": 357,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AmpersandAmpersandToken",
                      "label": "&&",
                      "start_token": 358,
                      "end_token": 358,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "trigger.type === SchedulableTriggerInputTypes.CALENDAR",
                      "start_token": 359,
                      "end_token": 365,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.type",
                          "start_token": 359,
                          "end_token": 361,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 359,
                              "end_token": 359,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "type",
                              "start_token": 361,
                              "end_token": 361,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 362,
                          "end_token": 362,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "SchedulableTriggerInputTypes.CALENDAR",
                          "start_token": 363,
                          "end_token": 365,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "SchedulableTriggerInputTypes",
                              "start_token": 363,
                              "end_token": 363,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "CALENDAR",
                              "start_token": 365,
                              "end_token": 365,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    const { repeats, ...calendarTrigger } = trigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  }",
                  "start_token": 367,
                  "end_token": 393,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "const { repeats, ...calendarTrigger } = trigger;",
                      "start_token": 368,
                      "end_token": 379,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const { repeats, ...calendarTrigger } = trigger",
                          "start_token": 368,
                          "end_token": 378,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "{ repeats, ...calendarTrigger } = trigger",
                              "start_token": 369,
                              "end_token": 378,
                              "children": [
                                {
                                  "type": "ObjectBindingPattern",
                                  "label": "{ repeats, ...calendarTrigger }",
                                  "start_token": 369,
                                  "end_token": 376,
                                  "children": [
                                    {
                                      "type": "BindingElement",
                                      "label": "repeats",
                                      "start_token": 370,
                                      "end_token": 370,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "repeats",
                                          "start_token": 370,
                                          "end_token": 370,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BindingElement",
                                      "label": "...calendarTrigger",
                                      "start_token": 372,
                                      "end_token": 375,
                                      "children": [
                                        {
                                          "type": "DotDotDotToken",
                                          "label": "...",
                                          "start_token": 372,
                                          "end_token": 374,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "calendarTrigger",
                                          "start_token": 375,
                                          "end_token": 375,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 378,
                                  "end_token": 378,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return { type: 'calendar', value: calendarTrigger, repeats };",
                      "start_token": 380,
                      "end_token": 392,
                      "children": [
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{ type: 'calendar', value: calendarTrigger, repeats }",
                          "start_token": 381,
                          "end_token": 391,
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "type: 'calendar'",
                              "start_token": 382,
                              "end_token": 384,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "type",
                                  "start_token": 382,
                                  "end_token": 382,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'calendar'",
                                  "start_token": 384,
                                  "end_token": 384,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAssignment",
                              "label": "value: calendarTrigger",
                              "start_token": 386,
                              "end_token": 388,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "value",
                                  "start_token": 386,
                                  "end_token": 386,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "calendarTrigger",
                                  "start_token": 388,
                                  "end_token": 388,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ShorthandPropertyAssignment",
                              "label": "repeats",
                              "start_token": 390,
                              "end_token": 390,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "repeats",
                                  "start_token": 390,
                                  "end_token": 390,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return undefined;",
              "start_token": 394,
              "end_token": 396,
              "children": [
                {
                  "type": "Identifier",
                  "label": "undefined",
                  "start_token": 395,
                  "end_token": 395,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseDateTrigger(trigger: NotificationTriggerInput): NativeDateTriggerInput | undefined {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  } else if (\n    typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger &&\n    trigger.date instanceof Date\n  ) {\n    const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  } else {\n    return undefined;\n  }\n}",
      "start_token": 398,
      "end_token": 519,
      "children": [
        {
          "type": "Identifier",
          "label": "parseDateTrigger",
          "start_token": 399,
          "end_token": 399,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 401,
          "end_token": 403,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 401,
              "end_token": 401,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 403,
              "end_token": 403,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 403,
                  "end_token": 403,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeDateTriggerInput | undefined",
          "start_token": 406,
          "end_token": 408,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeDateTriggerInput",
              "start_token": 406,
              "end_token": 406,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeDateTriggerInput",
                  "start_token": 406,
                  "end_token": 406,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 408,
              "end_token": 408,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  } else if (\n    typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger &&\n    trigger.date instanceof Date\n  ) {\n    const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  } else {\n    return undefined;\n  }\n}",
          "start_token": 409,
          "end_token": 519,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  } else if (\n    typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger &&\n    trigger.date instanceof Date\n  ) {\n    const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  } else {\n    return undefined;\n  }",
              "start_token": 410,
              "end_token": 518,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger instanceof Date || typeof trigger === 'number'",
                  "start_token": 412,
                  "end_token": 419,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger instanceof Date",
                      "start_token": 412,
                      "end_token": 414,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "trigger",
                          "start_token": 412,
                          "end_token": 412,
                          "children": []
                        },
                        {
                          "type": "InstanceOfKeyword",
                          "label": "instanceof",
                          "start_token": 413,
                          "end_token": 413,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "Date",
                          "start_token": 414,
                          "end_token": 414,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "BarBarToken",
                      "label": "||",
                      "start_token": 415,
                      "end_token": 415,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "typeof trigger === 'number'",
                      "start_token": 416,
                      "end_token": 419,
                      "children": [
                        {
                          "type": "TypeOfExpression",
                          "label": "typeof trigger",
                          "start_token": 416,
                          "end_token": 417,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 417,
                              "end_token": 417,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 418,
                          "end_token": 418,
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'number'",
                          "start_token": 419,
                          "end_token": 419,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  }",
                  "start_token": 421,
                  "end_token": 436,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return { type: 'date', timestamp: toTimestamp(trigger) };",
                      "start_token": 422,
                      "end_token": 435,
                      "children": [
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{ type: 'date', timestamp: toTimestamp(trigger) }",
                          "start_token": 423,
                          "end_token": 434,
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "type: 'date'",
                              "start_token": 424,
                              "end_token": 426,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "type",
                                  "start_token": 424,
                                  "end_token": 424,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'date'",
                                  "start_token": 426,
                                  "end_token": 426,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAssignment",
                              "label": "timestamp: toTimestamp(trigger)",
                              "start_token": 428,
                              "end_token": 433,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "timestamp",
                                  "start_token": 428,
                                  "end_token": 428,
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "toTimestamp(trigger)",
                                  "start_token": 430,
                                  "end_token": 433,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "toTimestamp",
                                      "start_token": 430,
                                      "end_token": 430,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 432,
                                      "end_token": 432,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (\n    typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger &&\n    trigger.date instanceof Date\n  ) {\n    const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  } else {\n    return undefined;\n  }",
                  "start_token": 438,
                  "end_token": 518,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger &&\n    trigger.date instanceof Date",
                      "start_token": 440,
                      "end_token": 469,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE &&\n    'date' in trigger",
                          "start_token": 440,
                          "end_token": 463,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DATE",
                              "start_token": 440,
                              "end_token": 459,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "typeof trigger === 'object' &&\n    trigger !== null &&\n    'type' in trigger",
                                  "start_token": 440,
                                  "end_token": 451,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "typeof trigger === 'object' &&\n    trigger !== null",
                                      "start_token": 440,
                                      "end_token": 447,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "typeof trigger === 'object'",
                                          "start_token": 440,
                                          "end_token": 443,
                                          "children": [
                                            {
                                              "type": "TypeOfExpression",
                                              "label": "typeof trigger",
                                              "start_token": 440,
                                              "end_token": 441,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 441,
                                                  "end_token": 441,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "EqualsEqualsEqualsToken",
                                              "label": "===",
                                              "start_token": 442,
                                              "end_token": 442,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'object'",
                                              "start_token": 443,
                                              "end_token": 443,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AmpersandAmpersandToken",
                                          "label": "&&",
                                          "start_token": 444,
                                          "end_token": 444,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger !== null",
                                          "start_token": 445,
                                          "end_token": 447,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "trigger",
                                              "start_token": 445,
                                              "end_token": 445,
                                              "children": []
                                            },
                                            {
                                              "type": "ExclamationEqualsEqualsToken",
                                              "label": "!==",
                                              "start_token": 446,
                                              "end_token": 446,
                                              "children": []
                                            },
                                            {
                                              "type": "NullKeyword",
                                              "label": "null",
                                              "start_token": 447,
                                              "end_token": 447,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AmpersandAmpersandToken",
                                      "label": "&&",
                                      "start_token": 448,
                                      "end_token": 448,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'type' in trigger",
                                      "start_token": 449,
                                      "end_token": 451,
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'type'",
                                          "start_token": 449,
                                          "end_token": 449,
                                          "children": []
                                        },
                                        {
                                          "type": "InKeyword",
                                          "label": "in",
                                          "start_token": 450,
                                          "end_token": 450,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 451,
                                          "end_token": 451,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "start_token": 452,
                                  "end_token": 452,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "trigger.type === SchedulableTriggerInputTypes.DATE",
                                  "start_token": 453,
                                  "end_token": 459,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "trigger.type",
                                      "start_token": 453,
                                      "end_token": 455,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 453,
                                          "end_token": 453,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 455,
                                          "end_token": 455,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsEqualsEqualsToken",
                                      "label": "===",
                                      "start_token": 456,
                                      "end_token": 456,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "SchedulableTriggerInputTypes.DATE",
                                      "start_token": 457,
                                      "end_token": 459,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "SchedulableTriggerInputTypes",
                                          "start_token": 457,
                                          "end_token": 457,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DATE",
                                          "start_token": 459,
                                          "end_token": 459,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 460,
                              "end_token": 460,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "'date' in trigger",
                              "start_token": 461,
                              "end_token": 463,
                              "children": [
                                {
                                  "type": "StringLiteral",
                                  "label": "'date'",
                                  "start_token": 461,
                                  "end_token": 461,
                                  "children": []
                                },
                                {
                                  "type": "InKeyword",
                                  "label": "in",
                                  "start_token": 462,
                                  "end_token": 462,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 463,
                                  "end_token": 463,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 464,
                          "end_token": 464,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "trigger.date instanceof Date",
                          "start_token": 465,
                          "end_token": 469,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "trigger.date",
                              "start_token": 465,
                              "end_token": 467,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 465,
                                  "end_token": 465,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "date",
                                  "start_token": 467,
                                  "end_token": 467,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "InstanceOfKeyword",
                              "label": "instanceof",
                              "start_token": 468,
                              "end_token": 468,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "Date",
                              "start_token": 469,
                              "end_token": 469,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n    const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
                      "start_token": 471,
                      "end_token": 512,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    };",
                          "start_token": 472,
                          "end_token": 492,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    }",
                              "start_token": 472,
                              "end_token": 491,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "result: NativeDateTriggerInput = {\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    }",
                                  "start_token": 473,
                                  "end_token": 491,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "result",
                                      "start_token": 473,
                                      "end_token": 473,
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "NativeDateTriggerInput",
                                      "start_token": 475,
                                      "end_token": 475,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "NativeDateTriggerInput",
                                          "start_token": 475,
                                          "end_token": 475,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n      type: 'date',\n      timestamp: toTimestamp(trigger.date),\n    }",
                                      "start_token": 477,
                                      "end_token": 491,
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "type: 'date'",
                                          "start_token": 478,
                                          "end_token": 480,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "type",
                                              "start_token": 478,
                                              "end_token": 478,
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'date'",
                                              "start_token": 480,
                                              "end_token": 480,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "timestamp: toTimestamp(trigger.date)",
                                          "start_token": 482,
                                          "end_token": 489,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "timestamp",
                                              "start_token": 482,
                                              "end_token": 482,
                                              "children": []
                                            },
                                            {
                                              "type": "CallExpression",
                                              "label": "toTimestamp(trigger.date)",
                                              "start_token": 484,
                                              "end_token": 489,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "toTimestamp",
                                                  "start_token": 484,
                                                  "end_token": 484,
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "trigger.date",
                                                  "start_token": 486,
                                                  "end_token": 488,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "trigger",
                                                      "start_token": 486,
                                                      "end_token": 486,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "date",
                                                      "start_token": 488,
                                                      "end_token": 488,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }",
                          "start_token": 493,
                          "end_token": 508,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "trigger.channelId",
                              "start_token": 495,
                              "end_token": 497,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 495,
                                  "end_token": 495,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "channelId",
                                  "start_token": 497,
                                  "end_token": 497,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n      result.channelId = trigger.channelId;\n    }",
                              "start_token": 499,
                              "end_token": 508,
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "result.channelId = trigger.channelId;",
                                  "start_token": 500,
                                  "end_token": 507,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "result.channelId = trigger.channelId",
                                      "start_token": 500,
                                      "end_token": 506,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "result.channelId",
                                          "start_token": 500,
                                          "end_token": 502,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "result",
                                              "start_token": 500,
                                              "end_token": 500,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "channelId",
                                              "start_token": 502,
                                              "end_token": 502,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "start_token": 503,
                                          "end_token": 503,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "trigger.channelId",
                                          "start_token": 504,
                                          "end_token": 506,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "trigger",
                                              "start_token": 504,
                                              "end_token": 504,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "channelId",
                                              "start_token": 506,
                                              "end_token": 506,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return result;",
                          "start_token": 509,
                          "end_token": 511,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "result",
                              "start_token": 510,
                              "end_token": 510,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n    return undefined;\n  }",
                      "start_token": 514,
                      "end_token": 518,
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return undefined;",
                          "start_token": 515,
                          "end_token": 517,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "undefined",
                              "start_token": 516,
                              "end_token": 516,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function toTimestamp(date: number | Date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}",
      "start_token": 520,
      "end_token": 548,
      "children": [
        {
          "type": "Identifier",
          "label": "toTimestamp",
          "start_token": 521,
          "end_token": 521,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "date: number | Date",
          "start_token": 523,
          "end_token": 527,
          "children": [
            {
              "type": "Identifier",
              "label": "date",
              "start_token": 523,
              "end_token": 523,
              "children": []
            },
            {
              "type": "UnionType",
              "label": "number | Date",
              "start_token": 525,
              "end_token": 527,
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "start_token": 525,
                  "end_token": 525,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Date",
                  "start_token": 527,
                  "end_token": 527,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Date",
                      "start_token": 527,
                      "end_token": 527,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}",
          "start_token": 529,
          "end_token": 548,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (date instanceof Date) {\n    return date.getTime();\n  }",
              "start_token": 530,
              "end_token": 544,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "date instanceof Date",
                  "start_token": 532,
                  "end_token": 534,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "date",
                      "start_token": 532,
                      "end_token": 532,
                      "children": []
                    },
                    {
                      "type": "InstanceOfKeyword",
                      "label": "instanceof",
                      "start_token": 533,
                      "end_token": 533,
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "Date",
                      "start_token": 534,
                      "end_token": 534,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    return date.getTime();\n  }",
                  "start_token": 536,
                  "end_token": 544,
                  "children": [
                    {
                      "type": "ReturnStatement",
                      "label": "return date.getTime();",
                      "start_token": 537,
                      "end_token": 543,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "date.getTime()",
                          "start_token": 538,
                          "end_token": 542,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "date.getTime",
                              "start_token": 538,
                              "end_token": 540,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "date",
                                  "start_token": 538,
                                  "end_token": 538,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getTime",
                                  "start_token": 540,
                                  "end_token": 540,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return date;",
              "start_token": 545,
              "end_token": 547,
              "children": [
                {
                  "type": "Identifier",
                  "label": "date",
                  "start_token": 546,
                  "end_token": 546,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseDailyTrigger(trigger: NotificationTriggerInput): NativeDailyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DAILY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['hour', 'minute']);\n    const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
      "start_token": 549,
      "end_token": 649,
      "children": [
        {
          "type": "Identifier",
          "label": "parseDailyTrigger",
          "start_token": 550,
          "end_token": 550,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 552,
          "end_token": 554,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 552,
              "end_token": 552,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 554,
              "end_token": 554,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 554,
                  "end_token": 554,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeDailyTriggerInput | undefined",
          "start_token": 557,
          "end_token": 559,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeDailyTriggerInput",
              "start_token": 557,
              "end_token": 557,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeDailyTriggerInput",
                  "start_token": 557,
                  "end_token": 557,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 559,
              "end_token": 559,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DAILY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['hour', 'minute']);\n    const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
          "start_token": 560,
          "end_token": 649,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DAILY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['hour', 'minute']);\n    const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
              "start_token": 561,
              "end_token": 645,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.DAILY",
                  "start_token": 563,
                  "end_token": 582,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger",
                      "start_token": 563,
                      "end_token": 574,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "trigger !== null &&\n    typeof trigger === 'object'",
                          "start_token": 563,
                          "end_token": 570,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "trigger !== null",
                              "start_token": 563,
                              "end_token": 565,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 563,
                                  "end_token": 563,
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsEqualsToken",
                                  "label": "!==",
                                  "start_token": 564,
                                  "end_token": 564,
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "start_token": 565,
                                  "end_token": 565,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 566,
                              "end_token": 566,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "typeof trigger === 'object'",
                              "start_token": 567,
                              "end_token": 570,
                              "children": [
                                {
                                  "type": "TypeOfExpression",
                                  "label": "typeof trigger",
                                  "start_token": 567,
                                  "end_token": 568,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 568,
                                      "end_token": 568,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 569,
                                  "end_token": 569,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'object'",
                                  "start_token": 570,
                                  "end_token": 570,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 571,
                          "end_token": 571,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'type' in trigger",
                          "start_token": 572,
                          "end_token": 574,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'type'",
                              "start_token": 572,
                              "end_token": 572,
                              "children": []
                            },
                            {
                              "type": "InKeyword",
                              "label": "in",
                              "start_token": 573,
                              "end_token": 573,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 574,
                              "end_token": 574,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AmpersandAmpersandToken",
                      "label": "&&",
                      "start_token": 575,
                      "end_token": 575,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "trigger.type === SchedulableTriggerInputTypes.DAILY",
                      "start_token": 576,
                      "end_token": 582,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.type",
                          "start_token": 576,
                          "end_token": 578,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 576,
                              "end_token": 576,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "type",
                              "start_token": 578,
                              "end_token": 578,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 579,
                          "end_token": 579,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "SchedulableTriggerInputTypes.DAILY",
                          "start_token": 580,
                          "end_token": 582,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "SchedulableTriggerInputTypes",
                              "start_token": 580,
                              "end_token": 580,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "DAILY",
                              "start_token": 582,
                              "end_token": 582,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    validateDateComponentsInTrigger(trigger, ['hour', 'minute']);\n    const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
                  "start_token": 584,
                  "end_token": 645,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "validateDateComponentsInTrigger(trigger, ['hour', 'minute']);",
                      "start_token": 585,
                      "end_token": 595,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "validateDateComponentsInTrigger(trigger, ['hour', 'minute'])",
                          "start_token": 585,
                          "end_token": 594,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "validateDateComponentsInTrigger",
                              "start_token": 585,
                              "end_token": 585,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 587,
                              "end_token": 587,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "['hour', 'minute']",
                              "start_token": 589,
                              "end_token": 593,
                              "children": [
                                {
                                  "type": "StringLiteral",
                                  "label": "'hour'",
                                  "start_token": 590,
                                  "end_token": 590,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'minute'",
                                  "start_token": 592,
                                  "end_token": 592,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };",
                      "start_token": 596,
                      "end_token": 625,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                          "start_token": 596,
                          "end_token": 624,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "result: NativeDailyTriggerInput = {\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                              "start_token": 597,
                              "end_token": 624,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "result",
                                  "start_token": 597,
                                  "end_token": 597,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "NativeDailyTriggerInput",
                                  "start_token": 599,
                                  "end_token": 599,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "NativeDailyTriggerInput",
                                      "start_token": 599,
                                      "end_token": 599,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n      type: 'daily',\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                                  "start_token": 601,
                                  "end_token": 624,
                                  "children": [
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "type: 'daily'",
                                      "start_token": 602,
                                      "end_token": 604,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 602,
                                          "end_token": 602,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'daily'",
                                          "start_token": 604,
                                          "end_token": 604,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "hour: trigger.hour ?? placeholderDateComponentValue",
                                      "start_token": 606,
                                      "end_token": 613,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hour",
                                          "start_token": 606,
                                          "end_token": 606,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.hour ?? placeholderDateComponentValue",
                                          "start_token": 608,
                                          "end_token": 613,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.hour",
                                              "start_token": 608,
                                              "end_token": 610,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 608,
                                                  "end_token": 608,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hour",
                                                  "start_token": 610,
                                                  "end_token": 610,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 611,
                                              "end_token": 612,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 613,
                                              "end_token": 613,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "minute: trigger.minute ?? placeholderDateComponentValue",
                                      "start_token": 615,
                                      "end_token": 622,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "minute",
                                          "start_token": 615,
                                          "end_token": 615,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.minute ?? placeholderDateComponentValue",
                                          "start_token": 617,
                                          "end_token": 622,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.minute",
                                              "start_token": 617,
                                              "end_token": 619,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 617,
                                                  "end_token": 617,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "minute",
                                                  "start_token": 619,
                                                  "end_token": 619,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 620,
                                              "end_token": 621,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 622,
                                              "end_token": 622,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }",
                      "start_token": 626,
                      "end_token": 641,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.channelId",
                          "start_token": 628,
                          "end_token": 630,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 628,
                              "end_token": 628,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "channelId",
                              "start_token": 630,
                              "end_token": 630,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      result.channelId = trigger.channelId;\n    }",
                          "start_token": 632,
                          "end_token": 641,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "result.channelId = trigger.channelId;",
                              "start_token": 633,
                              "end_token": 640,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "result.channelId = trigger.channelId",
                                  "start_token": 633,
                                  "end_token": 639,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "result.channelId",
                                      "start_token": 633,
                                      "end_token": 635,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "result",
                                          "start_token": 633,
                                          "end_token": 633,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 635,
                                          "end_token": 635,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 636,
                                      "end_token": 636,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "trigger.channelId",
                                      "start_token": 637,
                                      "end_token": 639,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 637,
                                          "end_token": 637,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 639,
                                          "end_token": 639,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return result;",
                      "start_token": 642,
                      "end_token": 644,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "result",
                          "start_token": 643,
                          "end_token": 643,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return undefined;",
              "start_token": 646,
              "end_token": 648,
              "children": [
                {
                  "type": "Identifier",
                  "label": "undefined",
                  "start_token": 647,
                  "end_token": 647,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseWeeklyTrigger(\n  trigger: NotificationTriggerInput\n): NativeWeeklyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.WEEKLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute']);\n    const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
      "start_token": 650,
      "end_token": 761,
      "children": [
        {
          "type": "Identifier",
          "label": "parseWeeklyTrigger",
          "start_token": 651,
          "end_token": 651,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 653,
          "end_token": 655,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 653,
              "end_token": 653,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 655,
              "end_token": 655,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 655,
                  "end_token": 655,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeWeeklyTriggerInput | undefined",
          "start_token": 658,
          "end_token": 660,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeWeeklyTriggerInput",
              "start_token": 658,
              "end_token": 658,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeWeeklyTriggerInput",
                  "start_token": 658,
                  "end_token": 658,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 660,
              "end_token": 660,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.WEEKLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute']);\n    const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
          "start_token": 661,
          "end_token": 761,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.WEEKLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute']);\n    const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
              "start_token": 662,
              "end_token": 757,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.WEEKLY",
                  "start_token": 664,
                  "end_token": 683,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger",
                      "start_token": 664,
                      "end_token": 675,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "trigger !== null &&\n    typeof trigger === 'object'",
                          "start_token": 664,
                          "end_token": 671,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "trigger !== null",
                              "start_token": 664,
                              "end_token": 666,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 664,
                                  "end_token": 664,
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsEqualsToken",
                                  "label": "!==",
                                  "start_token": 665,
                                  "end_token": 665,
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "start_token": 666,
                                  "end_token": 666,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 667,
                              "end_token": 667,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "typeof trigger === 'object'",
                              "start_token": 668,
                              "end_token": 671,
                              "children": [
                                {
                                  "type": "TypeOfExpression",
                                  "label": "typeof trigger",
                                  "start_token": 668,
                                  "end_token": 669,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 669,
                                      "end_token": 669,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 670,
                                  "end_token": 670,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'object'",
                                  "start_token": 671,
                                  "end_token": 671,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 672,
                          "end_token": 672,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'type' in trigger",
                          "start_token": 673,
                          "end_token": 675,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'type'",
                              "start_token": 673,
                              "end_token": 673,
                              "children": []
                            },
                            {
                              "type": "InKeyword",
                              "label": "in",
                              "start_token": 674,
                              "end_token": 674,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 675,
                              "end_token": 675,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AmpersandAmpersandToken",
                      "label": "&&",
                      "start_token": 676,
                      "end_token": 676,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "trigger.type === SchedulableTriggerInputTypes.WEEKLY",
                      "start_token": 677,
                      "end_token": 683,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.type",
                          "start_token": 677,
                          "end_token": 679,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 677,
                              "end_token": 677,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "type",
                              "start_token": 679,
                              "end_token": 679,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 680,
                          "end_token": 680,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "SchedulableTriggerInputTypes.WEEKLY",
                          "start_token": 681,
                          "end_token": 683,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "SchedulableTriggerInputTypes",
                              "start_token": 681,
                              "end_token": 681,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "WEEKLY",
                              "start_token": 683,
                              "end_token": 683,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute']);\n    const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
                  "start_token": 685,
                  "end_token": 757,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute']);",
                      "start_token": 686,
                      "end_token": 698,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "validateDateComponentsInTrigger(trigger, ['weekday', 'hour', 'minute'])",
                          "start_token": 686,
                          "end_token": 697,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "validateDateComponentsInTrigger",
                              "start_token": 686,
                              "end_token": 686,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 688,
                              "end_token": 688,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "['weekday', 'hour', 'minute']",
                              "start_token": 690,
                              "end_token": 696,
                              "children": [
                                {
                                  "type": "StringLiteral",
                                  "label": "'weekday'",
                                  "start_token": 691,
                                  "end_token": 691,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'hour'",
                                  "start_token": 693,
                                  "end_token": 693,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'minute'",
                                  "start_token": 695,
                                  "end_token": 695,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };",
                      "start_token": 699,
                      "end_token": 737,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                          "start_token": 699,
                          "end_token": 736,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "result: NativeWeeklyTriggerInput = {\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                              "start_token": 700,
                              "end_token": 736,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "result",
                                  "start_token": 700,
                                  "end_token": 700,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "NativeWeeklyTriggerInput",
                                  "start_token": 702,
                                  "end_token": 702,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "NativeWeeklyTriggerInput",
                                      "start_token": 702,
                                      "end_token": 702,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n      type: 'weekly',\n      weekday: trigger.weekday ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                                  "start_token": 704,
                                  "end_token": 736,
                                  "children": [
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "type: 'weekly'",
                                      "start_token": 705,
                                      "end_token": 707,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 705,
                                          "end_token": 705,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'weekly'",
                                          "start_token": 707,
                                          "end_token": 707,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "weekday: trigger.weekday ?? placeholderDateComponentValue",
                                      "start_token": 709,
                                      "end_token": 716,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "weekday",
                                          "start_token": 709,
                                          "end_token": 709,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.weekday ?? placeholderDateComponentValue",
                                          "start_token": 711,
                                          "end_token": 716,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.weekday",
                                              "start_token": 711,
                                              "end_token": 713,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 711,
                                                  "end_token": 711,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "weekday",
                                                  "start_token": 713,
                                                  "end_token": 713,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 714,
                                              "end_token": 715,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 716,
                                              "end_token": 716,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "hour: trigger.hour ?? placeholderDateComponentValue",
                                      "start_token": 718,
                                      "end_token": 725,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hour",
                                          "start_token": 718,
                                          "end_token": 718,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.hour ?? placeholderDateComponentValue",
                                          "start_token": 720,
                                          "end_token": 725,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.hour",
                                              "start_token": 720,
                                              "end_token": 722,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 720,
                                                  "end_token": 720,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hour",
                                                  "start_token": 722,
                                                  "end_token": 722,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 723,
                                              "end_token": 724,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 725,
                                              "end_token": 725,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "minute: trigger.minute ?? placeholderDateComponentValue",
                                      "start_token": 727,
                                      "end_token": 734,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "minute",
                                          "start_token": 727,
                                          "end_token": 727,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.minute ?? placeholderDateComponentValue",
                                          "start_token": 729,
                                          "end_token": 734,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.minute",
                                              "start_token": 729,
                                              "end_token": 731,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 729,
                                                  "end_token": 729,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "minute",
                                                  "start_token": 731,
                                                  "end_token": 731,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 732,
                                              "end_token": 733,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 734,
                                              "end_token": 734,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }",
                      "start_token": 738,
                      "end_token": 753,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.channelId",
                          "start_token": 740,
                          "end_token": 742,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 740,
                              "end_token": 740,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "channelId",
                              "start_token": 742,
                              "end_token": 742,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      result.channelId = trigger.channelId;\n    }",
                          "start_token": 744,
                          "end_token": 753,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "result.channelId = trigger.channelId;",
                              "start_token": 745,
                              "end_token": 752,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "result.channelId = trigger.channelId",
                                  "start_token": 745,
                                  "end_token": 751,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "result.channelId",
                                      "start_token": 745,
                                      "end_token": 747,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "result",
                                          "start_token": 745,
                                          "end_token": 745,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 747,
                                          "end_token": 747,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 748,
                                      "end_token": 748,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "trigger.channelId",
                                      "start_token": 749,
                                      "end_token": 751,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 749,
                                          "end_token": 749,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 751,
                                          "end_token": 751,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return result;",
                      "start_token": 754,
                      "end_token": 756,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "result",
                          "start_token": 755,
                          "end_token": 755,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return undefined;",
              "start_token": 758,
              "end_token": 760,
              "children": [
                {
                  "type": "Identifier",
                  "label": "undefined",
                  "start_token": 759,
                  "end_token": 759,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseMonthlyTrigger(\n  trigger: NotificationTriggerInput\n): NativeMonthlyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.MONTHLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute']);\n    const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
      "start_token": 762,
      "end_token": 873,
      "children": [
        {
          "type": "Identifier",
          "label": "parseMonthlyTrigger",
          "start_token": 763,
          "end_token": 763,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 765,
          "end_token": 767,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 765,
              "end_token": 765,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 767,
              "end_token": 767,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 767,
                  "end_token": 767,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeMonthlyTriggerInput | undefined",
          "start_token": 770,
          "end_token": 772,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeMonthlyTriggerInput",
              "start_token": 770,
              "end_token": 770,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeMonthlyTriggerInput",
                  "start_token": 770,
                  "end_token": 770,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 772,
              "end_token": 772,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.MONTHLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute']);\n    const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
          "start_token": 773,
          "end_token": 873,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.MONTHLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute']);\n    const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
              "start_token": 774,
              "end_token": 869,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.MONTHLY",
                  "start_token": 776,
                  "end_token": 795,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger",
                      "start_token": 776,
                      "end_token": 787,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "trigger !== null &&\n    typeof trigger === 'object'",
                          "start_token": 776,
                          "end_token": 783,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "trigger !== null",
                              "start_token": 776,
                              "end_token": 778,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 776,
                                  "end_token": 776,
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsEqualsToken",
                                  "label": "!==",
                                  "start_token": 777,
                                  "end_token": 777,
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "start_token": 778,
                                  "end_token": 778,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 779,
                              "end_token": 779,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "typeof trigger === 'object'",
                              "start_token": 780,
                              "end_token": 783,
                              "children": [
                                {
                                  "type": "TypeOfExpression",
                                  "label": "typeof trigger",
                                  "start_token": 780,
                                  "end_token": 781,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 781,
                                      "end_token": 781,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 782,
                                  "end_token": 782,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'object'",
                                  "start_token": 783,
                                  "end_token": 783,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 784,
                          "end_token": 784,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'type' in trigger",
                          "start_token": 785,
                          "end_token": 787,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'type'",
                              "start_token": 785,
                              "end_token": 785,
                              "children": []
                            },
                            {
                              "type": "InKeyword",
                              "label": "in",
                              "start_token": 786,
                              "end_token": 786,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 787,
                              "end_token": 787,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AmpersandAmpersandToken",
                      "label": "&&",
                      "start_token": 788,
                      "end_token": 788,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "trigger.type === SchedulableTriggerInputTypes.MONTHLY",
                      "start_token": 789,
                      "end_token": 795,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.type",
                          "start_token": 789,
                          "end_token": 791,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 789,
                              "end_token": 789,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "type",
                              "start_token": 791,
                              "end_token": 791,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 792,
                          "end_token": 792,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "SchedulableTriggerInputTypes.MONTHLY",
                          "start_token": 793,
                          "end_token": 795,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "SchedulableTriggerInputTypes",
                              "start_token": 793,
                              "end_token": 793,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "MONTHLY",
                              "start_token": 795,
                              "end_token": 795,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute']);\n    const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
                  "start_token": 797,
                  "end_token": 869,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute']);",
                      "start_token": 798,
                      "end_token": 810,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "validateDateComponentsInTrigger(trigger, ['day', 'hour', 'minute'])",
                          "start_token": 798,
                          "end_token": 809,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "validateDateComponentsInTrigger",
                              "start_token": 798,
                              "end_token": 798,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 800,
                              "end_token": 800,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "['day', 'hour', 'minute']",
                              "start_token": 802,
                              "end_token": 808,
                              "children": [
                                {
                                  "type": "StringLiteral",
                                  "label": "'day'",
                                  "start_token": 803,
                                  "end_token": 803,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'hour'",
                                  "start_token": 805,
                                  "end_token": 805,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'minute'",
                                  "start_token": 807,
                                  "end_token": 807,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };",
                      "start_token": 811,
                      "end_token": 849,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                          "start_token": 811,
                          "end_token": 848,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "result: NativeMonthlyTriggerInput = {\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                              "start_token": 812,
                              "end_token": 848,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "result",
                                  "start_token": 812,
                                  "end_token": 812,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "NativeMonthlyTriggerInput",
                                  "start_token": 814,
                                  "end_token": 814,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "NativeMonthlyTriggerInput",
                                      "start_token": 814,
                                      "end_token": 814,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n      type: 'monthly',\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                                  "start_token": 816,
                                  "end_token": 848,
                                  "children": [
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "type: 'monthly'",
                                      "start_token": 817,
                                      "end_token": 819,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 817,
                                          "end_token": 817,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'monthly'",
                                          "start_token": 819,
                                          "end_token": 819,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "day: trigger.day ?? placeholderDateComponentValue",
                                      "start_token": 821,
                                      "end_token": 828,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "day",
                                          "start_token": 821,
                                          "end_token": 821,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.day ?? placeholderDateComponentValue",
                                          "start_token": 823,
                                          "end_token": 828,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.day",
                                              "start_token": 823,
                                              "end_token": 825,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 823,
                                                  "end_token": 823,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "day",
                                                  "start_token": 825,
                                                  "end_token": 825,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 826,
                                              "end_token": 827,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 828,
                                              "end_token": 828,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "hour: trigger.hour ?? placeholderDateComponentValue",
                                      "start_token": 830,
                                      "end_token": 837,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hour",
                                          "start_token": 830,
                                          "end_token": 830,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.hour ?? placeholderDateComponentValue",
                                          "start_token": 832,
                                          "end_token": 837,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.hour",
                                              "start_token": 832,
                                              "end_token": 834,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 832,
                                                  "end_token": 832,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hour",
                                                  "start_token": 834,
                                                  "end_token": 834,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 835,
                                              "end_token": 836,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 837,
                                              "end_token": 837,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "minute: trigger.minute ?? placeholderDateComponentValue",
                                      "start_token": 839,
                                      "end_token": 846,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "minute",
                                          "start_token": 839,
                                          "end_token": 839,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.minute ?? placeholderDateComponentValue",
                                          "start_token": 841,
                                          "end_token": 846,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.minute",
                                              "start_token": 841,
                                              "end_token": 843,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 841,
                                                  "end_token": 841,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "minute",
                                                  "start_token": 843,
                                                  "end_token": 843,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 844,
                                              "end_token": 845,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 846,
                                              "end_token": 846,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }",
                      "start_token": 850,
                      "end_token": 865,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.channelId",
                          "start_token": 852,
                          "end_token": 854,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 852,
                              "end_token": 852,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "channelId",
                              "start_token": 854,
                              "end_token": 854,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      result.channelId = trigger.channelId;\n    }",
                          "start_token": 856,
                          "end_token": 865,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "result.channelId = trigger.channelId;",
                              "start_token": 857,
                              "end_token": 864,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "result.channelId = trigger.channelId",
                                  "start_token": 857,
                                  "end_token": 863,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "result.channelId",
                                      "start_token": 857,
                                      "end_token": 859,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "result",
                                          "start_token": 857,
                                          "end_token": 857,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 859,
                                          "end_token": 859,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 860,
                                      "end_token": 860,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "trigger.channelId",
                                      "start_token": 861,
                                      "end_token": 863,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 861,
                                          "end_token": 861,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 863,
                                          "end_token": 863,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return result;",
                      "start_token": 866,
                      "end_token": 868,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "result",
                          "start_token": 867,
                          "end_token": 867,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return undefined;",
              "start_token": 870,
              "end_token": 872,
              "children": [
                {
                  "type": "Identifier",
                  "label": "undefined",
                  "start_token": 871,
                  "end_token": 871,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseYearlyTrigger(\n  trigger: NotificationTriggerInput\n): NativeYearlyTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.YEARLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute']);\n    const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
      "start_token": 874,
      "end_token": 996,
      "children": [
        {
          "type": "Identifier",
          "label": "parseYearlyTrigger",
          "start_token": 875,
          "end_token": 875,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 877,
          "end_token": 879,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 877,
              "end_token": 877,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 879,
              "end_token": 879,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 879,
                  "end_token": 879,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeYearlyTriggerInput | undefined",
          "start_token": 882,
          "end_token": 884,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeYearlyTriggerInput",
              "start_token": 882,
              "end_token": 882,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeYearlyTriggerInput",
                  "start_token": 882,
                  "end_token": 882,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 884,
              "end_token": 884,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.YEARLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute']);\n    const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
          "start_token": 885,
          "end_token": 996,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.YEARLY\n  ) {\n    validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute']);\n    const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
              "start_token": 886,
              "end_token": 992,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.YEARLY",
                  "start_token": 888,
                  "end_token": 907,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger",
                      "start_token": 888,
                      "end_token": 899,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "trigger !== null &&\n    typeof trigger === 'object'",
                          "start_token": 888,
                          "end_token": 895,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "trigger !== null",
                              "start_token": 888,
                              "end_token": 890,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 888,
                                  "end_token": 888,
                                  "children": []
                                },
                                {
                                  "type": "ExclamationEqualsEqualsToken",
                                  "label": "!==",
                                  "start_token": 889,
                                  "end_token": 889,
                                  "children": []
                                },
                                {
                                  "type": "NullKeyword",
                                  "label": "null",
                                  "start_token": 890,
                                  "end_token": 890,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 891,
                              "end_token": 891,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "typeof trigger === 'object'",
                              "start_token": 892,
                              "end_token": 895,
                              "children": [
                                {
                                  "type": "TypeOfExpression",
                                  "label": "typeof trigger",
                                  "start_token": 892,
                                  "end_token": 893,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 893,
                                      "end_token": 893,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 894,
                                  "end_token": 894,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'object'",
                                  "start_token": 895,
                                  "end_token": 895,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 896,
                          "end_token": 896,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'type' in trigger",
                          "start_token": 897,
                          "end_token": 899,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'type'",
                              "start_token": 897,
                              "end_token": 897,
                              "children": []
                            },
                            {
                              "type": "InKeyword",
                              "label": "in",
                              "start_token": 898,
                              "end_token": 898,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 899,
                              "end_token": 899,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AmpersandAmpersandToken",
                      "label": "&&",
                      "start_token": 900,
                      "end_token": 900,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "trigger.type === SchedulableTriggerInputTypes.YEARLY",
                      "start_token": 901,
                      "end_token": 907,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.type",
                          "start_token": 901,
                          "end_token": 903,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 901,
                              "end_token": 901,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "type",
                              "start_token": 903,
                              "end_token": 903,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 904,
                          "end_token": 904,
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "SchedulableTriggerInputTypes.YEARLY",
                          "start_token": 905,
                          "end_token": 907,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "SchedulableTriggerInputTypes",
                              "start_token": 905,
                              "end_token": 905,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "YEARLY",
                              "start_token": 907,
                              "end_token": 907,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute']);\n    const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
                  "start_token": 909,
                  "end_token": 992,
                  "children": [
                    {
                      "type": "ExpressionStatement",
                      "label": "validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute']);",
                      "start_token": 910,
                      "end_token": 924,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "validateDateComponentsInTrigger(trigger, ['month', 'day', 'hour', 'minute'])",
                          "start_token": 910,
                          "end_token": 923,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "validateDateComponentsInTrigger",
                              "start_token": 910,
                              "end_token": 910,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 912,
                              "end_token": 912,
                              "children": []
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "['month', 'day', 'hour', 'minute']",
                              "start_token": 914,
                              "end_token": 922,
                              "children": [
                                {
                                  "type": "StringLiteral",
                                  "label": "'month'",
                                  "start_token": 915,
                                  "end_token": 915,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'day'",
                                  "start_token": 917,
                                  "end_token": 917,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'hour'",
                                  "start_token": 919,
                                  "end_token": 919,
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'minute'",
                                  "start_token": 921,
                                  "end_token": 921,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    };",
                      "start_token": 925,
                      "end_token": 972,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                          "start_token": 925,
                          "end_token": 971,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "result: NativeYearlyTriggerInput = {\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                              "start_token": 926,
                              "end_token": 971,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "result",
                                  "start_token": 926,
                                  "end_token": 926,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "NativeYearlyTriggerInput",
                                  "start_token": 928,
                                  "end_token": 928,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "NativeYearlyTriggerInput",
                                      "start_token": 928,
                                      "end_token": 928,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n      type: 'yearly',\n      month: trigger.month ?? placeholderDateComponentValue,\n      day: trigger.day ?? placeholderDateComponentValue,\n      hour: trigger.hour ?? placeholderDateComponentValue,\n      minute: trigger.minute ?? placeholderDateComponentValue,\n    }",
                                  "start_token": 930,
                                  "end_token": 971,
                                  "children": [
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "type: 'yearly'",
                                      "start_token": 931,
                                      "end_token": 933,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 931,
                                          "end_token": 931,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'yearly'",
                                          "start_token": 933,
                                          "end_token": 933,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "month: trigger.month ?? placeholderDateComponentValue",
                                      "start_token": 935,
                                      "end_token": 942,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "month",
                                          "start_token": 935,
                                          "end_token": 935,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.month ?? placeholderDateComponentValue",
                                          "start_token": 937,
                                          "end_token": 942,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.month",
                                              "start_token": 937,
                                              "end_token": 939,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 937,
                                                  "end_token": 937,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "month",
                                                  "start_token": 939,
                                                  "end_token": 939,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 940,
                                              "end_token": 941,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 942,
                                              "end_token": 942,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "day: trigger.day ?? placeholderDateComponentValue",
                                      "start_token": 944,
                                      "end_token": 951,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "day",
                                          "start_token": 944,
                                          "end_token": 944,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.day ?? placeholderDateComponentValue",
                                          "start_token": 946,
                                          "end_token": 951,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.day",
                                              "start_token": 946,
                                              "end_token": 948,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 946,
                                                  "end_token": 946,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "day",
                                                  "start_token": 948,
                                                  "end_token": 948,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 949,
                                              "end_token": 950,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 951,
                                              "end_token": 951,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "hour: trigger.hour ?? placeholderDateComponentValue",
                                      "start_token": 953,
                                      "end_token": 960,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hour",
                                          "start_token": 953,
                                          "end_token": 953,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.hour ?? placeholderDateComponentValue",
                                          "start_token": 955,
                                          "end_token": 960,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.hour",
                                              "start_token": 955,
                                              "end_token": 957,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 955,
                                                  "end_token": 955,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hour",
                                                  "start_token": 957,
                                                  "end_token": 957,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 958,
                                              "end_token": 959,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 960,
                                              "end_token": 960,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "minute: trigger.minute ?? placeholderDateComponentValue",
                                      "start_token": 962,
                                      "end_token": 969,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "minute",
                                          "start_token": 962,
                                          "end_token": 962,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.minute ?? placeholderDateComponentValue",
                                          "start_token": 964,
                                          "end_token": 969,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.minute",
                                              "start_token": 964,
                                              "end_token": 966,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 964,
                                                  "end_token": 964,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "minute",
                                                  "start_token": 966,
                                                  "end_token": 966,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 967,
                                              "end_token": 968,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "placeholderDateComponentValue",
                                              "start_token": 969,
                                              "end_token": 969,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }",
                      "start_token": 973,
                      "end_token": 988,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.channelId",
                          "start_token": 975,
                          "end_token": 977,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 975,
                              "end_token": 975,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "channelId",
                              "start_token": 977,
                              "end_token": 977,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      result.channelId = trigger.channelId;\n    }",
                          "start_token": 979,
                          "end_token": 988,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "result.channelId = trigger.channelId;",
                              "start_token": 980,
                              "end_token": 987,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "result.channelId = trigger.channelId",
                                  "start_token": 980,
                                  "end_token": 986,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "result.channelId",
                                      "start_token": 980,
                                      "end_token": 982,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "result",
                                          "start_token": 980,
                                          "end_token": 980,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 982,
                                          "end_token": 982,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 983,
                                      "end_token": 983,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "trigger.channelId",
                                      "start_token": 984,
                                      "end_token": 986,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 984,
                                          "end_token": 984,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 986,
                                          "end_token": 986,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return result;",
                      "start_token": 989,
                      "end_token": 991,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "result",
                          "start_token": 990,
                          "end_token": 990,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return undefined;",
              "start_token": 993,
              "end_token": 995,
              "children": [
                {
                  "type": "Identifier",
                  "label": "undefined",
                  "start_token": 994,
                  "end_token": 994,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function parseTimeIntervalTrigger(\n  trigger: NotificationTriggerInput\n): NativeTimeIntervalTriggerInput | undefined {\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL &&\n    'seconds' in trigger &&\n    typeof trigger.seconds === 'number'\n  ) {\n    const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
      "start_token": 997,
      "end_token": 1094,
      "children": [
        {
          "type": "Identifier",
          "label": "parseTimeIntervalTrigger",
          "start_token": 998,
          "end_token": 998,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NotificationTriggerInput",
          "start_token": 1000,
          "end_token": 1002,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 1000,
              "end_token": 1000,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NotificationTriggerInput",
              "start_token": 1002,
              "end_token": 1002,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NotificationTriggerInput",
                  "start_token": 1002,
                  "end_token": 1002,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "UnionType",
          "label": "NativeTimeIntervalTriggerInput | undefined",
          "start_token": 1005,
          "end_token": 1007,
          "children": [
            {
              "type": "TypeReference",
              "label": "NativeTimeIntervalTriggerInput",
              "start_token": 1005,
              "end_token": 1005,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NativeTimeIntervalTriggerInput",
                  "start_token": 1005,
                  "end_token": 1005,
                  "children": []
                }
              ]
            },
            {
              "type": "UndefinedKeyword",
              "label": "undefined",
              "start_token": 1007,
              "end_token": 1007,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL &&\n    'seconds' in trigger &&\n    typeof trigger.seconds === 'number'\n  ) {\n    const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }\n  return undefined;\n}",
          "start_token": 1008,
          "end_token": 1094,
          "children": [
            {
              "type": "IfStatement",
              "label": "if (\n    trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL &&\n    'seconds' in trigger &&\n    typeof trigger.seconds === 'number'\n  ) {\n    const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
              "start_token": 1009,
              "end_token": 1090,
              "children": [
                {
                  "type": "BinaryExpression",
                  "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL &&\n    'seconds' in trigger &&\n    typeof trigger.seconds === 'number'",
                  "start_token": 1011,
                  "end_token": 1041,
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL &&\n    'seconds' in trigger",
                      "start_token": 1011,
                      "end_token": 1034,
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger &&\n    trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL",
                          "start_token": 1011,
                          "end_token": 1030,
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "trigger !== null &&\n    typeof trigger === 'object' &&\n    'type' in trigger",
                              "start_token": 1011,
                              "end_token": 1022,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "trigger !== null &&\n    typeof trigger === 'object'",
                                  "start_token": 1011,
                                  "end_token": 1018,
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "trigger !== null",
                                      "start_token": 1011,
                                      "end_token": 1013,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 1011,
                                          "end_token": 1011,
                                          "children": []
                                        },
                                        {
                                          "type": "ExclamationEqualsEqualsToken",
                                          "label": "!==",
                                          "start_token": 1012,
                                          "end_token": 1012,
                                          "children": []
                                        },
                                        {
                                          "type": "NullKeyword",
                                          "label": "null",
                                          "start_token": 1013,
                                          "end_token": 1013,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AmpersandAmpersandToken",
                                      "label": "&&",
                                      "start_token": 1014,
                                      "end_token": 1014,
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "typeof trigger === 'object'",
                                      "start_token": 1015,
                                      "end_token": 1018,
                                      "children": [
                                        {
                                          "type": "TypeOfExpression",
                                          "label": "typeof trigger",
                                          "start_token": 1015,
                                          "end_token": 1016,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "trigger",
                                              "start_token": 1016,
                                              "end_token": 1016,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "EqualsEqualsEqualsToken",
                                          "label": "===",
                                          "start_token": 1017,
                                          "end_token": 1017,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'object'",
                                          "start_token": 1018,
                                          "end_token": 1018,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "start_token": 1019,
                                  "end_token": 1019,
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'type' in trigger",
                                  "start_token": 1020,
                                  "end_token": 1022,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'type'",
                                      "start_token": 1020,
                                      "end_token": 1020,
                                      "children": []
                                    },
                                    {
                                      "type": "InKeyword",
                                      "label": "in",
                                      "start_token": 1021,
                                      "end_token": 1021,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 1022,
                                      "end_token": 1022,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "start_token": 1023,
                              "end_token": 1023,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "trigger.type === SchedulableTriggerInputTypes.TIME_INTERVAL",
                              "start_token": 1024,
                              "end_token": 1030,
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "trigger.type",
                                  "start_token": 1024,
                                  "end_token": 1026,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "trigger",
                                      "start_token": 1024,
                                      "end_token": 1024,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "type",
                                      "start_token": 1026,
                                      "end_token": 1026,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "start_token": 1027,
                                  "end_token": 1027,
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "SchedulableTriggerInputTypes.TIME_INTERVAL",
                                  "start_token": 1028,
                                  "end_token": 1030,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "SchedulableTriggerInputTypes",
                                      "start_token": 1028,
                                      "end_token": 1028,
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TIME_INTERVAL",
                                      "start_token": 1030,
                                      "end_token": 1030,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "start_token": 1031,
                          "end_token": 1031,
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'seconds' in trigger",
                          "start_token": 1032,
                          "end_token": 1034,
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'seconds'",
                              "start_token": 1032,
                              "end_token": 1032,
                              "children": []
                            },
                            {
                              "type": "InKeyword",
                              "label": "in",
                              "start_token": 1033,
                              "end_token": 1033,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 1034,
                              "end_token": 1034,
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "AmpersandAmpersandToken",
                      "label": "&&",
                      "start_token": 1035,
                      "end_token": 1035,
                      "children": []
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "typeof trigger.seconds === 'number'",
                      "start_token": 1036,
                      "end_token": 1041,
                      "children": [
                        {
                          "type": "TypeOfExpression",
                          "label": "typeof trigger.seconds",
                          "start_token": 1036,
                          "end_token": 1039,
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "trigger.seconds",
                              "start_token": 1037,
                              "end_token": 1039,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "trigger",
                                  "start_token": 1037,
                                  "end_token": 1037,
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "seconds",
                                  "start_token": 1039,
                                  "end_token": 1039,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "start_token": 1040,
                          "end_token": 1040,
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'number'",
                          "start_token": 1041,
                          "end_token": 1041,
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "Block",
                  "label": "{\n    const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    };\n    if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }\n    return result;\n  }",
                  "start_token": 1043,
                  "end_token": 1090,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    };",
                      "start_token": 1044,
                      "end_token": 1070,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    }",
                          "start_token": 1044,
                          "end_token": 1069,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "result: NativeTimeIntervalTriggerInput = {\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    }",
                              "start_token": 1045,
                              "end_token": 1069,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "result",
                                  "start_token": 1045,
                                  "end_token": 1045,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "NativeTimeIntervalTriggerInput",
                                  "start_token": 1047,
                                  "end_token": 1047,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "NativeTimeIntervalTriggerInput",
                                      "start_token": 1047,
                                      "end_token": 1047,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectLiteralExpression",
                                  "label": "{\n      type: 'timeInterval',\n      seconds: trigger.seconds,\n      repeats: trigger.repeats ?? false,\n    }",
                                  "start_token": 1049,
                                  "end_token": 1069,
                                  "children": [
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "type: 'timeInterval'",
                                      "start_token": 1050,
                                      "end_token": 1052,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "type",
                                          "start_token": 1050,
                                          "end_token": 1050,
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'timeInterval'",
                                          "start_token": 1052,
                                          "end_token": 1052,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "seconds: trigger.seconds",
                                      "start_token": 1054,
                                      "end_token": 1058,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "seconds",
                                          "start_token": 1054,
                                          "end_token": 1054,
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "trigger.seconds",
                                          "start_token": 1056,
                                          "end_token": 1058,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "trigger",
                                              "start_token": 1056,
                                              "end_token": 1056,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "seconds",
                                              "start_token": 1058,
                                              "end_token": 1058,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAssignment",
                                      "label": "repeats: trigger.repeats ?? false",
                                      "start_token": 1060,
                                      "end_token": 1067,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "repeats",
                                          "start_token": 1060,
                                          "end_token": 1060,
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "trigger.repeats ?? false",
                                          "start_token": 1062,
                                          "end_token": 1067,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trigger.repeats",
                                              "start_token": 1062,
                                              "end_token": 1064,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trigger",
                                                  "start_token": 1062,
                                                  "end_token": 1062,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "repeats",
                                                  "start_token": 1064,
                                                  "end_token": 1064,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "start_token": 1065,
                                              "end_token": 1066,
                                              "children": []
                                            },
                                            {
                                              "type": "FalseKeyword",
                                              "label": "false",
                                              "start_token": 1067,
                                              "end_token": 1067,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (trigger.channelId) {\n      result.channelId = trigger.channelId;\n    }",
                      "start_token": 1071,
                      "end_token": 1086,
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "trigger.channelId",
                          "start_token": 1073,
                          "end_token": 1075,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 1073,
                              "end_token": 1073,
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "channelId",
                              "start_token": 1075,
                              "end_token": 1075,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      result.channelId = trigger.channelId;\n    }",
                          "start_token": 1077,
                          "end_token": 1086,
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "result.channelId = trigger.channelId;",
                              "start_token": 1078,
                              "end_token": 1085,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "result.channelId = trigger.channelId",
                                  "start_token": 1078,
                                  "end_token": 1084,
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "result.channelId",
                                      "start_token": 1078,
                                      "end_token": 1080,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "result",
                                          "start_token": 1078,
                                          "end_token": 1078,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 1080,
                                          "end_token": 1080,
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "start_token": 1081,
                                      "end_token": 1081,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "trigger.channelId",
                                      "start_token": 1082,
                                      "end_token": 1084,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "trigger",
                                          "start_token": 1082,
                                          "end_token": 1082,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "channelId",
                                          "start_token": 1084,
                                          "end_token": 1084,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "label": "return result;",
                      "start_token": 1087,
                      "end_token": 1089,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "result",
                          "start_token": 1088,
                          "end_token": 1088,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "label": "return undefined;",
              "start_token": 1091,
              "end_token": 1093,
              "children": [
                {
                  "type": "Identifier",
                  "label": "undefined",
                  "start_token": 1092,
                  "end_token": 1092,
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const placeholderDateComponentValue = -9999;",
      "start_token": 1096,
      "end_token": 1101,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const placeholderDateComponentValue = -9999",
          "start_token": 1096,
          "end_token": 1100,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "placeholderDateComponentValue = -9999",
              "start_token": 1097,
              "end_token": 1100,
              "children": [
                {
                  "type": "Identifier",
                  "label": "placeholderDateComponentValue",
                  "start_token": 1097,
                  "end_token": 1097,
                  "children": []
                },
                {
                  "type": "PrefixUnaryExpression",
                  "label": "-9999",
                  "start_token": 1099,
                  "end_token": 1100,
                  "children": [
                    {
                      "type": "FirstLiteralToken",
                      "label": "9999",
                      "start_token": 1100,
                      "end_token": 1100,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function validateDateComponentsInTrigger(\n  trigger: NonNullable<NotificationTriggerInput>,\n  components: readonly ValidTriggerDateComponents[]\n) {\n  const anyTriggerType = trigger as any;\n  components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });\n}",
      "start_token": 1102,
      "end_token": 1377,
      "children": [
        {
          "type": "Identifier",
          "label": "validateDateComponentsInTrigger",
          "start_token": 1103,
          "end_token": 1103,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "trigger: NonNullable<NotificationTriggerInput>",
          "start_token": 1105,
          "end_token": 1110,
          "children": [
            {
              "type": "Identifier",
              "label": "trigger",
              "start_token": 1105,
              "end_token": 1105,
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "NonNullable<NotificationTriggerInput>",
              "start_token": 1107,
              "end_token": 1110,
              "children": [
                {
                  "type": "Identifier",
                  "label": "NonNullable",
                  "start_token": 1107,
                  "end_token": 1107,
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "NotificationTriggerInput",
                  "start_token": 1109,
                  "end_token": 1109,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "NotificationTriggerInput",
                      "start_token": 1109,
                      "end_token": 1109,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "components: readonly ValidTriggerDateComponents[]",
          "start_token": 1112,
          "end_token": 1117,
          "children": [
            {
              "type": "Identifier",
              "label": "components",
              "start_token": 1112,
              "end_token": 1112,
              "children": []
            },
            {
              "type": "TypeOperator",
              "label": "readonly ValidTriggerDateComponents[]",
              "start_token": 1114,
              "end_token": 1117,
              "children": [
                {
                  "type": "ArrayType",
                  "label": "ValidTriggerDateComponents[]",
                  "start_token": 1115,
                  "end_token": 1117,
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "ValidTriggerDateComponents",
                      "start_token": 1115,
                      "end_token": 1115,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "ValidTriggerDateComponents",
                          "start_token": 1115,
                          "end_token": 1115,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  const anyTriggerType = trigger as any;\n  components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });\n}",
          "start_token": 1119,
          "end_token": 1377,
          "children": [
            {
              "type": "FirstStatement",
              "label": "const anyTriggerType = trigger as any;",
              "start_token": 1120,
              "end_token": 1126,
              "children": [
                {
                  "type": "VariableDeclarationList",
                  "label": "const anyTriggerType = trigger as any",
                  "start_token": 1120,
                  "end_token": 1125,
                  "children": [
                    {
                      "type": "VariableDeclaration",
                      "label": "anyTriggerType = trigger as any",
                      "start_token": 1121,
                      "end_token": 1125,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "anyTriggerType",
                          "start_token": 1121,
                          "end_token": 1121,
                          "children": []
                        },
                        {
                          "type": "AsExpression",
                          "label": "trigger as any",
                          "start_token": 1123,
                          "end_token": 1125,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "trigger",
                              "start_token": 1123,
                              "end_token": 1123,
                              "children": []
                            },
                            {
                              "type": "AnyKeyword",
                              "label": "any",
                              "start_token": 1125,
                              "end_token": 1125,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "ExpressionStatement",
              "label": "components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });",
              "start_token": 1127,
              "end_token": 1376,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  })",
                  "start_token": 1127,
                  "end_token": 1375,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "components.forEach",
                      "start_token": 1127,
                      "end_token": 1129,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "components",
                          "start_token": 1127,
                          "end_token": 1127,
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "forEach",
                          "start_token": 1129,
                          "end_token": 1129,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ArrowFunction",
                      "label": "(component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  }",
                      "start_token": 1131,
                      "end_token": 1374,
                      "children": [
                        {
                          "type": "Parameter",
                          "label": "component",
                          "start_token": 1132,
                          "end_token": 1132,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "component",
                              "start_token": 1132,
                              "end_token": 1132,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsGreaterThanToken",
                          "label": "=>",
                          "start_token": 1134,
                          "end_token": 1134,
                          "children": []
                        },
                        {
                          "type": "Block",
                          "label": "{\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  }",
                          "start_token": 1135,
                          "end_token": 1374,
                          "children": [
                            {
                              "type": "IfStatement",
                              "label": "if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }",
                              "start_token": 1136,
                              "end_token": 1153,
                              "children": [
                                {
                                  "type": "PrefixUnaryExpression",
                                  "label": "!(component in anyTriggerType)",
                                  "start_token": 1138,
                                  "end_token": 1143,
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(component in anyTriggerType)",
                                      "start_token": 1139,
                                      "end_token": 1143,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "component in anyTriggerType",
                                          "start_token": 1140,
                                          "end_token": 1142,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "component",
                                              "start_token": 1140,
                                              "end_token": 1140,
                                              "children": []
                                            },
                                            {
                                              "type": "InKeyword",
                                              "label": "in",
                                              "start_token": 1141,
                                              "end_token": 1141,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "anyTriggerType",
                                              "start_token": 1142,
                                              "end_token": 1142,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }",
                                  "start_token": 1145,
                                  "end_token": 1153,
                                  "children": [
                                    {
                                      "type": "ThrowStatement",
                                      "label": "throw new TypeError(`The ${component} parameter needs to be present`);",
                                      "start_token": 1146,
                                      "end_token": 1152,
                                      "children": [
                                        {
                                          "type": "NewExpression",
                                          "label": "new TypeError(`The ${component} parameter needs to be present`)",
                                          "start_token": 1147,
                                          "end_token": 1151,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "TypeError",
                                              "start_token": 1148,
                                              "end_token": 1148,
                                              "children": []
                                            },
                                            {
                                              "type": "TemplateExpression",
                                              "label": "`The ${component} parameter needs to be present`",
                                              "start_token": 1150,
                                              "end_token": 1150,
                                              "children": [
                                                {
                                                  "type": "TemplateHead",
                                                  "label": "`The ${",
                                                  "start_token": 1150,
                                                  "end_token": 1150,
                                                  "children": []
                                                },
                                                {
                                                  "type": "TemplateSpan",
                                                  "label": "component} parameter needs to be present`",
                                                  "start_token": 1150,
                                                  "end_token": 1150,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "component",
                                                      "start_token": 1150,
                                                      "end_token": 1150,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "LastTemplateToken",
                                                      "label": "} parameter needs to be present`",
                                                      "start_token": 1150,
                                                      "end_token": 1150,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "IfStatement",
                              "label": "if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }",
                              "start_token": 1154,
                              "end_token": 1172,
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "typeof anyTriggerType[component] !== 'number'",
                                  "start_token": 1156,
                                  "end_token": 1162,
                                  "children": [
                                    {
                                      "type": "TypeOfExpression",
                                      "label": "typeof anyTriggerType[component]",
                                      "start_token": 1156,
                                      "end_token": 1160,
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "anyTriggerType[component]",
                                          "start_token": 1157,
                                          "end_token": 1160,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "anyTriggerType",
                                              "start_token": 1157,
                                              "end_token": 1157,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "component",
                                              "start_token": 1159,
                                              "end_token": 1159,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExclamationEqualsEqualsToken",
                                      "label": "!==",
                                      "start_token": 1161,
                                      "end_token": 1161,
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'number'",
                                      "start_token": 1162,
                                      "end_token": 1162,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }",
                                  "start_token": 1164,
                                  "end_token": 1172,
                                  "children": [
                                    {
                                      "type": "ThrowStatement",
                                      "label": "throw new TypeError(`The ${component} parameter should be a number`);",
                                      "start_token": 1165,
                                      "end_token": 1171,
                                      "children": [
                                        {
                                          "type": "NewExpression",
                                          "label": "new TypeError(`The ${component} parameter should be a number`)",
                                          "start_token": 1166,
                                          "end_token": 1170,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "TypeError",
                                              "start_token": 1167,
                                              "end_token": 1167,
                                              "children": []
                                            },
                                            {
                                              "type": "TemplateExpression",
                                              "label": "`The ${component} parameter should be a number`",
                                              "start_token": 1169,
                                              "end_token": 1169,
                                              "children": [
                                                {
                                                  "type": "TemplateHead",
                                                  "label": "`The ${",
                                                  "start_token": 1169,
                                                  "end_token": 1169,
                                                  "children": []
                                                },
                                                {
                                                  "type": "TemplateSpan",
                                                  "label": "component} parameter should be a number`",
                                                  "start_token": 1169,
                                                  "end_token": 1169,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "component",
                                                      "start_token": 1169,
                                                      "end_token": 1169,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "LastTemplateToken",
                                                      "label": "} parameter should be a number`",
                                                      "start_token": 1169,
                                                      "end_token": 1169,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "SwitchStatement",
                              "label": "switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }",
                              "start_token": 1173,
                              "end_token": 1373,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "component",
                                  "start_token": 1175,
                                  "end_token": 1175,
                                  "children": []
                                },
                                {
                                  "type": "CaseBlock",
                                  "label": "{\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }",
                                  "start_token": 1177,
                                  "end_token": 1373,
                                  "children": [
                                    {
                                      "type": "CaseClause",
                                      "label": "case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }",
                                      "start_token": 1178,
                                      "end_token": 1210,
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'month'",
                                          "start_token": 1179,
                                          "end_token": 1179,
                                          "children": []
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }",
                                          "start_token": 1181,
                                          "end_token": 1210,
                                          "children": [
                                            {
                                              "type": "FirstStatement",
                                              "label": "const { month } = anyTriggerType;",
                                              "start_token": 1182,
                                              "end_token": 1188,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const { month } = anyTriggerType",
                                                  "start_token": 1182,
                                                  "end_token": 1187,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "{ month } = anyTriggerType",
                                                      "start_token": 1183,
                                                      "end_token": 1187,
                                                      "children": [
                                                        {
                                                          "type": "ObjectBindingPattern",
                                                          "label": "{ month }",
                                                          "start_token": 1183,
                                                          "end_token": 1185,
                                                          "children": [
                                                            {
                                                              "type": "BindingElement",
                                                              "label": "month",
                                                              "start_token": 1184,
                                                              "end_token": 1184,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "month",
                                                                  "start_token": 1184,
                                                                  "end_token": 1184,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "anyTriggerType",
                                                          "start_token": 1187,
                                                          "end_token": 1187,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "IfStatement",
                                              "label": "if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }",
                                              "start_token": 1189,
                                              "end_token": 1207,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "month < 0 || month > 11",
                                                  "start_token": 1191,
                                                  "end_token": 1197,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "month < 0",
                                                      "start_token": 1191,
                                                      "end_token": 1193,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "month",
                                                          "start_token": 1191,
                                                          "end_token": 1191,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstBinaryOperator",
                                                          "label": "<",
                                                          "start_token": 1192,
                                                          "end_token": 1192,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "start_token": 1193,
                                                          "end_token": 1193,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BarBarToken",
                                                      "label": "||",
                                                      "start_token": 1194,
                                                      "end_token": 1194,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "month > 11",
                                                      "start_token": 1195,
                                                      "end_token": 1197,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "month",
                                                          "start_token": 1195,
                                                          "end_token": 1195,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "GreaterThanToken",
                                                          "label": ">",
                                                          "start_token": 1196,
                                                          "end_token": 1196,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "11",
                                                          "start_token": 1197,
                                                          "end_token": 1197,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }",
                                                  "start_token": 1199,
                                                  "end_token": 1207,
                                                  "children": [
                                                    {
                                                      "type": "ThrowStatement",
                                                      "label": "throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);",
                                                      "start_token": 1200,
                                                      "end_token": 1206,
                                                      "children": [
                                                        {
                                                          "type": "NewExpression",
                                                          "label": "new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`)",
                                                          "start_token": 1201,
                                                          "end_token": 1205,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "RangeError",
                                                              "start_token": 1202,
                                                              "end_token": 1202,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateExpression",
                                                              "label": "`The month parameter needs to be between 0 and 11. Found: ${month}`",
                                                              "start_token": 1204,
                                                              "end_token": 1204,
                                                              "children": [
                                                                {
                                                                  "type": "TemplateHead",
                                                                  "label": "`The month parameter needs to be between 0 and 11. Found: ${",
                                                                  "start_token": 1204,
                                                                  "end_token": 1204,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "month}`",
                                                                  "start_token": 1204,
                                                                  "end_token": 1204,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "month",
                                                                      "start_token": 1204,
                                                                      "end_token": 1204,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "LastTemplateToken",
                                                                      "label": "}`",
                                                                      "start_token": 1204,
                                                                      "end_token": 1204,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": "break;",
                                              "start_token": 1208,
                                              "end_token": 1209,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CaseClause",
                                      "label": "case 'day': {\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }",
                                      "start_token": 1211,
                                      "end_token": 1273,
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'day'",
                                          "start_token": 1212,
                                          "end_token": 1212,
                                          "children": []
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        const day = anyTriggerType.day;\n        const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }",
                                          "start_token": 1214,
                                          "end_token": 1273,
                                          "children": [
                                            {
                                              "type": "FirstStatement",
                                              "label": "const day = anyTriggerType.day;",
                                              "start_token": 1215,
                                              "end_token": 1221,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const day = anyTriggerType.day",
                                                  "start_token": 1215,
                                                  "end_token": 1220,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "day = anyTriggerType.day",
                                                      "start_token": 1216,
                                                      "end_token": 1220,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "day",
                                                          "start_token": 1216,
                                                          "end_token": 1216,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "anyTriggerType.day",
                                                          "start_token": 1218,
                                                          "end_token": 1220,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "anyTriggerType",
                                                              "start_token": 1218,
                                                              "end_token": 1218,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "day",
                                                              "start_token": 1220,
                                                              "end_token": 1220,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstStatement",
                                              "label": "const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth();",
                                              "start_token": 1222,
                                              "end_token": 1243,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth()",
                                                  "start_token": 1222,
                                                  "end_token": 1242,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "month =\n          anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth()",
                                                      "start_token": 1223,
                                                      "end_token": 1242,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "month",
                                                          "start_token": 1223,
                                                          "end_token": 1223,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "ConditionalExpression",
                                                          "label": "anyTriggerType.month !== undefined ? anyTriggerType.month : new Date().getMonth()",
                                                          "start_token": 1225,
                                                          "end_token": 1242,
                                                          "children": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "label": "anyTriggerType.month !== undefined",
                                                              "start_token": 1225,
                                                              "end_token": 1229,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "anyTriggerType.month",
                                                                  "start_token": 1225,
                                                                  "end_token": 1227,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "anyTriggerType",
                                                                      "start_token": 1225,
                                                                      "end_token": 1225,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "month",
                                                                      "start_token": 1227,
                                                                      "end_token": 1227,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ExclamationEqualsEqualsToken",
                                                                  "label": "!==",
                                                                  "start_token": 1228,
                                                                  "end_token": 1228,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "undefined",
                                                                  "start_token": 1229,
                                                                  "end_token": 1229,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "QuestionToken",
                                                              "label": "?",
                                                              "start_token": 1230,
                                                              "end_token": 1230,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "anyTriggerType.month",
                                                              "start_token": 1231,
                                                              "end_token": 1233,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "anyTriggerType",
                                                                  "start_token": 1231,
                                                                  "end_token": 1231,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "month",
                                                                  "start_token": 1233,
                                                                  "end_token": 1233,
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ColonToken",
                                                              "label": ":",
                                                              "start_token": 1234,
                                                              "end_token": 1234,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "new Date().getMonth()",
                                                              "start_token": 1235,
                                                              "end_token": 1242,
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "new Date().getMonth",
                                                                  "start_token": 1235,
                                                                  "end_token": 1240,
                                                                  "children": [
                                                                    {
                                                                      "type": "NewExpression",
                                                                      "label": "new Date()",
                                                                      "start_token": 1235,
                                                                      "end_token": 1238,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "Date",
                                                                          "start_token": 1236,
                                                                          "end_token": 1236,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "getMonth",
                                                                      "start_token": 1240,
                                                                      "end_token": 1240,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstStatement",
                                              "label": "const daysInGivenMonth = daysInMonth(month);",
                                              "start_token": 1244,
                                              "end_token": 1251,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const daysInGivenMonth = daysInMonth(month)",
                                                  "start_token": 1244,
                                                  "end_token": 1250,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "daysInGivenMonth = daysInMonth(month)",
                                                      "start_token": 1245,
                                                      "end_token": 1250,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "daysInGivenMonth",
                                                          "start_token": 1245,
                                                          "end_token": 1245,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "daysInMonth(month)",
                                                          "start_token": 1247,
                                                          "end_token": 1250,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "daysInMonth",
                                                              "start_token": 1247,
                                                              "end_token": 1247,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "month",
                                                              "start_token": 1249,
                                                              "end_token": 1249,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "IfStatement",
                                              "label": "if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }",
                                              "start_token": 1252,
                                              "end_token": 1270,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "day < 1 || day > daysInGivenMonth",
                                                  "start_token": 1254,
                                                  "end_token": 1260,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "day < 1",
                                                      "start_token": 1254,
                                                      "end_token": 1256,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "day",
                                                          "start_token": 1254,
                                                          "end_token": 1254,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstBinaryOperator",
                                                          "label": "<",
                                                          "start_token": 1255,
                                                          "end_token": 1255,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "1",
                                                          "start_token": 1256,
                                                          "end_token": 1256,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BarBarToken",
                                                      "label": "||",
                                                      "start_token": 1257,
                                                      "end_token": 1257,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "day > daysInGivenMonth",
                                                      "start_token": 1258,
                                                      "end_token": 1260,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "day",
                                                          "start_token": 1258,
                                                          "end_token": 1258,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "GreaterThanToken",
                                                          "label": ">",
                                                          "start_token": 1259,
                                                          "end_token": 1259,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "daysInGivenMonth",
                                                          "start_token": 1260,
                                                          "end_token": 1260,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }",
                                                  "start_token": 1262,
                                                  "end_token": 1270,
                                                  "children": [
                                                    {
                                                      "type": "ThrowStatement",
                                                      "label": "throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );",
                                                      "start_token": 1263,
                                                      "end_token": 1269,
                                                      "children": [
                                                        {
                                                          "type": "NewExpression",
                                                          "label": "new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          )",
                                                          "start_token": 1264,
                                                          "end_token": 1268,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "RangeError",
                                                              "start_token": 1265,
                                                              "end_token": 1265,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateExpression",
                                                              "label": "`The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`",
                                                              "start_token": 1267,
                                                              "end_token": 1267,
                                                              "children": [
                                                                {
                                                                  "type": "TemplateHead",
                                                                  "label": "`The day parameter for month ${",
                                                                  "start_token": 1267,
                                                                  "end_token": 1267,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "month} must be between 1 and ${",
                                                                  "start_token": 1267,
                                                                  "end_token": 1267,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "month",
                                                                      "start_token": 1267,
                                                                      "end_token": 1267,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "TemplateMiddle",
                                                                      "label": "} must be between 1 and ${",
                                                                      "start_token": 1267,
                                                                      "end_token": 1267,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "daysInGivenMonth}. Found: ${",
                                                                  "start_token": 1267,
                                                                  "end_token": 1267,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "daysInGivenMonth",
                                                                      "start_token": 1267,
                                                                      "end_token": 1267,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "TemplateMiddle",
                                                                      "label": "}. Found: ${",
                                                                      "start_token": 1267,
                                                                      "end_token": 1267,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "day}`",
                                                                  "start_token": 1267,
                                                                  "end_token": 1267,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "day",
                                                                      "start_token": 1267,
                                                                      "end_token": 1267,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "LastTemplateToken",
                                                                      "label": "}`",
                                                                      "start_token": 1267,
                                                                      "end_token": 1267,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": "break;",
                                              "start_token": 1271,
                                              "end_token": 1272,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CaseClause",
                                      "label": "case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }",
                                      "start_token": 1274,
                                      "end_token": 1306,
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'weekday'",
                                          "start_token": 1275,
                                          "end_token": 1275,
                                          "children": []
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }",
                                          "start_token": 1277,
                                          "end_token": 1306,
                                          "children": [
                                            {
                                              "type": "FirstStatement",
                                              "label": "const { weekday } = anyTriggerType;",
                                              "start_token": 1278,
                                              "end_token": 1284,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const { weekday } = anyTriggerType",
                                                  "start_token": 1278,
                                                  "end_token": 1283,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "{ weekday } = anyTriggerType",
                                                      "start_token": 1279,
                                                      "end_token": 1283,
                                                      "children": [
                                                        {
                                                          "type": "ObjectBindingPattern",
                                                          "label": "{ weekday }",
                                                          "start_token": 1279,
                                                          "end_token": 1281,
                                                          "children": [
                                                            {
                                                              "type": "BindingElement",
                                                              "label": "weekday",
                                                              "start_token": 1280,
                                                              "end_token": 1280,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "weekday",
                                                                  "start_token": 1280,
                                                                  "end_token": 1280,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "anyTriggerType",
                                                          "start_token": 1283,
                                                          "end_token": 1283,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "IfStatement",
                                              "label": "if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }",
                                              "start_token": 1285,
                                              "end_token": 1303,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "weekday < 1 || weekday > 7",
                                                  "start_token": 1287,
                                                  "end_token": 1293,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "weekday < 1",
                                                      "start_token": 1287,
                                                      "end_token": 1289,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "weekday",
                                                          "start_token": 1287,
                                                          "end_token": 1287,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstBinaryOperator",
                                                          "label": "<",
                                                          "start_token": 1288,
                                                          "end_token": 1288,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "1",
                                                          "start_token": 1289,
                                                          "end_token": 1289,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BarBarToken",
                                                      "label": "||",
                                                      "start_token": 1290,
                                                      "end_token": 1290,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "weekday > 7",
                                                      "start_token": 1291,
                                                      "end_token": 1293,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "weekday",
                                                          "start_token": 1291,
                                                          "end_token": 1291,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "GreaterThanToken",
                                                          "label": ">",
                                                          "start_token": 1292,
                                                          "end_token": 1292,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "7",
                                                          "start_token": 1293,
                                                          "end_token": 1293,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }",
                                                  "start_token": 1295,
                                                  "end_token": 1303,
                                                  "children": [
                                                    {
                                                      "type": "ThrowStatement",
                                                      "label": "throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );",
                                                      "start_token": 1296,
                                                      "end_token": 1302,
                                                      "children": [
                                                        {
                                                          "type": "NewExpression",
                                                          "label": "new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          )",
                                                          "start_token": 1297,
                                                          "end_token": 1301,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "RangeError",
                                                              "start_token": 1298,
                                                              "end_token": 1298,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateExpression",
                                                              "label": "`The weekday parameter needs to be between 1 and 7. Found: ${weekday}`",
                                                              "start_token": 1300,
                                                              "end_token": 1300,
                                                              "children": [
                                                                {
                                                                  "type": "TemplateHead",
                                                                  "label": "`The weekday parameter needs to be between 1 and 7. Found: ${",
                                                                  "start_token": 1300,
                                                                  "end_token": 1300,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "weekday}`",
                                                                  "start_token": 1300,
                                                                  "end_token": 1300,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "weekday",
                                                                      "start_token": 1300,
                                                                      "end_token": 1300,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "LastTemplateToken",
                                                                      "label": "}`",
                                                                      "start_token": 1300,
                                                                      "end_token": 1300,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": "break;",
                                              "start_token": 1304,
                                              "end_token": 1305,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CaseClause",
                                      "label": "case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }",
                                      "start_token": 1307,
                                      "end_token": 1339,
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'hour'",
                                          "start_token": 1308,
                                          "end_token": 1308,
                                          "children": []
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }",
                                          "start_token": 1310,
                                          "end_token": 1339,
                                          "children": [
                                            {
                                              "type": "FirstStatement",
                                              "label": "const { hour } = anyTriggerType;",
                                              "start_token": 1311,
                                              "end_token": 1317,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const { hour } = anyTriggerType",
                                                  "start_token": 1311,
                                                  "end_token": 1316,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "{ hour } = anyTriggerType",
                                                      "start_token": 1312,
                                                      "end_token": 1316,
                                                      "children": [
                                                        {
                                                          "type": "ObjectBindingPattern",
                                                          "label": "{ hour }",
                                                          "start_token": 1312,
                                                          "end_token": 1314,
                                                          "children": [
                                                            {
                                                              "type": "BindingElement",
                                                              "label": "hour",
                                                              "start_token": 1313,
                                                              "end_token": 1313,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hour",
                                                                  "start_token": 1313,
                                                                  "end_token": 1313,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "anyTriggerType",
                                                          "start_token": 1316,
                                                          "end_token": 1316,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "IfStatement",
                                              "label": "if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }",
                                              "start_token": 1318,
                                              "end_token": 1336,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "hour < 0 || hour > 23",
                                                  "start_token": 1320,
                                                  "end_token": 1326,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "hour < 0",
                                                      "start_token": 1320,
                                                      "end_token": 1322,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "hour",
                                                          "start_token": 1320,
                                                          "end_token": 1320,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstBinaryOperator",
                                                          "label": "<",
                                                          "start_token": 1321,
                                                          "end_token": 1321,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "start_token": 1322,
                                                          "end_token": 1322,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BarBarToken",
                                                      "label": "||",
                                                      "start_token": 1323,
                                                      "end_token": 1323,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "hour > 23",
                                                      "start_token": 1324,
                                                      "end_token": 1326,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "hour",
                                                          "start_token": 1324,
                                                          "end_token": 1324,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "GreaterThanToken",
                                                          "label": ">",
                                                          "start_token": 1325,
                                                          "end_token": 1325,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "23",
                                                          "start_token": 1326,
                                                          "end_token": 1326,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }",
                                                  "start_token": 1328,
                                                  "end_token": 1336,
                                                  "children": [
                                                    {
                                                      "type": "ThrowStatement",
                                                      "label": "throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);",
                                                      "start_token": 1329,
                                                      "end_token": 1335,
                                                      "children": [
                                                        {
                                                          "type": "NewExpression",
                                                          "label": "new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`)",
                                                          "start_token": 1330,
                                                          "end_token": 1334,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "RangeError",
                                                              "start_token": 1331,
                                                              "end_token": 1331,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateExpression",
                                                              "label": "`The hour parameter needs to be between 0 and 23. Found: ${hour}`",
                                                              "start_token": 1333,
                                                              "end_token": 1333,
                                                              "children": [
                                                                {
                                                                  "type": "TemplateHead",
                                                                  "label": "`The hour parameter needs to be between 0 and 23. Found: ${",
                                                                  "start_token": 1333,
                                                                  "end_token": 1333,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "hour}`",
                                                                  "start_token": 1333,
                                                                  "end_token": 1333,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "hour",
                                                                      "start_token": 1333,
                                                                      "end_token": 1333,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "LastTemplateToken",
                                                                      "label": "}`",
                                                                      "start_token": 1333,
                                                                      "end_token": 1333,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": "break;",
                                              "start_token": 1337,
                                              "end_token": 1338,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "CaseClause",
                                      "label": "case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }",
                                      "start_token": 1340,
                                      "end_token": 1372,
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'minute'",
                                          "start_token": 1341,
                                          "end_token": 1341,
                                          "children": []
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }",
                                          "start_token": 1343,
                                          "end_token": 1372,
                                          "children": [
                                            {
                                              "type": "FirstStatement",
                                              "label": "const { minute } = anyTriggerType;",
                                              "start_token": 1344,
                                              "end_token": 1350,
                                              "children": [
                                                {
                                                  "type": "VariableDeclarationList",
                                                  "label": "const { minute } = anyTriggerType",
                                                  "start_token": 1344,
                                                  "end_token": 1349,
                                                  "children": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "label": "{ minute } = anyTriggerType",
                                                      "start_token": 1345,
                                                      "end_token": 1349,
                                                      "children": [
                                                        {
                                                          "type": "ObjectBindingPattern",
                                                          "label": "{ minute }",
                                                          "start_token": 1345,
                                                          "end_token": 1347,
                                                          "children": [
                                                            {
                                                              "type": "BindingElement",
                                                              "label": "minute",
                                                              "start_token": 1346,
                                                              "end_token": 1346,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "minute",
                                                                  "start_token": 1346,
                                                                  "end_token": 1346,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "anyTriggerType",
                                                          "start_token": 1349,
                                                          "end_token": 1349,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "IfStatement",
                                              "label": "if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }",
                                              "start_token": 1351,
                                              "end_token": 1369,
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "minute < 0 || minute > 59",
                                                  "start_token": 1353,
                                                  "end_token": 1359,
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "minute < 0",
                                                      "start_token": 1353,
                                                      "end_token": 1355,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "minute",
                                                          "start_token": 1353,
                                                          "end_token": 1353,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstBinaryOperator",
                                                          "label": "<",
                                                          "start_token": 1354,
                                                          "end_token": 1354,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "start_token": 1355,
                                                          "end_token": 1355,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BarBarToken",
                                                      "label": "||",
                                                      "start_token": 1356,
                                                      "end_token": 1356,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "minute > 59",
                                                      "start_token": 1357,
                                                      "end_token": 1359,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "minute",
                                                          "start_token": 1357,
                                                          "end_token": 1357,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "GreaterThanToken",
                                                          "label": ">",
                                                          "start_token": 1358,
                                                          "end_token": 1358,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "59",
                                                          "start_token": 1359,
                                                          "end_token": 1359,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Block",
                                                  "label": "{\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }",
                                                  "start_token": 1361,
                                                  "end_token": 1369,
                                                  "children": [
                                                    {
                                                      "type": "ThrowStatement",
                                                      "label": "throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );",
                                                      "start_token": 1362,
                                                      "end_token": 1368,
                                                      "children": [
                                                        {
                                                          "type": "NewExpression",
                                                          "label": "new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          )",
                                                          "start_token": 1363,
                                                          "end_token": 1367,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "RangeError",
                                                              "start_token": 1364,
                                                              "end_token": 1364,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateExpression",
                                                              "label": "`The minute parameter needs to be between 0 and 59. Found: ${minute}`",
                                                              "start_token": 1366,
                                                              "end_token": 1366,
                                                              "children": [
                                                                {
                                                                  "type": "TemplateHead",
                                                                  "label": "`The minute parameter needs to be between 0 and 59. Found: ${",
                                                                  "start_token": 1366,
                                                                  "end_token": 1366,
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "TemplateSpan",
                                                                  "label": "minute}`",
                                                                  "start_token": 1366,
                                                                  "end_token": 1366,
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "minute",
                                                                      "start_token": 1366,
                                                                      "end_token": 1366,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "LastTemplateToken",
                                                                      "label": "}`",
                                                                      "start_token": 1366,
                                                                      "end_token": 1366,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": "break;",
                                              "start_token": 1370,
                                              "end_token": 1371,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "label": "function daysInMonth(month: number = 0, year?: number) {\n  return new Date(year ?? 2000, month + 1, 0).getDate();\n}",
      "start_token": 1378,
      "end_token": 1413,
      "children": [
        {
          "type": "Identifier",
          "label": "daysInMonth",
          "start_token": 1379,
          "end_token": 1379,
          "children": []
        },
        {
          "type": "Parameter",
          "label": "month: number = 0",
          "start_token": 1381,
          "end_token": 1385,
          "children": [
            {
              "type": "Identifier",
              "label": "month",
              "start_token": 1381,
              "end_token": 1381,
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "start_token": 1383,
              "end_token": 1383,
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "0",
              "start_token": 1385,
              "end_token": 1385,
              "children": []
            }
          ]
        },
        {
          "type": "Parameter",
          "label": "year?: number",
          "start_token": 1387,
          "end_token": 1390,
          "children": [
            {
              "type": "Identifier",
              "label": "year",
              "start_token": 1387,
              "end_token": 1387,
              "children": []
            },
            {
              "type": "QuestionToken",
              "label": "?",
              "start_token": 1388,
              "end_token": 1388,
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "start_token": 1390,
              "end_token": 1390,
              "children": []
            }
          ]
        },
        {
          "type": "Block",
          "label": "{\n  return new Date(year ?? 2000, month + 1, 0).getDate();\n}",
          "start_token": 1392,
          "end_token": 1413,
          "children": [
            {
              "type": "ReturnStatement",
              "label": "return new Date(year ?? 2000, month + 1, 0).getDate();",
              "start_token": 1393,
              "end_token": 1412,
              "children": [
                {
                  "type": "CallExpression",
                  "label": "new Date(year ?? 2000, month + 1, 0).getDate()",
                  "start_token": 1394,
                  "end_token": 1411,
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "new Date(year ?? 2000, month + 1, 0).getDate",
                      "start_token": 1394,
                      "end_token": 1409,
                      "children": [
                        {
                          "type": "NewExpression",
                          "label": "new Date(year ?? 2000, month + 1, 0)",
                          "start_token": 1394,
                          "end_token": 1407,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Date",
                              "start_token": 1395,
                              "end_token": 1395,
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "year ?? 2000",
                              "start_token": 1397,
                              "end_token": 1400,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "year",
                                  "start_token": 1397,
                                  "end_token": 1397,
                                  "children": []
                                },
                                {
                                  "type": "QuestionQuestionToken",
                                  "label": "??",
                                  "start_token": 1398,
                                  "end_token": 1399,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "2000",
                                  "start_token": 1400,
                                  "end_token": 1400,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "month + 1",
                              "start_token": 1402,
                              "end_token": 1404,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "month",
                                  "start_token": 1402,
                                  "end_token": 1402,
                                  "children": []
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "start_token": 1403,
                                  "end_token": 1403,
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "start_token": 1404,
                                  "end_token": 1404,
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "start_token": 1406,
                              "end_token": 1406,
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "getDate",
                          "start_token": 1409,
                          "end_token": 1409,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}