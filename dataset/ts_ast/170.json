{
  "type": "SourceFile",
  "label": "import type { Completion, TernCompletionResult } from \"./CodemirrorTernService\";\nexport const getCompletionsForKeyword = (\n  completion: Completion<TernCompletionResult>,\n  cursorHorizontalPos: number,\n) => {\n  const keywordName = completion.text;\n  // indentation needs to be positive number\n  const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;\n  const indentationSpace = \" \".repeat(indentation);\n  const completions = [];\n  switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }\n  return completions;\n};",
  "start_token": 0,
  "end_token": 753,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import type { Completion, TernCompletionResult } from \"./CodemirrorTernService\";",
      "start_token": 0,
      "end_token": 9,
      "children": [
        {
          "type": "ImportClause",
          "label": "type { Completion, TernCompletionResult }",
          "start_token": 1,
          "end_token": 6,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Completion, TernCompletionResult }",
              "start_token": 2,
              "end_token": 6,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Completion",
                  "start_token": 3,
                  "end_token": 3,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Completion",
                      "start_token": 3,
                      "end_token": 3,
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "TernCompletionResult",
                  "start_token": 5,
                  "end_token": 5,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TernCompletionResult",
                      "start_token": 5,
                      "end_token": 5,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "\"./CodemirrorTernService\"",
          "start_token": 8,
          "end_token": 8,
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "export const getCompletionsForKeyword = (\n  completion: Completion<TernCompletionResult>,\n  cursorHorizontalPos: number,\n) => {\n  const keywordName = completion.text;\n  // indentation needs to be positive number\n  const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;\n  const indentationSpace = \" \".repeat(indentation);\n  const completions = [];\n  switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }\n  return completions;\n};",
      "start_token": 10,
      "end_token": 753,
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "start_token": 10,
          "end_token": 10,
          "children": []
        },
        {
          "type": "VariableDeclarationList",
          "label": "const getCompletionsForKeyword = (\n  completion: Completion<TernCompletionResult>,\n  cursorHorizontalPos: number,\n) => {\n  const keywordName = completion.text;\n  // indentation needs to be positive number\n  const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;\n  const indentationSpace = \" \".repeat(indentation);\n  const completions = [];\n  switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }\n  return completions;\n}",
          "start_token": 11,
          "end_token": 752,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "getCompletionsForKeyword = (\n  completion: Completion<TernCompletionResult>,\n  cursorHorizontalPos: number,\n) => {\n  const keywordName = completion.text;\n  // indentation needs to be positive number\n  const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;\n  const indentationSpace = \" \".repeat(indentation);\n  const completions = [];\n  switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }\n  return completions;\n}",
              "start_token": 12,
              "end_token": 752,
              "children": [
                {
                  "type": "Identifier",
                  "label": "getCompletionsForKeyword",
                  "start_token": 12,
                  "end_token": 12,
                  "children": []
                },
                {
                  "type": "ArrowFunction",
                  "label": "(\n  completion: Completion<TernCompletionResult>,\n  cursorHorizontalPos: number,\n) => {\n  const keywordName = completion.text;\n  // indentation needs to be positive number\n  const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;\n  const indentationSpace = \" \".repeat(indentation);\n  const completions = [];\n  switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }\n  return completions;\n}",
                  "start_token": 14,
                  "end_token": 752,
                  "children": [
                    {
                      "type": "Parameter",
                      "label": "completion: Completion<TernCompletionResult>",
                      "start_token": 15,
                      "end_token": 20,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "completion",
                          "start_token": 15,
                          "end_token": 15,
                          "children": []
                        },
                        {
                          "type": "TypeReference",
                          "label": "Completion<TernCompletionResult>",
                          "start_token": 17,
                          "end_token": 20,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Completion",
                              "start_token": 17,
                              "end_token": 17,
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "TernCompletionResult",
                              "start_token": 19,
                              "end_token": 19,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "TernCompletionResult",
                                  "start_token": 19,
                                  "end_token": 19,
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Parameter",
                      "label": "cursorHorizontalPos: number",
                      "start_token": 22,
                      "end_token": 24,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "cursorHorizontalPos",
                          "start_token": 22,
                          "end_token": 22,
                          "children": []
                        },
                        {
                          "type": "NumberKeyword",
                          "label": "number",
                          "start_token": 24,
                          "end_token": 24,
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "EqualsGreaterThanToken",
                      "label": "=>",
                      "start_token": 27,
                      "end_token": 27,
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n  const keywordName = completion.text;\n  // indentation needs to be positive number\n  const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;\n  const indentationSpace = \" \".repeat(indentation);\n  const completions = [];\n  switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }\n  return completions;\n}",
                      "start_token": 28,
                      "end_token": 752,
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "const keywordName = completion.text;",
                          "start_token": 29,
                          "end_token": 35,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const keywordName = completion.text",
                              "start_token": 29,
                              "end_token": 34,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "keywordName = completion.text",
                                  "start_token": 30,
                                  "end_token": 34,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "keywordName",
                                      "start_token": 30,
                                      "end_token": 30,
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "completion.text",
                                      "start_token": 32,
                                      "end_token": 34,
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "completion",
                                          "start_token": 32,
                                          "end_token": 32,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "text",
                                          "start_token": 34,
                                          "end_token": 34,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos;",
                          "start_token": 37,
                          "end_token": 47,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos",
                              "start_token": 37,
                              "end_token": 46,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "indentation = cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos",
                                  "start_token": 38,
                                  "end_token": 46,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "indentation",
                                      "start_token": 38,
                                      "end_token": 38,
                                      "children": []
                                    },
                                    {
                                      "type": "ConditionalExpression",
                                      "label": "cursorHorizontalPos < 0 ? 0 : cursorHorizontalPos",
                                      "start_token": 40,
                                      "end_token": 46,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "cursorHorizontalPos < 0",
                                          "start_token": 40,
                                          "end_token": 42,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "cursorHorizontalPos",
                                              "start_token": 40,
                                              "end_token": 40,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstBinaryOperator",
                                              "label": "<",
                                              "start_token": 41,
                                              "end_token": 41,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "start_token": 42,
                                              "end_token": 42,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "QuestionToken",
                                          "label": "?",
                                          "start_token": 43,
                                          "end_token": 43,
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "start_token": 44,
                                          "end_token": 44,
                                          "children": []
                                        },
                                        {
                                          "type": "ColonToken",
                                          "label": ":",
                                          "start_token": 45,
                                          "end_token": 45,
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "cursorHorizontalPos",
                                          "start_token": 46,
                                          "end_token": 46,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const indentationSpace = \" \".repeat(indentation);",
                          "start_token": 48,
                          "end_token": 57,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const indentationSpace = \" \".repeat(indentation)",
                              "start_token": 48,
                              "end_token": 56,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "indentationSpace = \" \".repeat(indentation)",
                                  "start_token": 49,
                                  "end_token": 56,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "indentationSpace",
                                      "start_token": 49,
                                      "end_token": 49,
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "\" \".repeat(indentation)",
                                      "start_token": 51,
                                      "end_token": 56,
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "\" \".repeat",
                                          "start_token": 51,
                                          "end_token": 53,
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "\" \"",
                                              "start_token": 51,
                                              "end_token": 51,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "repeat",
                                              "start_token": 53,
                                              "end_token": 53,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "indentation",
                                          "start_token": 55,
                                          "end_token": 55,
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstStatement",
                          "label": "const completions = [];",
                          "start_token": 58,
                          "end_token": 63,
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "const completions = []",
                              "start_token": 58,
                              "end_token": 62,
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "completions = []",
                                  "start_token": 59,
                                  "end_token": 62,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "completions",
                                      "start_token": 59,
                                      "end_token": 59,
                                      "children": []
                                    },
                                    {
                                      "type": "ArrayLiteralExpression",
                                      "label": "[]",
                                      "start_token": 61,
                                      "end_token": 62,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "SwitchStatement",
                          "label": "switch (keywordName) {\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }",
                          "start_token": 64,
                          "end_token": 748,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "keywordName",
                              "start_token": 66,
                              "end_token": 66,
                              "children": []
                            },
                            {
                              "type": "CaseBlock",
                              "label": "{\n    // loops\n    case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;\n    case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    // conditional statement\n    case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;\n    case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;\n    case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;\n  }",
                              "start_token": 68,
                              "end_token": 748,
                              "children": [
                                {
                                  "type": "CaseClause",
                                  "label": "case \"for\":\n      completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });\n      completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });\n      break;",
                                  "start_token": 70,
                                  "end_token": 217,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"for\"",
                                      "start_token": 71,
                                      "end_token": 71,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 73,
                                      "end_token": 121,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 73,
                                          "end_token": 120,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 73,
                                              "end_token": 75,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 73,
                                                  "end_token": 73,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 75,
                                                  "end_token": 75,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"for-loop\",\n        text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 77,
                                              "end_token": 119,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 78,
                                                  "end_token": 81,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 81,
                                                      "end_token": 81,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"for-loop\"",
                                                  "start_token": 83,
                                                  "end_token": 85,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 83,
                                                      "end_token": 83,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"for-loop\"",
                                                      "start_token": 85,
                                                      "end_token": 85,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`",
                                                  "start_token": 87,
                                                  "end_token": 89,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 87,
                                                      "end_token": 87,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`for(let i=0;i < array.length;i++){\\n${indentationSpace}\\tconst element = array[i];\\n${indentationSpace}}`",
                                                      "start_token": 89,
                                                      "end_token": 89,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`for(let i=0;i < array.length;i++){\\n${",
                                                          "start_token": 89,
                                                          "end_token": 89,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}\\tconst element = array[i];\\n${",
                                                          "start_token": 89,
                                                          "end_token": 89,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 89,
                                                              "end_token": 89,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateMiddle",
                                                              "label": "}\\tconst element = array[i];\\n${",
                                                              "start_token": 89,
                                                              "end_token": 89,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 89,
                                                          "end_token": 89,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 89,
                                                              "end_token": 89,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 89,
                                                              "end_token": 89,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 91,
                                                  "end_token": 117,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 91,
                                                      "end_token": 91,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 93,
                                                      "end_token": 117,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 94,
                                                          "end_token": 96,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 94,
                                                              "end_token": 94,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 96,
                                                              "end_token": 96,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 96,
                                                                  "end_token": 96,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 98,
                                                          "end_token": 98,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"For Loop\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 99,
                                                          "end_token": 117,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"For Loop\");",
                                                              "start_token": 100,
                                                              "end_token": 108,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"For Loop\")",
                                                                  "start_token": 100,
                                                                  "end_token": 107,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 100,
                                                                      "end_token": 102,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 100,
                                                                          "end_token": 100,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 102,
                                                                          "end_token": 102,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 104,
                                                                      "end_token": 104,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"For Loop\"",
                                                                      "start_token": 106,
                                                                      "end_token": 106,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 109,
                                                              "end_token": 116,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 109,
                                                                  "end_token": 115,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 109,
                                                                      "end_token": 111,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 109,
                                                                          "end_token": 109,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 111,
                                                                          "end_token": 111,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 112,
                                                                      "end_token": 112,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 113,
                                                                      "end_token": 115,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 113,
                                                                          "end_token": 113,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 115,
                                                                          "end_token": 115,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      });",
                                      "start_token": 122,
                                      "end_token": 168,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      })",
                                          "start_token": 122,
                                          "end_token": 167,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 122,
                                              "end_token": 124,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 122,
                                                  "end_token": 122,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 124,
                                                  "end_token": 124,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"for-in-loop\",\n        text: `for(const key in object) {\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        },\n      }",
                                              "start_token": 126,
                                              "end_token": 166,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 127,
                                                  "end_token": 130,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 130,
                                                      "end_token": 130,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"for-in-loop\"",
                                                  "start_token": 132,
                                                  "end_token": 134,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 132,
                                                      "end_token": 132,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"for-in-loop\"",
                                                      "start_token": 134,
                                                      "end_token": 134,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `for(const key in object) {\\n${indentationSpace}}`",
                                                  "start_token": 136,
                                                  "end_token": 138,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 136,
                                                      "end_token": 136,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`for(const key in object) {\\n${indentationSpace}}`",
                                                      "start_token": 138,
                                                      "end_token": 138,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`for(const key in object) {\\n${",
                                                          "start_token": 138,
                                                          "end_token": 138,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 138,
                                                          "end_token": 138,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 138,
                                                              "end_token": 138,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 138,
                                                              "end_token": 138,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        }",
                                                  "start_token": 140,
                                                  "end_token": 164,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 140,
                                                      "end_token": 140,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        }",
                                                      "start_token": 142,
                                                      "end_token": 164,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 143,
                                                          "end_token": 145,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 143,
                                                              "end_token": 143,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 145,
                                                              "end_token": 145,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 145,
                                                                  "end_token": 145,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 147,
                                                          "end_token": 147,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"For-in Loop\");\n          element.innerHTML = \"forin\";\n        }",
                                                          "start_token": 148,
                                                          "end_token": 164,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"For-in Loop\");",
                                                              "start_token": 149,
                                                              "end_token": 157,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"For-in Loop\")",
                                                                  "start_token": 149,
                                                                  "end_token": 156,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 149,
                                                                      "end_token": 151,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 149,
                                                                          "end_token": 149,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 151,
                                                                          "end_token": 151,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 153,
                                                                      "end_token": 153,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"For-in Loop\"",
                                                                      "start_token": 155,
                                                                      "end_token": 155,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = \"forin\";",
                                                              "start_token": 158,
                                                              "end_token": 163,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = \"forin\"",
                                                                  "start_token": 158,
                                                                  "end_token": 162,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 158,
                                                                      "end_token": 160,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 158,
                                                                          "end_token": 158,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 160,
                                                                          "end_token": 160,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 161,
                                                                      "end_token": 161,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"forin\"",
                                                                      "start_token": 162,
                                                                      "end_token": 162,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      });",
                                      "start_token": 169,
                                      "end_token": 215,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      })",
                                          "start_token": 169,
                                          "end_token": 214,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 169,
                                              "end_token": 171,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 169,
                                                  "end_token": 169,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 171,
                                                  "end_token": 171,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"for-of-loop\",\n        text: `for(const iterator of object){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        },\n      }",
                                              "start_token": 173,
                                              "end_token": 213,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 174,
                                                  "end_token": 177,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 177,
                                                      "end_token": 177,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"for-of-loop\"",
                                                  "start_token": 179,
                                                  "end_token": 181,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 179,
                                                      "end_token": 179,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"for-of-loop\"",
                                                      "start_token": 181,
                                                      "end_token": 181,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `for(const iterator of object){\\n${indentationSpace}}`",
                                                  "start_token": 183,
                                                  "end_token": 185,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 183,
                                                      "end_token": 183,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`for(const iterator of object){\\n${indentationSpace}}`",
                                                      "start_token": 185,
                                                      "end_token": 185,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`for(const iterator of object){\\n${",
                                                          "start_token": 185,
                                                          "end_token": 185,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 185,
                                                          "end_token": 185,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 185,
                                                              "end_token": 185,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 185,
                                                              "end_token": 185,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        }",
                                                  "start_token": 187,
                                                  "end_token": 211,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 187,
                                                      "end_token": 187,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        }",
                                                      "start_token": 189,
                                                      "end_token": 211,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 190,
                                                          "end_token": 192,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 190,
                                                              "end_token": 190,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 192,
                                                              "end_token": 192,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 192,
                                                                  "end_token": 192,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 194,
                                                          "end_token": 194,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"For-of Loop\");\n          element.innerHTML = \"forof\";\n        }",
                                                          "start_token": 195,
                                                          "end_token": 211,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"For-of Loop\");",
                                                              "start_token": 196,
                                                              "end_token": 204,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"For-of Loop\")",
                                                                  "start_token": 196,
                                                                  "end_token": 203,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 196,
                                                                      "end_token": 198,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 196,
                                                                          "end_token": 196,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 198,
                                                                          "end_token": 198,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 200,
                                                                      "end_token": 200,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"For-of Loop\"",
                                                                      "start_token": 202,
                                                                      "end_token": 202,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = \"forof\";",
                                                              "start_token": 205,
                                                              "end_token": 210,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = \"forof\"",
                                                                  "start_token": 205,
                                                                  "end_token": 209,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 205,
                                                                      "end_token": 207,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 205,
                                                                          "end_token": 205,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 207,
                                                                          "end_token": 207,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 208,
                                                                      "end_token": 208,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"forof\"",
                                                                      "start_token": 209,
                                                                      "end_token": 209,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 216,
                                      "end_token": 217,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"while\":\n      completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 218,
                                  "end_token": 271,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"while\"",
                                      "start_token": 219,
                                      "end_token": 219,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 221,
                                      "end_token": 269,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 221,
                                          "end_token": 268,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 221,
                                              "end_token": 223,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 221,
                                                  "end_token": 221,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 223,
                                                  "end_token": 223,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"while-loop\",\n        text: `while(condition){\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 225,
                                              "end_token": 267,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 226,
                                                  "end_token": 229,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 229,
                                                      "end_token": 229,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"while-loop\"",
                                                  "start_token": 231,
                                                  "end_token": 233,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 231,
                                                      "end_token": 231,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"while-loop\"",
                                                      "start_token": 233,
                                                      "end_token": 233,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `while(condition){\\n${indentationSpace}}`",
                                                  "start_token": 235,
                                                  "end_token": 237,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 235,
                                                      "end_token": 235,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`while(condition){\\n${indentationSpace}}`",
                                                      "start_token": 237,
                                                      "end_token": 237,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`while(condition){\\n${",
                                                          "start_token": 237,
                                                          "end_token": 237,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 237,
                                                          "end_token": 237,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 237,
                                                              "end_token": 237,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 237,
                                                              "end_token": 237,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 239,
                                                  "end_token": 265,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 239,
                                                      "end_token": 239,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 241,
                                                      "end_token": 265,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 242,
                                                          "end_token": 244,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 242,
                                                              "end_token": 242,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 244,
                                                              "end_token": 244,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 244,
                                                                  "end_token": 244,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 246,
                                                          "end_token": 246,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"While Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 247,
                                                          "end_token": 265,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"While Statement\");",
                                                              "start_token": 248,
                                                              "end_token": 256,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"While Statement\")",
                                                                  "start_token": 248,
                                                                  "end_token": 255,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 248,
                                                                      "end_token": 250,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 248,
                                                                          "end_token": 248,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 250,
                                                                          "end_token": 250,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 252,
                                                                      "end_token": 252,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"While Statement\"",
                                                                      "start_token": 254,
                                                                      "end_token": 254,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 257,
                                                              "end_token": 264,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 257,
                                                                  "end_token": 263,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 257,
                                                                      "end_token": 259,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 257,
                                                                          "end_token": 257,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 259,
                                                                          "end_token": 259,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 260,
                                                                      "end_token": 260,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 261,
                                                                      "end_token": 263,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 261,
                                                                          "end_token": 261,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 263,
                                                                          "end_token": 263,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 270,
                                      "end_token": 271,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"do\":\n      completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 272,
                                  "end_token": 325,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"do\"",
                                      "start_token": 273,
                                      "end_token": 273,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 275,
                                      "end_token": 323,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 275,
                                          "end_token": 322,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 275,
                                              "end_token": 277,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 275,
                                                  "end_token": 275,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 277,
                                                  "end_token": 277,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"do-while-statement\",\n        text: `do{\\n\\n${indentationSpace}} while (condition);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 279,
                                              "end_token": 321,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 280,
                                                  "end_token": 283,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 283,
                                                      "end_token": 283,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"do-while-statement\"",
                                                  "start_token": 285,
                                                  "end_token": 287,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 285,
                                                      "end_token": 285,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"do-while-statement\"",
                                                      "start_token": 287,
                                                      "end_token": 287,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `do{\\n\\n${indentationSpace}} while (condition);`",
                                                  "start_token": 289,
                                                  "end_token": 291,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 289,
                                                      "end_token": 289,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`do{\\n\\n${indentationSpace}} while (condition);`",
                                                      "start_token": 291,
                                                      "end_token": 291,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`do{\\n\\n${",
                                                          "start_token": 291,
                                                          "end_token": 291,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}} while (condition);`",
                                                          "start_token": 291,
                                                          "end_token": 291,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 291,
                                                              "end_token": 291,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}} while (condition);`",
                                                              "start_token": 291,
                                                              "end_token": 291,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 293,
                                                  "end_token": 319,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 293,
                                                      "end_token": 293,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 295,
                                                      "end_token": 319,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 296,
                                                          "end_token": 298,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 296,
                                                              "end_token": 296,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 298,
                                                              "end_token": 298,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 298,
                                                                  "end_token": 298,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 300,
                                                          "end_token": 300,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"do-While Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 301,
                                                          "end_token": 319,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"do-While Statement\");",
                                                              "start_token": 302,
                                                              "end_token": 310,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"do-While Statement\")",
                                                                  "start_token": 302,
                                                                  "end_token": 309,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 302,
                                                                      "end_token": 304,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 302,
                                                                          "end_token": 302,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 304,
                                                                          "end_token": 304,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 306,
                                                                      "end_token": 306,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"do-While Statement\"",
                                                                      "start_token": 308,
                                                                      "end_token": 308,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 311,
                                                              "end_token": 318,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 311,
                                                                  "end_token": 317,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 311,
                                                                      "end_token": 313,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 311,
                                                                          "end_token": 311,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 313,
                                                                          "end_token": 313,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 314,
                                                                      "end_token": 314,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 315,
                                                                      "end_token": 317,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 315,
                                                                          "end_token": 315,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 317,
                                                                          "end_token": 317,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 324,
                                      "end_token": 325,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"if\":\n      completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 327,
                                  "end_token": 380,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"if\"",
                                      "start_token": 328,
                                      "end_token": 328,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 330,
                                      "end_token": 378,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 330,
                                          "end_token": 377,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 330,
                                              "end_token": 332,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 330,
                                                  "end_token": 330,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 332,
                                                  "end_token": 332,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"if-statement\",\n        text: `if(condition){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 334,
                                              "end_token": 376,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 335,
                                                  "end_token": 338,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 338,
                                                      "end_token": 338,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"if-statement\"",
                                                  "start_token": 340,
                                                  "end_token": 342,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 340,
                                                      "end_token": 340,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"if-statement\"",
                                                      "start_token": 342,
                                                      "end_token": 342,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `if(condition){\\n\\n${indentationSpace}}`",
                                                  "start_token": 344,
                                                  "end_token": 346,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 344,
                                                      "end_token": 344,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`if(condition){\\n\\n${indentationSpace}}`",
                                                      "start_token": 346,
                                                      "end_token": 346,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`if(condition){\\n\\n${",
                                                          "start_token": 346,
                                                          "end_token": 346,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 346,
                                                          "end_token": 346,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 346,
                                                              "end_token": 346,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 346,
                                                              "end_token": 346,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 348,
                                                  "end_token": 374,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 348,
                                                      "end_token": 348,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 350,
                                                      "end_token": 374,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 351,
                                                          "end_token": 353,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 351,
                                                              "end_token": 351,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 353,
                                                              "end_token": 353,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 353,
                                                                  "end_token": 353,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 355,
                                                          "end_token": 355,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"if Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 356,
                                                          "end_token": 374,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"if Statement\");",
                                                              "start_token": 357,
                                                              "end_token": 365,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"if Statement\")",
                                                                  "start_token": 357,
                                                                  "end_token": 364,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 357,
                                                                      "end_token": 359,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 357,
                                                                          "end_token": 357,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 359,
                                                                          "end_token": 359,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 361,
                                                                      "end_token": 361,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"if Statement\"",
                                                                      "start_token": 363,
                                                                      "end_token": 363,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 366,
                                                              "end_token": 373,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 366,
                                                                  "end_token": 372,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 366,
                                                                      "end_token": 368,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 366,
                                                                          "end_token": 366,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 368,
                                                                          "end_token": 368,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 369,
                                                                      "end_token": 369,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 370,
                                                                      "end_token": 372,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 370,
                                                                          "end_token": 370,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 372,
                                                                          "end_token": 372,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 379,
                                      "end_token": 380,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"switch\":\n      completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 381,
                                  "end_token": 434,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"switch\"",
                                      "start_token": 382,
                                      "end_token": 382,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 384,
                                      "end_token": 432,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 384,
                                          "end_token": 431,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 384,
                                              "end_token": 386,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 384,
                                                  "end_token": 384,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 386,
                                                  "end_token": 386,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"switch-statement\",\n        text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 388,
                                              "end_token": 430,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 389,
                                                  "end_token": 392,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 392,
                                                      "end_token": 392,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"switch-statement\"",
                                                  "start_token": 394,
                                                  "end_token": 396,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 394,
                                                      "end_token": 394,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"switch-statement\"",
                                                      "start_token": 396,
                                                      "end_token": 396,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`",
                                                  "start_token": 398,
                                                  "end_token": 400,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 398,
                                                      "end_token": 398,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`switch(key){\\n${indentationSpace}\\tcase value:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}\\tdefault:\\n${indentationSpace}\\t\\tbreak;\\n${indentationSpace}}`",
                                                      "start_token": 400,
                                                      "end_token": 400,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`switch(key){\\n${",
                                                          "start_token": 400,
                                                          "end_token": 400,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}\\tcase value:\\n${",
                                                          "start_token": 400,
                                                          "end_token": 400,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateMiddle",
                                                              "label": "}\\tcase value:\\n${",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}\\t\\tbreak;\\n${",
                                                          "start_token": 400,
                                                          "end_token": 400,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateMiddle",
                                                              "label": "}\\t\\tbreak;\\n${",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}\\tdefault:\\n${",
                                                          "start_token": 400,
                                                          "end_token": 400,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateMiddle",
                                                              "label": "}\\tdefault:\\n${",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}\\t\\tbreak;\\n${",
                                                          "start_token": 400,
                                                          "end_token": 400,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateMiddle",
                                                              "label": "}\\t\\tbreak;\\n${",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 400,
                                                          "end_token": 400,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 400,
                                                              "end_token": 400,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 402,
                                                  "end_token": 428,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 402,
                                                      "end_token": 402,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 404,
                                                      "end_token": 428,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 405,
                                                          "end_token": 407,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 405,
                                                              "end_token": 405,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 407,
                                                              "end_token": 407,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 407,
                                                                  "end_token": 407,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 409,
                                                          "end_token": 409,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"Switch Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 410,
                                                          "end_token": 428,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"Switch Statement\");",
                                                              "start_token": 411,
                                                              "end_token": 419,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"Switch Statement\")",
                                                                  "start_token": 411,
                                                                  "end_token": 418,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 411,
                                                                      "end_token": 413,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 411,
                                                                          "end_token": 411,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 413,
                                                                          "end_token": 413,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 415,
                                                                      "end_token": 415,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"Switch Statement\"",
                                                                      "start_token": 417,
                                                                      "end_token": 417,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 420,
                                                              "end_token": 427,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 420,
                                                                  "end_token": 426,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 420,
                                                                      "end_token": 422,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 420,
                                                                          "end_token": 420,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 422,
                                                                          "end_token": 422,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 423,
                                                                      "end_token": 423,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 424,
                                                                      "end_token": 426,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 424,
                                                                          "end_token": 424,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 426,
                                                                          "end_token": 426,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 433,
                                      "end_token": 434,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"function\":\n      completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 435,
                                  "end_token": 488,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"function\"",
                                      "start_token": 436,
                                      "end_token": 436,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 438,
                                      "end_token": 486,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 438,
                                          "end_token": 485,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 438,
                                              "end_token": 440,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 438,
                                                  "end_token": 438,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 440,
                                                  "end_token": 440,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"function-statement\",\n        text: `function name(params){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 442,
                                              "end_token": 484,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 443,
                                                  "end_token": 446,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 446,
                                                      "end_token": 446,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"function-statement\"",
                                                  "start_token": 448,
                                                  "end_token": 450,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 448,
                                                      "end_token": 448,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"function-statement\"",
                                                      "start_token": 450,
                                                      "end_token": 450,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `function name(params){\\n\\n${indentationSpace}}`",
                                                  "start_token": 452,
                                                  "end_token": 454,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 452,
                                                      "end_token": 452,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`function name(params){\\n\\n${indentationSpace}}`",
                                                      "start_token": 454,
                                                      "end_token": 454,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`function name(params){\\n\\n${",
                                                          "start_token": 454,
                                                          "end_token": 454,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 454,
                                                          "end_token": 454,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 454,
                                                              "end_token": 454,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 454,
                                                              "end_token": 454,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 456,
                                                  "end_token": 482,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 456,
                                                      "end_token": 456,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 458,
                                                      "end_token": 482,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 459,
                                                          "end_token": 461,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 459,
                                                              "end_token": 459,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 461,
                                                              "end_token": 461,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 461,
                                                                  "end_token": 461,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 463,
                                                          "end_token": 463,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"Function Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 464,
                                                          "end_token": 482,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"Function Statement\");",
                                                              "start_token": 465,
                                                              "end_token": 473,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"Function Statement\")",
                                                                  "start_token": 465,
                                                                  "end_token": 472,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 465,
                                                                      "end_token": 467,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 465,
                                                                          "end_token": 465,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 467,
                                                                          "end_token": 467,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 469,
                                                                      "end_token": 469,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"Function Statement\"",
                                                                      "start_token": 471,
                                                                      "end_token": 471,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 474,
                                                              "end_token": 481,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 474,
                                                                  "end_token": 480,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 474,
                                                                      "end_token": 476,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 474,
                                                                          "end_token": 474,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 476,
                                                                          "end_token": 476,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 477,
                                                                      "end_token": 477,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 478,
                                                                      "end_token": 480,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 478,
                                                                          "end_token": 478,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 480,
                                                                          "end_token": 480,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 487,
                                      "end_token": 488,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"try\":\n      completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });\n      break;",
                                  "start_token": 489,
                                  "end_token": 540,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"try\"",
                                      "start_token": 490,
                                      "end_token": 490,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      });",
                                      "start_token": 492,
                                      "end_token": 538,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      })",
                                          "start_token": 492,
                                          "end_token": 537,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 492,
                                              "end_token": 494,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 492,
                                                  "end_token": 492,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 494,
                                                  "end_token": 494,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"try-catch\",\n        text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        },\n      }",
                                              "start_token": 496,
                                              "end_token": 536,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 497,
                                                  "end_token": 500,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 500,
                                                      "end_token": 500,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"try-catch\"",
                                                  "start_token": 502,
                                                  "end_token": 504,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 502,
                                                      "end_token": 502,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"try-catch\"",
                                                      "start_token": 504,
                                                      "end_token": 504,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`",
                                                  "start_token": 506,
                                                  "end_token": 508,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 506,
                                                      "end_token": 506,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`try{\\n\\n${indentationSpace}}catch(error){\\n\\n${indentationSpace}}`",
                                                      "start_token": 508,
                                                      "end_token": 508,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`try{\\n\\n${",
                                                          "start_token": 508,
                                                          "end_token": 508,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}catch(error){\\n\\n${",
                                                          "start_token": 508,
                                                          "end_token": 508,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 508,
                                                              "end_token": 508,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TemplateMiddle",
                                                              "label": "}}catch(error){\\n\\n${",
                                                              "start_token": 508,
                                                              "end_token": 508,
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 508,
                                                          "end_token": 508,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 508,
                                                              "end_token": 508,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 508,
                                                              "end_token": 508,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        }",
                                                  "start_token": 510,
                                                  "end_token": 534,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 510,
                                                      "end_token": 510,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        }",
                                                      "start_token": 512,
                                                      "end_token": 534,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 513,
                                                          "end_token": 515,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 513,
                                                              "end_token": 513,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 515,
                                                              "end_token": 515,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 515,
                                                                  "end_token": 515,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 517,
                                                          "end_token": 517,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"Try-catch Statement\");\n          element.innerHTML = \"try-catch\";\n        }",
                                                          "start_token": 518,
                                                          "end_token": 534,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"Try-catch Statement\");",
                                                              "start_token": 519,
                                                              "end_token": 527,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"Try-catch Statement\")",
                                                                  "start_token": 519,
                                                                  "end_token": 526,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 519,
                                                                      "end_token": 521,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 519,
                                                                          "end_token": 519,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 521,
                                                                          "end_token": 521,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 523,
                                                                      "end_token": 523,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"Try-catch Statement\"",
                                                                      "start_token": 525,
                                                                      "end_token": 525,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = \"try-catch\";",
                                                              "start_token": 528,
                                                              "end_token": 533,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = \"try-catch\"",
                                                                  "start_token": 528,
                                                                  "end_token": 532,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 528,
                                                                      "end_token": 530,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 528,
                                                                          "end_token": 528,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 530,
                                                                          "end_token": 530,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 531,
                                                                      "end_token": 531,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"try-catch\"",
                                                                      "start_token": 532,
                                                                      "end_token": 532,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 539,
                                      "end_token": 540,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"throw\":\n      completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 541,
                                  "end_token": 594,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"throw\"",
                                      "start_token": 542,
                                      "end_token": 542,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 544,
                                      "end_token": 592,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 544,
                                          "end_token": 591,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 544,
                                              "end_token": 546,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 544,
                                                  "end_token": 544,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 546,
                                                  "end_token": 546,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"throw-exception\",\n        text: `throw new Error(\"\");`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 548,
                                              "end_token": 590,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 549,
                                                  "end_token": 552,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 552,
                                                      "end_token": 552,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"throw-exception\"",
                                                  "start_token": 554,
                                                  "end_token": 556,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 554,
                                                      "end_token": 554,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"throw-exception\"",
                                                      "start_token": 556,
                                                      "end_token": 556,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `throw new Error(\"\");`",
                                                  "start_token": 558,
                                                  "end_token": 560,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 558,
                                                      "end_token": 558,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstTemplateToken",
                                                      "label": "`throw new Error(\"\");`",
                                                      "start_token": 560,
                                                      "end_token": 560,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 562,
                                                  "end_token": 588,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 562,
                                                      "end_token": 562,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 564,
                                                      "end_token": 588,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 565,
                                                          "end_token": 567,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 565,
                                                              "end_token": 565,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 567,
                                                              "end_token": 567,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 567,
                                                                  "end_token": 567,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 569,
                                                          "end_token": 569,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"Throw Exception\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 570,
                                                          "end_token": 588,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"Throw Exception\");",
                                                              "start_token": 571,
                                                              "end_token": 579,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"Throw Exception\")",
                                                                  "start_token": 571,
                                                                  "end_token": 578,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 571,
                                                                      "end_token": 573,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 571,
                                                                          "end_token": 571,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 573,
                                                                          "end_token": 573,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 575,
                                                                      "end_token": 575,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"Throw Exception\"",
                                                                      "start_token": 577,
                                                                      "end_token": 577,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 580,
                                                              "end_token": 587,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 580,
                                                                  "end_token": 586,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 580,
                                                                      "end_token": 582,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 580,
                                                                          "end_token": 580,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 582,
                                                                          "end_token": 582,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 583,
                                                                      "end_token": 583,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 584,
                                                                      "end_token": 586,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 584,
                                                                          "end_token": 584,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 586,
                                                                          "end_token": 586,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 593,
                                      "end_token": 594,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"new\":\n      completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });\n      break;",
                                  "start_token": 595,
                                  "end_token": 648,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"new\"",
                                      "start_token": 596,
                                      "end_token": 596,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      });",
                                      "start_token": 598,
                                      "end_token": 646,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push({\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      })",
                                          "start_token": 598,
                                          "end_token": 645,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 598,
                                              "end_token": 600,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 598,
                                                  "end_token": 598,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 600,
                                                  "end_token": 600,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n        ...completion,\n        name: \"new-statement\",\n        text: `const name = new type(arguments);`,\n        render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        },\n      }",
                                              "start_token": 602,
                                              "end_token": 644,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 603,
                                                  "end_token": 606,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 606,
                                                      "end_token": 606,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"new-statement\"",
                                                  "start_token": 608,
                                                  "end_token": 610,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 608,
                                                      "end_token": 608,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"new-statement\"",
                                                      "start_token": 610,
                                                      "end_token": 610,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `const name = new type(arguments);`",
                                                  "start_token": 612,
                                                  "end_token": 614,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 612,
                                                      "end_token": 612,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstTemplateToken",
                                                      "label": "`const name = new type(arguments);`",
                                                      "start_token": 614,
                                                      "end_token": 614,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                  "start_token": 616,
                                                  "end_token": 642,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 616,
                                                      "end_token": 616,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                      "start_token": 618,
                                                      "end_token": 642,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 619,
                                                          "end_token": 621,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 619,
                                                              "end_token": 619,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 621,
                                                              "end_token": 621,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 621,
                                                                  "end_token": 621,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 623,
                                                          "end_token": 623,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n          element.setAttribute(\"keyword\", \"new Statement\");\n          element.innerHTML = completion.text;\n        }",
                                                          "start_token": 624,
                                                          "end_token": 642,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"new Statement\");",
                                                              "start_token": 625,
                                                              "end_token": 633,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"new Statement\")",
                                                                  "start_token": 625,
                                                                  "end_token": 632,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 625,
                                                                      "end_token": 627,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 625,
                                                                          "end_token": 625,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 627,
                                                                          "end_token": 627,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 629,
                                                                      "end_token": 629,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"new Statement\"",
                                                                      "start_token": 631,
                                                                      "end_token": 631,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 634,
                                                              "end_token": 641,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 634,
                                                                  "end_token": 640,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 634,
                                                                      "end_token": 636,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 634,
                                                                          "end_token": 634,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 636,
                                                                          "end_token": 636,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 637,
                                                                      "end_token": 637,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 638,
                                                                      "end_token": 640,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 638,
                                                                          "end_token": 638,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 640,
                                                                          "end_token": 640,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 647,
                                      "end_token": 648,
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CaseClause",
                                  "label": "case \"async\":\n      completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );\n      break;",
                                  "start_token": 649,
                                  "end_token": 747,
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "\"async\"",
                                      "start_token": 650,
                                      "end_token": 650,
                                      "children": []
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      );",
                                      "start_token": 652,
                                      "end_token": 745,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "completions.push(\n        {\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n        {\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        },\n      )",
                                          "start_token": 652,
                                          "end_token": 744,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "completions.push",
                                              "start_token": 652,
                                              "end_token": 654,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "completions",
                                                  "start_token": 652,
                                                  "end_token": 652,
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "start_token": 654,
                                                  "end_token": 654,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n          ...completion,\n          name: \"async-function\",\n          text: `async function() {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        }",
                                              "start_token": 656,
                                              "end_token": 698,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 657,
                                                  "end_token": 660,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 660,
                                                      "end_token": 660,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"async-function\"",
                                                  "start_token": 662,
                                                  "end_token": 664,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 662,
                                                      "end_token": 662,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"async-function\"",
                                                      "start_token": 664,
                                                      "end_token": 664,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `async function() {\\n\\n${indentationSpace}}`",
                                                  "start_token": 666,
                                                  "end_token": 668,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 666,
                                                      "end_token": 666,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`async function() {\\n\\n${indentationSpace}}`",
                                                      "start_token": 668,
                                                      "end_token": 668,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`async function() {\\n\\n${",
                                                          "start_token": 668,
                                                          "end_token": 668,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 668,
                                                          "end_token": 668,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 668,
                                                              "end_token": 668,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 668,
                                                              "end_token": 668,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          }",
                                                  "start_token": 670,
                                                  "end_token": 696,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 670,
                                                      "end_token": 670,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          }",
                                                      "start_token": 672,
                                                      "end_token": 696,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 673,
                                                          "end_token": 675,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 673,
                                                              "end_token": 673,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 675,
                                                              "end_token": 675,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 675,
                                                                  "end_token": 675,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 677,
                                                          "end_token": 677,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n            element.setAttribute(\"keyword\", \"async Function Statement\");\n            element.innerHTML = completion.text;\n          }",
                                                          "start_token": 678,
                                                          "end_token": 696,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"async Function Statement\");",
                                                              "start_token": 679,
                                                              "end_token": 687,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"async Function Statement\")",
                                                                  "start_token": 679,
                                                                  "end_token": 686,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 679,
                                                                      "end_token": 681,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 679,
                                                                          "end_token": 679,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 681,
                                                                          "end_token": 681,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 683,
                                                                      "end_token": 683,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"async Function Statement\"",
                                                                      "start_token": 685,
                                                                      "end_token": 685,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 688,
                                                              "end_token": 695,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 688,
                                                                  "end_token": 694,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 688,
                                                                      "end_token": 690,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 688,
                                                                          "end_token": 688,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 690,
                                                                          "end_token": 690,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 691,
                                                                      "end_token": 691,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 692,
                                                                      "end_token": 694,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 692,
                                                                          "end_token": 692,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 694,
                                                                          "end_token": 694,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{\n          ...completion,\n          name: \"async-arrow-function\",\n          text: `async () => {\\n\\n${indentationSpace}}`,\n          render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          },\n        }",
                                              "start_token": 700,
                                              "end_token": 742,
                                              "children": [
                                                {
                                                  "type": "SpreadAssignment",
                                                  "label": "...completion",
                                                  "start_token": 701,
                                                  "end_token": 704,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "completion",
                                                      "start_token": 704,
                                                      "end_token": 704,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "name: \"async-arrow-function\"",
                                                  "start_token": 706,
                                                  "end_token": 708,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "name",
                                                      "start_token": 706,
                                                      "end_token": 706,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "\"async-arrow-function\"",
                                                      "start_token": 708,
                                                      "end_token": 708,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "text: `async () => {\\n\\n${indentationSpace}}`",
                                                  "start_token": 710,
                                                  "end_token": 712,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "text",
                                                      "start_token": 710,
                                                      "end_token": 710,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TemplateExpression",
                                                      "label": "`async () => {\\n\\n${indentationSpace}}`",
                                                      "start_token": 712,
                                                      "end_token": 712,
                                                      "children": [
                                                        {
                                                          "type": "TemplateHead",
                                                          "label": "`async () => {\\n\\n${",
                                                          "start_token": 712,
                                                          "end_token": 712,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "TemplateSpan",
                                                          "label": "indentationSpace}}`",
                                                          "start_token": 712,
                                                          "end_token": 712,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "indentationSpace",
                                                              "start_token": 712,
                                                              "end_token": 712,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "LastTemplateToken",
                                                              "label": "}}`",
                                                              "start_token": 712,
                                                              "end_token": 712,
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAssignment",
                                                  "label": "render: (element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          }",
                                                  "start_token": 714,
                                                  "end_token": 740,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "render",
                                                      "start_token": 714,
                                                      "end_token": 714,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrowFunction",
                                                      "label": "(element: HTMLElement) => {\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          }",
                                                      "start_token": 716,
                                                      "end_token": 740,
                                                      "children": [
                                                        {
                                                          "type": "Parameter",
                                                          "label": "element: HTMLElement",
                                                          "start_token": 717,
                                                          "end_token": 719,
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "element",
                                                              "start_token": 717,
                                                              "end_token": 717,
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "TypeReference",
                                                              "label": "HTMLElement",
                                                              "start_token": 719,
                                                              "end_token": 719,
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "HTMLElement",
                                                                  "start_token": 719,
                                                                  "end_token": 719,
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "EqualsGreaterThanToken",
                                                          "label": "=>",
                                                          "start_token": 721,
                                                          "end_token": 721,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Block",
                                                          "label": "{\n            element.setAttribute(\"keyword\", \"async Arrow Function Statement\");\n            element.innerHTML = completion.text;\n          }",
                                                          "start_token": 722,
                                                          "end_token": 740,
                                                          "children": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.setAttribute(\"keyword\", \"async Arrow Function Statement\");",
                                                              "start_token": 723,
                                                              "end_token": 731,
                                                              "children": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "label": "element.setAttribute(\"keyword\", \"async Arrow Function Statement\")",
                                                                  "start_token": 723,
                                                                  "end_token": 730,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.setAttribute",
                                                                      "start_token": 723,
                                                                      "end_token": 725,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 723,
                                                                          "end_token": 723,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "setAttribute",
                                                                          "start_token": 725,
                                                                          "end_token": 725,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"keyword\"",
                                                                      "start_token": 727,
                                                                      "end_token": 727,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "\"async Arrow Function Statement\"",
                                                                      "start_token": 729,
                                                                      "end_token": 729,
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "label": "element.innerHTML = completion.text;",
                                                              "start_token": 732,
                                                              "end_token": 739,
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "element.innerHTML = completion.text",
                                                                  "start_token": 732,
                                                                  "end_token": 738,
                                                                  "children": [
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "element.innerHTML",
                                                                      "start_token": 732,
                                                                      "end_token": 734,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "element",
                                                                          "start_token": 732,
                                                                          "end_token": 732,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "innerHTML",
                                                                          "start_token": 734,
                                                                          "end_token": 734,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FirstAssignment",
                                                                      "label": "=",
                                                                      "start_token": 735,
                                                                      "end_token": 735,
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "completion.text",
                                                                      "start_token": 736,
                                                                      "end_token": 738,
                                                                      "children": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "completion",
                                                                          "start_token": 736,
                                                                          "end_token": 736,
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "text",
                                                                          "start_token": 738,
                                                                          "end_token": 738,
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": "break;",
                                      "start_token": 746,
                                      "end_token": 747,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return completions;",
                          "start_token": 749,
                          "end_token": 751,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "completions",
                              "start_token": 750,
                              "end_token": 750,
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}