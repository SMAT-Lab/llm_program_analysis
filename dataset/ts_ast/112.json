{
  "type": "SourceFile",
  "label": "import AbilityStage from '@ohos.app.ability.AbilityStage';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport hilog from '@ohos.hilog';\nimport type Want from '@ohos.app.ability.Want';\nimport type { Configuration } from '@ohos.app.ability.Configuration';\n\nconst TAG: string = '[MyAbilityStage]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nlet systemLanguage: string | undefined; // 系统当前语言\n\nexport default class MyAbilityStage extends AbilityStage {\n  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }\n  onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }\n  onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }\n  onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }\n  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }\n};\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import AbilityStage from '@ohos.app.ability.AbilityStage';",
      "children": [
        {
          "type": "ImportClause",
          "label": "AbilityStage",
          "children": [
            {
              "type": "Identifier",
              "label": "AbilityStage",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.AbilityStage'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type AbilityConstant from '@ohos.app.ability.AbilityConstant';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type AbilityConstant",
          "children": [
            {
              "type": "Identifier",
              "label": "AbilityConstant",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.AbilityConstant'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import hilog from '@ohos.hilog';",
      "children": [
        {
          "type": "ImportClause",
          "label": "hilog",
          "children": [
            {
              "type": "Identifier",
              "label": "hilog",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.hilog'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type Want from '@ohos.app.ability.Want';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type Want",
          "children": [
            {
              "type": "Identifier",
              "label": "Want",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.Want'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { Configuration } from '@ohos.app.ability.Configuration';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type { Configuration }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Configuration }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Configuration",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Configuration",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.Configuration'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG: string = '[MyAbilityStage]';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG: string = '[MyAbilityStage]'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG: string = '[MyAbilityStage]'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'[MyAbilityStage]'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const DOMAIN_NUMBER: number = 0xFF00;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const DOMAIN_NUMBER: number = 0xFF00",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "DOMAIN_NUMBER: number = 0xFF00",
              "children": [
                {
                  "type": "Identifier",
                  "label": "DOMAIN_NUMBER",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0xFF00",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "let systemLanguage: string | undefined;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "let systemLanguage: string | undefined",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "systemLanguage: string | undefined",
              "children": [
                {
                  "type": "Identifier",
                  "label": "systemLanguage",
                  "children": []
                },
                {
                  "type": "UnionType",
                  "label": "string | undefined",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    },
                    {
                      "type": "UndefinedKeyword",
                      "label": "undefined",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export default class MyAbilityStage extends AbilityStage {\n  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }\n  onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }\n  onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }\n  onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }\n  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "DefaultKeyword",
          "label": "default",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "MyAbilityStage",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends AbilityStage",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "AbilityStage",
              "children": [
                {
                  "type": "Identifier",
                  "label": "AbilityStage",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onNewWant",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "want: Want",
              "children": [
                {
                  "type": "Identifier",
                  "label": "want",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Want",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Want",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "launchParam: AbilityConstant.LaunchParam",
              "children": [
                {
                  "type": "Identifier",
                  "label": "launchParam",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "AbilityConstant.LaunchParam",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "AbilityConstant.LaunchParam",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AbilityConstant",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "LaunchParam",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`onNewWant, want: ${want.abilityName}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`onNewWant, want: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "want.abilityName}`",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "want.abilityName",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "want",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "abilityName",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`onNewWant, launchParam: ${JSON.stringify(launchParam)}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`onNewWant, launchParam: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(launchParam)}`",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(launchParam)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "launchParam",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onCreate",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "systemLanguage = this.context.config.language;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "systemLanguage = this.context.config.language",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "systemLanguage",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.context.config.language",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.context.config",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.context",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "context",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "config",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "language",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`systemLanguage is ${systemLanguage}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`systemLanguage is ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "systemLanguage}`",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemLanguage",
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let abilityStageContext = this.context;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let abilityStageContext = this.context",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "abilityStageContext = this.context",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "abilityStageContext",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.context",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "context",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onAcceptWant",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "want: Want",
              "children": [
                {
                  "type": "Identifier",
                  "label": "want",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Want",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Want",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Succeeded in starting SpecifiedAbility'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility'",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "want.abilityName === 'SpecifiedFirstAbility'",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "want.abilityName",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "want",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "abilityName",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'SpecifiedFirstAbility'",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "want.abilityName === 'SpecifiedSecondAbility'",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "want.abilityName",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "want",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "abilityName",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'SpecifiedSecondAbility'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "want.parameters",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "want",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "parameters",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;",
                                  "children": [
                                    {
                                      "type": "TemplateExpression",
                                      "label": "`SpecifiedAbilityInstance_${want.parameters.instanceKey}`",
                                      "children": [
                                        {
                                          "type": "TemplateHead",
                                          "label": "`SpecifiedAbilityInstance_${",
                                          "children": []
                                        },
                                        {
                                          "type": "TemplateSpan",
                                          "label": "want.parameters.instanceKey}`",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "want.parameters.instanceKey",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "want.parameters",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "want",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "parameters",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "instanceKey",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "LastTemplateToken",
                                              "label": "}`",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return 'MyAbilityStage';",
                  "children": [
                    {
                      "type": "StringLiteral",
                      "label": "'MyAbilityStage'",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onMemoryLevel",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "level: AbilityConstant.MemoryLevel",
              "children": [
                {
                  "type": "Identifier",
                  "label": "level",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "AbilityConstant.MemoryLevel",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "AbilityConstant.MemoryLevel",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AbilityConstant",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "MemoryLevel",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onConfigurationUpdate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "newConfig: Configuration",
              "children": [
                {
                  "type": "Identifier",
                  "label": "newConfig",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Configuration",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Configuration",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`onConfigurationUpdate, language: ${newConfig.language}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`onConfigurationUpdate, language: ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "newConfig.language}`",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "newConfig.language",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "newConfig",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "language",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`onConfigurationUpdated systemLanguage is ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "systemLanguage}, newConfig: ${",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemLanguage",
                                  "children": []
                                },
                                {
                                  "type": "TemplateMiddle",
                                  "label": "}, newConfig: ${",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(newConfig)}`",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(newConfig)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "newConfig",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "systemLanguage !== newConfig.language",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "systemLanguage",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsEqualsToken",
                          "label": "!==",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "newConfig.language",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newConfig",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "language",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "hilog.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "hilog",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DOMAIN_NUMBER",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "TemplateExpression",
                                  "label": "`systemLanguage from ${systemLanguage} changed to ${newConfig.language}`",
                                  "children": [
                                    {
                                      "type": "TemplateHead",
                                      "label": "`systemLanguage from ${",
                                      "children": []
                                    },
                                    {
                                      "type": "TemplateSpan",
                                      "label": "systemLanguage} changed to ${",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "systemLanguage",
                                          "children": []
                                        },
                                        {
                                          "type": "TemplateMiddle",
                                          "label": "} changed to ${",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TemplateSpan",
                                      "label": "newConfig.language}`",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "newConfig.language",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "newConfig",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "language",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "LastTemplateToken",
                                          "label": "}`",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "systemLanguage = newConfig.language;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "systemLanguage = newConfig.language",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemLanguage",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "newConfig.language",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "newConfig",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "language",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EmptyStatement",
      "label": ";",
      "children": []
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}