{
  "type": "SourceFile",
  "label": "import Matrix4 from '@ohos.matrix4';\nimport { UserFileDataItem } from '../base/UserFileDataItem';\nimport { Log } from '../utils/Log';\nimport { Broadcast } from './Broadcast';\nimport { MathUtils } from '../utils/MathUtils';\nimport { Constants } from '../constants/BrowserConstants';\nimport { screenManager } from './ScreenManager';\nimport { MediaConstants } from '../constants/MediaConstants';\n\nconst TAG = 'EventPipeline'\n\nexport interface Matrix4TransitWithMatrix4x4 extends Matrix4.Matrix4Transit {\n  matrix4x4: number[];\n}\n\nexport interface AnimationOption {\n  duration: number,\n  curve: Curve\n}\n\nexport class EventPipeline {\n\n  // last offset\n  private lastOffset: number[] = [0, 0];\n\n  // offset\n  private offset: number[] = [0, 0];\n\n  // default scale\n  private defaultScale = 1.0;\n\n  // last scale\n  private lastScale = 1.0;\n\n  // scale\n  private scale = 1.0;\n\n  // the zoom center point is a percentage position relative to the control, not an absolute position\n  private center: number[] = [Constants.CENTER_DEFAULT, Constants.CENTER_DEFAULT];\n\n  // leftmost zoom Center，(1 - leftMost)is rightmost zoom Center\n  private leftMost = 0.0;\n\n  // top zoom center，(1 - topMost)is bottom zoom center\n  private topMost = 0.0;\n\n  // double tap scale\n  private doubleTapScale = 1.0;\n\n  // max scale\n  private maxScale = 1.0;\n\n  // has reached the far left\n  private hasReachLeft = true;\n\n  // has reached the far right\n  private hasReachRight = true;\n\n  // has reached the far top\n  private hasReachTop = true;\n\n  // has reached the far bottom\n  private hasReachBottom = true;\n\n  // Broadcast\n  private broadCast: Broadcast;\n\n  // item\n  private item: UserFileDataItem;\n\n  // timeStamp\n  private timeStamp: string;\n\n  // width\n  private width: number;\n\n  // height\n  private height: number;\n\n  // Large display control width\n  private componentWidth: number = vp2px(screenManager.getWinWidth());\n\n  // Large display control height\n  private componentHeight = vp2px(screenManager.getWinHeight());\n\n  // is now in animation\n  private isInAnimation = false;\n\n  // pull down to return flag to prevent multiple triggers\n  private isExiting = false;\n\n  private updateMatrix: Function;\n\n  constructor(broadCastParam: Broadcast, item: UserFileDataItem, timeStamp: string, updateMatrix: Function) {\n    this.broadCast = broadCastParam;\n    this.item = item;\n    this.timeStamp = timeStamp;\n    this.updateMatrix = updateMatrix;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }\n\n  onDataChanged(item: UserFileDataItem): void {\n    this.item = item;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }\n\n  setDefaultScale(scale): void {\n    this.defaultScale = scale;\n    this.lastScale = scale;\n  }\n\n  onComponentSizeChanged(): void {\n    this.evaluateScales();\n  }\n\n  onTouch(event: TouchEvent): void {\n    Log.debug(TAG, 'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    if (event.type === TouchType.Down || event.type === TouchType.Up) {\n      this.emitDirectionChange();\n    }\n\n    if (event.type === TouchType.Up) {\n      this.lastOffset = this.evaluateOffset();\n      this.lastScale = this.lastScale * this.scale;\n      this.scale = 1;\n      this.offset = [0, 0];\n    }\n  }\n\n  private emitDirectionChange(): void {\n\n    /**\n     * reachLeft reachRight scale>1，only five possible situations（when scale<=1,reachLeft、reachRight is true）：\n     * T T T：Vertical\n     * T T F：Vertical（initial state）\n     * T F T：Vertical | Left\n     * F T T：Vertical | Right\n     * F F T：All\n     */\n    let direction;\n    let scale = this.lastScale * this.scale;\n    let isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS));\n    if (!this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = PanDirection.All;\n    } else if (!this.hasReachLeft && this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    } else if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }\n\n    Log.info(TAG, 'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction);\n    if (this.isExiting) {\n      return;\n    }\n\n    if (direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number)) ||\n    direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))) {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);\n    } else {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);\n    }\n    this.broadCast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction]);\n  }\n\n  private evaluateOffset(): number[] {\n    Log.info(TAG, 'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset);\n    let centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale;\n    let centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale;\n    let offsetX = this.lastOffset[0] + this.offset[0] + centerX;\n    let offsetY = this.lastOffset[1] + this.offset[1] + centerY;\n    Log.debug(TAG, 'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY);\n    return [offsetX, offsetY];\n  }\n\n  private emitTouchEvent(): void {\n    let offset: number[];\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      offset = this.evaluateOffset();\n      // the offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let moveX = offset[0];\n    let moveY = offset[1];\n    Log.debug(TAG, 'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY);\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    };\n    let matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale);\n    this.updateMatrix(matrix);\n    this.evaluateBounds();\n  }\n\n  private evaluateScales(): void {\n    if (this.width * this.componentHeight < this.componentWidth * this.height) {\n      // The aspect ratio is less than the display aspect ratio of the control\n      // the height of the control is equal to the height of the picture\n      this.maxScale = this.height / this.componentHeight;\n      // Double click the enlarged scale to ensure that the left and right boundaries are filled\n      this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;\n      // leftMost = (1 - dspW / compW) / 2 = (1 - compH * imgW / imgH / compW) / 2\n      this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;\n      this.topMost = 0.0;\n    } else if (this.width * this.componentHeight === this.componentWidth * this.height) {\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    } else {\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }\n\n    this.maxScale = Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL);\n    if (this.doubleTapScale > this.maxScale) {\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n    }\n    Log.debug(TAG, 'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale);\n  }\n\n  private evaluateCompBounds(): number[] {\n    let scale = this.lastScale * this.scale;\n    let offset = this.evaluateOffset();\n    let result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ];\n    Log.debug(TAG, 'evaluateCompBounds: ' + result);\n    return result;\n  }\n\n  private evaluateImgDisplaySize(): number[] {\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let scale = this.lastScale * this.scale * screenScale;\n    let imgDisplayWidth = 0;\n    let imgDisplayHeight = 0;\n    imgDisplayWidth = this.width * scale;\n    imgDisplayHeight = this.height * scale;\n    return [imgDisplayWidth, imgDisplayHeight];\n  }\n\n  private evaluateImgDisplayBounds(): number[] {\n    // For the left boundary of the component,\n    // the offset caused by amplification is - compw * (scale-1) / 2,\n    // plus the offset of the gesture to obtain the left boundary of the control.\n    // The same is true for the upper boundary\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n    let imgLeftBound = 0;\n    let imgTopBound = 0;\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      imgLeftBound = leftTop[0];\n      imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;\n    } else {\n      // Control width minus the picture width, divided by 2,\n      // you can get the distance from the left of the picture to the left of the control.\n      // Plus offsetX is the left boundary of the picture currently displayed\n      imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];\n      imgTopBound = leftTop[1];\n    }\n    return [imgLeftBound, imgTopBound];\n  }\n\n  // Calculate picture display boundary\n  private evaluateBounds(): void {\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    this.hasReachLeft = imgLeftBound > -1;\n    this.hasReachRight = imgLeftBound + imgDisplayWidth < this.componentWidth + 1;\n  }\n\n  /**\n   * Calculate the upper and lower bounds of offset in X and Y directions under the current scale\n   *\n   * @param scale The display magnification of the current control, usually this.lastScale * this.scale\n   * @returns 0&1 X-direction offset lower & upper bound, 2&3 Y-direction offset lower & upper bound\n   */\n  private evaluateOffsetRange(scale: number): number[] {\n    let result: number[] = [0, 0, 0, 0];\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2;\n    let top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2;\n    top = Math.max(top, 0);\n    left = Math.max(left, 0);\n    result = [-left, left, -top, top];\n    Log.debug(TAG, 'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result);\n    return result;\n  }\n\n  private emitPullDownToBackEvent(): void {\n    Log.debug(TAG, 'emitPullDownToBackEvent');\n    if (this.isExiting) {\n      Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);\n      return;\n    }\n    this.broadCast.emit(Constants.PULL_DOWN_END, []);\n    this.isExiting = true;\n  }\n\n  private emitPullDownCancelEvent(): void {\n    Log.debug(TAG, 'emitPullDownCancelEvent');\n    this.broadCast.emit(Constants.PULL_DOWN_CANCEL, []);\n  }\n\n  onMoveStart(offsetX: number, offsetY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    // Reset offset at the beginning of dragging to prevent jumping\n    this.offset = [0, 0];\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Hide bars with zoom drag\n      this.broadCast.emit(Constants.HIDE_BARS, []);\n    }\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > 0) {\n      // Drop down return to hide details first\n      this.broadCast.emit(Constants.PULL_DOWN_START, []);\n    }\n  }\n\n  /**\n   * Each callback returns the displacement relative to the start point of the gesture\n   *\n   * @param offsetX offsetX\n   * @param offsetY offsetY\n   */\n  onMove(offsetX: number, offsetY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    let limits = this.evaluateOffsetRange(scale);\n    let measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let moveX = offsetX;\n    let moveY = offsetY;\n    let offX = measureX + moveX;\n    let offY = measureY + moveY;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // The offset in the X direction is always limited for non shrinking scenes\n      offX = MathUtils.clamp(offX, limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }\n    }\n    let tmpX = offX - measureX;\n    let tmpY = offY - measureY;\n    this.offset = [tmpX, tmpY];\n    this.emitTouchEvent();\n  }\n\n  onMoveEnd(offsetX, offsetY): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    Log.debug(TAG, 'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY);\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > Constants.PULL_DOWN_THRESHOLD) {\n      this.emitPullDownToBackEvent();\n    } else if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) {\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    } else {\n      this.emitDirectionChange();\n    }\n  }\n\n  onScaleStart(scale: number, centerX: number, centerY: number): void {\n    Log.info(TAG, 'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.scale = 1;\n    this.evaluateBounds();\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    this.center = this.evaluateCenter(centerX, centerY);\n  }\n\n  /**\n   * Calculates the percentage position of the current zoom center relative to the control\n   *\n   * @param centerX The absolute position of the touch point on the screen\n   * @param centerY The absolute position of the touch point on the screen\n   * @returns The percentage position of the current zoom center relative to the control\n   */\n  private evaluateCenter(centerX: number, centerY: number): number[] {\n    // Calculate the coordinates of the upper left corner of the control relative to\n    // the upper left corner of the current display\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n\n    // Get the touch coordinates relative to the control\n    let cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost);\n    let cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost);\n\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    let imgTopBound = imgDisplayBounds[1];\n\n    // When the touch center point is outside the picture display area, take the midpoint\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    } else {\n      if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }\n\n    // Calculate the percentage of the center point of the touch\n    let center: number[] = [cxRelativeToComp, cyRelativeToComp];\n    Log.debug(TAG, 'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale);\n    return center;\n  }\n\n  onScale(scale: number): void {\n    Log.debug(TAG, 'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    this.scale = scale;\n    if (this.lastScale * scale <= Constants.COMPONENT_SCALE_FLOOR) {\n      this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;\n    }\n    if (this.lastScale * scale >= this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR) {\n      this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;\n    }\n    this.emitTouchEvent();\n  }\n\n  onScaleEnd(): void {\n    Log.info(TAG, 'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) && scale <= this.maxScale) {\n      Log.info(TAG, 'does not need to do animation: ' + scale);\n      this.emitDirectionChange();\n      return;\n    }\n    let animationEndMatrix: Matrix4.Matrix4Transit = null;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) <= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Zoom out too small to trigger the restored animation\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();\n    } else {\n      // Do the animation of retracting maxScale when zooming in\n      animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);\n    }\n    this.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4);\n  }\n\n  private evaluateAnimeMatrix(scale: number, center: number[]): Matrix4.Matrix4Transit {\n    let offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ];\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      // The offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    };\n    let animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'evaluateAnimeMatrix scale:' + scale + ', center:' + center);\n    return animationEndMatrix;\n  }\n\n  /**\n   * Double click to trigger zoom.\n   * If the current scale is less than or equal to 1, zoom to doubleTapScale;\n   * If the current scale is greater than 1, scale to 1;\n   *\n   * @param centerX the location of double click\n   * @param centerY the location of double click\n   */\n  onDoubleTap(centerX: number, centerY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);\n      return;\n    }\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    let matrix: Matrix4TransitWithMatrix4x4;\n    Log.debug(TAG, 'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale);\n    if (Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Scale to original state when scale is greater than 1\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;\n    } else {\n      // The zoom in status calculates the zoom in center according to the click position\n      let center = this.evaluateCenter(centerX, centerY);\n      // When the picture aspect ratio is less than the control aspect ratio,\n      // centerX is set to 0.5,\n      // whereas centerY is set to 0.5 to ensure that\n      // the short side is close to the side after double clicking and enlarging\n      if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }\n      matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;\n    }\n    Log.debug(TAG, 'onDoubleTap matrix: ' + matrix.matrix4x4);\n    this.startAnimation(matrix);\n  }\n\n  reset(): void {\n    this.lastOffset = [0, 0];\n    this.offset = [0, 0];\n    this.lastScale = 1.0;\n    this.scale = 1;\n    this.hasReachLeft = true;\n    this.hasReachRight = true;\n    this.hasReachTop = true;\n    this.hasReachBottom = true;\n    this.isInAnimation = false;\n    this.isExiting = false;\n    this.emitDirectionChange();\n  }\n\n  onDisAppear(): void {\n    Log.info(TAG, 'onDisAppear');\n  }\n\n  private startAnimation(animationEndMatrix: Matrix4TransitWithMatrix4x4): void {\n    this.isInAnimation = true;\n    let animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    };\n    Log.debug(TAG, 'animationEndMatrix: ' + animationEndMatrix.matrix4x4);\n    this.broadCast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix]);\n  }\n\n  /**\n   * At the end of the animation,\n   * refresh the current parameter values according to the end transformation matrix to ensure continuity and\n   * prevent jumping during the next gesture operation\n   *\n   * @param animationEndMatrix Transformation matrix at end\n   */\n  onAnimationEnd(animationEndMatrix: Matrix4TransitWithMatrix4x4): void {\n    if (animationEndMatrix != null) {\n      Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);\n      this.lastScale = animationEndMatrix.matrix4x4[0];\n      this.scale = 1;\n      this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];\n      this.offset = [0, 0];\n      this.evaluateBounds();\n      this.isInAnimation = false;\n      this.emitDirectionChange();\n    }\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import Matrix4 from '@ohos.matrix4';",
      "children": [
        {
          "type": "ImportClause",
          "label": "Matrix4",
          "children": [
            {
              "type": "Identifier",
              "label": "Matrix4",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.matrix4'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { UserFileDataItem } from '../base/UserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ UserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ UserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Broadcast } from './Broadcast';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Broadcast }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Broadcast }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Broadcast",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Broadcast",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./Broadcast'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MathUtils } from '../utils/MathUtils';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MathUtils }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MathUtils }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MathUtils",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MathUtils",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/MathUtils'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Constants } from '../constants/BrowserConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Constants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Constants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Constants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Constants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/BrowserConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from './ScreenManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'EventPipeline'",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'EventPipeline'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'EventPipeline'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'EventPipeline'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "InterfaceDeclaration",
      "label": "export interface Matrix4TransitWithMatrix4x4 extends Matrix4.Matrix4Transit {\n  matrix4x4: number[];\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "Matrix4TransitWithMatrix4x4",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends Matrix4.Matrix4Transit",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "Matrix4.Matrix4Transit",
              "children": [
                {
                  "type": "PropertyAccessExpression",
                  "label": "Matrix4.Matrix4Transit",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Matrix4",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "Matrix4Transit",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertySignature",
          "label": "matrix4x4: number[];",
          "children": [
            {
              "type": "Identifier",
              "label": "matrix4x4",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "InterfaceDeclaration",
      "label": "export interface AnimationOption {\n  duration: number,\n  curve: Curve\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "AnimationOption",
          "children": []
        },
        {
          "type": "PropertySignature",
          "label": "duration: number,",
          "children": [
            {
              "type": "Identifier",
              "label": "duration",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertySignature",
          "label": "curve: Curve",
          "children": [
            {
              "type": "Identifier",
              "label": "curve",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Curve",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Curve",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class EventPipeline {\n\n  // last offset\n  private lastOffset: number[] = [0, 0];\n\n  // offset\n  private offset: number[] = [0, 0];\n\n  // default scale\n  private defaultScale = 1.0;\n\n  // last scale\n  private lastScale = 1.0;\n\n  // scale\n  private scale = 1.0;\n\n  // the zoom center point is a percentage position relative to the control, not an absolute position\n  private center: number[] = [Constants.CENTER_DEFAULT, Constants.CENTER_DEFAULT];\n\n  // leftmost zoom Center，(1 - leftMost)is rightmost zoom Center\n  private leftMost = 0.0;\n\n  // top zoom center，(1 - topMost)is bottom zoom center\n  private topMost = 0.0;\n\n  // double tap scale\n  private doubleTapScale = 1.0;\n\n  // max scale\n  private maxScale = 1.0;\n\n  // has reached the far left\n  private hasReachLeft = true;\n\n  // has reached the far right\n  private hasReachRight = true;\n\n  // has reached the far top\n  private hasReachTop = true;\n\n  // has reached the far bottom\n  private hasReachBottom = true;\n\n  // Broadcast\n  private broadCast: Broadcast;\n\n  // item\n  private item: UserFileDataItem;\n\n  // timeStamp\n  private timeStamp: string;\n\n  // width\n  private width: number;\n\n  // height\n  private height: number;\n\n  // Large display control width\n  private componentWidth: number = vp2px(screenManager.getWinWidth());\n\n  // Large display control height\n  private componentHeight = vp2px(screenManager.getWinHeight());\n\n  // is now in animation\n  private isInAnimation = false;\n\n  // pull down to return flag to prevent multiple triggers\n  private isExiting = false;\n\n  private updateMatrix: Function;\n\n  constructor(broadCastParam: Broadcast, item: UserFileDataItem, timeStamp: string, updateMatrix: Function) {\n    this.broadCast = broadCastParam;\n    this.item = item;\n    this.timeStamp = timeStamp;\n    this.updateMatrix = updateMatrix;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }\n\n  onDataChanged(item: UserFileDataItem): void {\n    this.item = item;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }\n\n  setDefaultScale(scale): void {\n    this.defaultScale = scale;\n    this.lastScale = scale;\n  }\n\n  onComponentSizeChanged(): void {\n    this.evaluateScales();\n  }\n\n  onTouch(event: TouchEvent): void {\n    Log.debug(TAG, 'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    if (event.type === TouchType.Down || event.type === TouchType.Up) {\n      this.emitDirectionChange();\n    }\n\n    if (event.type === TouchType.Up) {\n      this.lastOffset = this.evaluateOffset();\n      this.lastScale = this.lastScale * this.scale;\n      this.scale = 1;\n      this.offset = [0, 0];\n    }\n  }\n\n  private emitDirectionChange(): void {\n\n    /**\n     * reachLeft reachRight scale>1，only five possible situations（when scale<=1,reachLeft、reachRight is true）：\n     * T T T：Vertical\n     * T T F：Vertical（initial state）\n     * T F T：Vertical | Left\n     * F T T：Vertical | Right\n     * F F T：All\n     */\n    let direction;\n    let scale = this.lastScale * this.scale;\n    let isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS));\n    if (!this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = PanDirection.All;\n    } else if (!this.hasReachLeft && this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    } else if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }\n\n    Log.info(TAG, 'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction);\n    if (this.isExiting) {\n      return;\n    }\n\n    if (direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number)) ||\n    direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))) {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);\n    } else {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);\n    }\n    this.broadCast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction]);\n  }\n\n  private evaluateOffset(): number[] {\n    Log.info(TAG, 'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset);\n    let centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale;\n    let centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale;\n    let offsetX = this.lastOffset[0] + this.offset[0] + centerX;\n    let offsetY = this.lastOffset[1] + this.offset[1] + centerY;\n    Log.debug(TAG, 'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY);\n    return [offsetX, offsetY];\n  }\n\n  private emitTouchEvent(): void {\n    let offset: number[];\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      offset = this.evaluateOffset();\n      // the offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let moveX = offset[0];\n    let moveY = offset[1];\n    Log.debug(TAG, 'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY);\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    };\n    let matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale);\n    this.updateMatrix(matrix);\n    this.evaluateBounds();\n  }\n\n  private evaluateScales(): void {\n    if (this.width * this.componentHeight < this.componentWidth * this.height) {\n      // The aspect ratio is less than the display aspect ratio of the control\n      // the height of the control is equal to the height of the picture\n      this.maxScale = this.height / this.componentHeight;\n      // Double click the enlarged scale to ensure that the left and right boundaries are filled\n      this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;\n      // leftMost = (1 - dspW / compW) / 2 = (1 - compH * imgW / imgH / compW) / 2\n      this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;\n      this.topMost = 0.0;\n    } else if (this.width * this.componentHeight === this.componentWidth * this.height) {\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    } else {\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }\n\n    this.maxScale = Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL);\n    if (this.doubleTapScale > this.maxScale) {\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n    }\n    Log.debug(TAG, 'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale);\n  }\n\n  private evaluateCompBounds(): number[] {\n    let scale = this.lastScale * this.scale;\n    let offset = this.evaluateOffset();\n    let result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ];\n    Log.debug(TAG, 'evaluateCompBounds: ' + result);\n    return result;\n  }\n\n  private evaluateImgDisplaySize(): number[] {\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let scale = this.lastScale * this.scale * screenScale;\n    let imgDisplayWidth = 0;\n    let imgDisplayHeight = 0;\n    imgDisplayWidth = this.width * scale;\n    imgDisplayHeight = this.height * scale;\n    return [imgDisplayWidth, imgDisplayHeight];\n  }\n\n  private evaluateImgDisplayBounds(): number[] {\n    // For the left boundary of the component,\n    // the offset caused by amplification is - compw * (scale-1) / 2,\n    // plus the offset of the gesture to obtain the left boundary of the control.\n    // The same is true for the upper boundary\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n    let imgLeftBound = 0;\n    let imgTopBound = 0;\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      imgLeftBound = leftTop[0];\n      imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;\n    } else {\n      // Control width minus the picture width, divided by 2,\n      // you can get the distance from the left of the picture to the left of the control.\n      // Plus offsetX is the left boundary of the picture currently displayed\n      imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];\n      imgTopBound = leftTop[1];\n    }\n    return [imgLeftBound, imgTopBound];\n  }\n\n  // Calculate picture display boundary\n  private evaluateBounds(): void {\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    this.hasReachLeft = imgLeftBound > -1;\n    this.hasReachRight = imgLeftBound + imgDisplayWidth < this.componentWidth + 1;\n  }\n\n  /**\n   * Calculate the upper and lower bounds of offset in X and Y directions under the current scale\n   *\n   * @param scale The display magnification of the current control, usually this.lastScale * this.scale\n   * @returns 0&1 X-direction offset lower & upper bound, 2&3 Y-direction offset lower & upper bound\n   */\n  private evaluateOffsetRange(scale: number): number[] {\n    let result: number[] = [0, 0, 0, 0];\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2;\n    let top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2;\n    top = Math.max(top, 0);\n    left = Math.max(left, 0);\n    result = [-left, left, -top, top];\n    Log.debug(TAG, 'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result);\n    return result;\n  }\n\n  private emitPullDownToBackEvent(): void {\n    Log.debug(TAG, 'emitPullDownToBackEvent');\n    if (this.isExiting) {\n      Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);\n      return;\n    }\n    this.broadCast.emit(Constants.PULL_DOWN_END, []);\n    this.isExiting = true;\n  }\n\n  private emitPullDownCancelEvent(): void {\n    Log.debug(TAG, 'emitPullDownCancelEvent');\n    this.broadCast.emit(Constants.PULL_DOWN_CANCEL, []);\n  }\n\n  onMoveStart(offsetX: number, offsetY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    // Reset offset at the beginning of dragging to prevent jumping\n    this.offset = [0, 0];\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Hide bars with zoom drag\n      this.broadCast.emit(Constants.HIDE_BARS, []);\n    }\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > 0) {\n      // Drop down return to hide details first\n      this.broadCast.emit(Constants.PULL_DOWN_START, []);\n    }\n  }\n\n  /**\n   * Each callback returns the displacement relative to the start point of the gesture\n   *\n   * @param offsetX offsetX\n   * @param offsetY offsetY\n   */\n  onMove(offsetX: number, offsetY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    let limits = this.evaluateOffsetRange(scale);\n    let measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let moveX = offsetX;\n    let moveY = offsetY;\n    let offX = measureX + moveX;\n    let offY = measureY + moveY;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // The offset in the X direction is always limited for non shrinking scenes\n      offX = MathUtils.clamp(offX, limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }\n    }\n    let tmpX = offX - measureX;\n    let tmpY = offY - measureY;\n    this.offset = [tmpX, tmpY];\n    this.emitTouchEvent();\n  }\n\n  onMoveEnd(offsetX, offsetY): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    Log.debug(TAG, 'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY);\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > Constants.PULL_DOWN_THRESHOLD) {\n      this.emitPullDownToBackEvent();\n    } else if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) {\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    } else {\n      this.emitDirectionChange();\n    }\n  }\n\n  onScaleStart(scale: number, centerX: number, centerY: number): void {\n    Log.info(TAG, 'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.scale = 1;\n    this.evaluateBounds();\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    this.center = this.evaluateCenter(centerX, centerY);\n  }\n\n  /**\n   * Calculates the percentage position of the current zoom center relative to the control\n   *\n   * @param centerX The absolute position of the touch point on the screen\n   * @param centerY The absolute position of the touch point on the screen\n   * @returns The percentage position of the current zoom center relative to the control\n   */\n  private evaluateCenter(centerX: number, centerY: number): number[] {\n    // Calculate the coordinates of the upper left corner of the control relative to\n    // the upper left corner of the current display\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n\n    // Get the touch coordinates relative to the control\n    let cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost);\n    let cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost);\n\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    let imgTopBound = imgDisplayBounds[1];\n\n    // When the touch center point is outside the picture display area, take the midpoint\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    } else {\n      if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }\n\n    // Calculate the percentage of the center point of the touch\n    let center: number[] = [cxRelativeToComp, cyRelativeToComp];\n    Log.debug(TAG, 'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale);\n    return center;\n  }\n\n  onScale(scale: number): void {\n    Log.debug(TAG, 'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    this.scale = scale;\n    if (this.lastScale * scale <= Constants.COMPONENT_SCALE_FLOOR) {\n      this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;\n    }\n    if (this.lastScale * scale >= this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR) {\n      this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;\n    }\n    this.emitTouchEvent();\n  }\n\n  onScaleEnd(): void {\n    Log.info(TAG, 'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) && scale <= this.maxScale) {\n      Log.info(TAG, 'does not need to do animation: ' + scale);\n      this.emitDirectionChange();\n      return;\n    }\n    let animationEndMatrix: Matrix4.Matrix4Transit = null;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) <= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Zoom out too small to trigger the restored animation\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();\n    } else {\n      // Do the animation of retracting maxScale when zooming in\n      animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);\n    }\n    this.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4);\n  }\n\n  private evaluateAnimeMatrix(scale: number, center: number[]): Matrix4.Matrix4Transit {\n    let offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ];\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      // The offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    };\n    let animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'evaluateAnimeMatrix scale:' + scale + ', center:' + center);\n    return animationEndMatrix;\n  }\n\n  /**\n   * Double click to trigger zoom.\n   * If the current scale is less than or equal to 1, zoom to doubleTapScale;\n   * If the current scale is greater than 1, scale to 1;\n   *\n   * @param centerX the location of double click\n   * @param centerY the location of double click\n   */\n  onDoubleTap(centerX: number, centerY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);\n      return;\n    }\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    let matrix: Matrix4TransitWithMatrix4x4;\n    Log.debug(TAG, 'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale);\n    if (Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Scale to original state when scale is greater than 1\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;\n    } else {\n      // The zoom in status calculates the zoom in center according to the click position\n      let center = this.evaluateCenter(centerX, centerY);\n      // When the picture aspect ratio is less than the control aspect ratio,\n      // centerX is set to 0.5,\n      // whereas centerY is set to 0.5 to ensure that\n      // the short side is close to the side after double clicking and enlarging\n      if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }\n      matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;\n    }\n    Log.debug(TAG, 'onDoubleTap matrix: ' + matrix.matrix4x4);\n    this.startAnimation(matrix);\n  }\n\n  reset(): void {\n    this.lastOffset = [0, 0];\n    this.offset = [0, 0];\n    this.lastScale = 1.0;\n    this.scale = 1;\n    this.hasReachLeft = true;\n    this.hasReachRight = true;\n    this.hasReachTop = true;\n    this.hasReachBottom = true;\n    this.isInAnimation = false;\n    this.isExiting = false;\n    this.emitDirectionChange();\n  }\n\n  onDisAppear(): void {\n    Log.info(TAG, 'onDisAppear');\n  }\n\n  private startAnimation(animationEndMatrix: Matrix4TransitWithMatrix4x4): void {\n    this.isInAnimation = true;\n    let animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    };\n    Log.debug(TAG, 'animationEndMatrix: ' + animationEndMatrix.matrix4x4);\n    this.broadCast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix]);\n  }\n\n  /**\n   * At the end of the animation,\n   * refresh the current parameter values according to the end transformation matrix to ensure continuity and\n   * prevent jumping during the next gesture operation\n   *\n   * @param animationEndMatrix Transformation matrix at end\n   */\n  onAnimationEnd(animationEndMatrix: Matrix4TransitWithMatrix4x4): void {\n    if (animationEndMatrix != null) {\n      Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);\n      this.lastScale = animationEndMatrix.matrix4x4[0];\n      this.scale = 1;\n      this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];\n      this.offset = [0, 0];\n      this.evaluateBounds();\n      this.isInAnimation = false;\n      this.emitDirectionChange();\n    }\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "EventPipeline",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "private lastOffset: number[] = [0, 0];",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "lastOffset",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[0, 0]",
              "children": [
                {
                  "type": "FirstLiteralToken",
                  "label": "0",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private offset: number[] = [0, 0];",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "offset",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[0, 0]",
              "children": [
                {
                  "type": "FirstLiteralToken",
                  "label": "0",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private defaultScale = 1.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "defaultScale",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "1.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private lastScale = 1.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "lastScale",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "1.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private scale = 1.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "scale",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "1.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private center: number[] = [Constants.CENTER_DEFAULT, Constants.CENTER_DEFAULT];",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "center",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayLiteralExpression",
              "label": "[Constants.CENTER_DEFAULT, Constants.CENTER_DEFAULT]",
              "children": [
                {
                  "type": "PropertyAccessExpression",
                  "label": "Constants.CENTER_DEFAULT",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Constants",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "CENTER_DEFAULT",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "PropertyAccessExpression",
                  "label": "Constants.CENTER_DEFAULT",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Constants",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "CENTER_DEFAULT",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private leftMost = 0.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "leftMost",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "0.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private topMost = 0.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "topMost",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "0.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private doubleTapScale = 1.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "doubleTapScale",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "1.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private maxScale = 1.0;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "maxScale",
              "children": []
            },
            {
              "type": "FirstLiteralToken",
              "label": "1.0",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private hasReachLeft = true;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "hasReachLeft",
              "children": []
            },
            {
              "type": "TrueKeyword",
              "label": "true",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private hasReachRight = true;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "hasReachRight",
              "children": []
            },
            {
              "type": "TrueKeyword",
              "label": "true",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private hasReachTop = true;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "hasReachTop",
              "children": []
            },
            {
              "type": "TrueKeyword",
              "label": "true",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private hasReachBottom = true;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "hasReachBottom",
              "children": []
            },
            {
              "type": "TrueKeyword",
              "label": "true",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private broadCast: Broadcast;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "broadCast",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Broadcast",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Broadcast",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private item: UserFileDataItem;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "item",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "UserFileDataItem",
              "children": [
                {
                  "type": "Identifier",
                  "label": "UserFileDataItem",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private timeStamp: string;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "timeStamp",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private width: number;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "width",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private height: number;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "height",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private componentWidth: number = vp2px(screenManager.getWinWidth());",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "componentWidth",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "CallExpression",
              "label": "vp2px(screenManager.getWinWidth())",
              "children": [
                {
                  "type": "Identifier",
                  "label": "vp2px",
                  "children": []
                },
                {
                  "type": "CallExpression",
                  "label": "screenManager.getWinWidth()",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "screenManager.getWinWidth",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "screenManager",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "getWinWidth",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private componentHeight = vp2px(screenManager.getWinHeight());",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "componentHeight",
              "children": []
            },
            {
              "type": "CallExpression",
              "label": "vp2px(screenManager.getWinHeight())",
              "children": [
                {
                  "type": "Identifier",
                  "label": "vp2px",
                  "children": []
                },
                {
                  "type": "CallExpression",
                  "label": "screenManager.getWinHeight()",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "screenManager.getWinHeight",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "screenManager",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "getWinHeight",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private isInAnimation = false;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "isInAnimation",
              "children": []
            },
            {
              "type": "FalseKeyword",
              "label": "false",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private isExiting = false;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "isExiting",
              "children": []
            },
            {
              "type": "FalseKeyword",
              "label": "false",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private updateMatrix: Function;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "updateMatrix",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Function",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Function",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(broadCastParam: Broadcast, item: UserFileDataItem, timeStamp: string, updateMatrix: Function) {\n    this.broadCast = broadCastParam;\n    this.item = item;\n    this.timeStamp = timeStamp;\n    this.updateMatrix = updateMatrix;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "broadCastParam: Broadcast",
              "children": [
                {
                  "type": "Identifier",
                  "label": "broadCastParam",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Broadcast",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Broadcast",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "item: UserFileDataItem",
              "children": [
                {
                  "type": "Identifier",
                  "label": "item",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "timeStamp: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "timeStamp",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "updateMatrix: Function",
              "children": [
                {
                  "type": "Identifier",
                  "label": "updateMatrix",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Function",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Function",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.broadCast = broadCastParam;\n    this.item = item;\n    this.timeStamp = timeStamp;\n    this.updateMatrix = updateMatrix;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast = broadCastParam;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.broadCast = broadCastParam",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "broadCast",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "broadCastParam",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.item = item;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.item = item",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.item",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "item",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "item",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.timeStamp = timeStamp;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.timeStamp = timeStamp",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.timeStamp",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "timeStamp",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "timeStamp",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.updateMatrix = updateMatrix;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.updateMatrix = updateMatrix",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.updateMatrix",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "updateMatrix",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "updateMatrix",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.width",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.item.imgWidth === 0",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgWidth",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgWidth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.DEFAULT_SIZE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DEFAULT_SIZE",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.item.imgWidth",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "imgWidth",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.height",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.item.imgHeight === 0",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgHeight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgHeight",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.DEFAULT_SIZE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DEFAULT_SIZE",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.item.imgHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "imgHeight",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateScales();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateScales()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateScales",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateScales",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onDataChanged(item: UserFileDataItem): void {\n    this.item = item;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onDataChanged",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "item: UserFileDataItem",
              "children": [
                {
                  "type": "Identifier",
                  "label": "item",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.item = item;\n    this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;\n    this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;\n    this.evaluateScales();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.item = item;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.item = item",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.item",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "item",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "item",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width = this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.width",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "width",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "this.item.imgWidth === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgWidth",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.item.imgWidth === 0",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgWidth",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgWidth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.DEFAULT_SIZE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DEFAULT_SIZE",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.item.imgWidth",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "imgWidth",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.height = this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.height",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "height",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "this.item.imgHeight === 0 ? MediaConstants.DEFAULT_SIZE : this.item.imgHeight",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.item.imgHeight === 0",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgHeight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgHeight",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.DEFAULT_SIZE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DEFAULT_SIZE",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.item.imgHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "imgHeight",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateScales();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateScales()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateScales",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateScales",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setDefaultScale(scale): void {\n    this.defaultScale = scale;\n    this.lastScale = scale;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setDefaultScale",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "scale",
              "children": [
                {
                  "type": "Identifier",
                  "label": "scale",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.defaultScale = scale;\n    this.lastScale = scale;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.defaultScale = scale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.defaultScale = scale",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.defaultScale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "defaultScale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "scale",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.lastScale = scale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.lastScale = scale",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.lastScale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "lastScale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "scale",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onComponentSizeChanged(): void {\n    this.evaluateScales();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onComponentSizeChanged",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.evaluateScales();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateScales();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateScales()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateScales",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateScales",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onTouch(event: TouchEvent): void {\n    Log.debug(TAG, 'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    if (event.type === TouchType.Down || event.type === TouchType.Up) {\n      this.emitDirectionChange();\n    }\n\n    if (event.type === TouchType.Up) {\n      this.lastOffset = this.evaluateOffset();\n      this.lastScale = this.lastScale * this.scale;\n      this.scale = 1;\n      this.offset = [0, 0];\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onTouch",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "event: TouchEvent",
              "children": [
                {
                  "type": "Identifier",
                  "label": "event",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "TouchEvent",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TouchEvent",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    if (event.type === TouchType.Down || event.type === TouchType.Up) {\n      this.emitDirectionChange();\n    }\n\n    if (event.type === TouchType.Up) {\n      this.lastOffset = this.evaluateOffset();\n      this.lastScale = this.lastScale * this.scale;\n      this.scale = 1;\n      this.offset = [0, 0];\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', ' + this.isExiting",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'onTouch trigger: ' + event.type + ', ' + this.isInAnimation + ', '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onTouch trigger: ' + event.type + ', ' + this.isInAnimation",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'onTouch trigger: ' + event.type + ', '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'onTouch trigger: ' + event.type",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'onTouch trigger: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "event.type",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "event",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "type",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.isInAnimation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isInAnimation",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isExiting",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isExiting",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (event.type === TouchType.Down || event.type === TouchType.Up) {\n      this.emitDirectionChange();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "event.type === TouchType.Down || event.type === TouchType.Up",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "event.type === TouchType.Down",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "event.type",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "type",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "TouchType.Down",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "TouchType",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "Down",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "event.type === TouchType.Up",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "event.type",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "event",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "type",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "TouchType.Up",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "TouchType",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "Up",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.emitDirectionChange();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.emitDirectionChange();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.emitDirectionChange()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.emitDirectionChange",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emitDirectionChange",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (event.type === TouchType.Up) {\n      this.lastOffset = this.evaluateOffset();\n      this.lastScale = this.lastScale * this.scale;\n      this.scale = 1;\n      this.offset = [0, 0];\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "event.type === TouchType.Up",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "event.type",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "event",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "type",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "TouchType.Up",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "TouchType",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "Up",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.lastOffset = this.evaluateOffset();\n      this.lastScale = this.lastScale * this.scale;\n      this.scale = 1;\n      this.offset = [0, 0];\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.lastOffset = this.evaluateOffset();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastOffset = this.evaluateOffset()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastOffset",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastOffset",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "this.evaluateOffset()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.evaluateOffset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "evaluateOffset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.lastScale = this.lastScale * this.scale;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale = this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.lastScale * this.scale",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.scale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.scale = 1;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.scale = 1",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.offset = [0, 0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.offset = [0, 0]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.offset",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "offset",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[0, 0]",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private emitDirectionChange(): void {\n\n    /**\n     * reachLeft reachRight scale>1，only five possible situations（when scale<=1,reachLeft、reachRight is true）：\n     * T T T：Vertical\n     * T T F：Vertical（initial state）\n     * T F T：Vertical | Left\n     * F T T：Vertical | Right\n     * F F T：All\n     */\n    let direction;\n    let scale = this.lastScale * this.scale;\n    let isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS));\n    if (!this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = PanDirection.All;\n    } else if (!this.hasReachLeft && this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    } else if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }\n\n    Log.info(TAG, 'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction);\n    if (this.isExiting) {\n      return;\n    }\n\n    if (direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number)) ||\n    direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))) {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);\n    } else {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);\n    }\n    this.broadCast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction]);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "emitDirectionChange",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n\n    /**\n     * reachLeft reachRight scale>1，only five possible situations（when scale<=1,reachLeft、reachRight is true）：\n     * T T T：Vertical\n     * T T F：Vertical（initial state）\n     * T F T：Vertical | Left\n     * F T T：Vertical | Right\n     * F F T：All\n     */\n    let direction;\n    let scale = this.lastScale * this.scale;\n    let isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS));\n    if (!this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = PanDirection.All;\n    } else if (!this.hasReachLeft && this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    } else if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }\n\n    Log.info(TAG, 'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction);\n    if (this.isExiting) {\n      return;\n    }\n\n    if (direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number)) ||\n    direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))) {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);\n    } else {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);\n    }\n    this.broadCast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction]);\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let direction;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let direction",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "direction",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "direction",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS));",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isEnlarged = Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isEnlarged",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "scale.toFixed",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.defaultScale.toFixed",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (!this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = PanDirection.All;\n    } else if (!this.hasReachLeft && this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    } else if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "!this.hasReachLeft && !this.hasReachRight && isEnlarged",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "!this.hasReachLeft && !this.hasReachRight",
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!this.hasReachLeft",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.hasReachLeft",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "hasReachLeft",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "!this.hasReachRight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.hasReachRight",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "hasReachRight",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "isEnlarged",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      direction = PanDirection.All;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "direction = PanDirection.All;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "direction = PanDirection.All",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "direction",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "PanDirection.All",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "PanDirection",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "All",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (!this.hasReachLeft && this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    } else if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "!this.hasReachLeft && this.hasReachRight && isEnlarged",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "!this.hasReachLeft && this.hasReachRight",
                              "children": [
                                {
                                  "type": "PrefixUnaryExpression",
                                  "label": "!this.hasReachLeft",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.hasReachLeft",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "hasReachLeft",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.hasReachRight",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "hasReachRight",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AmpersandAmpersandToken",
                              "label": "&&",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isEnlarged",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "direction = (PanDirection.Vertical as number) | (PanDirection.Right as number);",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "direction = (PanDirection.Vertical as number) | (PanDirection.Right as number)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "direction",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(PanDirection.Vertical as number) | (PanDirection.Right as number)",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(PanDirection.Vertical as number)",
                                          "children": [
                                            {
                                              "type": "AsExpression",
                                              "label": "PanDirection.Vertical as number",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "PanDirection.Vertical",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "PanDirection",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Vertical",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "NumberKeyword",
                                                  "label": "number",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BarToken",
                                          "label": "|",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(PanDirection.Right as number)",
                                          "children": [
                                            {
                                              "type": "AsExpression",
                                              "label": "PanDirection.Right as number",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "PanDirection.Right",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "PanDirection",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Right",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "NumberKeyword",
                                                  "label": "number",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (this.hasReachLeft && !this.hasReachRight && isEnlarged) {\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    } else {\n      direction = PanDirection.Vertical;\n    }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.hasReachLeft && !this.hasReachRight && isEnlarged",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.hasReachLeft && !this.hasReachRight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.hasReachLeft",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "hasReachLeft",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AmpersandAmpersandToken",
                                      "label": "&&",
                                      "children": []
                                    },
                                    {
                                      "type": "PrefixUnaryExpression",
                                      "label": "!this.hasReachRight",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.hasReachRight",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "hasReachRight",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isEnlarged",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n      direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "direction = (PanDirection.Vertical as number) | (PanDirection.Left as number);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "direction = (PanDirection.Vertical as number) | (PanDirection.Left as number)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "direction",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "(PanDirection.Vertical as number) | (PanDirection.Left as number)",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(PanDirection.Vertical as number)",
                                              "children": [
                                                {
                                                  "type": "AsExpression",
                                                  "label": "PanDirection.Vertical as number",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "PanDirection.Vertical",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PanDirection",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Vertical",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "NumberKeyword",
                                                      "label": "number",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "BarToken",
                                              "label": "|",
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(PanDirection.Left as number)",
                                              "children": [
                                                {
                                                  "type": "AsExpression",
                                                  "label": "PanDirection.Left as number",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "PanDirection.Left",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "PanDirection",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Left",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "NumberKeyword",
                                                      "label": "number",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n      direction = PanDirection.Vertical;\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "direction = PanDirection.Vertical;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "direction = PanDirection.Vertical",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "direction",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "PanDirection.Vertical",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "PanDirection",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "Vertical",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: ' + direction",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale + ', direction: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale ' + scale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom +\n    ', scale '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', ' + this.hasReachBottom",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop + ', '",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', ' + this.hasReachTop",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight + ', '",
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', ' + this.hasReachRight",
                                                          "children": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "label": "'emitDirectionChange reaches: ' + this.hasReachLeft + ', '",
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "'emitDirectionChange reaches: ' + this.hasReachLeft",
                                                                  "children": [
                                                                    {
                                                                      "type": "StringLiteral",
                                                                      "label": "'emitDirectionChange reaches: '",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PlusToken",
                                                                      "label": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "this.hasReachLeft",
                                                                      "children": [
                                                                        {
                                                                          "type": "ThisKeyword",
                                                                          "label": "this",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "hasReachLeft",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "PlusToken",
                                                                  "label": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringLiteral",
                                                                  "label": "', '",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.hasReachRight",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hasReachRight",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "', '",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.hasReachTop",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "hasReachTop",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "', '",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.hasReachBottom",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hasReachBottom",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', scale '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', direction: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "direction",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.isExiting",
                      "children": [
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "isExiting",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number)) ||\n    direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))) {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);\n    } else {\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number)) ||\n    direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "direction === (PanDirection.Vertical as number) || direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number))",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "direction === (PanDirection.Vertical as number)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "direction",
                                  "children": []
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(PanDirection.Vertical as number)",
                                  "children": [
                                    {
                                      "type": "AsExpression",
                                      "label": "PanDirection.Vertical as number",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "PanDirection.Vertical",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "PanDirection",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "Vertical",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "NumberKeyword",
                                          "label": "number",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BarBarToken",
                              "label": "||",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "direction === ((PanDirection.Vertical as number) | (PanDirection.Left as number))",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "direction",
                                  "children": []
                                },
                                {
                                  "type": "EqualsEqualsEqualsToken",
                                  "label": "===",
                                  "children": []
                                },
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "((PanDirection.Vertical as number) | (PanDirection.Left as number))",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(PanDirection.Vertical as number) | (PanDirection.Left as number)",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(PanDirection.Vertical as number)",
                                          "children": [
                                            {
                                              "type": "AsExpression",
                                              "label": "PanDirection.Vertical as number",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "PanDirection.Vertical",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "PanDirection",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Vertical",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "NumberKeyword",
                                                  "label": "number",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BarToken",
                                          "label": "|",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(PanDirection.Left as number)",
                                          "children": [
                                            {
                                              "type": "AsExpression",
                                              "label": "PanDirection.Left as number",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "PanDirection.Left",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "PanDirection",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Left",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "NumberKeyword",
                                                  "label": "number",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "direction === ((PanDirection.Vertical as number) | (PanDirection.Right as number))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "direction",
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "ParenthesizedExpression",
                              "label": "((PanDirection.Vertical as number) | (PanDirection.Right as number))",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "(PanDirection.Vertical as number) | (PanDirection.Right as number)",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(PanDirection.Vertical as number)",
                                      "children": [
                                        {
                                          "type": "AsExpression",
                                          "label": "PanDirection.Vertical as number",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "PanDirection.Vertical",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "PanDirection",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "Vertical",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NumberKeyword",
                                              "label": "number",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BarToken",
                                      "label": "|",
                                      "children": []
                                    },
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(PanDirection.Right as number)",
                                      "children": [
                                        {
                                          "type": "AsExpression",
                                          "label": "PanDirection.Right as number",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "PanDirection.Right",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "PanDirection",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "Right",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "NumberKeyword",
                                              "label": "number",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false]);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [false])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.broadCast.emit",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.broadCast",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "broadCast",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.SET_DISABLE_SWIPE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "SET_DISABLE_SWIPE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[false]",
                                  "children": [
                                    {
                                      "type": "FalseKeyword",
                                      "label": "false",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true]);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.broadCast.emit(Constants.SET_DISABLE_SWIPE, [true])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.broadCast.emit",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.broadCast",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "broadCast",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.SET_DISABLE_SWIPE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "SET_DISABLE_SWIPE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[true]",
                                  "children": [
                                    {
                                      "type": "TrueKeyword",
                                      "label": "true",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.broadCast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.broadCast",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "Constants.DIRECTION_CHANGE + this.item.uri",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.DIRECTION_CHANGE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DIRECTION_CHANGE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.uri",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.timeStamp",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "timeStamp",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[direction]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "direction",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateOffset(): number[] {\n    Log.info(TAG, 'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset);\n    let centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale;\n    let centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale;\n    let offsetX = this.lastOffset[0] + this.offset[0] + centerX;\n    let offsetY = this.lastOffset[1] + this.offset[1] + centerY;\n    Log.debug(TAG, 'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY);\n    return [offsetX, offsetY];\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateOffset",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset);\n    let centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale;\n    let centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale;\n    let offsetX = this.lastOffset[0] + this.offset[0] + centerX;\n    let offsetY = this.lastOffset[1] + this.offset[1] + centerY;\n    Log.debug(TAG, 'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY);\n    return [offsetX, offsetY];\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: ' + this.offset",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'evaluateOffset lastOffset: ' + this.lastOffset + ', offset: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'evaluateOffset lastOffset: ' + this.lastOffset",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'evaluateOffset lastOffset: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastOffset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastOffset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', offset: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.offset",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "offset",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "centerX = (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "centerX",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "(this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale) * this.lastScale",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "(this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth * (this.defaultScale - this.scale)",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(this.center[0] - Constants.CENTER_DEFAULT)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.center[0] - Constants.CENTER_DEFAULT",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "this.center[0]",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.center",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "center",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstLiteralToken",
                                                      "label": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.CENTER_DEFAULT",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "CENTER_DEFAULT",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentWidth",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentWidth",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(this.defaultScale - this.scale)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.defaultScale - this.scale",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "MinusToken",
                                              "label": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.scale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "centerY = (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "centerY",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "(this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale) * this.lastScale",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "(this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight * (this.defaultScale - this.scale)",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(this.center[1] - Constants.CENTER_DEFAULT)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.center[1] - Constants.CENTER_DEFAULT",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "this.center[1]",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.center",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "center",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstLiteralToken",
                                                      "label": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.CENTER_DEFAULT",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "CENTER_DEFAULT",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentHeight",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentHeight",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(this.defaultScale - this.scale)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.defaultScale - this.scale",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "MinusToken",
                                              "label": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.scale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let offsetX = this.lastOffset[0] + this.offset[0] + centerX;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offsetX = this.lastOffset[0] + this.offset[0] + centerX",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offsetX = this.lastOffset[0] + this.offset[0] + centerX",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offsetX",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastOffset[0] + this.offset[0] + centerX",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.lastOffset[0] + this.offset[0]",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.lastOffset[0]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.lastOffset",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "lastOffset",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.offset[0]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.offset",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "offset",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "centerX",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let offsetY = this.lastOffset[1] + this.offset[1] + centerY;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offsetY = this.lastOffset[1] + this.offset[1] + centerY",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offsetY = this.lastOffset[1] + this.offset[1] + centerY",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offsetY",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastOffset[1] + this.offset[1] + centerY",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.lastOffset[1] + this.offset[1]",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.lastOffset[1]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.lastOffset",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "lastOffset",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "this.offset[1]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.offset",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "offset",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "centerY",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateOffset offsetX: ' + offsetX + ', offsetY: ' + offsetY",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'evaluateOffset offsetX: ' + offsetX + ', offsetY: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'evaluateOffset offsetX: ' + offsetX",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'evaluateOffset offsetX: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "offsetX",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', offsetY: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offsetY",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return [offsetX, offsetY];",
                  "children": [
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[offsetX, offsetY]",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "offsetX",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "offsetY",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private emitTouchEvent(): void {\n    let offset: number[];\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      offset = this.evaluateOffset();\n      // the offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let moveX = offset[0];\n    let moveY = offset[1];\n    Log.debug(TAG, 'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY);\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    };\n    let matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale);\n    this.updateMatrix(matrix);\n    this.evaluateBounds();\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "emitTouchEvent",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let offset: number[];\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      offset = this.evaluateOffset();\n      // the offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let moveX = offset[0];\n    let moveY = offset[1];\n    Log.debug(TAG, 'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY);\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    };\n    let matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale);\n    this.updateMatrix(matrix);\n    this.evaluateBounds();\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let offset: number[];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offset: number[]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offset: number[]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offset",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      offset = this.evaluateOffset();\n      // the offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let limits = this.evaluateOffsetRange(scale);\n      offset = this.evaluateOffset();\n      // the offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let limits = this.evaluateOffsetRange(scale);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let limits = this.evaluateOffsetRange(scale)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "limits = this.evaluateOffsetRange(scale)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "limits",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.evaluateOffsetRange(scale)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.evaluateOffsetRange",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "evaluateOffsetRange",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "offset = this.evaluateOffset();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "offset = this.evaluateOffset()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offset",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "this.evaluateOffset()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.evaluateOffset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "evaluateOffset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1])",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "offset[0]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "offset",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "MathUtils.clamp(offset[0], limits[0], limits[1])",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MathUtils.clamp",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MathUtils",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "clamp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "offset[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offset",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "limits[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "limits",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "limits[1]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "limits",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      } else {\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "scale.toFixed",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.defaultScale.toFixed",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        // cannot pull down to return, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3]);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "offset[1] = MathUtils.clamp(offset[1], limits[2], limits[3])",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "offset[1]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "offset",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "MathUtils.clamp(offset[1], limits[2], limits[3])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MathUtils.clamp",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MathUtils",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "clamp",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "offset[1]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "offset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[2]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[3]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "3",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        // can pull down to return to the scene, and only limit y to drag upward, limit the lower bound\n        offset[1] = Math.max(limits[2], offset[1]);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "offset[1] = Math.max(limits[2], offset[1]);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "offset[1] = Math.max(limits[2], offset[1])",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "offset[1]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "offset",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "Math.max(limits[2], offset[1])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Math.max",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Math",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "max",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[2]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "offset[1]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "offset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "offset = [0, 0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "offset = [0, 0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offset",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[0, 0]",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let moveX = offset[0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let moveX = offset[0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "moveX = offset[0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "moveX",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "offset[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offset",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let moveY = offset[1];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let moveY = offset[1]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "moveY = offset[1]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "moveY",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "offset[1]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offset",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'emitTouchEvent moveX: ' + moveX + ', moveY: ' + moveY",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'emitTouchEvent moveX: ' + moveX + ', moveY: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'emitTouchEvent moveX: ' + moveX",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'emitTouchEvent moveX: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "moveX",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', moveY: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "moveY",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scaleOption",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4.ScaleOption",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "Matrix4.ScaleOption",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Matrix4",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ScaleOption",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      x: scale,\n      y: scale,\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "x: scale",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "y: scale",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "translateOption: Matrix4.TranslateOption = {\n      x: moveX,\n      y: moveY\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "translateOption",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4.TranslateOption",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "Matrix4.TranslateOption",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Matrix4",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TranslateOption",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      x: moveX,\n      y: moveY\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "x: moveX",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "moveX",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "y: moveY",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "moveY",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "matrix = Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "matrix",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Matrix4.identity()\n      .scale(scaleOption)\n      .translate(translateOption)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Matrix4.identity()\n      .scale(scaleOption)\n      .translate",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Matrix4.identity()\n      .scale(scaleOption)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Matrix4.identity()\n      .scale",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Matrix4.identity()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Matrix4.identity",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Matrix4",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "identity",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scaleOption",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "translate",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "translateOption",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "copy",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', ' + this.scale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale + ', '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: ' + this.lastScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center + ', scale: '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: ' + this.center",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset +\n    ',center: '",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: ' + this.offset",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'emitTouchEvent lastOffset: ' + this.lastOffset + ', offset: '",
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'emitTouchEvent lastOffset: ' + this.lastOffset",
                                                          "children": [
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'emitTouchEvent lastOffset: '",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.lastOffset",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "lastOffset",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "', offset: '",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.offset",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "offset",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "',center: '",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.center",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "center",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', scale: '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.scale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "scale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.updateMatrix(matrix);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.updateMatrix(matrix)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.updateMatrix",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "updateMatrix",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "matrix",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateBounds();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateBounds()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateBounds",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateBounds",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateScales(): void {\n    if (this.width * this.componentHeight < this.componentWidth * this.height) {\n      // The aspect ratio is less than the display aspect ratio of the control\n      // the height of the control is equal to the height of the picture\n      this.maxScale = this.height / this.componentHeight;\n      // Double click the enlarged scale to ensure that the left and right boundaries are filled\n      this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;\n      // leftMost = (1 - dspW / compW) / 2 = (1 - compH * imgW / imgH / compW) / 2\n      this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;\n      this.topMost = 0.0;\n    } else if (this.width * this.componentHeight === this.componentWidth * this.height) {\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    } else {\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }\n\n    this.maxScale = Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL);\n    if (this.doubleTapScale > this.maxScale) {\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n    }\n    Log.debug(TAG, 'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateScales",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.width * this.componentHeight < this.componentWidth * this.height) {\n      // The aspect ratio is less than the display aspect ratio of the control\n      // the height of the control is equal to the height of the picture\n      this.maxScale = this.height / this.componentHeight;\n      // Double click the enlarged scale to ensure that the left and right boundaries are filled\n      this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;\n      // leftMost = (1 - dspW / compW) / 2 = (1 - compH * imgW / imgH / compW) / 2\n      this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;\n      this.topMost = 0.0;\n    } else if (this.width * this.componentHeight === this.componentWidth * this.height) {\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    } else {\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }\n\n    this.maxScale = Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL);\n    if (this.doubleTapScale > this.maxScale) {\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n    }\n    Log.debug(TAG, 'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale);\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.width * this.componentHeight < this.componentWidth * this.height) {\n      // The aspect ratio is less than the display aspect ratio of the control\n      // the height of the control is equal to the height of the picture\n      this.maxScale = this.height / this.componentHeight;\n      // Double click the enlarged scale to ensure that the left and right boundaries are filled\n      this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;\n      // leftMost = (1 - dspW / compW) / 2 = (1 - compH * imgW / imgH / compW) / 2\n      this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;\n      this.topMost = 0.0;\n    } else if (this.width * this.componentHeight === this.componentWidth * this.height) {\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    } else {\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width * this.componentHeight < this.componentWidth * this.height",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.width * this.componentHeight",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.width",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.componentHeight",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "componentHeight",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.componentWidth * this.height",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.componentWidth",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "componentWidth",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.height",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // The aspect ratio is less than the display aspect ratio of the control\n      // the height of the control is equal to the height of the picture\n      this.maxScale = this.height / this.componentHeight;\n      // Double click the enlarged scale to ensure that the left and right boundaries are filled\n      this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;\n      // leftMost = (1 - dspW / compW) / 2 = (1 - compH * imgW / imgH / compW) / 2\n      this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;\n      this.topMost = 0.0;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.maxScale = this.height / this.componentHeight;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.maxScale = this.height / this.componentHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.maxScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "maxScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.height / this.componentHeight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.height",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "height",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.componentHeight",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "componentHeight",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.doubleTapScale = this.componentWidth * this.height / this.width / this.componentHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.doubleTapScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "doubleTapScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.componentWidth * this.height / this.width / this.componentHeight",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.componentWidth * this.height / this.width",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.componentWidth * this.height",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentWidth",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentWidth",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.height",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "height",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.width",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "width",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.componentHeight",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "componentHeight",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.leftMost = (1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.leftMost",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "leftMost",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "(1 - this.componentHeight * this.width / this.height / this.componentWidth) / Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(1 - this.componentHeight * this.width / this.height / this.componentWidth)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "1 - this.componentHeight * this.width / this.height / this.componentWidth",
                                          "children": [
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            },
                                            {
                                              "type": "MinusToken",
                                              "label": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.componentHeight * this.width / this.height / this.componentWidth",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.componentHeight * this.width / this.height",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "this.componentHeight * this.width",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.componentHeight",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "componentHeight",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "AsteriskToken",
                                                          "label": "*",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.width",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "width",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "SlashToken",
                                                      "label": "/",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.height",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "height",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "SlashToken",
                                                  "label": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.componentWidth",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "componentWidth",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.NUMBER_2",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "NUMBER_2",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.topMost = 0.0;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.topMost = 0.0",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.topMost",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "topMost",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0.0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (this.width * this.componentHeight === this.componentWidth * this.height) {\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    } else {\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.width * this.componentHeight === this.componentWidth * this.height",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.width * this.componentHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.width",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "width",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentHeight",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentHeight",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentWidth * this.height",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentWidth",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentWidth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.height",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "height",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      // The aspect ratio is equal to the display aspect ratio of the control\n      this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n      this.leftMost = 0;\n      this.topMost = 0;\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.doubleTapScale = Constants.SAME_RATIO_SCALE_FACTOR",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.doubleTapScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "doubleTapScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.SAME_RATIO_SCALE_FACTOR",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "SAME_RATIO_SCALE_FACTOR",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.maxScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "maxScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.doubleTapScale",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "doubleTapScale",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.MAX_SCALE_EXTRA_FACTOR",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "MAX_SCALE_EXTRA_FACTOR",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.leftMost = 0;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.leftMost = 0",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.leftMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "leftMost",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.topMost = 0;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.topMost = 0",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.topMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "topMost",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      // The aspect ratio is greater than the display aspect ratio of the control\n      // the width of the control is equal to the width of the picture\n      this.maxScale = this.width / this.componentWidth;\n      // Double click the enlarged scale to ensure that the top and bottom fill the boundary\n      this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;\n      this.leftMost = 0.0;\n      this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "this.maxScale = this.width / this.componentWidth;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.maxScale = this.width / this.componentWidth",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.maxScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "maxScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.width / this.componentWidth",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.width",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "width",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentWidth",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentWidth",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.doubleTapScale = this.componentHeight * this.width / this.height / this.componentWidth",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.doubleTapScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "doubleTapScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.componentHeight * this.width / this.height / this.componentWidth",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.componentHeight * this.width / this.height",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.componentHeight * this.width",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.componentHeight",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "componentHeight",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AsteriskToken",
                                                  "label": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.width",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "width",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SlashToken",
                                              "label": "/",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.height",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "height",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentWidth",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentWidth",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.leftMost = 0.0;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.leftMost = 0.0",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.leftMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "leftMost",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0.0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2;",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.topMost = (1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.topMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "topMost",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstAssignment",
                                      "label": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(1 - this.componentWidth * this.height / this.width / this.componentHeight) / Constants.NUMBER_2",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(1 - this.componentWidth * this.height / this.width / this.componentHeight)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "1 - this.componentWidth * this.height / this.width / this.componentHeight",
                                              "children": [
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.componentWidth * this.height / this.width / this.componentHeight",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "this.componentWidth * this.height / this.width",
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "this.componentWidth * this.height",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.componentWidth",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "componentWidth",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "AsteriskToken",
                                                              "label": "*",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.height",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "height",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SlashToken",
                                                          "label": "/",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.width",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "width",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "SlashToken",
                                                      "label": "/",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.componentHeight",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "componentHeight",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_2",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.maxScale = Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.maxScale = Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.maxScale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "maxScale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Math.max(this.maxScale, Constants.COMPONENT_SCALE_CEIL)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Math.max",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Math",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "max",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.maxScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "maxScale",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Constants.COMPONENT_SCALE_CEIL",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Constants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "COMPONENT_SCALE_CEIL",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.doubleTapScale > this.maxScale) {\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.doubleTapScale > this.maxScale",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.doubleTapScale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "doubleTapScale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.maxScale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "maxScale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.maxScale = this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.maxScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "maxScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.doubleTapScale * Constants.MAX_SCALE_EXTRA_FACTOR",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.doubleTapScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "doubleTapScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.MAX_SCALE_EXTRA_FACTOR",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "MAX_SCALE_EXTRA_FACTOR",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: ' + this.doubleTapScale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost + '], double: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ',' + this.topMost",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost + ','",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: [' + this.leftMost",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale + ', most: ['",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: ' + this.maxScale",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight +\n    ',max: '",
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*' + this.componentHeight",
                                                          "children": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth + '*'",
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &' +\n    this.componentWidth",
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "'evaluateScales: ' + this.width + '*' + this.height + ' &'",
                                                                      "children": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "label": "'evaluateScales: ' + this.width + '*' + this.height",
                                                                          "children": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "label": "'evaluateScales: ' + this.width + '*'",
                                                                              "children": [
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "label": "'evaluateScales: ' + this.width",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "StringLiteral",
                                                                                      "label": "'evaluateScales: '",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PlusToken",
                                                                                      "label": "+",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PropertyAccessExpression",
                                                                                      "label": "this.width",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "ThisKeyword",
                                                                                          "label": "this",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "label": "width",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "PlusToken",
                                                                                  "label": "+",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "'*'",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PlusToken",
                                                                              "label": "+",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "PropertyAccessExpression",
                                                                              "label": "this.height",
                                                                              "children": [
                                                                                {
                                                                                  "type": "ThisKeyword",
                                                                                  "label": "this",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "label": "height",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PlusToken",
                                                                          "label": "+",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "' &'",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PlusToken",
                                                                      "label": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "PropertyAccessExpression",
                                                                      "label": "this.componentWidth",
                                                                      "children": [
                                                                        {
                                                                          "type": "ThisKeyword",
                                                                          "label": "this",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "label": "componentWidth",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "PlusToken",
                                                                  "label": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringLiteral",
                                                                  "label": "'*'",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.componentHeight",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "componentHeight",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "',max: '",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.maxScale",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "maxScale",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "', most: ['",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.leftMost",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "leftMost",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "','",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.topMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "topMost",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'], double: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.doubleTapScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "doubleTapScale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateCompBounds(): number[] {\n    let scale = this.lastScale * this.scale;\n    let offset = this.evaluateOffset();\n    let result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ];\n    Log.debug(TAG, 'evaluateCompBounds: ' + result);\n    return result;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateCompBounds",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let scale = this.lastScale * this.scale;\n    let offset = this.evaluateOffset();\n    let result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ];\n    Log.debug(TAG, 'evaluateCompBounds: ' + result);\n    return result;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let offset = this.evaluateOffset();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offset = this.evaluateOffset()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offset = this.evaluateOffset()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offset",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateOffset()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateOffset",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateOffset",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "result: number[] = [\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "result",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[\n      offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2,\n      offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2\n    ]",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "offset[0] - this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "offset[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offset",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.componentWidth * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)))",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentWidth",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentWidth",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)))",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Number",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "scale.toFixed",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "scale",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toFixed",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "Constants.RESERVED_DIGITS",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Constants",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "RESERVED_DIGITS",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "MinusToken",
                                                      "label": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Number",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.defaultScale.toFixed",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "this.defaultScale",
                                                                  "children": [
                                                                    {
                                                                      "type": "ThisKeyword",
                                                                      "label": "this",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "defaultScale",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toFixed",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "Constants.RESERVED_DIGITS",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Constants",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "RESERVED_DIGITS",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_2",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "offset[1] - this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "offset[1]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offset",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) / Constants.NUMBER_2",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.componentHeight * (Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)))",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentHeight",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentHeight",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)))",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) - Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Number",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "scale.toFixed",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "scale",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toFixed",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "Constants.RESERVED_DIGITS",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Constants",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "RESERVED_DIGITS",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "MinusToken",
                                                      "label": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Number",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.defaultScale.toFixed",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "this.defaultScale",
                                                                  "children": [
                                                                    {
                                                                      "type": "ThisKeyword",
                                                                      "label": "this",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "defaultScale",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "toFixed",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "Constants.RESERVED_DIGITS",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Constants",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "RESERVED_DIGITS",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_2",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'evaluateCompBounds: ' + result);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'evaluateCompBounds: ' + result)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateCompBounds: ' + result",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'evaluateCompBounds: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "result",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return result;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "result",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateImgDisplaySize(): number[] {\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let scale = this.lastScale * this.scale * screenScale;\n    let imgDisplayWidth = 0;\n    let imgDisplayHeight = 0;\n    imgDisplayWidth = this.width * scale;\n    imgDisplayHeight = this.height * scale;\n    return [imgDisplayWidth, imgDisplayHeight];\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateImgDisplaySize",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let scale = this.lastScale * this.scale * screenScale;\n    let imgDisplayWidth = 0;\n    let imgDisplayHeight = 0;\n    imgDisplayWidth = this.width * scale;\n    imgDisplayHeight = this.height * scale;\n    return [imgDisplayWidth, imgDisplayHeight];\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let screenScale = 1;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let screenScale = 1",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "screenScale = 1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "screenScale",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let widthScale = this.componentWidth / this.item.imgWidth;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let widthScale = this.componentWidth / this.item.imgWidth",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "widthScale = this.componentWidth / this.item.imgWidth",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "widthScale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentWidth / this.item.imgWidth",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentWidth",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentWidth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgWidth",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgWidth",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let heightScale = this.componentHeight / this.item.imgHeight;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let heightScale = this.componentHeight / this.item.imgHeight",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "heightScale = this.componentHeight / this.item.imgHeight",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "heightScale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentHeight / this.item.imgHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentHeight",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentHeight",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgHeight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgHeight",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "screenScale = widthScale > heightScale ? heightScale : widthScale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "screenScale = widthScale > heightScale ? heightScale : widthScale",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "screenScale",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "widthScale > heightScale ? heightScale : widthScale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "widthScale > heightScale",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "widthScale",
                                  "children": []
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "heightScale",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "heightScale",
                              "children": []
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "widthScale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale * screenScale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale * screenScale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale * screenScale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale * screenScale",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.lastScale * this.scale",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.scale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "screenScale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayWidth = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayWidth = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayWidth = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayWidth",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayHeight = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayHeight = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayHeight = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayHeight",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "imgDisplayWidth = this.width * scale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "imgDisplayWidth = this.width * scale",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "imgDisplayWidth",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.width * scale",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.width",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "imgDisplayHeight = this.height * scale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "imgDisplayHeight = this.height * scale",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "imgDisplayHeight",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.height * scale",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.height",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return [imgDisplayWidth, imgDisplayHeight];",
                  "children": [
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[imgDisplayWidth, imgDisplayHeight]",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "imgDisplayWidth",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "imgDisplayHeight",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateImgDisplayBounds(): number[] {\n    // For the left boundary of the component,\n    // the offset caused by amplification is - compw * (scale-1) / 2,\n    // plus the offset of the gesture to obtain the left boundary of the control.\n    // The same is true for the upper boundary\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n    let imgLeftBound = 0;\n    let imgTopBound = 0;\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      imgLeftBound = leftTop[0];\n      imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;\n    } else {\n      // Control width minus the picture width, divided by 2,\n      // you can get the distance from the left of the picture to the left of the control.\n      // Plus offsetX is the left boundary of the picture currently displayed\n      imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];\n      imgTopBound = leftTop[1];\n    }\n    return [imgLeftBound, imgTopBound];\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateImgDisplayBounds",
              "children": []
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    // For the left boundary of the component,\n    // the offset caused by amplification is - compw * (scale-1) / 2,\n    // plus the offset of the gesture to obtain the left boundary of the control.\n    // The same is true for the upper boundary\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n    let imgLeftBound = 0;\n    let imgTopBound = 0;\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      imgLeftBound = leftTop[0];\n      imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;\n    } else {\n      // Control width minus the picture width, divided by 2,\n      // you can get the distance from the left of the picture to the left of the control.\n      // Plus offsetX is the left boundary of the picture currently displayed\n      imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];\n      imgTopBound = leftTop[1];\n    }\n    return [imgLeftBound, imgTopBound];\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let leftTop = this.evaluateCompBounds();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let leftTop = this.evaluateCompBounds()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "leftTop = this.evaluateCompBounds()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "leftTop",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateCompBounds()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateCompBounds",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateCompBounds",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplaySize: number[] = this.evaluateImgDisplaySize();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplaySize: number[] = this.evaluateImgDisplaySize()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplaySize: number[] = this.evaluateImgDisplaySize()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplaySize",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateImgDisplaySize()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateImgDisplaySize",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateImgDisplaySize",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayWidth = imgDisplaySize[0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayWidth = imgDisplaySize[0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayWidth = imgDisplaySize[0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayWidth",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplaySize[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplaySize",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayHeight = imgDisplaySize[1];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayHeight = imgDisplaySize[1]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayHeight = imgDisplaySize[1]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayHeight",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplaySize[1]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplaySize",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgLeftBound = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgLeftBound = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgLeftBound = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgLeftBound",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgTopBound = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgTopBound = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgTopBound = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgTopBound",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      imgLeftBound = leftTop[0];\n      imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;\n    } else {\n      // Control width minus the picture width, divided by 2,\n      // you can get the distance from the left of the picture to the left of the control.\n      // Plus offsetX is the left boundary of the picture currently displayed\n      imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];\n      imgTopBound = leftTop[1];\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width / this.height > this.componentWidth / this.componentHeight",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.width / this.height",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.width",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.height",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.componentWidth / this.componentHeight",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.componentWidth",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "componentWidth",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.componentHeight",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "componentHeight",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      imgLeftBound = leftTop[0];\n      imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "imgLeftBound = leftTop[0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "imgLeftBound = leftTop[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgLeftBound",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "leftTop[0]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "leftTop",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "imgTopBound = leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgTopBound",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "leftTop[1] + (this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "leftTop[1]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "leftTop",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.componentHeight * scale - imgDisplayHeight) / Constants.NUMBER_2",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(this.componentHeight * scale - imgDisplayHeight)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.componentHeight * scale - imgDisplayHeight",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.componentHeight * scale",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.componentHeight",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "componentHeight",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "AsteriskToken",
                                                      "label": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "imgDisplayHeight",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_2",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // Control width minus the picture width, divided by 2,\n      // you can get the distance from the left of the picture to the left of the control.\n      // Plus offsetX is the left boundary of the picture currently displayed\n      imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];\n      imgTopBound = leftTop[1];\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "imgLeftBound = (this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgLeftBound",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "(this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2 + leftTop[0]",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.componentWidth * scale - imgDisplayWidth) / Constants.NUMBER_2",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(this.componentWidth * scale - imgDisplayWidth)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.componentWidth * scale - imgDisplayWidth",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.componentWidth * scale",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.componentWidth",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "componentWidth",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "AsteriskToken",
                                                      "label": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "imgDisplayWidth",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_2",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "leftTop[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "leftTop",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "imgTopBound = leftTop[1];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "imgTopBound = leftTop[1]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgTopBound",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "leftTop[1]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "leftTop",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return [imgLeftBound, imgTopBound];",
                  "children": [
                    {
                      "type": "ArrayLiteralExpression",
                      "label": "[imgLeftBound, imgTopBound]",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "imgLeftBound",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "imgTopBound",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateBounds(): void {\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    this.hasReachLeft = imgLeftBound > -1;\n    this.hasReachRight = imgLeftBound + imgDisplayWidth < this.componentWidth + 1;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateBounds",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    this.hasReachLeft = imgLeftBound > -1;\n    this.hasReachRight = imgLeftBound + imgDisplayWidth < this.componentWidth + 1;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplaySize: number[] = this.evaluateImgDisplaySize();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplaySize: number[] = this.evaluateImgDisplaySize()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplaySize: number[] = this.evaluateImgDisplaySize()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplaySize",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateImgDisplaySize()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateImgDisplaySize",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateImgDisplaySize",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayWidth = imgDisplaySize[0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayWidth = imgDisplaySize[0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayWidth = imgDisplaySize[0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayWidth",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplaySize[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplaySize",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayBounds = this.evaluateImgDisplayBounds();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayBounds = this.evaluateImgDisplayBounds()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayBounds = this.evaluateImgDisplayBounds()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayBounds",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateImgDisplayBounds()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateImgDisplayBounds",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateImgDisplayBounds",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgLeftBound = imgDisplayBounds[0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgLeftBound = imgDisplayBounds[0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgLeftBound = imgDisplayBounds[0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgLeftBound",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplayBounds[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplayBounds",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hasReachLeft = imgLeftBound > -1;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hasReachLeft = imgLeftBound > -1",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hasReachLeft",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hasReachLeft",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "imgLeftBound > -1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgLeftBound",
                              "children": []
                            },
                            {
                              "type": "GreaterThanToken",
                              "label": ">",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "-1",
                              "children": [
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hasReachRight = imgLeftBound + imgDisplayWidth < this.componentWidth + 1;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hasReachRight = imgLeftBound + imgDisplayWidth < this.componentWidth + 1",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hasReachRight",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hasReachRight",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "imgLeftBound + imgDisplayWidth < this.componentWidth + 1",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "imgLeftBound + imgDisplayWidth",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgLeftBound",
                                  "children": []
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplayWidth",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "FirstBinaryOperator",
                              "label": "<",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentWidth + 1",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentWidth",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentWidth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateOffsetRange(scale: number): number[] {\n    let result: number[] = [0, 0, 0, 0];\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2;\n    let top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2;\n    top = Math.max(top, 0);\n    left = Math.max(left, 0);\n    result = [-left, left, -top, top];\n    Log.debug(TAG, 'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result);\n    return result;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateOffsetRange",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "scale: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "scale",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let result: number[] = [0, 0, 0, 0];\n    let screenScale = 1;\n    let widthScale = this.componentWidth / this.item.imgWidth;\n    let heightScale = this.componentHeight / this.item.imgHeight;\n    screenScale = widthScale > heightScale ? heightScale : widthScale;\n    let left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2;\n    let top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2;\n    top = Math.max(top, 0);\n    left = Math.max(left, 0);\n    result = [-left, left, -top, top];\n    Log.debug(TAG, 'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result);\n    return result;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let result: number[] = [0, 0, 0, 0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let result: number[] = [0, 0, 0, 0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "result: number[] = [0, 0, 0, 0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "result",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[0, 0, 0, 0]",
                              "children": [
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let screenScale = 1;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let screenScale = 1",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "screenScale = 1",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "screenScale",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let widthScale = this.componentWidth / this.item.imgWidth;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let widthScale = this.componentWidth / this.item.imgWidth",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "widthScale = this.componentWidth / this.item.imgWidth",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "widthScale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentWidth / this.item.imgWidth",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentWidth",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentWidth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgWidth",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgWidth",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let heightScale = this.componentHeight / this.item.imgHeight;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let heightScale = this.componentHeight / this.item.imgHeight",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "heightScale = this.componentHeight / this.item.imgHeight",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "heightScale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentHeight / this.item.imgHeight",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentHeight",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentHeight",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.imgHeight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgHeight",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "screenScale = widthScale > heightScale ? heightScale : widthScale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "screenScale = widthScale > heightScale ? heightScale : widthScale",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "screenScale",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ConditionalExpression",
                          "label": "widthScale > heightScale ? heightScale : widthScale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "widthScale > heightScale",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "widthScale",
                                  "children": []
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "heightScale",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "QuestionToken",
                              "label": "?",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "heightScale",
                              "children": []
                            },
                            {
                              "type": "ColonToken",
                              "label": ":",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "widthScale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "left = (screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "left",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "(screenScale * scale * this.width - this.componentWidth) / Constants.NUMBER_2",
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(screenScale * scale * this.width - this.componentWidth)",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "screenScale * scale * this.width - this.componentWidth",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "screenScale * scale * this.width",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "screenScale * scale",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "screenScale",
                                                  "children": []
                                                },
                                                {
                                                  "type": "AsteriskToken",
                                                  "label": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.width",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "width",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MinusToken",
                                          "label": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentWidth",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentWidth",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "NUMBER_2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "top = (screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "top",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "(screenScale * scale * this.height - this.componentHeight) / Constants.NUMBER_2",
                              "children": [
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "(screenScale * scale * this.height - this.componentHeight)",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "screenScale * scale * this.height - this.componentHeight",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "screenScale * scale * this.height",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "screenScale * scale",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "screenScale",
                                                  "children": []
                                                },
                                                {
                                                  "type": "AsteriskToken",
                                                  "label": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.height",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "height",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MinusToken",
                                          "label": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentHeight",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentHeight",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "SlashToken",
                                  "label": "/",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.NUMBER_2",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "NUMBER_2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "top = Math.max(top, 0);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "top = Math.max(top, 0)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "top",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Math.max(top, 0)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Math.max",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Math",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "max",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "top",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "left = Math.max(left, 0);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "left = Math.max(left, 0)",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "left",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Math.max(left, 0)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Math.max",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Math",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "max",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "left",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "result = [-left, left, -top, top];",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "result = [-left, left, -top, top]",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "result",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[-left, left, -top, top]",
                          "children": [
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "-left",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "left",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "left",
                              "children": []
                            },
                            {
                              "type": "PrefixUnaryExpression",
                              "label": "-top",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "top",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "top",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: ' + result",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale + ', result: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'evaluateOffsetRange scale: ' + scale + ', defaultScale: ' + this.defaultScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'evaluateOffsetRange scale: ' + scale + ', defaultScale: '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'evaluateOffsetRange scale: ' + scale",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'evaluateOffsetRange scale: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', defaultScale: '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', result: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "result",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return result;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "result",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private emitPullDownToBackEvent(): void {\n    Log.debug(TAG, 'emitPullDownToBackEvent');\n    if (this.isExiting) {\n      Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);\n      return;\n    }\n    this.broadCast.emit(Constants.PULL_DOWN_END, []);\n    this.isExiting = true;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "emitPullDownToBackEvent",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'emitPullDownToBackEvent');\n    if (this.isExiting) {\n      Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);\n      return;\n    }\n    this.broadCast.emit(Constants.PULL_DOWN_END, []);\n    this.isExiting = true;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'emitPullDownToBackEvent');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'emitPullDownToBackEvent')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'emitPullDownToBackEvent'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isExiting) {\n      Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);\n      return;\n    }",
                  "children": [
                    {
                      "type": "PropertyAccessExpression",
                      "label": "this.isExiting",
                      "children": [
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "isExiting",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'emitPullDownToBack isExiting: ' + this.isExiting)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'emitPullDownToBack isExiting: ' + this.isExiting",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'emitPullDownToBack isExiting: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.isExiting",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isExiting",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast.emit(Constants.PULL_DOWN_END, []);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.broadCast.emit(Constants.PULL_DOWN_END, [])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.broadCast",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Constants.PULL_DOWN_END",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Constants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PULL_DOWN_END",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isExiting = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isExiting = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private emitPullDownCancelEvent(): void {\n    Log.debug(TAG, 'emitPullDownCancelEvent');\n    this.broadCast.emit(Constants.PULL_DOWN_CANCEL, []);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "emitPullDownCancelEvent",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'emitPullDownCancelEvent');\n    this.broadCast.emit(Constants.PULL_DOWN_CANCEL, []);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'emitPullDownCancelEvent');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'emitPullDownCancelEvent')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'emitPullDownCancelEvent'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast.emit(Constants.PULL_DOWN_CANCEL, []);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.broadCast.emit(Constants.PULL_DOWN_CANCEL, [])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.broadCast",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Constants.PULL_DOWN_CANCEL",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Constants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PULL_DOWN_CANCEL",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[]",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onMoveStart(offsetX: number, offsetY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    // Reset offset at the beginning of dragging to prevent jumping\n    this.offset = [0, 0];\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Hide bars with zoom drag\n      this.broadCast.emit(Constants.HIDE_BARS, []);\n    }\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > 0) {\n      // Drop down return to hide details first\n      this.broadCast.emit(Constants.PULL_DOWN_START, []);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onMoveStart",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "offsetX: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "offsetX",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "offsetY: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "offsetY",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    // Reset offset at the beginning of dragging to prevent jumping\n    this.offset = [0, 0];\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Hide bars with zoom drag\n      this.broadCast.emit(Constants.HIDE_BARS, []);\n    }\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > 0) {\n      // Drop down return to hide details first\n      this.broadCast.emit(Constants.PULL_DOWN_START, []);\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.offset = [0, 0];",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.offset = [0, 0]",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.offset",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[0, 0]",
                          "children": [
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateBounds();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateBounds()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateBounds",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateBounds",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Hide bars with zoom drag\n      this.broadCast.emit(Constants.HIDE_BARS, []);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // Hide bars with zoom drag\n      this.broadCast.emit(Constants.HIDE_BARS, []);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.broadCast.emit(Constants.HIDE_BARS, []);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.broadCast.emit(Constants.HIDE_BARS, [])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.broadCast.emit",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.broadCast",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "broadCast",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.HIDE_BARS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "HIDE_BARS",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > 0) {\n      // Drop down return to hide details first\n      this.broadCast.emit(Constants.PULL_DOWN_START, []);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > 0",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "offsetY > 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offsetY",
                              "children": []
                            },
                            {
                              "type": "GreaterThanToken",
                              "label": ">",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // Drop down return to hide details first\n      this.broadCast.emit(Constants.PULL_DOWN_START, []);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.broadCast.emit(Constants.PULL_DOWN_START, []);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.broadCast.emit(Constants.PULL_DOWN_START, [])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.broadCast.emit",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.broadCast",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "broadCast",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.PULL_DOWN_START",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "PULL_DOWN_START",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onMove(offsetX: number, offsetY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    let limits = this.evaluateOffsetRange(scale);\n    let measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let moveX = offsetX;\n    let moveY = offsetY;\n    let offX = measureX + moveX;\n    let offY = measureY + moveY;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // The offset in the X direction is always limited for non shrinking scenes\n      offX = MathUtils.clamp(offX, limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }\n    }\n    let tmpX = offX - measureX;\n    let tmpY = offY - measureY;\n    this.offset = [tmpX, tmpY];\n    this.emitTouchEvent();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onMove",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "offsetX: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "offsetX",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "offsetY: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "offsetY",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    let limits = this.evaluateOffsetRange(scale);\n    let measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale;\n    let moveX = offsetX;\n    let moveY = offsetY;\n    let offX = measureX + moveX;\n    let offY = measureY + moveY;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // The offset in the X direction is always limited for non shrinking scenes\n      offX = MathUtils.clamp(offX, limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }\n    }\n    let tmpX = offX - measureX;\n    let tmpY = offY - measureY;\n    this.offset = [tmpX, tmpY];\n    this.emitTouchEvent();\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let limits = this.evaluateOffsetRange(scale);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let limits = this.evaluateOffsetRange(scale)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "limits = this.evaluateOffsetRange(scale)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "limits",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateOffsetRange(scale)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateOffsetRange",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateOffsetRange",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "scale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "measureX = this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "measureX",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastOffset[0] + (this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "this.lastOffset[0]",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastOffset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastOffset",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "(this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale) * this.lastScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n    * (this.defaultScale - this.scale)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "(this.center[0] - Constants.CENTER_DEFAULT) * this.componentWidth",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(this.center[0] - Constants.CENTER_DEFAULT)",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.center[0] - Constants.CENTER_DEFAULT",
                                                  "children": [
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "this.center[0]",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.center",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "center",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "0",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "MinusToken",
                                                      "label": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "Constants.CENTER_DEFAULT",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Constants",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "CENTER_DEFAULT",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentWidth",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentWidth",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(this.defaultScale - this.scale)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.defaultScale - this.scale",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.defaultScale",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "defaultScale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.scale",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "measureY = this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "measureY",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastOffset[1] + (this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "this.lastOffset[1]",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastOffset",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastOffset",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "(this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale) * this.lastScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n    * (this.defaultScale - this.scale)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "(this.center[1] - Constants.CENTER_DEFAULT) * this.componentHeight",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(this.center[1] - Constants.CENTER_DEFAULT)",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.center[1] - Constants.CENTER_DEFAULT",
                                                  "children": [
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "this.center[1]",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.center",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "center",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "FirstLiteralToken",
                                                          "label": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "MinusToken",
                                                      "label": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "Constants.CENTER_DEFAULT",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Constants",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "CENTER_DEFAULT",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentHeight",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentHeight",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(this.defaultScale - this.scale)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.defaultScale - this.scale",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.defaultScale",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "defaultScale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "MinusToken",
                                                  "label": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.scale",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsteriskToken",
                                      "label": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let moveX = offsetX;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let moveX = offsetX",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "moveX = offsetX",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "moveX",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offsetX",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let moveY = offsetY;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let moveY = offsetY",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "moveY = offsetY",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "moveY",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offsetY",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let offX = measureX + moveX;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offX = measureX + moveX",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offX = measureX + moveX",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offX",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "measureX + moveX",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "measureX",
                                  "children": []
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "moveX",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let offY = measureY + moveY;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offY = measureY + moveY",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offY = measureY + moveY",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offY",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "measureY + moveY",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "measureY",
                                  "children": []
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "moveY",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // The offset in the X direction is always limited for non shrinking scenes\n      offX = MathUtils.clamp(offX, limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // The offset in the X direction is always limited for non shrinking scenes\n      offX = MathUtils.clamp(offX, limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "offX = MathUtils.clamp(offX, limits[0], limits[1]);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "offX = MathUtils.clamp(offX, limits[0], limits[1])",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offX",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "MathUtils.clamp(offX, limits[0], limits[1])",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MathUtils.clamp",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MathUtils",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "clamp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "offX",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "limits[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "limits",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "limits[1]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "limits",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "scale.toFixed",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.defaultScale.toFixed",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        // cannot drop down to return to the scene, limit y\n        offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "offY = MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3])",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offY",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "MathUtils.clamp(offY, limits[Constants.NUMBER_2], limits[Constants.NUMBER_3])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MathUtils.clamp",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MathUtils",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "clamp",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "offY",
                                              "children": []
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[Constants.NUMBER_2]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.NUMBER_2",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "NUMBER_2",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[Constants.NUMBER_3]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.NUMBER_3",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "NUMBER_3",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        // pull down to return to the scene, and only limit y to drag upward, that is, limit the lower bound\n        offY = Math.max(limits[Constants.NUMBER_2], offY);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "offY = Math.max(limits[Constants.NUMBER_2], offY);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "offY = Math.max(limits[Constants.NUMBER_2], offY)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offY",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "Math.max(limits[Constants.NUMBER_2], offY)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Math.max",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Math",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "max",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[Constants.NUMBER_2]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.NUMBER_2",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "NUMBER_2",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "offY",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let tmpX = offX - measureX;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let tmpX = offX - measureX",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "tmpX = offX - measureX",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "tmpX",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "offX - measureX",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offX",
                                  "children": []
                                },
                                {
                                  "type": "MinusToken",
                                  "label": "-",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "measureX",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let tmpY = offY - measureY;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let tmpY = offY - measureY",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "tmpY = offY - measureY",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "tmpY",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "offY - measureY",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offY",
                                  "children": []
                                },
                                {
                                  "type": "MinusToken",
                                  "label": "-",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "measureY",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.offset = [tmpX, tmpY];",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.offset = [tmpX, tmpY]",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.offset",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[tmpX, tmpY]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "tmpX",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "tmpY",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.emitTouchEvent();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.emitTouchEvent()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.emitTouchEvent",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "emitTouchEvent",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onMoveEnd(offsetX, offsetY): void {\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    Log.debug(TAG, 'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY);\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > Constants.PULL_DOWN_THRESHOLD) {\n      this.emitPullDownToBackEvent();\n    } else if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) {\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    } else {\n      this.emitDirectionChange();\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onMoveEnd",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "offsetX",
              "children": [
                {
                  "type": "Identifier",
                  "label": "offsetX",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "offsetY",
              "children": [
                {
                  "type": "Identifier",
                  "label": "offsetY",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    let scale = this.lastScale * this.scale;\n    Log.debug(TAG, 'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY);\n    if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > Constants.PULL_DOWN_THRESHOLD) {\n      this.emitPullDownToBackEvent();\n    } else if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) {\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    } else {\n      this.emitDirectionChange();\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onMoveEnd: scale is ' + scale + ' offsetY is ' + offsetY",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'onMoveEnd: scale is ' + scale + ' offsetY is '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onMoveEnd: scale is ' + scale",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'onMoveEnd: scale is '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "' offsetY is '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offsetY",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > Constants.PULL_DOWN_THRESHOLD) {\n      this.emitPullDownToBackEvent();\n    } else if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) {\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    } else {\n      this.emitDirectionChange();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS) && offsetY > Constants.PULL_DOWN_THRESHOLD",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "offsetY > Constants.PULL_DOWN_THRESHOLD",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offsetY",
                              "children": []
                            },
                            {
                              "type": "GreaterThanToken",
                              "label": ">",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Constants.PULL_DOWN_THRESHOLD",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Constants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "PULL_DOWN_THRESHOLD",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.emitPullDownToBackEvent();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.emitPullDownToBackEvent();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.emitPullDownToBackEvent()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.emitPullDownToBackEvent",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emitPullDownToBackEvent",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) {\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    } else {\n      this.emitDirectionChange();\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "scale.toFixed(Constants.RESERVED_DIGITS) === this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      // The reset animation is triggered when the threshold is not reached\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);\n      this.emitPullDownCancelEvent();\n    }",
                          "children": [
                            {
                              "type": "FirstStatement",
                              "label": "let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "scaleOption",
                                          "children": []
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "Matrix4.ScaleOption",
                                          "children": [
                                            {
                                              "type": "FirstNode",
                                              "label": "Matrix4.ScaleOption",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Matrix4",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "ScaleOption",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ObjectLiteralExpression",
                                          "label": "{\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                          "children": [
                                            {
                                              "type": "PropertyAssignment",
                                              "label": "x: this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "x",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.defaultScale",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "defaultScale",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAssignment",
                                              "label": "y: this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "y",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.defaultScale",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "defaultScale",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.startAnimation(Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.startAnimation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "startAnimation",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "AsExpression",
                                      "label": "Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Matrix4.identity().scale(scaleOption).copy()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Matrix4.identity().scale(scaleOption).copy",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "Matrix4.identity().scale(scaleOption)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "Matrix4.identity().scale",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "Matrix4.identity()",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "Matrix4.identity",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "Matrix4",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "identity",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "scale",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scaleOption",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "copy",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "TypeReference",
                                          "label": "Matrix4TransitWithMatrix4x4",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Matrix4TransitWithMatrix4x4",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "this.emitPullDownCancelEvent();",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.emitPullDownCancelEvent()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.emitPullDownCancelEvent",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "emitPullDownCancelEvent",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      this.emitDirectionChange();\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "this.emitDirectionChange();",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.emitDirectionChange()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.emitDirectionChange",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "emitDirectionChange",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onScaleStart(scale: number, centerX: number, centerY: number): void {\n    Log.info(TAG, 'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.scale = 1;\n    this.evaluateBounds();\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    this.center = this.evaluateCenter(centerX, centerY);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onScaleStart",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "scale: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "scale",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "centerX: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "centerX",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "centerY: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "centerY",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.scale = 1;\n    this.evaluateBounds();\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    this.center = this.evaluateCenter(centerX, centerY);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onScaleStart: ' + this.isInAnimation + ', ' + this.isExiting",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'onScaleStart: ' + this.isInAnimation + ', '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onScaleStart: ' + this.isInAnimation",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'onScaleStart: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.isInAnimation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isInAnimation",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isExiting",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isExiting",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.scale = 1;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.scale = 1",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.scale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateBounds();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateBounds()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateBounds",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateBounds",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast.emit(Constants.HIDE_BARS, []);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.broadCast.emit(Constants.HIDE_BARS, [])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.broadCast",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Constants.HIDE_BARS",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Constants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "HIDE_BARS",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.center = this.evaluateCenter(centerX, centerY);",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.center = this.evaluateCenter(centerX, centerY)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.center",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "center",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "this.evaluateCenter(centerX, centerY)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.evaluateCenter",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "evaluateCenter",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "centerX",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "centerY",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateCenter(centerX: number, centerY: number): number[] {\n    // Calculate the coordinates of the upper left corner of the control relative to\n    // the upper left corner of the current display\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n\n    // Get the touch coordinates relative to the control\n    let cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost);\n    let cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost);\n\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    let imgTopBound = imgDisplayBounds[1];\n\n    // When the touch center point is outside the picture display area, take the midpoint\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    } else {\n      if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }\n\n    // Calculate the percentage of the center point of the touch\n    let center: number[] = [cxRelativeToComp, cyRelativeToComp];\n    Log.debug(TAG, 'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale);\n    return center;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateCenter",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "centerX: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "centerX",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "centerY: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "centerY",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayType",
              "label": "number[]",
              "children": [
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    // Calculate the coordinates of the upper left corner of the control relative to\n    // the upper left corner of the current display\n    let scale = this.lastScale * this.scale;\n    let leftTop = this.evaluateCompBounds();\n\n    // Get the touch coordinates relative to the control\n    let cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost);\n    let cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost);\n\n    let imgDisplaySize: number[] = this.evaluateImgDisplaySize();\n    let imgDisplayWidth = imgDisplaySize[0];\n    let imgDisplayHeight = imgDisplaySize[1];\n\n    let imgDisplayBounds = this.evaluateImgDisplayBounds();\n    let imgLeftBound = imgDisplayBounds[0];\n    let imgTopBound = imgDisplayBounds[1];\n\n    // When the touch center point is outside the picture display area, take the midpoint\n    if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    } else {\n      if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }\n\n    // Calculate the percentage of the center point of the touch\n    let center: number[] = [cxRelativeToComp, cyRelativeToComp];\n    Log.debug(TAG, 'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale);\n    return center;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let leftTop = this.evaluateCompBounds();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let leftTop = this.evaluateCompBounds()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "leftTop = this.evaluateCompBounds()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "leftTop",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateCompBounds()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateCompBounds",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateCompBounds",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "cxRelativeToComp = MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cxRelativeToComp",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "MathUtils.clamp((centerX - leftTop[0])\n    / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MathUtils.clamp",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MathUtils",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "clamp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "(centerX - leftTop[0])\n    / (this.componentWidth * scale)",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(centerX - leftTop[0])",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "centerX - leftTop[0]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "centerX",
                                              "children": []
                                            },
                                            {
                                              "type": "MinusToken",
                                              "label": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "leftTop[0]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "leftTop",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(this.componentWidth * scale)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.componentWidth * scale",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentWidth",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentWidth",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.leftMost",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "leftMost",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "1 - this.leftMost",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "children": []
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.leftMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "leftMost",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "cyRelativeToComp = MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "cyRelativeToComp",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "MathUtils.clamp((centerY - leftTop[1])\n    / (this.componentHeight * scale), this.topMost, 1 - this.topMost)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "MathUtils.clamp",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "MathUtils",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "clamp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "(centerY - leftTop[1])\n    / (this.componentHeight * scale)",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(centerY - leftTop[1])",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "centerY - leftTop[1]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "centerY",
                                              "children": []
                                            },
                                            {
                                              "type": "MinusToken",
                                              "label": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "leftTop[1]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "leftTop",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(this.componentHeight * scale)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.componentHeight * scale",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.componentHeight",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "componentHeight",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.topMost",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "topMost",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "1 - this.topMost",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "1",
                                      "children": []
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.topMost",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "topMost",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplaySize: number[] = this.evaluateImgDisplaySize();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplaySize: number[] = this.evaluateImgDisplaySize()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplaySize: number[] = this.evaluateImgDisplaySize()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplaySize",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateImgDisplaySize()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateImgDisplaySize",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateImgDisplaySize",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayWidth = imgDisplaySize[0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayWidth = imgDisplaySize[0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayWidth = imgDisplaySize[0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayWidth",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplaySize[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplaySize",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayHeight = imgDisplaySize[1];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayHeight = imgDisplaySize[1]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayHeight = imgDisplaySize[1]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayHeight",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplaySize[1]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplaySize",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgDisplayBounds = this.evaluateImgDisplayBounds();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgDisplayBounds = this.evaluateImgDisplayBounds()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgDisplayBounds = this.evaluateImgDisplayBounds()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgDisplayBounds",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateImgDisplayBounds()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateImgDisplayBounds",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateImgDisplayBounds",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgLeftBound = imgDisplayBounds[0];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgLeftBound = imgDisplayBounds[0]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgLeftBound = imgDisplayBounds[0]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgLeftBound",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplayBounds[0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplayBounds",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let imgTopBound = imgDisplayBounds[1];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let imgTopBound = imgDisplayBounds[1]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "imgTopBound = imgDisplayBounds[1]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "imgTopBound",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "imgDisplayBounds[1]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "imgDisplayBounds",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.width / this.height > this.componentWidth / this.componentHeight) {\n      if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    } else {\n      if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.width / this.height > this.componentWidth / this.componentHeight",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.width / this.height",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.width",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "width",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.height",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "height",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.componentWidth / this.componentHeight",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.componentWidth",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "componentWidth",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "SlashToken",
                              "label": "/",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.componentHeight",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "componentHeight",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight) {\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "centerY < imgTopBound || centerY > imgTopBound + imgDisplayHeight",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "centerY < imgTopBound",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "centerY",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstBinaryOperator",
                                      "label": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgTopBound",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "centerY > imgTopBound + imgDisplayHeight",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "centerY",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "imgTopBound + imgDisplayHeight",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "imgTopBound",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "imgDisplayHeight",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        cyRelativeToComp = Constants.CENTER_DEFAULT;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "cyRelativeToComp = Constants.CENTER_DEFAULT;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "cyRelativeToComp = Constants.CENTER_DEFAULT",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "cyRelativeToComp",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.CENTER_DEFAULT",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "CENTER_DEFAULT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth) {\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "centerX < imgLeftBound || centerX > imgLeftBound + imgDisplayWidth",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "centerX < imgLeftBound",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "centerX",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstBinaryOperator",
                                      "label": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "imgLeftBound",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "BarBarToken",
                                  "label": "||",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "centerX > imgLeftBound + imgDisplayWidth",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "centerX",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "imgLeftBound + imgDisplayWidth",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "imgLeftBound",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "imgDisplayWidth",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        cxRelativeToComp = Constants.CENTER_DEFAULT;\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "cxRelativeToComp = Constants.CENTER_DEFAULT;",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "cxRelativeToComp = Constants.CENTER_DEFAULT",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "cxRelativeToComp",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.CENTER_DEFAULT",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "CENTER_DEFAULT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let center: number[] = [cxRelativeToComp, cyRelativeToComp];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let center: number[] = [cxRelativeToComp, cyRelativeToComp]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "center: number[] = [cxRelativeToComp, cyRelativeToComp]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "center",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[cxRelativeToComp, cyRelativeToComp]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "cxRelativeToComp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "cyRelativeToComp",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ',' + this.componentHeight * scale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale + ','",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: ' + this.componentWidth * scale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop +\n    ',compSize: '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: ' + leftTop",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds + ', leftTop: '",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: ' + imgDisplayBounds",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize + ', bounds: '",
                                                      "children": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: ' + imgDisplaySize",
                                                          "children": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY +\n    ',size: '",
                                                              "children": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "label": "'evaluateCenter center: ' + center + ', ' + centerX + ',' + centerY",
                                                                  "children": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "label": "'evaluateCenter center: ' + center + ', ' + centerX + ','",
                                                                      "children": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "label": "'evaluateCenter center: ' + center + ', ' + centerX",
                                                                          "children": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "label": "'evaluateCenter center: ' + center + ', '",
                                                                              "children": [
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "label": "'evaluateCenter center: ' + center",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "StringLiteral",
                                                                                      "label": "'evaluateCenter center: '",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "PlusToken",
                                                                                      "label": "+",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "label": "center",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "PlusToken",
                                                                                  "label": "+",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "StringLiteral",
                                                                                  "label": "', '",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "PlusToken",
                                                                              "label": "+",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "label": "centerX",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "PlusToken",
                                                                          "label": "+",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "StringLiteral",
                                                                          "label": "','",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "PlusToken",
                                                                      "label": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "centerY",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "PlusToken",
                                                                  "label": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "StringLiteral",
                                                                  "label": "',size: '",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PlusToken",
                                                              "label": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "imgDisplaySize",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PlusToken",
                                                          "label": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "StringLiteral",
                                                          "label": "', bounds: '",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PlusToken",
                                                      "label": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "imgDisplayBounds",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "', leftTop: '",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "leftTop",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "',compSize: '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.componentWidth * scale",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.componentWidth",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "componentWidth",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "','",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.componentHeight * scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.componentHeight",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "componentHeight",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "scale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return center;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "center",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onScale(scale: number): void {\n    Log.debug(TAG, 'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    this.scale = scale;\n    if (this.lastScale * scale <= Constants.COMPONENT_SCALE_FLOOR) {\n      this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;\n    }\n    if (this.lastScale * scale >= this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR) {\n      this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;\n    }\n    this.emitTouchEvent();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onScale",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "scale: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "scale",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.debug(TAG, 'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    this.scale = scale;\n    if (this.lastScale * scale <= Constants.COMPONENT_SCALE_FLOOR) {\n      this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;\n    }\n    if (this.lastScale * scale >= this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR) {\n      this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;\n    }\n    this.emitTouchEvent();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: ' + scale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'onScale: ' + this.isInAnimation + ', ' + this.isExiting + ', scale: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onScale: ' + this.isInAnimation + ', ' + this.isExiting",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'onScale: ' + this.isInAnimation + ', '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'onScale: ' + this.isInAnimation",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'onScale: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.isInAnimation",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "isInAnimation",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.isExiting",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isExiting",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', scale: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateBounds();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateBounds()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateBounds",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateBounds",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.scale = scale;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.scale = scale",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.scale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "scale",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.lastScale * scale <= Constants.COMPONENT_SCALE_FLOOR) {\n      this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.lastScale * scale <= Constants.COMPONENT_SCALE_FLOOR",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.lastScale * scale",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.lastScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "lastScale",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Constants.COMPONENT_SCALE_FLOOR",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Constants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "COMPONENT_SCALE_FLOOR",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.scale = Constants.COMPONENT_SCALE_FLOOR / this.lastScale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "Constants.COMPONENT_SCALE_FLOOR / this.lastScale",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.COMPONENT_SCALE_FLOOR",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "COMPONENT_SCALE_FLOOR",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.lastScale * scale >= this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR) {\n      this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.lastScale * scale >= this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.lastScale * scale",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.lastScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "lastScale",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanEqualsToken",
                          "label": ">=",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.maxScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "maxScale",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "Constants.OVER_SCALE_EXTRA_FACTOR",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Constants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "OVER_SCALE_EXTRA_FACTOR",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.scale = this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR / this.lastScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.maxScale * Constants.OVER_SCALE_EXTRA_FACTOR",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.maxScale",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "maxScale",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.OVER_SCALE_EXTRA_FACTOR",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "OVER_SCALE_EXTRA_FACTOR",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "lastScale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.emitTouchEvent();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.emitTouchEvent()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.emitTouchEvent",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "emitTouchEvent",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onScaleEnd(): void {\n    Log.info(TAG, 'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) && scale <= this.maxScale) {\n      Log.info(TAG, 'does not need to do animation: ' + scale);\n      this.emitDirectionChange();\n      return;\n    }\n    let animationEndMatrix: Matrix4.Matrix4Transit = null;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) <= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Zoom out too small to trigger the restored animation\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();\n    } else {\n      // Do the animation of retracting maxScale when zooming in\n      animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);\n    }\n    this.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onScaleEnd",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting);\n    if (this.isInAnimation || this.isExiting) {\n      return;\n    }\n    this.evaluateBounds();\n    let scale = this.lastScale * this.scale;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) && scale <= this.maxScale) {\n      Log.info(TAG, 'does not need to do animation: ' + scale);\n      this.emitDirectionChange();\n      return;\n    }\n    let animationEndMatrix: Matrix4.Matrix4Transit = null;\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) <= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Zoom out too small to trigger the restored animation\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();\n    } else {\n      // Do the animation of retracting maxScale when zooming in\n      animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);\n    }\n    this.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onScaleEnd: ' + this.isInAnimation + ', ' + this.isExiting",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'onScaleEnd: ' + this.isInAnimation + ', '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onScaleEnd: ' + this.isInAnimation",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'onScaleEnd: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.isInAnimation",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isInAnimation",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.isExiting",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isExiting",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return;\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.evaluateBounds();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.evaluateBounds()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.evaluateBounds",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "evaluateBounds",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scale = this.lastScale * this.scale;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scale = this.lastScale * this.scale",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scale = this.lastScale * this.scale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale * this.scale",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) && scale <= this.maxScale) {\n      Log.info(TAG, 'does not need to do animation: ' + scale);\n      this.emitDirectionChange();\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS)) && scale <= this.maxScale",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) >= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Number",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "scale.toFixed",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "toFixed",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.RESERVED_DIGITS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "RESERVED_DIGITS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "GreaterThanEqualsToken",
                              "label": ">=",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Number",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale.toFixed",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.defaultScale",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "defaultScale",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "toFixed",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.RESERVED_DIGITS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "RESERVED_DIGITS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "AmpersandAmpersandToken",
                          "label": "&&",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "scale <= this.maxScale",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            },
                            {
                              "type": "LessThanEqualsToken",
                              "label": "<=",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.maxScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "maxScale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'does not need to do animation: ' + scale);\n      this.emitDirectionChange();\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'does not need to do animation: ' + scale);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'does not need to do animation: ' + scale)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'does not need to do animation: ' + scale",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'does not need to do animation: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.emitDirectionChange();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.emitDirectionChange()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.emitDirectionChange",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emitDirectionChange",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let animationEndMatrix: Matrix4.Matrix4Transit = null;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let animationEndMatrix: Matrix4.Matrix4Transit = null",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "animationEndMatrix: Matrix4.Matrix4Transit = null",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "animationEndMatrix",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4.Matrix4Transit",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "Matrix4.Matrix4Transit",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Matrix4",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "Matrix4Transit",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "NullKeyword",
                              "label": "null",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) <= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Zoom out too small to trigger the restored animation\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();\n    } else {\n      // Do the animation of retracting maxScale when zooming in\n      animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) <= Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // Zoom out too small to trigger the restored animation\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scaleOption",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "Matrix4.ScaleOption",
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "Matrix4.ScaleOption",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Matrix4",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "ScaleOption",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "x: this.defaultScale",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "x",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "y: this.defaultScale",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "y",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "animationEndMatrix = Matrix4.identity().scale(scaleOption).copy();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "animationEndMatrix = Matrix4.identity().scale(scaleOption).copy()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "animationEndMatrix",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Matrix4.identity().scale(scaleOption).copy()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Matrix4.identity().scale(scaleOption).copy",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "Matrix4.identity().scale(scaleOption)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Matrix4.identity().scale",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "Matrix4.identity()",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "Matrix4.identity",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "Matrix4",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "identity",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "scaleOption",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "copy",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // Do the animation of retracting maxScale when zooming in\n      animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "animationEndMatrix = this.evaluateAnimeMatrix(this.maxScale, this.center)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "animationEndMatrix",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "this.evaluateAnimeMatrix(this.maxScale, this.center)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.evaluateAnimeMatrix",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "evaluateAnimeMatrix",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.maxScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "maxScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.center",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "center",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.startAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "startAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "AsExpression",
                          "label": "animationEndMatrix as Matrix4TransitWithMatrix4x4",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "animationEndMatrix",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4TransitWithMatrix4x4",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Matrix4TransitWithMatrix4x4",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private evaluateAnimeMatrix(scale: number, center: number[]): Matrix4.Matrix4Transit {\n    let offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ];\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      // The offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    };\n    let animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'evaluateAnimeMatrix scale:' + scale + ', center:' + center);\n    return animationEndMatrix;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "evaluateAnimeMatrix",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "scale: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "scale",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "center: number[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "center",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "number[]",
                  "children": [
                    {
                      "type": "NumberKeyword",
                      "label": "number",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Matrix4.Matrix4Transit",
              "children": [
                {
                  "type": "FirstNode",
                  "label": "Matrix4.Matrix4Transit",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Matrix4",
                      "children": []
                    },
                    {
                      "type": "Identifier",
                      "label": "Matrix4Transit",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ];\n    if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      // The offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }\n    let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };\n    let translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    };\n    let animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();\n    Log.debug(TAG, 'evaluateAnimeMatrix scale:' + scale + ', center:' + center);\n    return animationEndMatrix;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "offset: number[] = [\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "offset",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "number[]",
                              "children": [
                                {
                                  "type": "NumberKeyword",
                                  "label": "number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[\n      this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale,\n      this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale\n    ]",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.lastOffset[0] + this.offset[0] + (center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.lastOffset[0] + this.offset[0]",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "this.lastOffset[0]",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.lastOffset",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "lastOffset",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "this.offset[0]",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.offset",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "offset",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "(center[0] - Constants.CENTER_DEFAULT) * this.componentWidth\n      * (this.defaultScale - scale / this.lastScale)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "(center[0] - Constants.CENTER_DEFAULT) * this.componentWidth",
                                              "children": [
                                                {
                                                  "type": "ParenthesizedExpression",
                                                  "label": "(center[0] - Constants.CENTER_DEFAULT)",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "center[0] - Constants.CENTER_DEFAULT",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "center[0]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "center",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MinusToken",
                                                          "label": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Constants.CENTER_DEFAULT",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Constants",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "CENTER_DEFAULT",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AsteriskToken",
                                                  "label": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.componentWidth",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "componentWidth",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(this.defaultScale - scale / this.lastScale)",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.defaultScale - scale / this.lastScale",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.defaultScale",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "defaultScale",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "MinusToken",
                                                      "label": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "scale / this.lastScale",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "scale",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "SlashToken",
                                                          "label": "/",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.lastScale",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "lastScale",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.lastScale",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "lastScale",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.lastOffset[1] + this.offset[1] + (center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this.lastOffset[1] + this.offset[1]",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "this.lastOffset[1]",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.lastOffset",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "lastOffset",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "this.offset[1]",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.offset",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "offset",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale) * this.lastScale",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "(center[1] - Constants.CENTER_DEFAULT) * this.componentHeight\n      * (this.defaultScale - scale / this.lastScale)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "(center[1] - Constants.CENTER_DEFAULT) * this.componentHeight",
                                              "children": [
                                                {
                                                  "type": "ParenthesizedExpression",
                                                  "label": "(center[1] - Constants.CENTER_DEFAULT)",
                                                  "children": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "center[1] - Constants.CENTER_DEFAULT",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "center[1]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "center",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "FirstLiteralToken",
                                                              "label": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "MinusToken",
                                                          "label": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Constants.CENTER_DEFAULT",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Constants",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "CENTER_DEFAULT",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "AsteriskToken",
                                                  "label": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.componentHeight",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "componentHeight",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(this.defaultScale - scale / this.lastScale)",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "this.defaultScale - scale / this.lastScale",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.defaultScale",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "defaultScale",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "MinusToken",
                                                      "label": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "label": "scale / this.lastScale",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "scale",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "SlashToken",
                                                          "label": "/",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.lastScale",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "lastScale",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "AsteriskToken",
                                          "label": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.lastScale",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "lastScale",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      let limits = this.evaluateOffsetRange(scale);\n      // The offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }\n    } else {\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "scale.toFixed",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let limits = this.evaluateOffsetRange(scale);\n      // The offset in the X direction is always limited for non shrinking scenes\n      offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);\n      if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let limits = this.evaluateOffsetRange(scale);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let limits = this.evaluateOffsetRange(scale)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "limits = this.evaluateOffsetRange(scale)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "limits",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.evaluateOffsetRange(scale)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.evaluateOffsetRange",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "evaluateOffsetRange",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1]);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "offset[0] = MathUtils.clamp(offset[0], limits[0], limits[1])",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "offset[0]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "offset",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "MathUtils.clamp(offset[0], limits[0], limits[1])",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MathUtils.clamp",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MathUtils",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "clamp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "offset[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offset",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "limits[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "limits",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "limits[1]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "limits",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      } else {\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS)) > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Number(scale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "scale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "scale.toFixed",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "scale",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "GreaterThanToken",
                                  "label": ">",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Number",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.defaultScale.toFixed",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "toFixed",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.RESERVED_DIGITS",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "RESERVED_DIGITS",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        // Cannot drop down to return to the scene, limit y\n        offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3]);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "offset[1] = MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3])",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "offset[1]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "offset",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "MathUtils.clamp(offset[1], limits[Constants.NUMBER_2], limits[Constants.NUMBER_3])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "MathUtils.clamp",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "MathUtils",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "clamp",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "offset[1]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "offset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[Constants.NUMBER_2]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.NUMBER_2",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "NUMBER_2",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[Constants.NUMBER_3]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.NUMBER_3",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "NUMBER_3",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        // You can pull down to return to the scene, and only limit y to drag upward,\n        // that is, limit the lower bound\n        offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1]);",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "offset[1] = Math.max(limits[Constants.NUMBER_2], offset[1])",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "offset[1]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "offset",
                                              "children": []
                                            },
                                            {
                                              "type": "FirstLiteralToken",
                                              "label": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "Math.max(limits[Constants.NUMBER_2], offset[1])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Math.max",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Math",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "max",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "limits[Constants.NUMBER_2]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "limits",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.NUMBER_2",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "NUMBER_2",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "offset[1]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "offset",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // When zooming in, adjust the zoom center to the display center point\n      offset = [0, 0];\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "offset = [0, 0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "offset = [0, 0]",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "offset",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[0, 0]",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "scaleOption: Matrix4.ScaleOption = {\n      x: scale,\n      y: scale,\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "scaleOption",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4.ScaleOption",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "Matrix4.ScaleOption",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Matrix4",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ScaleOption",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      x: scale,\n      y: scale,\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "x: scale",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "y: scale",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "translateOption: Matrix4.TranslateOption = {\n      x: offset[0],\n      y: offset[1]\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "translateOption",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4.TranslateOption",
                              "children": [
                                {
                                  "type": "FirstNode",
                                  "label": "Matrix4.TranslateOption",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Matrix4",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TranslateOption",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      x: offset[0],\n      y: offset[1]\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "x: offset[0]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "offset[0]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offset",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "y: offset[1]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "offset[1]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "offset",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "animationEndMatrix = Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "animationEndMatrix",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)\n      .copy",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate(translateOption)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Matrix4.identity()\n      .copy()\n      .scale(scaleOption)\n      .translate",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Matrix4.identity()\n      .copy()\n      .scale(scaleOption)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Matrix4.identity()\n      .copy()\n      .scale",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Matrix4.identity()\n      .copy()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Matrix4.identity()\n      .copy",
                                                          "children": [
                                                            {
                                                              "type": "CallExpression",
                                                              "label": "Matrix4.identity()",
                                                              "children": [
                                                                {
                                                                  "type": "PropertyAccessExpression",
                                                                  "label": "Matrix4.identity",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "Matrix4",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "identity",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "copy",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scaleOption",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "translate",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "translateOption",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "copy",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'evaluateAnimeMatrix scale:' + scale + ', center:' + center);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'evaluateAnimeMatrix scale:' + scale + ', center:' + center)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'evaluateAnimeMatrix scale:' + scale + ', center:' + center",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'evaluateAnimeMatrix scale:' + scale + ', center:'",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'evaluateAnimeMatrix scale:' + scale",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'evaluateAnimeMatrix scale:'",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', center:'",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "center",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return animationEndMatrix;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "animationEndMatrix",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onDoubleTap(centerX: number, centerY: number): void {\n    if (this.isInAnimation || this.isExiting) {\n      Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);\n      return;\n    }\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    let matrix: Matrix4TransitWithMatrix4x4;\n    Log.debug(TAG, 'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale);\n    if (Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Scale to original state when scale is greater than 1\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;\n    } else {\n      // The zoom in status calculates the zoom in center according to the click position\n      let center = this.evaluateCenter(centerX, centerY);\n      // When the picture aspect ratio is less than the control aspect ratio,\n      // centerX is set to 0.5,\n      // whereas centerY is set to 0.5 to ensure that\n      // the short side is close to the side after double clicking and enlarging\n      if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }\n      matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;\n    }\n    Log.debug(TAG, 'onDoubleTap matrix: ' + matrix.matrix4x4);\n    this.startAnimation(matrix);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onDoubleTap",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "centerX: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "centerX",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "centerY: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "centerY",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.isInAnimation || this.isExiting) {\n      Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);\n      return;\n    }\n    // Adjust action bar status\n    this.broadCast.emit(Constants.HIDE_BARS, []);\n    let matrix: Matrix4TransitWithMatrix4x4;\n    Log.debug(TAG, 'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale);\n    if (Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Scale to original state when scale is greater than 1\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;\n    } else {\n      // The zoom in status calculates the zoom in center according to the click position\n      let center = this.evaluateCenter(centerX, centerY);\n      // When the picture aspect ratio is less than the control aspect ratio,\n      // centerX is set to 0.5,\n      // whereas centerY is set to 0.5 to ensure that\n      // the short side is close to the side after double clicking and enlarging\n      if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }\n      matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;\n    }\n    Log.debug(TAG, 'onDoubleTap matrix: ' + matrix.matrix4x4);\n    this.startAnimation(matrix);\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.isInAnimation || this.isExiting) {\n      Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation || this.isExiting",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BarBarToken",
                          "label": "||",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.debug(TAG, 'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.debug",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "debug",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onDoubleTap not avaliable: ' + this.isInAnimation + ', ' + this.isExiting",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'onDoubleTap not avaliable: ' + this.isInAnimation + ', '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'onDoubleTap not avaliable: ' + this.isInAnimation",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'onDoubleTap not avaliable: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.isInAnimation",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "isInAnimation",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.isExiting",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isExiting",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast.emit(Constants.HIDE_BARS, []);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.broadCast.emit(Constants.HIDE_BARS, [])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.broadCast",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Constants.HIDE_BARS",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Constants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "HIDE_BARS",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let matrix: Matrix4TransitWithMatrix4x4;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let matrix: Matrix4TransitWithMatrix4x4",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "matrix: Matrix4TransitWithMatrix4x4",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "matrix",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Matrix4TransitWithMatrix4x4",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Matrix4TransitWithMatrix4x4",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: ' + this.defaultScale",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale + ', defaultScale: '",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onDoubleTap lastScale: ' + this.lastScale + ', scale: ' + this.scale",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'onDoubleTap lastScale: ' + this.lastScale + ', scale: '",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "'onDoubleTap lastScale: ' + this.lastScale",
                                          "children": [
                                            {
                                              "type": "StringLiteral",
                                              "label": "'onDoubleTap lastScale: '",
                                              "children": []
                                            },
                                            {
                                              "type": "PlusToken",
                                              "label": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.lastScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "lastScale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "', scale: '",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.scale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "scale",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "', defaultScale: '",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.defaultScale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "defaultScale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))) {\n      // Scale to original state when scale is greater than 1\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;\n    } else {\n      // The zoom in status calculates the zoom in center according to the click position\n      let center = this.evaluateCenter(centerX, centerY);\n      // When the picture aspect ratio is less than the control aspect ratio,\n      // centerX is set to 0.5,\n      // whereas centerY is set to 0.5 to ensure that\n      // the short side is close to the side after double clicking and enlarging\n      if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }\n      matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale > Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS)) * this.scale",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Number(this.lastScale.toFixed(Constants.RESERVED_DIGITS))",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Number",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "this.lastScale.toFixed(Constants.RESERVED_DIGITS)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.lastScale.toFixed",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.lastScale",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "lastScale",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "toFixed",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.RESERVED_DIGITS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "RESERVED_DIGITS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "AsteriskToken",
                              "label": "*",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.scale",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "scale",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "GreaterThanToken",
                          "label": ">",
                          "children": []
                        },
                        {
                          "type": "CallExpression",
                          "label": "Number(this.defaultScale.toFixed(Constants.RESERVED_DIGITS))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Number",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.defaultScale.toFixed(Constants.RESERVED_DIGITS)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defaultScale.toFixed",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.defaultScale",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "defaultScale",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "toFixed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.RESERVED_DIGITS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "RESERVED_DIGITS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // Scale to original state when scale is greater than 1\n      let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };\n      matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      };",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "scaleOption: Matrix4.ScaleOption = {\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "scaleOption",
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "Matrix4.ScaleOption",
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "Matrix4.ScaleOption",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Matrix4",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "ScaleOption",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectLiteralExpression",
                                      "label": "{\n        x: this.defaultScale,\n        y: this.defaultScale\n      }",
                                      "children": [
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "x: this.defaultScale",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "x",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAssignment",
                                          "label": "y: this.defaultScale",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "y",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "matrix = Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "matrix",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "Matrix4.identity().scale(scaleOption).copy() as Matrix4TransitWithMatrix4x4",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "Matrix4.identity().scale(scaleOption).copy()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Matrix4.identity().scale(scaleOption).copy",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Matrix4.identity().scale(scaleOption)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Matrix4.identity().scale",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "Matrix4.identity()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Matrix4.identity",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Matrix4",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "identity",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "scale",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "scaleOption",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "copy",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "Matrix4TransitWithMatrix4x4",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Matrix4TransitWithMatrix4x4",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      // The zoom in status calculates the zoom in center according to the click position\n      let center = this.evaluateCenter(centerX, centerY);\n      // When the picture aspect ratio is less than the control aspect ratio,\n      // centerX is set to 0.5,\n      // whereas centerY is set to 0.5 to ensure that\n      // the short side is close to the side after double clicking and enlarging\n      if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }\n      matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let center = this.evaluateCenter(centerX, centerY);",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let center = this.evaluateCenter(centerX, centerY)",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "center = this.evaluateCenter(centerX, centerY)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "center",
                                      "children": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "label": "this.evaluateCenter(centerX, centerY)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.evaluateCenter",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "evaluateCenter",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "centerX",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "centerY",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (this.width / this.height < this.componentWidth / this.componentHeight) {\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      } else {\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.width / this.height < this.componentWidth / this.componentHeight",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.width / this.height",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.width",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "width",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.height",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "height",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "this.componentWidth / this.componentHeight",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.componentWidth",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "componentWidth",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "SlashToken",
                                      "label": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.componentHeight",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "componentHeight",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        center = [Constants.CENTER_DEFAULT, center[1]];\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "center = [Constants.CENTER_DEFAULT, center[1]];",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "center = [Constants.CENTER_DEFAULT, center[1]]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "center",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "ArrayLiteralExpression",
                                          "label": "[Constants.CENTER_DEFAULT, center[1]]",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Constants.CENTER_DEFAULT",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Constants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "CENTER_DEFAULT",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "center[1]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "center",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        center = [center[0], Constants.CENTER_DEFAULT];\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "center = [center[0], Constants.CENTER_DEFAULT];",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "center = [center[0], Constants.CENTER_DEFAULT]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "center",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "ArrayLiteralExpression",
                                          "label": "[center[0], Constants.CENTER_DEFAULT]",
                                          "children": [
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "center[0]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "center",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "Constants.CENTER_DEFAULT",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Constants",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "CENTER_DEFAULT",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "matrix = this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "matrix",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center) as Matrix4TransitWithMatrix4x4",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.evaluateAnimeMatrix",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "evaluateAnimeMatrix",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "this.doubleTapScale * this.defaultScale",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.doubleTapScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "doubleTapScale",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AsteriskToken",
                                              "label": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.defaultScale",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "defaultScale",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "center",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "Matrix4TransitWithMatrix4x4",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Matrix4TransitWithMatrix4x4",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'onDoubleTap matrix: ' + matrix.matrix4x4);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'onDoubleTap matrix: ' + matrix.matrix4x4)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'onDoubleTap matrix: ' + matrix.matrix4x4",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'onDoubleTap matrix: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "matrix.matrix4x4",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "matrix",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "matrix4x4",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.startAnimation(matrix);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.startAnimation(matrix)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.startAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "startAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "matrix",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "reset(): void {\n    this.lastOffset = [0, 0];\n    this.offset = [0, 0];\n    this.lastScale = 1.0;\n    this.scale = 1;\n    this.hasReachLeft = true;\n    this.hasReachRight = true;\n    this.hasReachTop = true;\n    this.hasReachBottom = true;\n    this.isInAnimation = false;\n    this.isExiting = false;\n    this.emitDirectionChange();\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "reset",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.lastOffset = [0, 0];\n    this.offset = [0, 0];\n    this.lastScale = 1.0;\n    this.scale = 1;\n    this.hasReachLeft = true;\n    this.hasReachRight = true;\n    this.hasReachTop = true;\n    this.hasReachBottom = true;\n    this.isInAnimation = false;\n    this.isExiting = false;\n    this.emitDirectionChange();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.lastOffset = [0, 0];",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.lastOffset = [0, 0]",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.lastOffset",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "lastOffset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[0, 0]",
                          "children": [
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.offset = [0, 0];",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.offset = [0, 0]",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.offset",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "offset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[0, 0]",
                          "children": [
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.lastScale = 1.0;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.lastScale = 1.0",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.lastScale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "lastScale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "1.0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.scale = 1;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.scale = 1",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.scale",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "scale",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hasReachLeft = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hasReachLeft = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hasReachLeft",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hasReachLeft",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hasReachRight = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hasReachRight = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hasReachRight",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hasReachRight",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hasReachTop = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hasReachTop = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hasReachTop",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hasReachTop",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.hasReachBottom = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.hasReachBottom = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.hasReachBottom",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "hasReachBottom",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isInAnimation = false;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation = false",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "FalseKeyword",
                          "label": "false",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.isExiting = false;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isExiting = false",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isExiting",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isExiting",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "FalseKeyword",
                          "label": "false",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.emitDirectionChange();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.emitDirectionChange()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.emitDirectionChange",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "emitDirectionChange",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onDisAppear(): void {\n    Log.info(TAG, 'onDisAppear');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onDisAppear",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'onDisAppear');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'onDisAppear');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'onDisAppear')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'onDisAppear'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private startAnimation(animationEndMatrix: Matrix4TransitWithMatrix4x4): void {\n    this.isInAnimation = true;\n    let animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    };\n    Log.debug(TAG, 'animationEndMatrix: ' + animationEndMatrix.matrix4x4);\n    this.broadCast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix]);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "startAnimation",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "animationEndMatrix: Matrix4TransitWithMatrix4x4",
              "children": [
                {
                  "type": "Identifier",
                  "label": "animationEndMatrix",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Matrix4TransitWithMatrix4x4",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Matrix4TransitWithMatrix4x4",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.isInAnimation = true;\n    let animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    };\n    Log.debug(TAG, 'animationEndMatrix: ' + animationEndMatrix.matrix4x4);\n    this.broadCast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix]);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.isInAnimation = true;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.isInAnimation = true",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.isInAnimation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "isInAnimation",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "animationOption: AnimationOption = {\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "animationOption",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "AnimationOption",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "AnimationOption",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      duration: Constants.OVER_SCALE_ANIME_DURATION,\n      curve: Curve.Ease\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "duration: Constants.OVER_SCALE_ANIME_DURATION",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "duration",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.OVER_SCALE_ANIME_DURATION",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "OVER_SCALE_ANIME_DURATION",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "curve: Curve.Ease",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "curve",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Curve.Ease",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Curve",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "Ease",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.debug(TAG, 'animationEndMatrix: ' + animationEndMatrix.matrix4x4);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.debug(TAG, 'animationEndMatrix: ' + animationEndMatrix.matrix4x4)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.debug",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "debug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'animationEndMatrix: ' + animationEndMatrix.matrix4x4",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'animationEndMatrix: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "animationEndMatrix.matrix4x4",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "animationEndMatrix",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "matrix4x4",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.broadCast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.broadCast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.broadCast",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "Constants.ANIMATION_EVENT + this.item.uri",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.ANIMATION_EVENT",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ANIMATION_EVENT",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.item.uri",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.item",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.timeStamp",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "timeStamp",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[animationOption, animationEndMatrix]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "animationOption",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "animationEndMatrix",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onAnimationEnd(animationEndMatrix: Matrix4TransitWithMatrix4x4): void {\n    if (animationEndMatrix != null) {\n      Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);\n      this.lastScale = animationEndMatrix.matrix4x4[0];\n      this.scale = 1;\n      this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];\n      this.offset = [0, 0];\n      this.evaluateBounds();\n      this.isInAnimation = false;\n      this.emitDirectionChange();\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onAnimationEnd",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "animationEndMatrix: Matrix4TransitWithMatrix4x4",
              "children": [
                {
                  "type": "Identifier",
                  "label": "animationEndMatrix",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Matrix4TransitWithMatrix4x4",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Matrix4TransitWithMatrix4x4",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (animationEndMatrix != null) {\n      Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);\n      this.lastScale = animationEndMatrix.matrix4x4[0];\n      this.scale = 1;\n      this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];\n      this.offset = [0, 0];\n      this.evaluateBounds();\n      this.isInAnimation = false;\n      this.emitDirectionChange();\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (animationEndMatrix != null) {\n      Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);\n      this.lastScale = animationEndMatrix.matrix4x4[0];\n      this.scale = 1;\n      this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];\n      this.offset = [0, 0];\n      this.evaluateBounds();\n      this.isInAnimation = false;\n      this.emitDirectionChange();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "animationEndMatrix != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "animationEndMatrix",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);\n      this.lastScale = animationEndMatrix.matrix4x4[0];\n      this.scale = 1;\n      this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];\n      this.offset = [0, 0];\n      this.evaluateBounds();\n      this.isInAnimation = false;\n      this.emitDirectionChange();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.info(TAG, 'onAnimationEnd: ' + animationEndMatrix.matrix4x4)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "'onAnimationEnd: ' + animationEndMatrix.matrix4x4",
                                  "children": [
                                    {
                                      "type": "StringLiteral",
                                      "label": "'onAnimationEnd: '",
                                      "children": []
                                    },
                                    {
                                      "type": "PlusToken",
                                      "label": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "animationEndMatrix.matrix4x4",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "animationEndMatrix",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "matrix4x4",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.lastScale = animationEndMatrix.matrix4x4[0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastScale = animationEndMatrix.matrix4x4[0]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastScale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastScale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "animationEndMatrix.matrix4x4[0]",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "animationEndMatrix.matrix4x4",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "animationEndMatrix",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "matrix4x4",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.scale = 1;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.scale = 1",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.scale",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "scale",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.lastOffset = [animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.lastOffset",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "lastOffset",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[animationEndMatrix.matrix4x4[Constants.NUMBER_12], animationEndMatrix.matrix4x4[Constants.NUMBER_13]]",
                                  "children": [
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "animationEndMatrix.matrix4x4[Constants.NUMBER_12]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "animationEndMatrix.matrix4x4",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "animationEndMatrix",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "matrix4x4",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_12",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_12",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "animationEndMatrix.matrix4x4[Constants.NUMBER_13]",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "animationEndMatrix.matrix4x4",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "animationEndMatrix",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "matrix4x4",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "Constants.NUMBER_13",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "Constants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "NUMBER_13",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.offset = [0, 0];",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.offset = [0, 0]",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.offset",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "offset",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "ArrayLiteralExpression",
                                  "label": "[0, 0]",
                                  "children": [
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.evaluateBounds();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.evaluateBounds()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.evaluateBounds",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "evaluateBounds",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.isInAnimation = false;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.isInAnimation = false",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.isInAnimation",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isInAnimation",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "FalseKeyword",
                                  "label": "false",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.emitDirectionChange();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.emitDirectionChange()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.emitDirectionChange",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emitDirectionChange",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}