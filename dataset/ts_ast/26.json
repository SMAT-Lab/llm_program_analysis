{
  "type": "SourceFile",
  "label": "import router from '@system.router';\nimport { RouterOptions } from '@system.router';\nimport { Log } from '../utils/Log';\nimport { MenuOperation } from './MenuOperation';\nimport { MenuContext } from './MenuContext';\nimport { screenManager } from '../common/ScreenManager';\nimport { JumpSourceToMain } from '../models/JumpSourceToMain';\nimport { RouterConstants } from '../constants/RouterConstants';\n\nconst TAG = 'GotoPhotosMenuOperation';\n\nexport class GotoPhotosMenuOperation implements MenuOperation {\n  private menuContext: MenuContext;\n\n  constructor(menuContext: MenuContext) {\n    this.menuContext = menuContext;\n  }\n\n  doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let jumpSourceToMain = this.menuContext.jumpSourceToMain;\n    Log.info(TAG, 'router to pages/index, jumpSource: ' + jumpSourceToMain);\n    let leftPos = screenManager.isSidebar();\n    let pageFrom = RouterConstants.ENTRY_FROM.NORMAL;\n    if (jumpSourceToMain === JumpSourceToMain.CAMERA) {\n      pageFrom = RouterConstants.ENTRY_FROM_CAMERA;\n    }\n    let params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    };\n    let routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    };\n    router.replace(routerOptions);\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import router from '@system.router';",
      "children": [
        {
          "type": "ImportClause",
          "label": "router",
          "children": [
            {
              "type": "Identifier",
              "label": "router",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@system.router'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { RouterOptions } from '@system.router';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ RouterOptions }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ RouterOptions }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "RouterOptions",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "RouterOptions",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@system.router'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuOperation } from './MenuOperation';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuOperation }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuOperation }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuOperation",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuOperation",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuOperation'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuContext } from './MenuContext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuContext }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuContext }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuContext'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from '../common/ScreenManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { JumpSourceToMain } from '../models/JumpSourceToMain';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ JumpSourceToMain }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ JumpSourceToMain }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "JumpSourceToMain",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "JumpSourceToMain",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../models/JumpSourceToMain'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { RouterConstants } from '../constants/RouterConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ RouterConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ RouterConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "RouterConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "RouterConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/RouterConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'GotoPhotosMenuOperation';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'GotoPhotosMenuOperation'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'GotoPhotosMenuOperation'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'GotoPhotosMenuOperation'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GotoPhotosMenuOperation implements MenuOperation {\n  private menuContext: MenuContext;\n\n  constructor(menuContext: MenuContext) {\n    this.menuContext = menuContext;\n  }\n\n  doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let jumpSourceToMain = this.menuContext.jumpSourceToMain;\n    Log.info(TAG, 'router to pages/index, jumpSource: ' + jumpSourceToMain);\n    let leftPos = screenManager.isSidebar();\n    let pageFrom = RouterConstants.ENTRY_FROM.NORMAL;\n    if (jumpSourceToMain === JumpSourceToMain.CAMERA) {\n      pageFrom = RouterConstants.ENTRY_FROM_CAMERA;\n    }\n    let params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    };\n    let routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    };\n    router.replace(routerOptions);\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GotoPhotosMenuOperation",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements MenuOperation",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "MenuOperation",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MenuOperation",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private menuContext: MenuContext;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "menuContext",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "MenuContext",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MenuContext",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(menuContext: MenuContext) {\n    this.menuContext = menuContext;\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "menuContext: MenuContext",
              "children": [
                {
                  "type": "Identifier",
                  "label": "menuContext",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.menuContext = menuContext;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext = menuContext;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.menuContext = menuContext",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "menuContext",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "menuContext",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let jumpSourceToMain = this.menuContext.jumpSourceToMain;\n    Log.info(TAG, 'router to pages/index, jumpSource: ' + jumpSourceToMain);\n    let leftPos = screenManager.isSidebar();\n    let pageFrom = RouterConstants.ENTRY_FROM.NORMAL;\n    if (jumpSourceToMain === JumpSourceToMain.CAMERA) {\n      pageFrom = RouterConstants.ENTRY_FROM_CAMERA;\n    }\n    let params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    };\n    let routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    };\n    router.replace(routerOptions);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "doAction",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let jumpSourceToMain = this.menuContext.jumpSourceToMain;\n    Log.info(TAG, 'router to pages/index, jumpSource: ' + jumpSourceToMain);\n    let leftPos = screenManager.isSidebar();\n    let pageFrom = RouterConstants.ENTRY_FROM.NORMAL;\n    if (jumpSourceToMain === JumpSourceToMain.CAMERA) {\n      pageFrom = RouterConstants.ENTRY_FROM_CAMERA;\n    }\n    let params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    };\n    let routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    };\n    router.replace(routerOptions);\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.menuContext == null",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "menuContext",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, 'menuContext is null, return');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, 'menuContext is null, return')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'menuContext is null, return'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let jumpSourceToMain = this.menuContext.jumpSourceToMain;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let jumpSourceToMain = this.menuContext.jumpSourceToMain",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "jumpSourceToMain = this.menuContext.jumpSourceToMain",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "jumpSourceToMain",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.jumpSourceToMain",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "jumpSourceToMain",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'router to pages/index, jumpSource: ' + jumpSourceToMain);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'router to pages/index, jumpSource: ' + jumpSourceToMain)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'router to pages/index, jumpSource: ' + jumpSourceToMain",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'router to pages/index, jumpSource: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "jumpSourceToMain",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let leftPos = screenManager.isSidebar();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let leftPos = screenManager.isSidebar()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "leftPos = screenManager.isSidebar()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "leftPos",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isSidebar()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isSidebar",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isSidebar",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let pageFrom = RouterConstants.ENTRY_FROM.NORMAL;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let pageFrom = RouterConstants.ENTRY_FROM.NORMAL",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "pageFrom = RouterConstants.ENTRY_FROM.NORMAL",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "pageFrom",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "RouterConstants.ENTRY_FROM.NORMAL",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "RouterConstants.ENTRY_FROM",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "RouterConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ENTRY_FROM",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "NORMAL",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (jumpSourceToMain === JumpSourceToMain.CAMERA) {\n      pageFrom = RouterConstants.ENTRY_FROM_CAMERA;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "jumpSourceToMain === JumpSourceToMain.CAMERA",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "jumpSourceToMain",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "JumpSourceToMain.CAMERA",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "JumpSourceToMain",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "CAMERA",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      pageFrom = RouterConstants.ENTRY_FROM_CAMERA;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "pageFrom = RouterConstants.ENTRY_FROM_CAMERA;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "pageFrom = RouterConstants.ENTRY_FROM_CAMERA",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "pageFrom",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "RouterConstants.ENTRY_FROM_CAMERA",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "RouterConstants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "ENTRY_FROM_CAMERA",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "params: Object = {\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "params",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Object",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Object",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      jumpSource: jumpSourceToMain,\n      pageFrom: pageFrom\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "jumpSource: jumpSourceToMain",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "jumpSource",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "jumpSourceToMain",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "pageFrom: pageFrom",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "pageFrom",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "pageFrom",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "routerOptions: RouterOptions = {\n      uri: 'pages/index',\n      params: params\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "routerOptions",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "RouterOptions",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "RouterOptions",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      uri: 'pages/index',\n      params: params\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "uri: 'pages/index'",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "uri",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'pages/index'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "params: params",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "params",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "params",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "router.replace(routerOptions);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "router.replace(routerOptions)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "router.replace",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "router",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "replace",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "routerOptions",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}